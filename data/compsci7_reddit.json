{"384": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 15, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m in a Data Structures course at a community college and the instructor told us &amp;quot;In my entire career I&amp;#39;ve never seen anyone perform a loop invariant test... but we&amp;#39;re going to learn them anyway&amp;quot;... These seem like the most useless things in the world..&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm in a Data Structures course at a community college and the instructor told us \"In my entire career I've never seen anyone perform a loop invariant test... but we're going to learn them anyway\"... These seem like the most useless things in the world..", "saved": false, "id": "10jg61", "clicked": false, "title": "Are Loop Invariant's ever actually used in the real world?", "num_comments": 26, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 9, "link_id": "t3_10jg61", "children": [], "author": "rosulek", "id": "c6e0ddo", "parent_id": "t3_10jg61", "score": 0, "approved_by": null, "upvotes": 33, "body": "&gt;These seem like the most useless things in the world..\n\nI'm of the opinion that one should understand what one is coding. Do people prove loop invariants with induction in the real world? Probably not. But stating a loop invariant is a way of precisely nailing down what happens in one iteration of your loop and focusing the coding process. That's what's important. If someone can't even do that, then I suspect that person writes code by parroting or trial and error and does not have a good understanding of how their code does.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;These seem like the most useless things in the world..&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I&amp;#39;m of the opinion that one should understand what one is coding. Do people prove loop invariants with induction in the real world? Probably not. But stating a loop invariant is a way of precisely nailing down what happens in one iteration of your loop and focusing the coding process. That&amp;#39;s what&amp;#39;s important. If someone can&amp;#39;t even do that, then I suspect that person writes code by parroting or trial and error and does not have a good understanding of how their code does.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6e0ddo", "flair_text": null, "created": 1348717108.0, "created_utc": 1348713508.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_10jg61", "children": [], "author": "Sklargblar", "id": "c6e0bpk", "parent_id": "t3_10jg61", "score": 0, "approved_by": null, "upvotes": 10, "body": "From what I've seen and read they're more common in areas that are really pushing the boundaries of what we know how to do than in more routine programming. Most programmers never use them, but I've met a guy who works in AI R&amp;D who likes to use them for his every day work, but I think he's in the minority.\n\nWhen it comes to education, they're valuable in the same way proofs are in math - they force clear thinking.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;From what I&amp;#39;ve seen and read they&amp;#39;re more common in areas that are really pushing the boundaries of what we know how to do than in more routine programming. Most programmers never use them, but I&amp;#39;ve met a guy who works in AI R&amp;amp;D who likes to use them for his every day work, but I think he&amp;#39;s in the minority.&lt;/p&gt;\n\n&lt;p&gt;When it comes to education, they&amp;#39;re valuable in the same way proofs are in math - they force clear thinking.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6e0bpk", "flair_text": null, "created": 1348716927.0, "created_utc": 1348713327.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_10jg61", "children": [], "author": "Eridrus", "id": "c6e13g4", "parent_id": "t3_10jg61", "score": 0, "approved_by": null, "upvotes": 16, "body": "No-one really does proofs by hand, but people do create machine checked proofs (see Isabelle/HOL, Coq, etc) which use loop invariants and some verification strategies use loop invariants to help you find potential bugs.\n\nI would say it is mostly relegated to academia and hardware verification, though some people in the software industry do make use of it.\n\nHaving said that, the idea of a loop invariant should not be a foreign concept to people if they want to be able to reason about their own code, even in an informal manner.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No-one really does proofs by hand, but people do create machine checked proofs (see Isabelle/HOL, Coq, etc) which use loop invariants and some verification strategies use loop invariants to help you find potential bugs.&lt;/p&gt;\n\n&lt;p&gt;I would say it is mostly relegated to academia and hardware verification, though some people in the software industry do make use of it.&lt;/p&gt;\n\n&lt;p&gt;Having said that, the idea of a loop invariant should not be a foreign concept to people if they want to be able to reason about their own code, even in an informal manner.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6e13g4", "flair_text": null, "created": 1348720114.0, "created_utc": 1348716514.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_10jg61", "children": [], "author": "gracenotes", "id": "c6e0of4", "parent_id": "t3_10jg61", "score": 0, "approved_by": null, "upvotes": 10, "body": "What is a loop invariant test? What's being tested, and by whom?\n\nLoop invariants in correctness proofs of imperatively stated algorithms are true at the end of every iteration, allowing you to use induction to prove something which is true after all iterations. Automatically inferring loop invariants is used in any sufficiently smart imperative compiler. Invariants in general are hugely important in program transformation.", "edited": 1348714993.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What is a loop invariant test? What&amp;#39;s being tested, and by whom?&lt;/p&gt;\n\n&lt;p&gt;Loop invariants in correctness proofs of imperatively stated algorithms are true at the end of every iteration, allowing you to use induction to prove something which is true after all iterations. Automatically inferring loop invariants is used in any sufficiently smart imperative compiler. Invariants in general are hugely important in program transformation.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6e0of4", "flair_text": null, "created": 1348718364.0, "created_utc": 1348714764.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10jg61", "children": [], "author": "bonzinip", "id": "c6e43br", "parent_id": "t3_10jg61", "score": 0, "approved_by": null, "upvotes": 6, "body": "I don't prove stuff by hand, but I find assertions invaluable when writing complex code.  A well-commented assertion is as worthwhile as a proof, and your reasoning is being tested every time you run the code.", "edited": 1348814536.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t prove stuff by hand, but I find assertions invaluable when writing complex code.  A well-commented assertion is as worthwhile as a proof, and your reasoning is being tested every time you run the code.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6e43br", "flair_text": null, "created": 1348738863.0, "created_utc": 1348735263.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10jg61", "children": [], "author": "Lintheru", "id": "c6e2edb", "parent_id": "t3_10jg61", "score": 0, "approved_by": null, "upvotes": 6, "body": "It depends on how you define 'the real world'. \n\nIs academia included in the real world? Is algorithm engineering and theoretical computer science part of the real world? We have used loop invariants in every algorithms course and some other courses as well at my university. Sometimes they are implicit .. the book does not say 'we use a loop-invariant to show that ... ' but it is still part of the correctness proof of most algorithms. \n\nThey are the CS equivalent of proofs by induction. Do you ever see proofs of induction in the real world? Maybe not so often in industry, but it is still a fundamental part of understanding what it means for something to be correct!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It depends on how you define &amp;#39;the real world&amp;#39;. &lt;/p&gt;\n\n&lt;p&gt;Is academia included in the real world? Is algorithm engineering and theoretical computer science part of the real world? We have used loop invariants in every algorithms course and some other courses as well at my university. Sometimes they are implicit .. the book does not say &amp;#39;we use a loop-invariant to show that ... &amp;#39; but it is still part of the correctness proof of most algorithms. &lt;/p&gt;\n\n&lt;p&gt;They are the CS equivalent of proofs by induction. Do you ever see proofs of induction in the real world? Maybe not so often in industry, but it is still a fundamental part of understanding what it means for something to be correct!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6e2edb", "flair_text": null, "created": 1348726113.0, "created_utc": 1348722513.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10jg61", "children": [], "author": "Novakog", "id": "c6e33ag", "parent_id": "t3_10jg61", "score": 0, "approved_by": null, "upvotes": 5, "body": "Actually, I've seen quite a few loop invariants in shipping production code. But probably 95% of the times they're used, the programmer might not even think to call it a loop invariant.\n\nSpecifically, a lot of codebases use conditional assertions to test for bad conditions (usually debug-only). If you place a conditional assertion in a loop, you're expressing a loop invariant. I personally have used them to find a number of bugs in shipping production code.\n\nRead [Programming Pearl's](http://www.amazon.com/Programming-Pearls-2nd-Edition-Bentley/dp/0201657880/ref=sr_1_1?ie=UTF8&amp;qid=1348725783&amp;sr=8-1&amp;keywords=programming+pearls) - it's very short classic, and he uses loop-invariants via assertions.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Actually, I&amp;#39;ve seen quite a few loop invariants in shipping production code. But probably 95% of the times they&amp;#39;re used, the programmer might not even think to call it a loop invariant.&lt;/p&gt;\n\n&lt;p&gt;Specifically, a lot of codebases use conditional assertions to test for bad conditions (usually debug-only). If you place a conditional assertion in a loop, you&amp;#39;re expressing a loop invariant. I personally have used them to find a number of bugs in shipping production code.&lt;/p&gt;\n\n&lt;p&gt;Read &lt;a href=\"http://www.amazon.com/Programming-Pearls-2nd-Edition-Bentley/dp/0201657880/ref=sr_1_1?ie=UTF8&amp;amp;qid=1348725783&amp;amp;sr=8-1&amp;amp;keywords=programming+pearls\"&gt;Programming Pearl&amp;#39;s&lt;/a&gt; - it&amp;#39;s very short classic, and he uses loop-invariants via assertions.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6e33ag", "flair_text": null, "created": 1348730165.0, "created_utc": 1348726565.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10jg61", "children": [], "author": "Incubuss", "id": "c6dzunx", "parent_id": "t3_10jg61", "score": 0, "approved_by": null, "upvotes": 2, "body": "They are very useful if you want to prove that your code is doing what you think it's doing. They're not common, but they are used.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;They are very useful if you want to prove that your code is doing what you think it&amp;#39;s doing. They&amp;#39;re not common, but they are used.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dzunx", "flair_text": null, "created": 1348715009.0, "created_utc": 1348711409.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10jg61", "children": [], "author": "JulianMorrison", "id": "c6e3n0r", "parent_id": "t3_10jg61", "score": 0, "approved_by": null, "upvotes": 1, "body": "If your loop invariant is written to by more than one thread, and you are able to do \"optimistic\" concurrency, then cancelling and retrying your computation with an invariant test (or one implicit in a compare-and-swap) makes sense.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If your loop invariant is written to by more than one thread, and you are able to do &amp;quot;optimistic&amp;quot; concurrency, then cancelling and retrying your computation with an invariant test (or one implicit in a compare-and-swap) makes sense.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6e3n0r", "flair_text": null, "created": 1348734325.0, "created_utc": 1348730725.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10jg61", "children": [], "author": "geezusfreeek", "id": "c6e5klr", "parent_id": "t3_10jg61", "score": 0, "approved_by": null, "upvotes": 1, "body": "If you don't know what the invariants of your loop are, how do you know it's correct?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you don&amp;#39;t know what the invariants of your loop are, how do you know it&amp;#39;s correct?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6e5klr", "flair_text": null, "created": 1348753895.0, "created_utc": 1348750295.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10jg61", "children": [], "author": "kamatsu", "id": "c6ehy9n", "parent_id": "t3_10jg61", "score": 0, "approved_by": null, "upvotes": 1, "body": "I use them every day.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I use them every day.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ehy9n", "flair_text": null, "created": 1348802989.0, "created_utc": 1348799389.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10jg61", "children": [], "author": "dyoo", "id": "c6fupml", "parent_id": "t3_10jg61", "score": 0, "approved_by": null, "upvotes": 2, "body": "They are not useless.\n\nCode is code: it doesn't know if it's right or wrong: it just runs.  Maybe it crashes, but code doesn't care.  Hopefully, though, you do!  Usually, you'll really want to know that you didn't \"screw it up\".  For some programs, screwing up isn't a big deal.  For other kinds of programs, screwing up is a matter of life or death.\n\nThere are several techniques that folks have developed to convince each other that we didn't screw it up.  One of these ways is to say that we've got a property that doesn't get mucked when the code runs.  For example, the heart of knowing that binary search doesn't mess up is the loop invariant that what we're looking for is between the left and right pointers throughout the loop's iteration.\n\nAnother way to convince each other that we didn't screw it up is through test cases.  Whether or not the test cases are \"convincing\" is a matter of debate.  At the very least, test cases will tell you definitively that something broke if the tests fail.\n\nAppreciate, though, that some people are uncomfortable with code unless they have concrete, exhaustive proof that the code is good.  If you go into a professional career, the burden of proof can get darn high, in which case you should learn the vocabulary and the ideas behind proof, so that you can communicate with other good programmers and convince them.\n\nUltimately, it's all about having the tools to convince other people.  Of course YOU know that YOUR code is good.  :)\n\nAbout that example on binary search and loop invariants: if you want to look at it more closely, read Chapter 4 of \"Programming Pearls\" by Jon Bentley.  It's a pleasant read.  Also, look at: http://en.wikipedia.org/wiki/Mutilated_chessboard_problem, and realize that the layman's explanation of the proof is a loop invariant in disguise.", "edited": 1349068562.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;They are not useless.&lt;/p&gt;\n\n&lt;p&gt;Code is code: it doesn&amp;#39;t know if it&amp;#39;s right or wrong: it just runs.  Maybe it crashes, but code doesn&amp;#39;t care.  Hopefully, though, you do!  Usually, you&amp;#39;ll really want to know that you didn&amp;#39;t &amp;quot;screw it up&amp;quot;.  For some programs, screwing up isn&amp;#39;t a big deal.  For other kinds of programs, screwing up is a matter of life or death.&lt;/p&gt;\n\n&lt;p&gt;There are several techniques that folks have developed to convince each other that we didn&amp;#39;t screw it up.  One of these ways is to say that we&amp;#39;ve got a property that doesn&amp;#39;t get mucked when the code runs.  For example, the heart of knowing that binary search doesn&amp;#39;t mess up is the loop invariant that what we&amp;#39;re looking for is between the left and right pointers throughout the loop&amp;#39;s iteration.&lt;/p&gt;\n\n&lt;p&gt;Another way to convince each other that we didn&amp;#39;t screw it up is through test cases.  Whether or not the test cases are &amp;quot;convincing&amp;quot; is a matter of debate.  At the very least, test cases will tell you definitively that something broke if the tests fail.&lt;/p&gt;\n\n&lt;p&gt;Appreciate, though, that some people are uncomfortable with code unless they have concrete, exhaustive proof that the code is good.  If you go into a professional career, the burden of proof can get darn high, in which case you should learn the vocabulary and the ideas behind proof, so that you can communicate with other good programmers and convince them.&lt;/p&gt;\n\n&lt;p&gt;Ultimately, it&amp;#39;s all about having the tools to convince other people.  Of course YOU know that YOUR code is good.  :)&lt;/p&gt;\n\n&lt;p&gt;About that example on binary search and loop invariants: if you want to look at it more closely, read Chapter 4 of &amp;quot;Programming Pearls&amp;quot; by Jon Bentley.  It&amp;#39;s a pleasant read.  Also, look at: &lt;a href=\"http://en.wikipedia.org/wiki/Mutilated_chessboard_problem\"&gt;http://en.wikipedia.org/wiki/Mutilated_chessboard_problem&lt;/a&gt;, and realize that the layman&amp;#39;s explanation of the proof is a loop invariant in disguise.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6fupml", "flair_text": null, "created": 1349069762.0, "created_utc": 1349066162.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10jg61", "children": [], "author": "bak-", "id": "c6e13ji", "parent_id": "t3_10jg61", "score": 0, "approved_by": null, "upvotes": 4, "body": "loop invariants are the reason that automatic verification of computer programs hasn't happened yet. It's something we haven't found a good way to automate. All the other steps can more or less be done automatically using an SMT solver.\n\nBasically, it's what separates us from the machines. It's interesting in its own right.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;loop invariants are the reason that automatic verification of computer programs hasn&amp;#39;t happened yet. It&amp;#39;s something we haven&amp;#39;t found a good way to automate. All the other steps can more or less be done automatically using an SMT solver.&lt;/p&gt;\n\n&lt;p&gt;Basically, it&amp;#39;s what separates us from the machines. It&amp;#39;s interesting in its own right.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6e13ji", "flair_text": null, "created": 1348720126.0, "created_utc": 1348716526.0, "num_reports": null}], "score": 3, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 18, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/10jg61/are_loop_invariants_ever_actually_used_in_the/", "has_more_comments": false, "name": "t3_10jg61", "created": 1348712979.0, "url": "http://www.reddit.com/r/compsci/comments/10jg61/are_loop_invariants_ever_actually_used_in_the/", "author_flair_text": null, "author": "FerretWithASpork", "created_utc": 1348709379.0, "link_flair_text": null, "media": null, "num_reports": null}, "385": {"domain": "americanscientist.org", "link_flair_class": null, "banned_by": null, "downvotes": 8, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10h6le", "clicked": false, "title": "Alice and Bob in Cipherspace: encryption that allows you to compute with data you cannot read.", "num_comments": 19, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10h6le", "children": [], "author": "nakp88d", "id": "c6djmc8", "parent_id": "t3_10h6le", "score": 0, "approved_by": null, "upvotes": 3, "body": "How soon can we see fully homomorphic encryption being used in the real world, like in cloud computing, for example?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;How soon can we see fully homomorphic encryption being used in the real world, like in cloud computing, for example?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6djmc8", "flair_text": null, "created": 1348634581.0, "created_utc": 1348630981.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10h6le", "children": [], "author": "Tordek", "id": "c6dm3a7", "parent_id": "t3_10h6le", "score": 0, "approved_by": null, "upvotes": 2, "body": "This may be a stupid question, but, how can FHE be secure? e.g, if I can do two operations: subtract and multiply, I can find the original number.\n\nEventually I'll either hit 1, in which case E(1)\\*E(n) == E(n) or 0, and E(0)*E(n) == E(0)...\n\nCan FHE have multiple representations for the same value, or are we relying on \"It'd take too long to try all numbers anyway\"?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This may be a stupid question, but, how can FHE be secure? e.g, if I can do two operations: subtract and multiply, I can find the original number.&lt;/p&gt;\n\n&lt;p&gt;Eventually I&amp;#39;ll either hit 1, in which case E(1)*E(n) == E(n) or 0, and E(0)*E(n) == E(0)...&lt;/p&gt;\n\n&lt;p&gt;Can FHE have multiple representations for the same value, or are we relying on &amp;quot;It&amp;#39;d take too long to try all numbers anyway&amp;quot;?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dm3a7", "flair_text": null, "created": 1348648290.0, "created_utc": 1348644690.0, "num_reports": null}], "score": 28, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 36, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10h6le/alice_and_bob_in_cipherspace_encryption_that/", "has_more_comments": false, "name": "t3_10h6le", "created": 1348618783.0, "url": "http://www.americanscientist.org/issues/pub/2012/5/alice-and-bob-in-cipherspace", "author_flair_text": null, "author": "qkdhfjdjdhd", "created_utc": 1348615183.0, "link_flair_text": null, "media": null, "num_reports": null}, "386": {"domain": "rspb.royalsocietypublishing.org", "link_flair_class": null, "banned_by": null, "downvotes": 5, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10i95v", "clicked": false, "title": "New study says language not as hierarchical as previously thought. What do you say, NLP people?", "num_comments": 3, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10i95v", "children": [], "author": "ebix", "id": "c6dqdeq", "parent_id": "t3_10i95v", "score": 0, "approved_by": null, "upvotes": 4, "body": "Norvig (the current head of Google X) and Chomsky have had an ongoing debate about the place of statistical models in understanding language.\n\nSort of relevant and an interesting read...http://norvig.com/chomsky.html", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Norvig (the current head of Google X) and Chomsky have had an ongoing debate about the place of statistical models in understanding language.&lt;/p&gt;\n\n&lt;p&gt;Sort of relevant and an interesting read...&lt;a href=\"http://norvig.com/chomsky.html\"&gt;http://norvig.com/chomsky.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dqdeq", "flair_text": null, "created": 1348678975.0, "created_utc": 1348675375.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10i95v", "children": [], "author": "anttirt", "id": "c6drdwk", "parent_id": "t3_10i95v", "score": 0, "approved_by": null, "upvotes": 3, "body": "I'm not particularly an \"NLP person\" but I'm curious about whether their arguments pertain only to Indo-European or even only to Germanic languages. I might argue, for example, that Japanese is far more hierarchical than English, because you can have arbitrarily long sentences with post-fix particles in the middle \"packaging\" pieces of the sentence into a tree structure.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not particularly an &amp;quot;NLP person&amp;quot; but I&amp;#39;m curious about whether their arguments pertain only to Indo-European or even only to Germanic languages. I might argue, for example, that Japanese is far more hierarchical than English, because you can have arbitrarily long sentences with post-fix particles in the middle &amp;quot;packaging&amp;quot; pieces of the sentence into a tree structure.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6drdwk", "flair_text": null, "created": 1348682794.0, "created_utc": 1348679194.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10i95v", "children": [], "author": "entropy_kills", "id": "c6dordk", "parent_id": "t3_10i95v", "score": 0, "approved_by": null, "upvotes": 1, "body": "Also here: http://www.news.cornell.edu/stories/Sept12/SimpleLanguage.html (via r/science.)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Also here: &lt;a href=\"http://www.news.cornell.edu/stories/Sept12/SimpleLanguage.html\"&gt;http://www.news.cornell.edu/stories/Sept12/SimpleLanguage.html&lt;/a&gt; (via r/science.)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dordk", "flair_text": null, "created": 1348672411.0, "created_utc": 1348668811.0, "num_reports": null}], "score": 2, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 7, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10i95v/new_study_says_language_not_as_hierarchical_as/", "has_more_comments": false, "name": "t3_10i95v", "created": 1348672284.0, "url": "http://rspb.royalsocietypublishing.org/content/early/2012/09/05/rspb.2012.1741.short?rss=1", "author_flair_text": null, "author": "entropy_kills", "created_utc": 1348668684.0, "link_flair_text": null, "media": null, "num_reports": null}, "387": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 20, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Greetings. I&amp;#39;m doing my PhD in the philosophy of mind, more specifically in an area of cognitive science interested in modularity (more commonly known as the Massive Modularity Thesis). In cognitive science, a &amp;#39;module&amp;#39; is most famously characterised by informational encapsulation (this originally comes from Jerry Fodor&amp;#39;s book &amp;#39;The Modularity of Mind&amp;#39;); that is, a module only has access to information within itself, it cannot access information contained in another module (or anywhere else, for that matter). For various reasons which I won&amp;#39;t bore you with, this characterization, although highly influential, is really quite awful. I&amp;#39;ve read the odd paper or two which mention that computer scientists tend to think of modules very differently, but I haven&amp;#39;t had much luck in finding any sources or papers that go into any detail about how modules are defined by computer scientists (closest I got was a computer science text book which used it almost synonymously with &amp;#39;process&amp;#39;, yet mentioned they were technically different without really saying in what way). Does anyone know of any academic papers, articles, or books where a computer scientist discusses/defines what is meant by a &amp;#39;module&amp;#39;? Any help would be much appreciated.&lt;/p&gt;\n\n&lt;p&gt;P.S. If anyone has any questions about why philosophers/psychologists/etc. would be interested in the idea of modules, I can go into that a bit if anyone is interested.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Greetings. I'm doing my PhD in the philosophy of mind, more specifically in an area of cognitive science interested in modularity (more commonly known as the Massive Modularity Thesis). In cognitive science, a 'module' is most famously characterised by informational encapsulation (this originally comes from Jerry Fodor's book 'The Modularity of Mind'); that is, a module only has access to information within itself, it cannot access information contained in another module (or anywhere else, for that matter). For various reasons which I won't bore you with, this characterization, although highly influential, is really quite awful. I've read the odd paper or two which mention that computer scientists tend to think of modules very differently, but I haven't had much luck in finding any sources or papers that go into any detail about how modules are defined by computer scientists (closest I got was a computer science text book which used it almost synonymously with 'process', yet mentioned they were technically different without really saying in what way). Does anyone know of any academic papers, articles, or books where a computer scientist discusses/defines what is meant by a 'module'? Any help would be much appreciated.\n\nP.S. If anyone has any questions about why philosophers/psychologists/etc. would be interested in the idea of modules, I can go into that a bit if anyone is interested.", "saved": false, "id": "10gk3v", "clicked": false, "title": "Definition of a 'module': help a philosopher of mind!", "num_comments": 40, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_10gk3v", "children": [], "author": "ebix", "id": "c6da0y9", "parent_id": "t3_10gk3v", "score": 0, "approved_by": null, "upvotes": 16, "body": "\"Good\" modular programming is essentially packaging a complex program (procedure) in to many smaller interconneced programs each of which is much simpler (even trivially simple).\n\nIn this frame of reference, a module can interact with other modules, but has limited input (maybe a couple pieces of data, hard to say), and most importantly, always does the same thing on the same input (this allows you to practice \"abstraction\" which is essentially what lets programmers understand huge complex programs). \n\nBasically, you want to strike a balance between having to pass around tons of data between tons of tiny modules (which is bad), and having single huge complex modules that are hard to understand (also bad). This creates \"natural\" places to fragment a program into many smaller programs (modules). ", "edited": 1348596382.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&amp;quot;Good&amp;quot; modular programming is essentially packaging a complex program (procedure) in to many smaller interconneced programs each of which is much simpler (even trivially simple).&lt;/p&gt;\n\n&lt;p&gt;In this frame of reference, a module can interact with other modules, but has limited input (maybe a couple pieces of data, hard to say), and most importantly, always does the same thing on the same input (this allows you to practice &amp;quot;abstraction&amp;quot; which is essentially what lets programmers understand huge complex programs). &lt;/p&gt;\n\n&lt;p&gt;Basically, you want to strike a balance between having to pass around tons of data between tons of tiny modules (which is bad), and having single huge complex modules that are hard to understand (also bad). This creates &amp;quot;natural&amp;quot; places to fragment a program into many smaller programs (modules). &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6da0y9", "flair_text": null, "created": 1348598473.0, "created_utc": 1348594873.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10gk3v", "children": [], "author": "twoodfin", "id": "c6dclvz", "parent_id": "t3_10gk3v", "score": 0, "approved_by": null, "upvotes": 9, "body": "The classic treatment of modularization in software engineering is by [David Parnas](http://en.wikipedia.org/wiki/David_Parnas), beginning with his 1972 paper, [\"On the Criteria To Be Used in Decomposing Systems into Modules\"](http://www.cs.umd.edu/class/spring2003/cmsc838p/Design/criteria.pdf).\n\nIn short, his theory is that, properly understood, modules are a means of hiding information and design decisions so they can be updated without impacting the rest of the system.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The classic treatment of modularization in software engineering is by &lt;a href=\"http://en.wikipedia.org/wiki/David_Parnas\"&gt;David Parnas&lt;/a&gt;, beginning with his 1972 paper, &lt;a href=\"http://www.cs.umd.edu/class/spring2003/cmsc838p/Design/criteria.pdf\"&gt;&amp;quot;On the Criteria To Be Used in Decomposing Systems into Modules&amp;quot;&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;In short, his theory is that, properly understood, modules are a means of hiding information and design decisions so they can be updated without impacting the rest of the system.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dclvz", "flair_text": null, "created": 1348607459.0, "created_utc": 1348603859.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10gk3v", "children": [], "author": "jonmisurda", "id": "c6dc9ca", "parent_id": "t3_10gk3v", "score": 0, "approved_by": null, "upvotes": 6, "body": "I just pulled a Software Engineering textbook off of my shelf: *Software Engineering Theory and Practice 3rd Ed.* by Pfleeger and Atlee (2006):\n\nOn page 228:\n&gt; No matter the design approach, each kind of decomposition separates the design into its composite parts, called **modules** or **components**. We say that a system is **modular** when each activity of the system is performed by exactly one component, and when the inputs and outputs of each component are well-defined. [...] We say that a component is **well-defined** if all inputs to it are essential to its function, and all outputs are produced by one of its actions.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I just pulled a Software Engineering textbook off of my shelf: &lt;em&gt;Software Engineering Theory and Practice 3rd Ed.&lt;/em&gt; by Pfleeger and Atlee (2006):&lt;/p&gt;\n\n&lt;p&gt;On page 228:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;No matter the design approach, each kind of decomposition separates the design into its composite parts, called &lt;strong&gt;modules&lt;/strong&gt; or &lt;strong&gt;components&lt;/strong&gt;. We say that a system is &lt;strong&gt;modular&lt;/strong&gt; when each activity of the system is performed by exactly one component, and when the inputs and outputs of each component are well-defined. [...] We say that a component is &lt;strong&gt;well-defined&lt;/strong&gt; if all inputs to it are essential to its function, and all outputs are produced by one of its actions.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dc9ca", "flair_text": null, "created": 1348606277.0, "created_utc": 1348602677.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10gk3v", "children": [], "author": "joksmaster", "id": "c6dcsng", "parent_id": "t3_10gk3v", "score": 0, "approved_by": null, "upvotes": 11, "body": "The other discussions about what is a module are very interesting, but just for the sake of providing a different viewpoint, the [Ocaml language](http://caml.inria.fr) has an explicit notion of module. In the [manual](http://caml.inria.fr/pub/docs/manual-ocaml-4.00/manual004.html), we have the following definition: \n\n&gt; A primary motivation for modules is to package together related definitions (such as the definitions of a data type and associated operations over that type) and enforce a consistent naming scheme for these definitions. This avoids running out of names or accidentally confusing names. Such a package is called a structure and is introduced by the struct\u2026end construct, which contains an arbitrary sequence of definitions. The structure is usually given a name with the module binding.\n\nAt another point: http://caml.inria.fr/pub/docs/u3-ocaml/ocaml-modules.html\n\n&gt; The benefits of modules are numerous. They make large programs compilable by allowing to split them into pieces that can be separately compiled. They make large programs understandable by adding structure to them. More precisely, modules encourage, and sometimes force, the specification of the links (interfaces) between program components, hence they also make large programs maintainable and reusable. Additionally, by enforcing abstraction, modules usually make programs safer.\n\nXavier Leroy is one of the architects of the module system of OCaml, and he published the paper \"A modular module system\" (http://caml.inria.fr/pub/papers/xleroy-modular_modules-jfp.pdf). It might be a good academic reference (although some parts might be quite technical). ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The other discussions about what is a module are very interesting, but just for the sake of providing a different viewpoint, the &lt;a href=\"http://caml.inria.fr\"&gt;Ocaml language&lt;/a&gt; has an explicit notion of module. In the &lt;a href=\"http://caml.inria.fr/pub/docs/manual-ocaml-4.00/manual004.html\"&gt;manual&lt;/a&gt;, we have the following definition: &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;A primary motivation for modules is to package together related definitions (such as the definitions of a data type and associated operations over that type) and enforce a consistent naming scheme for these definitions. This avoids running out of names or accidentally confusing names. Such a package is called a structure and is introduced by the struct\u2026end construct, which contains an arbitrary sequence of definitions. The structure is usually given a name with the module binding.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;At another point: &lt;a href=\"http://caml.inria.fr/pub/docs/u3-ocaml/ocaml-modules.html\"&gt;http://caml.inria.fr/pub/docs/u3-ocaml/ocaml-modules.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;The benefits of modules are numerous. They make large programs compilable by allowing to split them into pieces that can be separately compiled. They make large programs understandable by adding structure to them. More precisely, modules encourage, and sometimes force, the specification of the links (interfaces) between program components, hence they also make large programs maintainable and reusable. Additionally, by enforcing abstraction, modules usually make programs safer.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Xavier Leroy is one of the architects of the module system of OCaml, and he published the paper &amp;quot;A modular module system&amp;quot; (&lt;a href=\"http://caml.inria.fr/pub/papers/xleroy-modular_modules-jfp.pdf\"&gt;http://caml.inria.fr/pub/papers/xleroy-modular_modules-jfp.pdf&lt;/a&gt;). It might be a good academic reference (although some parts might be quite technical). &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dcsng", "flair_text": null, "created": 1348608093.0, "created_utc": 1348604493.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10gk3v", "children": [], "author": "dvito", "id": "c6dcs0l", "parent_id": "t3_10gk3v", "score": 0, "approved_by": null, "upvotes": 4, "body": "As an additional textbook reference:  \n\nFrom *Software Testing and Quality Assurance: Theory and Practice*, Edited by Kshirasagar Naik and Priyadarshi Tripathy. Page 158\n&gt;A software module, or component, is a self-contained element of a system.  Modules have well-defined interfaces with other modules.  A module can be a subroutine, procedure, class, or collection of those basic elements put together to deliver a higher level service.  A system is a collection of modules interconnected in a certain way to accomplish a tangible objective.\n\nEdit: Spelling.", "edited": 1348611334.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As an additional textbook reference:  &lt;/p&gt;\n\n&lt;p&gt;From &lt;em&gt;Software Testing and Quality Assurance: Theory and Practice&lt;/em&gt;, Edited by Kshirasagar Naik and Priyadarshi Tripathy. Page 158&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;A software module, or component, is a self-contained element of a system.  Modules have well-defined interfaces with other modules.  A module can be a subroutine, procedure, class, or collection of those basic elements put together to deliver a higher level service.  A system is a collection of modules interconnected in a certain way to accomplish a tangible objective.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Edit: Spelling.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dcs0l", "flair_text": null, "created": 1348608033.0, "created_utc": 1348604433.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10gk3v", "children": [], "author": "cockmongler", "id": "c6ddicj", "parent_id": "t3_10gk3v", "score": 0, "approved_by": null, "upvotes": 3, "body": "There are two issues at work. In programming a module may represent a specific language feature wherein a group of related components are packaged together, e.g. a string handling library which contains both the definition of a string and functions to handle it. It may also be a more abstract notion of a bundle of related components which may not be grouped by the constraints of the language and are likely to be domain specific, e.g. a module which monitors a piece of machinery.\n\nModules of the first kind are not constrained to be strict hierarchies, it is common for many other modules to include the string module as an example. In general also a module only has access to the information within it and information that has been given to it. A module may export a function that takes a free argument (i.e. some unspecified piece of data it will do nothing with but pass to somewhere else, as such it doesn't need to know what that argument actually is), that function may be given a string without including the string module itself. So modules provide a mechanism by which information can be encapsulated and yet still interact. BUT, apart from a few notable exceptions, most languages allow global data which breaks out from the module base encapsulation. Usually the use of features is discouraged.\n\nOn the process note, most languages have modules which operate in a completely reactive way within a process, processes are usually orthogonal to modules in scope. This may be an error.\n\nThe strict CS definition of a module is hard to pin down, here's an example of what you'd be facing in attempting to understand it http://existentialtype.wordpress.com/2011/04/16/modules-matter-most/", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There are two issues at work. In programming a module may represent a specific language feature wherein a group of related components are packaged together, e.g. a string handling library which contains both the definition of a string and functions to handle it. It may also be a more abstract notion of a bundle of related components which may not be grouped by the constraints of the language and are likely to be domain specific, e.g. a module which monitors a piece of machinery.&lt;/p&gt;\n\n&lt;p&gt;Modules of the first kind are not constrained to be strict hierarchies, it is common for many other modules to include the string module as an example. In general also a module only has access to the information within it and information that has been given to it. A module may export a function that takes a free argument (i.e. some unspecified piece of data it will do nothing with but pass to somewhere else, as such it doesn&amp;#39;t need to know what that argument actually is), that function may be given a string without including the string module itself. So modules provide a mechanism by which information can be encapsulated and yet still interact. BUT, apart from a few notable exceptions, most languages allow global data which breaks out from the module base encapsulation. Usually the use of features is discouraged.&lt;/p&gt;\n\n&lt;p&gt;On the process note, most languages have modules which operate in a completely reactive way within a process, processes are usually orthogonal to modules in scope. This may be an error.&lt;/p&gt;\n\n&lt;p&gt;The strict CS definition of a module is hard to pin down, here&amp;#39;s an example of what you&amp;#39;d be facing in attempting to understand it &lt;a href=\"http://existentialtype.wordpress.com/2011/04/16/modules-matter-most/\"&gt;http://existentialtype.wordpress.com/2011/04/16/modules-matter-most/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ddicj", "flair_text": null, "created": 1348610527.0, "created_utc": 1348606927.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10gk3v", "children": [], "author": "jmmcd", "id": "c6dfxfz", "parent_id": "t3_10gk3v", "score": 0, "approved_by": null, "upvotes": 3, "body": "I think it's a very interesting topic.\n\nMany people are thinking of \"module\" in the programming language sense. In that sense, the Parnas article mentioned below is seminal and a must-cite.\n\nBut that is only a small part of the idea. Any type of system can have modules: for example a bicycle has a wheel module. The parts of a wheel are all more closely connected to each other than they are to elements of the bicycle outside that module. Here \"connected\" is meant in the sense of being physically connected, or having functional dependencies, or being well-adapted to each other. I think that this basic idea is one of the commonalities among the many different senses in which people talk about modules: many or strong internal connections, few or weak external connections.\n\nMany people also talk about *reuse* of modules -- the same wheel design can be re-used for the front and back wheel. But that seems not quite essential. After all, a unicycle's wheel still seems like a module.\n\nIn my own area (evolutionary computation), I can recommend taking a look at these papers:\n\n1. Spontaneous evolution of modularity and network motifs, Nadav Kashtan and Uri Alon\n\n2. A Simple Modularity Measure for Search Spaces based on Information Theory, Peter Dauscher, Daniel Polani, Richard A. Watson\n\nThe latter refers to Herbert Simon's \"Sciences of the Artificial\", which talks about \"decomposability\". I suppose that is not precisely the same as \"modularity\" -- but it's pretty close.\n\nPM me if you don't have access to those papers.\n\nAlso I have a colleague whose PhD topic is in the use of modularity in evolutionary computing systems. I'll point him here.", "edited": 1348616899.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think it&amp;#39;s a very interesting topic.&lt;/p&gt;\n\n&lt;p&gt;Many people are thinking of &amp;quot;module&amp;quot; in the programming language sense. In that sense, the Parnas article mentioned below is seminal and a must-cite.&lt;/p&gt;\n\n&lt;p&gt;But that is only a small part of the idea. Any type of system can have modules: for example a bicycle has a wheel module. The parts of a wheel are all more closely connected to each other than they are to elements of the bicycle outside that module. Here &amp;quot;connected&amp;quot; is meant in the sense of being physically connected, or having functional dependencies, or being well-adapted to each other. I think that this basic idea is one of the commonalities among the many different senses in which people talk about modules: many or strong internal connections, few or weak external connections.&lt;/p&gt;\n\n&lt;p&gt;Many people also talk about &lt;em&gt;reuse&lt;/em&gt; of modules -- the same wheel design can be re-used for the front and back wheel. But that seems not quite essential. After all, a unicycle&amp;#39;s wheel still seems like a module.&lt;/p&gt;\n\n&lt;p&gt;In my own area (evolutionary computation), I can recommend taking a look at these papers:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Spontaneous evolution of modularity and network motifs, Nadav Kashtan and Uri Alon&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;A Simple Modularity Measure for Search Spaces based on Information Theory, Peter Dauscher, Daniel Polani, Richard A. Watson&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;The latter refers to Herbert Simon&amp;#39;s &amp;quot;Sciences of the Artificial&amp;quot;, which talks about &amp;quot;decomposability&amp;quot;. I suppose that is not precisely the same as &amp;quot;modularity&amp;quot; -- but it&amp;#39;s pretty close.&lt;/p&gt;\n\n&lt;p&gt;PM me if you don&amp;#39;t have access to those papers.&lt;/p&gt;\n\n&lt;p&gt;Also I have a colleague whose PhD topic is in the use of modularity in evolutionary computing systems. I&amp;#39;ll point him here.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dfxfz", "flair_text": null, "created": 1348620050.0, "created_utc": 1348616450.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10gk3v", "children": [], "author": "GoatOfUnflappability", "id": "c6dj8x3", "parent_id": "t3_10gk3v", "score": 0, "approved_by": null, "upvotes": 2, "body": "\"Module\" is not especially well-defined in computer science; it can mean different things within different sub-fields, platforms, and programming languages, all appealing to the intuitive (English language) definition of the word.\n\nOn the other hand, the dual concepts of \"class\" and \"object\" are *somewhat* less ambiguous, and you may like to read up a bit on object-oriented programming to see if that brings you any inspiration. I recommend paging through a book aimed at beginning practitioners (like \"Head First Object-Oriented Analysis and Design\") to get your feet set before diving into any academic papers.  (For what it's worth, within object-oriented programming languages, a \"module\" is often a collection of classes).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&amp;quot;Module&amp;quot; is not especially well-defined in computer science; it can mean different things within different sub-fields, platforms, and programming languages, all appealing to the intuitive (English language) definition of the word.&lt;/p&gt;\n\n&lt;p&gt;On the other hand, the dual concepts of &amp;quot;class&amp;quot; and &amp;quot;object&amp;quot; are &lt;em&gt;somewhat&lt;/em&gt; less ambiguous, and you may like to read up a bit on object-oriented programming to see if that brings you any inspiration. I recommend paging through a book aimed at beginning practitioners (like &amp;quot;Head First Object-Oriented Analysis and Design&amp;quot;) to get your feet set before diving into any academic papers.  (For what it&amp;#39;s worth, within object-oriented programming languages, a &amp;quot;module&amp;quot; is often a collection of classes).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dj8x3", "flair_text": null, "created": 1348633067.0, "created_utc": 1348629467.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10gk3v", "children": [], "author": "FreeLoseThosGames", "id": "c6dcqpu", "parent_id": "t3_10gk3v", "score": 0, "approved_by": null, "upvotes": 1, "body": "Modularity is an approach that allows humans to conceptualize easier.  Sometimes, there's an easy way to do something, but you don't do it because it would confuse people, violating modularity.  Thus, modularity is actually a source of inefficiency.\n\nAs computers have become more powerful, we have the luxury to choose easy-to-understand over efficiency.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Modularity is an approach that allows humans to conceptualize easier.  Sometimes, there&amp;#39;s an easy way to do something, but you don&amp;#39;t do it because it would confuse people, violating modularity.  Thus, modularity is actually a source of inefficiency.&lt;/p&gt;\n\n&lt;p&gt;As computers have become more powerful, we have the luxury to choose easy-to-understand over efficiency.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dcqpu", "flair_text": null, "created": 1348607915.0, "created_utc": 1348604315.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10gk3v", "children": [], "author": "tangentstorm", "id": "c6dhyqc", "parent_id": "t3_10gk3v", "score": 0, "approved_by": null, "upvotes": 1, "body": "Originally,  \"module\" meant a section of code with one entry point and one exit point. That is, a procedure or function definition, or a single statement, or a loop with no CONTINUE or BREAK clause, or everything from IF to END in a IF .. THEN ... ELSE ... END block. (As contrasted to code with lots of arbitrary GOTO statements.)\n\nBasically, if you drew a flowchart of your program, a module is any section with only one line going in and one line going out.\n\nThat usage has pretty much fallen out of favor, though, and now it's just used to describe a file or directory with a bunch of related classes / types / subroutines.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Originally,  &amp;quot;module&amp;quot; meant a section of code with one entry point and one exit point. That is, a procedure or function definition, or a single statement, or a loop with no CONTINUE or BREAK clause, or everything from IF to END in a IF .. THEN ... ELSE ... END block. (As contrasted to code with lots of arbitrary GOTO statements.)&lt;/p&gt;\n\n&lt;p&gt;Basically, if you drew a flowchart of your program, a module is any section with only one line going in and one line going out.&lt;/p&gt;\n\n&lt;p&gt;That usage has pretty much fallen out of favor, though, and now it&amp;#39;s just used to describe a file or directory with a bunch of related classes / types / subroutines.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dhyqc", "flair_text": null, "created": 1348628124.0, "created_utc": 1348624524.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10gk3v", "children": [], "author": "SiliconGuy", "id": "c6dpn0i", "parent_id": "t3_10gk3v", "score": 0, "approved_by": null, "upvotes": 1, "body": "So far the responses have been kind of all over the place. I think something really important is missing from the discussion, which I will state here.\n\nPrograms _can_ be written without any sense of modularity inside them at all. Lots of programmers lamented this, so various languages and techniques developed with ad-hoc ways to \"modularize\" things. I use scare quotes because there was no formal definition of what it meant to be modular.\n\n*Eventually, people decided that modularty needed to be formalized. Thus, the invention of object-oriented programming.*\n\nAn object is a \"modular\" piece of data, functionality, or (usually) both. If both, the functionality generally operates on the data in the object. So, typically, an object is a compositional unit encapsulating functionality and data. (Note that programs consist of two fundamental things, operations (\"functionality\") and state (\"data\"); so objects can, fundamentally, encapsulate everything there is in the world of programming.)\n\nThe most popular long-lasting mainstream languages (with the exception of C) are object-oriented. So this has has a huge impact.\n\nThere are tons of academic papers about all kinds of aspects of object-oriented programming.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;So far the responses have been kind of all over the place. I think something really important is missing from the discussion, which I will state here.&lt;/p&gt;\n\n&lt;p&gt;Programs &lt;em&gt;can&lt;/em&gt; be written without any sense of modularity inside them at all. Lots of programmers lamented this, so various languages and techniques developed with ad-hoc ways to &amp;quot;modularize&amp;quot; things. I use scare quotes because there was no formal definition of what it meant to be modular.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Eventually, people decided that modularty needed to be formalized. Thus, the invention of object-oriented programming.&lt;/em&gt;&lt;/p&gt;\n\n&lt;p&gt;An object is a &amp;quot;modular&amp;quot; piece of data, functionality, or (usually) both. If both, the functionality generally operates on the data in the object. So, typically, an object is a compositional unit encapsulating functionality and data. (Note that programs consist of two fundamental things, operations (&amp;quot;functionality&amp;quot;) and state (&amp;quot;data&amp;quot;); so objects can, fundamentally, encapsulate everything there is in the world of programming.)&lt;/p&gt;\n\n&lt;p&gt;The most popular long-lasting mainstream languages (with the exception of C) are object-oriented. So this has has a huge impact.&lt;/p&gt;\n\n&lt;p&gt;There are tons of academic papers about all kinds of aspects of object-oriented programming.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dpn0i", "flair_text": null, "created": 1348676170.0, "created_utc": 1348672570.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10gk3v", "children": [], "author": "mycall", "id": "c6dfvnw", "parent_id": "t3_10gk3v", "score": 0, "approved_by": null, "upvotes": 3, "body": "&gt;  philosophy of mind\n\na lover of mindful wisdom or a lover of wisdom of the mind?  Confusing nomenclature.\n\n&gt; I haven't had much luck in finding any sources or papers that go into any detail about how modules are defined by computer scientists\n\nA module is an overloaded term.  Don't focus on it too much or it will confuse people.  Try to find and use a synonym.\n\nOne great place to look is at [Domain Driven Design](http://domaindrivendesign.org/).  In there, modules are called Bounded Contexts there are many rules in how they are written and interact with other bounded contexts.", "edited": 1348616675.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;philosophy of mind&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;a lover of mindful wisdom or a lover of wisdom of the mind?  Confusing nomenclature.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;I haven&amp;#39;t had much luck in finding any sources or papers that go into any detail about how modules are defined by computer scientists&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;A module is an overloaded term.  Don&amp;#39;t focus on it too much or it will confuse people.  Try to find and use a synonym.&lt;/p&gt;\n\n&lt;p&gt;One great place to look is at &lt;a href=\"http://domaindrivendesign.org/\"&gt;Domain Driven Design&lt;/a&gt;.  In there, modules are called Bounded Contexts there are many rules in how they are written and interact with other bounded contexts.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dfvnw", "flair_text": null, "created": 1348619857.0, "created_utc": 1348616257.0, "num_reports": null}], "score": 39, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 59, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/10gk3v/definition_of_a_module_help_a_philosopher_of_mind/", "has_more_comments": false, "name": "t3_10gk3v", "created": 1348597939.0, "url": "http://www.reddit.com/r/compsci/comments/10gk3v/definition_of_a_module_help_a_philosopher_of_mind/", "author_flair_text": null, "author": "Throne777", "created_utc": 1348594339.0, "link_flair_text": null, "media": null, "num_reports": null}, "388": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 17, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have been wondering this as it seems it&amp;#39;d be more efficient for it to be smaller because something like a boolean doesn&amp;#39;t seem like it&amp;#39;d need all 8 bits. I haven&amp;#39;t been able to find a thorough answer via google.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I have been wondering this as it seems it'd be more efficient for it to be smaller because something like a boolean doesn't seem like it'd need all 8 bits. I haven't been able to find a thorough answer via google.", "saved": false, "id": "10ho71", "clicked": false, "title": "Why is the smallest amount of addressable memory generally a byte?", "num_comments": 34, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10ho71", "children": [], "author": "littlevimpy", "id": "c6dm7bf", "parent_id": "t3_10ho71", "score": 0, "approved_by": null, "upvotes": 32, "body": "Wikipedia has some info on this:\n\n* http://en.wikipedia.org/wiki/Byte\n\nThere is a history of processors with 4-bit and 6-bit addressable units but they were superseded.\n\n* [4-bit](http://en.wikipedia.org/wiki/4-bit)\n* [6-bit](http://en.wikipedia.org/wiki/Sixbit)\n\nIf you think about the addressable space of 4-bit (16 values) and 6-bit (64 values), they aren't as useful for business computing because they cannot represent a full set of English alphanumeric characters. For that, the following is needed:\n\n* 26 uppercase letters\n* 26 lowercase letters\n* 10 digits\n* 30 punctuation marks\n\nThe total needed is 92 unique values, which explains why the set was expanded to [7-bit in 1963 with the ASCII character set.](http://en.wikipedia.org/wiki/ASCII)  7-bit allows for up to 128 values which is the smallest bit size needed for representing alphanumerics and a few non-printable characters.\n\nThe reason we don't use 7-bit as the smallest addressable unit is because that size is difficult to work when building logic gates in hardware. You can't evenly split 7 bits in half or in quarters. 2^8 is a friendlier number because 8 can be factored in a greater number of ways: [1, 2, 4, 8]. It makes the nibble size a nice round value of 4 and the half nibble size of 2. Compare to the factors of 6 [1, 2, 3, 6] and 7 [1, 7].\n\nChoosing 2^8 is the smart choice. Using a power of 8 is *very* handy for making logic gates simpler to implement and it meets the requirement for representing 92 alphanumeric characters.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wikipedia has some info on this:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Byte\"&gt;http://en.wikipedia.org/wiki/Byte&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;There is a history of processors with 4-bit and 6-bit addressable units but they were superseded.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"http://en.wikipedia.org/wiki/4-bit\"&gt;4-bit&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Sixbit\"&gt;6-bit&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;If you think about the addressable space of 4-bit (16 values) and 6-bit (64 values), they aren&amp;#39;t as useful for business computing because they cannot represent a full set of English alphanumeric characters. For that, the following is needed:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;26 uppercase letters&lt;/li&gt;\n&lt;li&gt;26 lowercase letters&lt;/li&gt;\n&lt;li&gt;10 digits&lt;/li&gt;\n&lt;li&gt;30 punctuation marks&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;The total needed is 92 unique values, which explains why the set was expanded to &lt;a href=\"http://en.wikipedia.org/wiki/ASCII\"&gt;7-bit in 1963 with the ASCII character set.&lt;/a&gt;  7-bit allows for up to 128 values which is the smallest bit size needed for representing alphanumerics and a few non-printable characters.&lt;/p&gt;\n\n&lt;p&gt;The reason we don&amp;#39;t use 7-bit as the smallest addressable unit is because that size is difficult to work when building logic gates in hardware. You can&amp;#39;t evenly split 7 bits in half or in quarters. 2&lt;sup&gt;8&lt;/sup&gt; is a friendlier number because 8 can be factored in a greater number of ways: [1, 2, 4, 8]. It makes the nibble size a nice round value of 4 and the half nibble size of 2. Compare to the factors of 6 [1, 2, 3, 6] and 7 [1, 7].&lt;/p&gt;\n\n&lt;p&gt;Choosing 2&lt;sup&gt;8&lt;/sup&gt; is the smart choice. Using a power of 8 is &lt;em&gt;very&lt;/em&gt; handy for making logic gates simpler to implement and it meets the requirement for representing 92 alphanumeric characters.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dm7bf", "flair_text": null, "created": 1348649343.0, "created_utc": 1348645743.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_10ho71", "children": [], "author": "pjdelport", "id": "c6dlfwy", "parent_id": "t3_10ho71", "score": 0, "approved_by": null, "upvotes": 14, "body": "Space efficiency isn't the only efficiency. With modern hardware architectures, most things tend to happen in even larger units of 32 or 64 bits (or more), so anything smaller than that can become moot.\n\nThis is why [data structure alignment](http://en.wikipedia.org/wiki/Data_structure_alignment) is important: the hardware's effective unit of addressing is the word size, and addressing any bytes that are not aligned with this will effectively require fetching the whole words, and doing the appropriate shifts to get to the bytes you requested (much like you have to do to access individual bits within a byte).\n\nThis is also related to how [tagged pointers](http://en.wikipedia.org/wiki/Tagged_pointer) work: if you know all your pointers are aligned to the word size, you can mask out the lower-order bits of the pointer, and use those bits to store other run-time information, such as type or memory management metadata.", "edited": 1348641335.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Space efficiency isn&amp;#39;t the only efficiency. With modern hardware architectures, most things tend to happen in even larger units of 32 or 64 bits (or more), so anything smaller than that can become moot.&lt;/p&gt;\n\n&lt;p&gt;This is why &lt;a href=\"http://en.wikipedia.org/wiki/Data_structure_alignment\"&gt;data structure alignment&lt;/a&gt; is important: the hardware&amp;#39;s effective unit of addressing is the word size, and addressing any bytes that are not aligned with this will effectively require fetching the whole words, and doing the appropriate shifts to get to the bytes you requested (much like you have to do to access individual bits within a byte).&lt;/p&gt;\n\n&lt;p&gt;This is also related to how &lt;a href=\"http://en.wikipedia.org/wiki/Tagged_pointer\"&gt;tagged pointers&lt;/a&gt; work: if you know all your pointers are aligned to the word size, you can mask out the lower-order bits of the pointer, and use those bits to store other run-time information, such as type or memory management metadata.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dlfwy", "flair_text": null, "created": 1348643504.0, "created_utc": 1348639904.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10ho71", "children": [], "author": "jerkimball", "id": "c6dkfky", "parent_id": "t3_10ho71", "score": 0, "approved_by": null, "upvotes": 12, "body": "You can thank IBM and their system 360 for that, I think - they came up with the first eight bits/one byte control code format: EBCDIC - http://en.m.wikipedia.org/wiki/Extended_Binary_Coded_Decimal_Interchange_Code  Since it was so widespread, microprocessor designers designed for optimization of byte-level instructions, skip forty years or so, here we are holding in with the same minimum addressable unit.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can thank IBM and their system 360 for that, I think - they came up with the first eight bits/one byte control code format: EBCDIC - &lt;a href=\"http://en.m.wikipedia.org/wiki/Extended_Binary_Coded_Decimal_Interchange_Code\"&gt;http://en.m.wikipedia.org/wiki/Extended_Binary_Coded_Decimal_Interchange_Code&lt;/a&gt;  Since it was so widespread, microprocessor designers designed for optimization of byte-level instructions, skip forty years or so, here we are holding in with the same minimum addressable unit.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dkfky", "flair_text": null, "created": 1348638065.0, "created_utc": 1348634465.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10ho71", "children": [], "author": "mrbigstuff555", "id": "c6dluae", "parent_id": "t3_10ho71", "score": 0, "approved_by": null, "upvotes": 4, "body": "re: booleans (although generalizes to other really small sizes)\n\nI think the confusion may stem from a faulty premise. Bitwise operators (AND, OR, SHIFT, etc.) can already be used to manipulate specific bits within a word or byte. There's no reason you couldn't efficiently pack several booleans into a single word. In practice, the space savings would not be worth the effort in all but the most special of cases.\n\nConsider this... What possible benefit could there be to providing instructions that operate on single bits when bitwise word-sized instructions are a) more general, b) capable of the same functionality, and c) already available? On the other hand, there are certainly huge drawbacks to complicating the ISA.\n\nBtw, some architectures don't even support byte-granularity and instead are limited to word sizes. Also, the reason bit-wise operators exist in the first place is that manipulating a single bit is fundamentally different from any larger number of bits. Think about it, it doesn't make sense to support division or multiplication of a single bit when AND, OR, and XOR are already available. So, if you did support bit-sized addressing, most operations supported by the ALU would be redundant (wasteful) and you'd be wasting most of the logic in the ALU by not using the full bit width. May as well use a word instead so that you can operate on several bits at a time when you're able to (i.e. parallelism).\n\ntl;dr; It's really easy to manipulate specific bits (either one at a time or better yet several) already. Given that memory controllers require granularities much larger than even a word (probably), why bother with bit-sized instructions.", "edited": 1348644480.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;re: booleans (although generalizes to other really small sizes)&lt;/p&gt;\n\n&lt;p&gt;I think the confusion may stem from a faulty premise. Bitwise operators (AND, OR, SHIFT, etc.) can already be used to manipulate specific bits within a word or byte. There&amp;#39;s no reason you couldn&amp;#39;t efficiently pack several booleans into a single word. In practice, the space savings would not be worth the effort in all but the most special of cases.&lt;/p&gt;\n\n&lt;p&gt;Consider this... What possible benefit could there be to providing instructions that operate on single bits when bitwise word-sized instructions are a) more general, b) capable of the same functionality, and c) already available? On the other hand, there are certainly huge drawbacks to complicating the ISA.&lt;/p&gt;\n\n&lt;p&gt;Btw, some architectures don&amp;#39;t even support byte-granularity and instead are limited to word sizes. Also, the reason bit-wise operators exist in the first place is that manipulating a single bit is fundamentally different from any larger number of bits. Think about it, it doesn&amp;#39;t make sense to support division or multiplication of a single bit when AND, OR, and XOR are already available. So, if you did support bit-sized addressing, most operations supported by the ALU would be redundant (wasteful) and you&amp;#39;d be wasting most of the logic in the ALU by not using the full bit width. May as well use a word instead so that you can operate on several bits at a time when you&amp;#39;re able to (i.e. parallelism).&lt;/p&gt;\n\n&lt;p&gt;tl;dr; It&amp;#39;s really easy to manipulate specific bits (either one at a time or better yet several) already. Given that memory controllers require granularities much larger than even a word (probably), why bother with bit-sized instructions.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dluae", "flair_text": null, "created": 1348646254.0, "created_utc": 1348642654.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10ho71", "children": [], "author": "frankster", "id": "c6do2tu", "parent_id": "t3_10ho71", "score": 0, "approved_by": null, "upvotes": 3, "body": "some platforms (arm?) require accesses to be aligned to word size. So arguably smallest addressable unit is 32 bits in those cases.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;some platforms (arm?) require accesses to be aligned to word size. So arguably smallest addressable unit is 32 bits in those cases.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6do2tu", "flair_text": null, "created": 1348668745.0, "created_utc": 1348665145.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10ho71", "children": [], "author": "MathPolice", "id": "c6dspuy", "parent_id": "t3_10ho71", "score": 0, "approved_by": null, "upvotes": 3, "body": "The [Intel iAPX 432 was one of Intel's greatest failures](http://en.wikipedia.org/wiki/Intel_432#The_project.27s_failures)  (prior to the [FDIV bug](http://en.wikipedia.org/wiki/Fdiv_bug) and [Itanium](http://en.wikipedia.org/wiki/Itanium)).\n\nIt used bit-aligned variable length instructions.\n\nThis is slightly off-topic to your question, since I'm referring to non-byte *instructions* rather than non-byte *data accesses*, but I thought this was an interesting piece of compsci failure history that quite a few people here might not be aware of.\n\nOn a related note, many people have already mentioned many architectures that had different byte or word sizes.  Some early IBM machines had unusual bit sizes (10? bits including \"stop\" bit?), and Lisp Machines had 36-bit words (as did the PDP-10).  ENIAC and some very early IBM machines had \"10 decimal digit\" words.\n\nMore related to your question, you may want to investigate the PowerPC/Power opcodes of [rlwimi](http://gchiesa.smos.org/pub/_documentation/ISA_PPC/rlwimi.html) and [rlwinm](http://jasonwoof.org/rlwinm) to see a modern of example of bit field insertion and extraction instructions on modern 32/64-bit architectures.\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The &lt;a href=\"http://en.wikipedia.org/wiki/Intel_432#The_project.27s_failures\"&gt;Intel iAPX 432 was one of Intel&amp;#39;s greatest failures&lt;/a&gt;  (prior to the &lt;a href=\"http://en.wikipedia.org/wiki/Fdiv_bug\"&gt;FDIV bug&lt;/a&gt; and &lt;a href=\"http://en.wikipedia.org/wiki/Itanium\"&gt;Itanium&lt;/a&gt;).&lt;/p&gt;\n\n&lt;p&gt;It used bit-aligned variable length instructions.&lt;/p&gt;\n\n&lt;p&gt;This is slightly off-topic to your question, since I&amp;#39;m referring to non-byte &lt;em&gt;instructions&lt;/em&gt; rather than non-byte &lt;em&gt;data accesses&lt;/em&gt;, but I thought this was an interesting piece of compsci failure history that quite a few people here might not be aware of.&lt;/p&gt;\n\n&lt;p&gt;On a related note, many people have already mentioned many architectures that had different byte or word sizes.  Some early IBM machines had unusual bit sizes (10? bits including &amp;quot;stop&amp;quot; bit?), and Lisp Machines had 36-bit words (as did the PDP-10).  ENIAC and some very early IBM machines had &amp;quot;10 decimal digit&amp;quot; words.&lt;/p&gt;\n\n&lt;p&gt;More related to your question, you may want to investigate the PowerPC/Power opcodes of &lt;a href=\"http://gchiesa.smos.org/pub/_documentation/ISA_PPC/rlwimi.html\"&gt;rlwimi&lt;/a&gt; and &lt;a href=\"http://jasonwoof.org/rlwinm\"&gt;rlwinm&lt;/a&gt; to see a modern of example of bit field insertion and extraction instructions on modern 32/64-bit architectures.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dspuy", "flair_text": null, "created": 1348687794.0, "created_utc": 1348684194.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10ho71", "children": [], "author": "gkx", "id": "c6dkduh", "parent_id": "t3_10ho71", "score": 0, "approved_by": null, "upvotes": 1, "body": "I can't answer this necessarily perfectly, but I can try.\n\nIt could be anything &gt;= 1 bit, but there are very few things that are actually held in &lt;8 bits, while there are tons of things that are held in exactly one byte. (when I say things, I mean data structures, obviously)\n\nTechnically, we could also have the addressable memory be multiple bytes, but that would cost more (if we wanted to, hypothetically, fill our entire memory with just ASCII characters) and would be fairly inefficient for what is typically the smallest size of data structure that must be referred to explicitly.\n\nI think a lot of it also has to do with backwards compatibility, which is gigantic in terms of hardware is basically the only reason Intel's conventions are widely accepted. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I can&amp;#39;t answer this necessarily perfectly, but I can try.&lt;/p&gt;\n\n&lt;p&gt;It could be anything &amp;gt;= 1 bit, but there are very few things that are actually held in &amp;lt;8 bits, while there are tons of things that are held in exactly one byte. (when I say things, I mean data structures, obviously)&lt;/p&gt;\n\n&lt;p&gt;Technically, we could also have the addressable memory be multiple bytes, but that would cost more (if we wanted to, hypothetically, fill our entire memory with just ASCII characters) and would be fairly inefficient for what is typically the smallest size of data structure that must be referred to explicitly.&lt;/p&gt;\n\n&lt;p&gt;I think a lot of it also has to do with backwards compatibility, which is gigantic in terms of hardware is basically the only reason Intel&amp;#39;s conventions are widely accepted. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dkduh", "flair_text": null, "created": 1348637842.0, "created_utc": 1348634242.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10ho71", "children": [], "author": "stonegrizzly", "id": "c6dpra0", "parent_id": "t3_10ho71", "score": 0, "approved_by": null, "upvotes": 1, "body": "Historically, a byte just seems to be the standard, though there are some cases of processors with different address resolutions, like the 1963\tGemini Guidance Computer which had a 39 bit word and a 13 bit address resolution or the 1972 Calcomp 900 which had a 9 bit word and address resolution. \n\n[Source](http://en.wikipedia.org/wiki/Word_\\(data_type\\))", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Historically, a byte just seems to be the standard, though there are some cases of processors with different address resolutions, like the 1963 Gemini Guidance Computer which had a 39 bit word and a 13 bit address resolution or the 1972 Calcomp 900 which had a 9 bit word and address resolution. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Word_(data_type)\"&gt;Source&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dpra0", "flair_text": null, "created": 1348676619.0, "created_utc": 1348673019.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10ho71", "children": [], "author": "HELOSMTP", "id": "c6dq8le", "parent_id": "t3_10ho71", "score": 0, "approved_by": null, "upvotes": 1, "body": "It's convenient to use powers of two for everything in a binary computer system. With cache memory and system RAM, the capacity is usually increased by doubling the number of transistors (less so in cache because it is so expensive), in large part because it's easier from the perspective of design, fabrication, and memory access patterns/instructions. \n\nIn early computers, a balance was needed between being able to work with large enough numbers, and limiting complexity. 2^4 - 1 = 15 is not enough for many operations, so 2^8 - 1 = 255 was considered more convenient; note that many systems use a range for integers going from either 0 to 255 or -128 to 127 (the difference of 1 is due to using 2's complement notation instead of a sign bit, so that there isn't both a positive and negative zero).\n\nMemory accesses are often aligned to 8 bit boundaries for similar reasons; multiplexing along 1 bit boundaries gets to be pretty complex and expensive in terms of die area, as does using barrel shifters, so it's convenient to use larger sizes, and obviously 8 bit boundaries would be chosen to correspond to processor register size in an 8-bit comptuer.\n\nedit: I forgot to mention one of the most important reasons for using 2^n -sized units, which is that within e.g. single-cycle arithmetic instructions like shifts *very* little space is available for denoting a bit position, so 2^n -sized units *must* be used so as not to waste instruction space.", "edited": 1348676534.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s convenient to use powers of two for everything in a binary computer system. With cache memory and system RAM, the capacity is usually increased by doubling the number of transistors (less so in cache because it is so expensive), in large part because it&amp;#39;s easier from the perspective of design, fabrication, and memory access patterns/instructions. &lt;/p&gt;\n\n&lt;p&gt;In early computers, a balance was needed between being able to work with large enough numbers, and limiting complexity. 2&lt;sup&gt;4&lt;/sup&gt; - 1 = 15 is not enough for many operations, so 2&lt;sup&gt;8&lt;/sup&gt; - 1 = 255 was considered more convenient; note that many systems use a range for integers going from either 0 to 255 or -128 to 127 (the difference of 1 is due to using 2&amp;#39;s complement notation instead of a sign bit, so that there isn&amp;#39;t both a positive and negative zero).&lt;/p&gt;\n\n&lt;p&gt;Memory accesses are often aligned to 8 bit boundaries for similar reasons; multiplexing along 1 bit boundaries gets to be pretty complex and expensive in terms of die area, as does using barrel shifters, so it&amp;#39;s convenient to use larger sizes, and obviously 8 bit boundaries would be chosen to correspond to processor register size in an 8-bit comptuer.&lt;/p&gt;\n\n&lt;p&gt;edit: I forgot to mention one of the most important reasons for using 2&lt;sup&gt;n&lt;/sup&gt; -sized units, which is that within e.g. single-cycle arithmetic instructions like shifts &lt;em&gt;very&lt;/em&gt; little space is available for denoting a bit position, so 2&lt;sup&gt;n&lt;/sup&gt; -sized units &lt;em&gt;must&lt;/em&gt; be used so as not to waste instruction space.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dq8le", "flair_text": null, "created": 1348678469.0, "created_utc": 1348674869.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10ho71", "children": [], "author": "TomDLux", "id": "c6dsj3s", "parent_id": "t3_10ho71", "score": 0, "approved_by": null, "upvotes": 1, "body": "Whatever size object you fetch with a single address, there will always be some instructions which operate on a sub-component of that object: bit, octal number, hex number, and other instructions that operate on a multiple of objects, such as multiply word times word generating a double word.\n\nWhile different size have been used on various machines, most modern machines inherit from the 8-bit microprocessors of the 70s, which grew from 8 to 16 to 32 to 64 bits. If you are interested in a bit, you can access it as a component of a word or a byte, but you're rarely interested in just one bit ... usually there's a clump of bits in one byte, of which you may one one or several. Similarly, you will want the upper 4 bits or the lower 4 bits of a byte, but not generally something  half-and-half.\n\nComparing the number of operations on sub-components and multiple-components, figure out what fetch size makes for optimum efficiency. You don't want to fetch floating point numbers one bit at a time, but you don't want to spend a fortune one a wide data path if a narrower one is just as effective.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Whatever size object you fetch with a single address, there will always be some instructions which operate on a sub-component of that object: bit, octal number, hex number, and other instructions that operate on a multiple of objects, such as multiply word times word generating a double word.&lt;/p&gt;\n\n&lt;p&gt;While different size have been used on various machines, most modern machines inherit from the 8-bit microprocessors of the 70s, which grew from 8 to 16 to 32 to 64 bits. If you are interested in a bit, you can access it as a component of a word or a byte, but you&amp;#39;re rarely interested in just one bit ... usually there&amp;#39;s a clump of bits in one byte, of which you may one one or several. Similarly, you will want the upper 4 bits or the lower 4 bits of a byte, but not generally something  half-and-half.&lt;/p&gt;\n\n&lt;p&gt;Comparing the number of operations on sub-components and multiple-components, figure out what fetch size makes for optimum efficiency. You don&amp;#39;t want to fetch floating point numbers one bit at a time, but you don&amp;#39;t want to spend a fortune one a wide data path if a narrower one is just as effective.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dsj3s", "flair_text": null, "created": 1348687095.0, "created_utc": 1348683495.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10ho71", "children": [], "author": "syzygote", "id": "c6epbve", "parent_id": "t3_10ho71", "score": 0, "approved_by": null, "upvotes": 1, "body": "And even more fascinating is [Setun](http://en.wikipedia.org/wiki/Setun) a Soviet Trinary system :)  Obviously that didn't go very far.  But man I love little detours down computer history like this thread to see what might have been...", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;And even more fascinating is &lt;a href=\"http://en.wikipedia.org/wiki/Setun\"&gt;Setun&lt;/a&gt; a Soviet Trinary system :)  Obviously that didn&amp;#39;t go very far.  But man I love little detours down computer history like this thread to see what might have been...&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6epbve", "flair_text": null, "created": 1348850619.0, "created_utc": 1348847019.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10ho71", "children": [], "author": "javajunkie314", "id": "c6dlqmh", "parent_id": "t3_10ho71", "score": 0, "approved_by": null, "upvotes": 3, "body": "There's nothing sacred about the number 8 -- bytes have 8 bits because that caught on. But it needn't be. Some older systems used 7-bit bytes. There are several trade-offs when it comes to the size of the smallest addressable unit of memory. One in particular is space vs ease of access.\n\nThere has to be a length for addresses in an architecture. This is often 32 or 64, but it could be any number of bits *L*. Then your architecture could address up to 2\\^L units of memory. So, the larger your unit, the more memory you can allow.\n\nIn contrast, suppose your smallest unit of memory is very large. Now suppose you need to store a relatively small value. For example, suppose your unit is 32 bits, and you need to store an 8-bit value. You could waste the remaining 24 bits, but assembly programmers hate wasting memory. You could instead pack several 8-bit values into the same unit, but then it's up to you the programmer to pack and unpack them. The ease of accessing data has decreased.\n\nIn the end, most architectures wind up sort of doing both. Memory is addressed in 8-bit bytes, but accessed in chunks called *words*, usually 32 or 64 bits long. Accessing a byte in the middle of a word incurs some overhead, but generally programmers want to access whole areas of memory, not individual bytes, so it works out.\n\nI hope this is a helpful answer. I'm not really an assembly programmer, so this might be a simplistic view of assembly languages, but it should be enough.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There&amp;#39;s nothing sacred about the number 8 -- bytes have 8 bits because that caught on. But it needn&amp;#39;t be. Some older systems used 7-bit bytes. There are several trade-offs when it comes to the size of the smallest addressable unit of memory. One in particular is space vs ease of access.&lt;/p&gt;\n\n&lt;p&gt;There has to be a length for addresses in an architecture. This is often 32 or 64, but it could be any number of bits &lt;em&gt;L&lt;/em&gt;. Then your architecture could address up to 2^L units of memory. So, the larger your unit, the more memory you can allow.&lt;/p&gt;\n\n&lt;p&gt;In contrast, suppose your smallest unit of memory is very large. Now suppose you need to store a relatively small value. For example, suppose your unit is 32 bits, and you need to store an 8-bit value. You could waste the remaining 24 bits, but assembly programmers hate wasting memory. You could instead pack several 8-bit values into the same unit, but then it&amp;#39;s up to you the programmer to pack and unpack them. The ease of accessing data has decreased.&lt;/p&gt;\n\n&lt;p&gt;In the end, most architectures wind up sort of doing both. Memory is addressed in 8-bit bytes, but accessed in chunks called &lt;em&gt;words&lt;/em&gt;, usually 32 or 64 bits long. Accessing a byte in the middle of a word incurs some overhead, but generally programmers want to access whole areas of memory, not individual bytes, so it works out.&lt;/p&gt;\n\n&lt;p&gt;I hope this is a helpful answer. I&amp;#39;m not really an assembly programmer, so this might be a simplistic view of assembly languages, but it should be enough.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dlqmh", "flair_text": null, "created": 1348645513.0, "created_utc": 1348641913.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 6, "link_id": "t3_10ho71", "children": [], "author": "[deleted]", "id": "c6dkpdw", "parent_id": "t3_10ho71", "score": 0, "approved_by": null, "upvotes": 2, "body": "[deleted]", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dkpdw", "flair_text": null, "created": 1348639350.0, "created_utc": 1348635750.0, "num_reports": null}], "score": 4, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 21, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/10ho71/why_is_the_smallest_amount_of_addressable_memory/", "has_more_comments": false, "name": "t3_10ho71", "created": 1348635739.0, "url": "http://www.reddit.com/r/compsci/comments/10ho71/why_is_the_smallest_amount_of_addressable_memory/", "author_flair_text": null, "author": "Walleek", "created_utc": 1348632139.0, "link_flair_text": null, "media": null, "num_reports": null}, "389": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 3, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So far I&amp;#39;ve found the wikipedia article (&lt;a href=\"http://en.wikipedia.org/wiki/Ewald_summation#Particle_mesh_Ewald_.28PME.29_method\"&gt;http://en.wikipedia.org/wiki/Ewald_summation#Particle_mesh_Ewald_.28PME.29_method&lt;/a&gt; ) quite useful, but lots of the papers that describe the method are mostly obscured by complicated error bounds and proofs. Does anybody know of a good resource for learning to implement this method?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "So far I've found the wikipedia article (http://en.wikipedia.org/wiki/Ewald_summation#Particle_mesh_Ewald_.28PME.29_method ) quite useful, but lots of the papers that describe the method are mostly obscured by complicated error bounds and proofs. Does anybody know of a good resource for learning to implement this method?", "saved": false, "id": "10hwl9", "clicked": false, "title": "Looking for a simple explanation of the Particle mesh ewald method.", "num_comments": 0, "comments": [], "score": 2, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 5, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/10hwl9/looking_for_a_simple_explanation_of_the_particle/", "has_more_comments": false, "name": "t3_10hwl9", "created": 1348648050.0, "url": "http://www.reddit.com/r/compsci/comments/10hwl9/looking_for_a_simple_explanation_of_the_particle/", "author_flair_text": null, "author": "cyberdash", "created_utc": 1348644450.0, "link_flair_text": null, "media": null, "num_reports": null}, "390": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 7, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m doing a project for my university and i&amp;#39;d like to hear if you have some inputs how to achieve the goal.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Input&lt;/strong&gt;: a numerical function written in c (with some limitations), like an operation on a vector, a filter on an image or similar&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;: modified input function (several versions, different transformation should be possible)&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;What it should do to the function&lt;/strong&gt; (an example, stride transformation):\nThe function looks like f(const int* input, int* output, int size), i don&amp;#39;t know what&amp;#39;s inside (Assumptions: no function calls, no aliasing and some more). It computes something on the input and stores it to the output.&lt;/p&gt;\n\n&lt;p&gt;Now someone wants to use this function on a column of a matrix instead a row (vector). One solution is to transpose the column first, apply the function and transform it back but this includes that the data goes through the memory system 3 times instead of once.&lt;/p&gt;\n\n&lt;p&gt;My tool should now analyse the function code and modify it. Specifically, add a new parameter &lt;em&gt;int stride&lt;/em&gt; and modify the source that it doesnt access the vector one element by one, it should access it &lt;em&gt;stride&lt;/em&gt; by &lt;em&gt;stride&lt;/em&gt; (jump always &lt;em&gt;stride&lt;/em&gt; elements). As a result, the data goes only once through the memory system.&lt;/p&gt;\n\n&lt;p&gt;That is just one transformation, there are others like pre-scale the data, post-scale (scale it before it stores it in the output) and operate only on a part of an image (don&amp;#39;t copy the sub-image to a new memory part, the function should take some new parameters so it knows how much to jump for the next line). There are possible more transformations.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve searched for papers if someone did something similar, but most is merging different loops into one (also reducing the amount of data going through memory). &lt;/p&gt;\n\n&lt;p&gt;So far i just have the c parser reader (creating an ast), a dependency graph which local variables depend on which parameters (like int *row = input+i * width, row depends on the input vector) and an analysis which of the parameters of the function are only read or written in the function (to determine input and output).&lt;/p&gt;\n\n&lt;p&gt;Do you have any idea how this could be solved? I don&amp;#39;t need a solution, i need hints/input what to try and maybe some topics to read. I have 6 month for this project, plenty of time to create some fancy analyses.&lt;/p&gt;\n\n&lt;p&gt;Thanks for your input&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm doing a project for my university and i'd like to hear if you have some inputs how to achieve the goal.\n\n**Input**: a numerical function written in c (with some limitations), like an operation on a vector, a filter on an image or similar\n\n**Output**: modified input function (several versions, different transformation should be possible)\n\n**What it should do to the function** (an example, stride transformation):\nThe function looks like f(const int* input, int* output, int size), i don't know what's inside (Assumptions: no function calls, no aliasing and some more). It computes something on the input and stores it to the output.\n\nNow someone wants to use this function on a column of a matrix instead a row (vector). One solution is to transpose the column first, apply the function and transform it back but this includes that the data goes through the memory system 3 times instead of once.\n\nMy tool should now analyse the function code and modify it. Specifically, add a new parameter *int stride* and modify the source that it doesnt access the vector one element by one, it should access it *stride* by *stride* (jump always *stride* elements). As a result, the data goes only once through the memory system.\n\nThat is just one transformation, there are others like pre-scale the data, post-scale (scale it before it stores it in the output) and operate only on a part of an image (don't copy the sub-image to a new memory part, the function should take some new parameters so it knows how much to jump for the next line). There are possible more transformations.\n\nI've searched for papers if someone did something similar, but most is merging different loops into one (also reducing the amount of data going through memory). \n\nSo far i just have the c parser reader (creating an ast), a dependency graph which local variables depend on which parameters (like int *row = input+i * width, row depends on the input vector) and an analysis which of the parameters of the function are only read or written in the function (to determine input and output).\n\nDo you have any idea how this could be solved? I don't need a solution, i need hints/input what to try and maybe some topics to read. I have 6 month for this project, plenty of time to create some fancy analyses.\n\nThanks for your input\n", "saved": false, "id": "10hzfj", "clicked": false, "title": "Need your input: automatic refactoring of numerical functions for locality ", "num_comments": 4, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10hzfj", "children": [], "author": "hvidgaard", "id": "c6dngp2", "parent_id": "t3_10hzfj", "score": 0, "approved_by": null, "upvotes": 1, "body": "First of all, I would probably normalize and desugar (things like converting for-loops to while-loops) and minimize (requiring some pretty hardcore analysis). Perhaps you can use an open source compiler stack for parsing and transformation, like LLVM or GCC.\n\nAs for the actual analysis and modification, I believe we're in an area here, where you cannot make any general solution, but I assume that is okay, since you only mention one specific example.\n\nYou have to come up with a way to identify exactly where it does the pointer arithmetic on int* input, and replace the it with the equivalent multiplied with stride. Once that is working, the rest should be straight forward.\n\nThat said, be careful if the code is required to be high performance. It might negatively impacting performance with such spaced out memory access patterns. Don't forget to benchmark it against a transposed version of the code, which is much simpler.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;First of all, I would probably normalize and desugar (things like converting for-loops to while-loops) and minimize (requiring some pretty hardcore analysis). Perhaps you can use an open source compiler stack for parsing and transformation, like LLVM or GCC.&lt;/p&gt;\n\n&lt;p&gt;As for the actual analysis and modification, I believe we&amp;#39;re in an area here, where you cannot make any general solution, but I assume that is okay, since you only mention one specific example.&lt;/p&gt;\n\n&lt;p&gt;You have to come up with a way to identify exactly where it does the pointer arithmetic on int* input, and replace the it with the equivalent multiplied with stride. Once that is working, the rest should be straight forward.&lt;/p&gt;\n\n&lt;p&gt;That said, be careful if the code is required to be high performance. It might negatively impacting performance with such spaced out memory access patterns. Don&amp;#39;t forget to benchmark it against a transposed version of the code, which is much simpler.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dngp2", "flair_text": null, "created": 1348664071.0, "created_utc": 1348660471.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10hzfj", "children": [], "author": "njw45", "id": "c6dul6u", "parent_id": "t3_10hzfj", "score": 0, "approved_by": null, "upvotes": 1, "body": "Rearranging floating point operations to reduce arithmetic errors is not trivial but useful [e.g. this](http://en.wikipedia.org/wiki/Floating_point#Accuracy_problems) - you should be able to find should relevant papers...", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rearranging floating point operations to reduce arithmetic errors is not trivial but useful &lt;a href=\"http://en.wikipedia.org/wiki/Floating_point#Accuracy_problems\"&gt;e.g. this&lt;/a&gt; - you should be able to find should relevant papers...&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dul6u", "flair_text": null, "created": 1348694366.0, "created_utc": 1348690766.0, "num_reports": null}], "score": 1, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 8, "hidden": false, "thumbnail": "", "edited": 1348658444.0, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/10hzfj/need_your_input_automatic_refactoring_of/", "has_more_comments": false, "name": "t3_10hzfj", "created": 1348654958.0, "url": "http://www.reddit.com/r/compsci/comments/10hzfj/need_your_input_automatic_refactoring_of/", "author_flair_text": null, "author": "rayo2nd", "created_utc": 1348651358.0, "link_flair_text": null, "media": null, "num_reports": null}, "391": {"domain": "reddit.com", "link_flair_class": null, "banned_by": null, "downvotes": 3, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10gkgl", "clicked": false, "title": "Can someone familiar with Hidden Markov Models answer a question about one of the Baum-Welch equations? [x-post]", "num_comments": 0, "comments": [], "score": 2, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 5, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10gkgl/can_someone_familiar_with_hidden_markov_models/", "has_more_comments": false, "name": "t3_10gkgl", "created": 1348598226.0, "url": "http://www.reddit.com/r/statistics/comments/10fqhc/can_someone_familiar_with_hidden_markov_models/", "author_flair_text": null, "author": "roger_", "created_utc": 1348594626.0, "link_flair_text": null, "media": null, "num_reports": null}, "392": {"domain": "charlesmunger.github.com", "link_flair_class": null, "banned_by": null, "downvotes": 12, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10fbnm", "clicked": false, "title": "Working on an interesting graph algorithm? Try out my Pregel clone and run it in the cloud with no fuss!", "num_comments": 21, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_10fbnm", "children": [], "author": "CaptainCorey", "id": "c6d0dm7", "parent_id": "t3_10fbnm", "score": 0, "approved_by": null, "upvotes": 7, "body": "Hey, this is really cool. Thanks for sharing! Did you do this for school for just for fun? I'm going to continue checking this out and maybe I could lend a hand here and there. I'm really looking to get involved with open sourced development.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hey, this is really cool. Thanks for sharing! Did you do this for school for just for fun? I&amp;#39;m going to continue checking this out and maybe I could lend a hand here and there. I&amp;#39;m really looking to get involved with open sourced development.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6d0dm7", "flair_text": null, "created": 1348545935.0, "created_utc": 1348542335.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10fbnm", "children": [], "author": "zirtik", "id": "c6d3a58", "parent_id": "t3_10fbnm", "score": 0, "approved_by": null, "upvotes": 2, "body": "This looks neat, I'll try it. I'm building a graph library on top of Hadoop (MapReduce) to do some interesting stuff like large scale distance estimation, computing graph centrality and graph clustering. My framework runs on MapReduce, but the algorithms I develop can easily be ported to work with a Pregel clone.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This looks neat, I&amp;#39;ll try it. I&amp;#39;m building a graph library on top of Hadoop (MapReduce) to do some interesting stuff like large scale distance estimation, computing graph centrality and graph clustering. My framework runs on MapReduce, but the algorithms I develop can easily be ported to work with a Pregel clone.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6d3a58", "flair_text": null, "created": 1348558181.0, "created_utc": 1348554581.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10fbnm", "children": [], "author": "inspired2apathy", "id": "c6d6eom", "parent_id": "t3_10fbnm", "score": 0, "approved_by": null, "upvotes": 2, "body": "How would your pregel clone compare with Apache Giraph?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;How would your pregel clone compare with Apache Giraph?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6d6eom", "flair_text": null, "created": 1348584849.0, "created_utc": 1348581249.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 14, "link_id": "t3_10fbnm", "children": [], "author": "svsvsvs", "id": "c6d0vrz", "parent_id": "t3_10fbnm", "score": 0, "approved_by": null, "upvotes": 10, "body": "No one wants to read an API.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No one wants to read an API.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6d0vrz", "flair_text": null, "created": 1348547783.0, "created_utc": 1348544183.0, "num_reports": null}], "score": 27, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 39, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10fbnm/working_on_an_interesting_graph_algorithm_try_out/", "has_more_comments": false, "name": "t3_10fbnm", "created": 1348540162.0, "url": "http://charlesmunger.github.com/jpregel-aws/", "author_flair_text": null, "author": "whosyerparrot", "created_utc": 1348536562.0, "link_flair_text": null, "media": null, "num_reports": null}, "393": {"domain": "ursuletz.com", "link_flair_class": null, "banned_by": null, "downvotes": 11, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10dw5u", "clicked": false, "title": "[PDF] Automatically Finding Patches Using Genetic Programming", "num_comments": 13, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10dw5u", "children": [], "author": "MPIS", "id": "c6cr27q", "parent_id": "t3_10dw5u", "score": 0, "approved_by": null, "upvotes": 3, "body": "Hold on, shouldn't the concentration be on GP to simplify [wffs](http://en.wikipedia.org/wiki/Well-formed_formula) over the problem space (possibly [TPS](http://en.wikipedia.org/wiki/Automated_theorem_proving))? Identifying, resolving, and optimizing *processes* should be paramount, not trial/error on Pre/Post conditions and mutated code. Did I miss something?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hold on, shouldn&amp;#39;t the concentration be on GP to simplify &lt;a href=\"http://en.wikipedia.org/wiki/Well-formed_formula\"&gt;wffs&lt;/a&gt; over the problem space (possibly &lt;a href=\"http://en.wikipedia.org/wiki/Automated_theorem_proving\"&gt;TPS&lt;/a&gt;)? Identifying, resolving, and optimizing &lt;em&gt;processes&lt;/em&gt; should be paramount, not trial/error on Pre/Post conditions and mutated code. Did I miss something?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cr27q", "flair_text": null, "created": 1348511131.0, "created_utc": 1348507531.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10dw5u", "children": [], "author": "mcandre", "id": "c6ctbgu", "parent_id": "t3_10dw5u", "score": 0, "approved_by": null, "upvotes": 2, "body": "Ah, arms races. A few years ago, hackers discovered a way to automatically generate exploits based on revision changes in open source projects.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ah, arms races. A few years ago, hackers discovered a way to automatically generate exploits based on revision changes in open source projects.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ctbgu", "flair_text": null, "created": 1348519403.0, "created_utc": 1348515803.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10dw5u", "children": [], "author": "DoorsofPerceptron", "id": "c6hl7kf", "parent_id": "t3_10dw5u", "score": 0, "approved_by": null, "upvotes": 1, "body": "Oh good. A formal way to develop code where you don't know what it's doing but it passes all the test cases.\n\nWhat could be better?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Oh good. A formal way to develop code where you don&amp;#39;t know what it&amp;#39;s doing but it passes all the test cases.&lt;/p&gt;\n\n&lt;p&gt;What could be better?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6hl7kf", "flair_text": null, "created": 1349373090.0, "created_utc": 1349369490.0, "num_reports": null}], "score": 35, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 46, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10dw5u/pdf_automatically_finding_patches_using_genetic/", "has_more_comments": false, "name": "t3_10dw5u", "created": 1348482955.0, "url": "http://www.ursuletz.com/~weimer/p/weimer-icse2009-genprog.pdf", "author_flair_text": null, "author": "JAPH", "created_utc": 1348479355.0, "link_flair_text": null, "media": null, "num_reports": null}, "394": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 34, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, looking for some women in CS and related fields blogs. I like to read about other women in school or in the workplace because it makes me feel like I am not alone.  If anyone knows any good or hell, even any terrible ones, I would appreciate it.&lt;/p&gt;\n\n&lt;p&gt;Thank you&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi, looking for some women in CS and related fields blogs. I like to read about other women in school or in the workplace because it makes me feel like I am not alone.  If anyone knows any good or hell, even any terrible ones, I would appreciate it.\n\n\nThank you", "saved": false, "id": "10cm5e", "clicked": false, "title": "Women Bloggers", "num_comments": 62, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10cm5e", "children": [], "author": "oneferna", "id": "c6ccvc2", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 18, "body": "Any topics in particular? Operating systems? Programming? Cryptography? Sysadmins? Research? Also, you're not alone :) ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Any topics in particular? Operating systems? Programming? Cryptography? Sysadmins? Research? Also, you&amp;#39;re not alone :) &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ccvc2", "flair_text": null, "created": 1348436245.0, "created_utc": 1348432645.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10cm5e", "children": [], "author": "igottadomath", "id": "c6cedhk", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 8, "body": "You are not alone! I am a woman in CS too. If you are still in school there are probably some clubs for women in computer science. I know at my university there is, and there's one for women in science too! ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You are not alone! I am a woman in CS too. If you are still in school there are probably some clubs for women in computer science. I know at my university there is, and there&amp;#39;s one for women in science too! &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cedhk", "flair_text": null, "created": 1348442192.0, "created_utc": 1348438592.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10cm5e", "children": [], "author": "Svanhildur", "id": "c6cf0s8", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 12, "body": "As the only girl in a CS class of 100 guys , I salute you. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As the only girl in a CS class of 100 guys , I salute you. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cf0s8", "flair_text": null, "created": 1348444705.0, "created_utc": 1348441105.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10cm5e", "children": [], "author": "mhink", "id": "c6cdhsf", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 7, "body": "The head of my CS department was the organizer of Women in Engineering at my school. I'll shoot her an email and see if she knows of anything.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The head of my CS department was the organizer of Women in Engineering at my school. I&amp;#39;ll shoot her an email and see if she knows of anything.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cdhsf", "flair_text": null, "created": 1348438711.0, "created_utc": 1348435111.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10cm5e", "children": [], "author": "BrainInAJar", "id": "c6cdpmb", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 5, "body": "not a blog, but they have a blog. [Anita Borg Institute](http://anitaborg.org)\n\nAlso sounds like you might want to convince your boss to send you to the [Grace Hopper Convention](http://gracehopper.org/2012/)\n\nSun was really good to women. [Val](http://bubbva.blogspot.ca), [Liane](https://twitter.com/lpraza), [Deirdre](http://www.beginningwithi.com/comments/) from the Solaris group alone. 10gen ( the mongodb company ) is similarly gung-ho about women in technology.", "edited": 1348436245.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;not a blog, but they have a blog. &lt;a href=\"http://anitaborg.org\"&gt;Anita Borg Institute&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Also sounds like you might want to convince your boss to send you to the &lt;a href=\"http://gracehopper.org/2012/\"&gt;Grace Hopper Convention&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Sun was really good to women. &lt;a href=\"http://bubbva.blogspot.ca\"&gt;Val&lt;/a&gt;, &lt;a href=\"https://twitter.com/lpraza\"&gt;Liane&lt;/a&gt;, &lt;a href=\"http://www.beginningwithi.com/comments/\"&gt;Deirdre&lt;/a&gt; from the Solaris group alone. 10gen ( the mongodb company ) is similarly gung-ho about women in technology.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cdpmb", "flair_text": null, "created": 1348439568.0, "created_utc": 1348435968.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10cm5e", "children": [], "author": "terremoto", "id": "c6cdri2", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 4, "body": "[Unicode Girl](http://www.unicodegirl.com/)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.unicodegirl.com/\"&gt;Unicode Girl&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cdri2", "flair_text": null, "created": 1348439783.0, "created_utc": 1348436183.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10cm5e", "children": [], "author": "crombrodin", "id": "c6cb897", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 8, "body": "You should consider digging around http://acmw-usu.org/ and seeing if there are people there you can contact or find links to!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You should consider digging around &lt;a href=\"http://acmw-usu.org/\"&gt;http://acmw-usu.org/&lt;/a&gt; and seeing if there are people there you can contact or find links to!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cb897", "flair_text": null, "created": 1348429743.0, "created_utc": 1348426143.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10cm5e", "children": [], "author": "medras", "id": "c6cenfk", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 3, "body": "Not exactly a blog, but I just found this today: https://piazza.com/witson\n\nNot sure if you're a student or in the profession, but either way you should be able to join the board... whenever they start.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not exactly a blog, but I just found this today: &lt;a href=\"https://piazza.com/witson\"&gt;https://piazza.com/witson&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Not sure if you&amp;#39;re a student or in the profession, but either way you should be able to join the board... whenever they start.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cenfk", "flair_text": null, "created": 1348443259.0, "created_utc": 1348439659.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10cm5e", "children": [], "author": "Stoli", "id": "c6cgb66", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 3, "body": "Hi! Fellow female aspiring to be a computer scientist here. The dean of my university forwarded [this](https://piazza.com/witson) to me as a resource when I asked about mentors or otherwise.\nHope it helps!\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hi! Fellow female aspiring to be a computer scientist here. The dean of my university forwarded &lt;a href=\"https://piazza.com/witson\"&gt;this&lt;/a&gt; to me as a resource when I asked about mentors or otherwise.\nHope it helps!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cgb66", "flair_text": null, "created": 1348449953.0, "created_utc": 1348446353.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10cm5e", "children": [], "author": "seabre", "id": "c6ch6z4", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 4, "body": "[Hilary Mason](http://www.hilarymason.com/) of bit.ly. Her twitter, too.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.hilarymason.com/\"&gt;Hilary Mason&lt;/a&gt; of bit.ly. Her twitter, too.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ch6z4", "flair_text": null, "created": 1348453362.0, "created_utc": 1348449762.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10cm5e", "children": [], "author": "Moosader", "id": "c6ch8cu", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 3, "body": "I have a [Tumblr](http://moosader.tumblr.com/), which is mainly about game-related programming.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I have a &lt;a href=\"http://moosader.tumblr.com/\"&gt;Tumblr&lt;/a&gt;, which is mainly about game-related programming.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ch8cu", "flair_text": null, "created": 1348453514.0, "created_utc": 1348449914.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10cm5e", "children": [], "author": "stdlib", "id": "c6cio44", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 5, "body": "You can probably find some useful stuff here; U of T has a whole page dedicated to women in CS.\n\nhttp://web.cs.toronto.edu/people/dcswomen.htm", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can probably find some useful stuff here; U of T has a whole page dedicated to women in CS.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://web.cs.toronto.edu/people/dcswomen.htm\"&gt;http://web.cs.toronto.edu/people/dcswomen.htm&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cio44", "flair_text": null, "created": 1348459057.0, "created_utc": 1348455457.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10cm5e", "children": [], "author": "dcousineau", "id": "c6cl1ym", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 4, "body": "So, as a caveat the following are not \"CS\" blogs however they are women in the software development field (for the pedantic: yes, I understand the two technically tangental). And I list them because I know (most) of them personally:\n\n[Alison \"Snipe\" Gianotto](http://www.snipe.net/) programmer, security, etc\n\n[Elizabeth Smith](http://elizabethmariesmith.com/) core PHP dev, blogs *very* infrequently\n\n[Lorna Jane](http://www.lornajane.net/blog) programmer and cofounder of PHPWomen\n\n[Anna Filina](http://annafilina.com/blog/) entrepreneur, conference organizer, Canadian\n\n[Ligaya Isler-Turmelle](http://www.khankennels.com/blog/) mysql dba expert and speaker\n\n[Elizabeth Naramore](http://naramore.net/blog/), not so much a programmer but a developer evangelist who was formerly a programmer\n\nYou'll notice the above are all in the PHP community, the big thing is the women's organization PHPWomen has been around in our community for a very long time, relatively speaking, and is a great source of information and inspiration involving women in at least the software development field.\n\n[PHPWomen](http://www.phpwomen.org/), in particular a post on a recent podcast on the topic of [Sexism in Tech](http://www.phpwomen.org/wordpress/2012/03/28/voices-of-the-elephpant-sexism-in-tech)\n\n\n**Again, these aren't directly related to academic issues** however they're good resources for looking at women in tech beyond the institution and in the \"real world\" of software development.\n\nI'm not personally familiar with the programs but I know that the Python community has a fairly robust women's group? You'd have to do your own googling for it :)\n\nAlso, I wouldn't hesitate contacting any of them, usually a ping on twitter or a post in the PHPWomen IRC channel or forum will catch their eyes, they're all very approachable, in particular Lorna and Elizabeths Smith and Naramore (Snipe and Anna are too but harder to reach :P).", "edited": 1348466562.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;So, as a caveat the following are not &amp;quot;CS&amp;quot; blogs however they are women in the software development field (for the pedantic: yes, I understand the two technically tangental). And I list them because I know (most) of them personally:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.snipe.net/\"&gt;Alison &amp;quot;Snipe&amp;quot; Gianotto&lt;/a&gt; programmer, security, etc&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://elizabethmariesmith.com/\"&gt;Elizabeth Smith&lt;/a&gt; core PHP dev, blogs &lt;em&gt;very&lt;/em&gt; infrequently&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.lornajane.net/blog\"&gt;Lorna Jane&lt;/a&gt; programmer and cofounder of PHPWomen&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://annafilina.com/blog/\"&gt;Anna Filina&lt;/a&gt; entrepreneur, conference organizer, Canadian&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.khankennels.com/blog/\"&gt;Ligaya Isler-Turmelle&lt;/a&gt; mysql dba expert and speaker&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://naramore.net/blog/\"&gt;Elizabeth Naramore&lt;/a&gt;, not so much a programmer but a developer evangelist who was formerly a programmer&lt;/p&gt;\n\n&lt;p&gt;You&amp;#39;ll notice the above are all in the PHP community, the big thing is the women&amp;#39;s organization PHPWomen has been around in our community for a very long time, relatively speaking, and is a great source of information and inspiration involving women in at least the software development field.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.phpwomen.org/\"&gt;PHPWomen&lt;/a&gt;, in particular a post on a recent podcast on the topic of &lt;a href=\"http://www.phpwomen.org/wordpress/2012/03/28/voices-of-the-elephpant-sexism-in-tech\"&gt;Sexism in Tech&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Again, these aren&amp;#39;t directly related to academic issues&lt;/strong&gt; however they&amp;#39;re good resources for looking at women in tech beyond the institution and in the &amp;quot;real world&amp;quot; of software development.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m not personally familiar with the programs but I know that the Python community has a fairly robust women&amp;#39;s group? You&amp;#39;d have to do your own googling for it :)&lt;/p&gt;\n\n&lt;p&gt;Also, I wouldn&amp;#39;t hesitate contacting any of them, usually a ping on twitter or a post in the PHPWomen IRC channel or forum will catch their eyes, they&amp;#39;re all very approachable, in particular Lorna and Elizabeths Smith and Naramore (Snipe and Anna are too but harder to reach :P).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cl1ym", "flair_text": null, "created": 1348469933.0, "created_utc": 1348466333.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10cm5e", "children": [], "author": "fuzzynyanko", "id": "c6ce5n0", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 2, "body": "There's definitely women out there programming, but they are not nearly as many in numbers as men. I'm just throwing this out, but the ration seems 1 in 15 through 1 in 20. There one woman that works for Google's Android project that's very prominent\n\nHowever, the women programmers I do know usually are talented compared to the average.\n\nAlso, don't be surprised if not many women developers blog. It's not because they are women, but because they are geeks, and geeks don't like social media. \n\nEdit: [found the Google one](http://android-developers.blogspot.com/2011/02/android-30-fragments-api.html). Also, there's [Corrine Yu](http://www.youtube.com/watch?v=lRVlxT8LRfE), absolutely nerdily brilliant", "edited": 1348438329.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There&amp;#39;s definitely women out there programming, but they are not nearly as many in numbers as men. I&amp;#39;m just throwing this out, but the ration seems 1 in 15 through 1 in 20. There one woman that works for Google&amp;#39;s Android project that&amp;#39;s very prominent&lt;/p&gt;\n\n&lt;p&gt;However, the women programmers I do know usually are talented compared to the average.&lt;/p&gt;\n\n&lt;p&gt;Also, don&amp;#39;t be surprised if not many women developers blog. It&amp;#39;s not because they are women, but because they are geeks, and geeks don&amp;#39;t like social media. &lt;/p&gt;\n\n&lt;p&gt;Edit: &lt;a href=\"http://android-developers.blogspot.com/2011/02/android-30-fragments-api.html\"&gt;found the Google one&lt;/a&gt;. Also, there&amp;#39;s &lt;a href=\"http://www.youtube.com/watch?v=lRVlxT8LRfE\"&gt;Corrine Yu&lt;/a&gt;, absolutely nerdily brilliant&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ce5n0", "flair_text": null, "created": 1348441335.0, "created_utc": 1348437735.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10cm5e", "children": [], "author": "evmar", "id": "c6cea01", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 2, "body": "http://en.wikipedia.org/wiki/Valerie_Aurora mostly talks about culture issues these days but still is an inspiring person.  Her blog is here: http://blog.valerieaurora.org/", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Valerie_Aurora\"&gt;http://en.wikipedia.org/wiki/Valerie_Aurora&lt;/a&gt; mostly talks about culture issues these days but still is an inspiring person.  Her blog is here: &lt;a href=\"http://blog.valerieaurora.org/\"&gt;http://blog.valerieaurora.org/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cea01", "flair_text": null, "created": 1348441814.0, "created_utc": 1348438214.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10cm5e", "children": [], "author": "sun-and-stars", "id": "c6ceg78", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 3, "body": "Here are a couple that I occasionally check up on that you might like: [Gail](http://compscigail.blogspot.com/) and [Cate](http://www.catehuston.com/blog/).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here are a couple that I occasionally check up on that you might like: &lt;a href=\"http://compscigail.blogspot.com/\"&gt;Gail&lt;/a&gt; and &lt;a href=\"http://www.catehuston.com/blog/\"&gt;Cate&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ceg78", "flair_text": null, "created": 1348442486.0, "created_utc": 1348438886.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10cm5e", "children": [], "author": "iamanonion", "id": "c6cgc32", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 2, "body": "not a blog but possibly of interest \nhttp://wimlworkshop.org/", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;not a blog but possibly of interest \n&lt;a href=\"http://wimlworkshop.org/\"&gt;http://wimlworkshop.org/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cgc32", "flair_text": null, "created": 1348450052.0, "created_utc": 1348446452.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10cm5e", "children": [], "author": "Lintheru", "id": "c6cgisd", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 2, "body": "\"This is what a computer scientist looks like\": http://acdalal.wordpress.com/\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&amp;quot;This is what a computer scientist looks like&amp;quot;: &lt;a href=\"http://acdalal.wordpress.com/\"&gt;http://acdalal.wordpress.com/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cgisd", "flair_text": null, "created": 1348450780.0, "created_utc": 1348447180.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10cm5e", "children": [], "author": "quest88", "id": "c6cin5c", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 2, "body": "http://www.hilarymason.com/ is into machine learning if that's your thing.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.hilarymason.com/\"&gt;http://www.hilarymason.com/&lt;/a&gt; is into machine learning if that&amp;#39;s your thing.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cin5c", "flair_text": null, "created": 1348458953.0, "created_utc": 1348455353.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10cm5e", "children": [], "author": "flekkzo", "id": "c6cioi5", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 2, "body": "http://abad1dea.tumblr.com/\n\nFemale. Computer security and all sorts of stuff. Enjoy:)\n\n(Not me btw)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://abad1dea.tumblr.com/\"&gt;http://abad1dea.tumblr.com/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Female. Computer security and all sorts of stuff. Enjoy:)&lt;/p&gt;\n\n&lt;p&gt;(Not me btw)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cioi5", "flair_text": null, "created": 1348459101.0, "created_utc": 1348455501.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_10cm5e", "children": [], "author": "BassTooth", "id": "c6cdq38", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 9, "body": "[the first computer programmer was a woman!](http://en.wikipedia.org/wiki/Ada_Lovelace)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Ada_Lovelace\"&gt;the first computer programmer was a woman!&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cdq38", "flair_text": null, "created": 1348439621.0, "created_utc": 1348436021.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10cm5e", "children": [], "author": "kyrga", "id": "c6cgnka", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 5, "body": "I don't have a blog for you, but you're definitely not alone! At my company, about 1/3 of us programmers are female, and we are represented at all levels--from interns to leads. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t have a blog for you, but you&amp;#39;re definitely not alone! At my company, about 1/3 of us programmers are female, and we are represented at all levels--from interns to leads. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cgnka", "flair_text": null, "created": 1348451296.0, "created_utc": 1348447696.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10cm5e", "children": [], "author": "Shadowhawk109", "id": "c6cee6c", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 1, "body": "Check the MSDN blogs, I'm pretty sure some of them are women.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Check the MSDN blogs, I&amp;#39;m pretty sure some of them are women.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cee6c", "flair_text": null, "created": 1348442265.0, "created_utc": 1348438665.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10cm5e", "children": [], "author": "blokhead", "id": "c6cgw5m", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 1, "body": "[Glencora Borradaile](http://blogs.oregonstate.edu/glencora/category/uncategorized/) is involved in Women in Theory and has a blog..", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://blogs.oregonstate.edu/glencora/category/uncategorized/\"&gt;Glencora Borradaile&lt;/a&gt; is involved in Women in Theory and has a blog..&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cgw5m", "flair_text": null, "created": 1348452211.0, "created_utc": 1348448611.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10cm5e", "children": [], "author": "pinano", "id": "c6ch9jr", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 1, "body": "I worked with a developer named [Martha](http://marthakelly.github.com/) at Cheezburger.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I worked with a developer named &lt;a href=\"http://marthakelly.github.com/\"&gt;Martha&lt;/a&gt; at Cheezburger.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ch9jr", "flair_text": null, "created": 1348453645.0, "created_utc": 1348450045.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10cm5e", "children": [], "author": "artoonie", "id": "c6clr4o", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 3, "body": "Here's the blog of a networking Ph.D. student from UC Berkeley: http://lmbgp.tumblr.com/\n\nShe posts about both CS and Feminism.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s the blog of a networking Ph.D. student from UC Berkeley: &lt;a href=\"http://lmbgp.tumblr.com/\"&gt;http://lmbgp.tumblr.com/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;She posts about both CS and Feminism.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6clr4o", "flair_text": null, "created": 1348475111.0, "created_utc": 1348471511.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10cm5e", "children": [], "author": "amysarah", "id": "c6cmu1c", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 2, "body": "I keep meaning to start one.  When (if) I do I'll let you know!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I keep meaning to start one.  When (if) I do I&amp;#39;ll let you know!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cmu1c", "flair_text": null, "created": 1348488821.0, "created_utc": 1348485221.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10cm5e", "children": [], "author": "FST", "id": "c6cp133", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 2, "body": "There's even another Claire with a CS blog.  \n  \n[Claire Mathieu's blog](http://teachingintrotocs.blogspot.com/).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There&amp;#39;s even another Claire with a CS blog.  &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://teachingintrotocs.blogspot.com/\"&gt;Claire Mathieu&amp;#39;s blog&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cp133", "flair_text": null, "created": 1348502889.0, "created_utc": 1348499289.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10cm5e", "children": [], "author": "pspace-complete", "id": "c6cuyut", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 1, "body": "I started [blogging](http://pandnp.wordpress.com/) this summer", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I started &lt;a href=\"http://pandnp.wordpress.com/\"&gt;blogging&lt;/a&gt; this summer&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cuyut", "flair_text": null, "created": 1348525302.0, "created_utc": 1348521702.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10cm5e", "children": [], "author": "Off-By-One", "id": "c6cvdzy", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 2, "body": "Fellow female CS student here. I know the feeling. My university's program has ~300 CS undergrads and of that 15 or so are female.\n\nThanks for starting this thread. I've found some names I hadn't heard of prior. \n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Fellow female CS student here. I know the feeling. My university&amp;#39;s program has ~300 CS undergrads and of that 15 or so are female.&lt;/p&gt;\n\n&lt;p&gt;Thanks for starting this thread. I&amp;#39;ve found some names I hadn&amp;#39;t heard of prior. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cvdzy", "flair_text": null, "created": 1348526878.0, "created_utc": 1348523278.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10cm5e", "children": [], "author": "drudd", "id": "c6cftgk", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 3, "body": "[Female Computer Scientist](http://femalecomputerscientist.blogspot.com/) is good.\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://femalecomputerscientist.blogspot.com/\"&gt;Female Computer Scientist&lt;/a&gt; is good.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cftgk", "flair_text": null, "created": 1348447935.0, "created_utc": 1348444335.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 9, "link_id": "t3_10cm5e", "children": [], "author": "zBard", "id": "c6cll4l", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 6, "body": "&gt; Do not post questions such as \"should I study computer science?\", \"how do I get an internship?\", \"what sort of job can I get after school?\", etc..\n\nEdit : Downvotes huh. Still, for the record, this was a question better suited to askcomputerscience. OP was not looking for blogs of a specific CS parlance, or even good ones. \n", "edited": 1348498055.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Do not post questions such as &amp;quot;should I study computer science?&amp;quot;, &amp;quot;how do I get an internship?&amp;quot;, &amp;quot;what sort of job can I get after school?&amp;quot;, etc..&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Edit : Downvotes huh. Still, for the record, this was a question better suited to askcomputerscience. OP was not looking for blogs of a specific CS parlance, or even good ones. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cll4l", "flair_text": null, "created": 1348473664.0, "created_utc": 1348470064.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 11, "link_id": "t3_10cm5e", "children": [], "author": "alphabetpal", "id": "c6codhc", "parent_id": "t3_10cm5e", "score": 0, "approved_by": null, "upvotes": 5, "body": "Why should it matter that its written by a woman?  Unless you're less interested in the computer science part and more interested in the \"like, oh my gosh, I like, totally can't go to conferences because all these DORKY guys are hitting on me. As if!\" part.  In which case, just read Jezebel.  They go on all the time about how awful it is when ugly men like girls.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Why should it matter that its written by a woman?  Unless you&amp;#39;re less interested in the computer science part and more interested in the &amp;quot;like, oh my gosh, I like, totally can&amp;#39;t go to conferences because all these DORKY guys are hitting on me. As if!&amp;quot; part.  In which case, just read Jezebel.  They go on all the time about how awful it is when ugly men like girls.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6codhc", "flair_text": null, "created": 1348499838.0, "created_utc": 1348496238.0, "num_reports": null}], "score": 86, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 120, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/10cm5e/women_bloggers/", "has_more_comments": false, "name": "t3_10cm5e", "created": 1348427385.0, "url": "http://www.reddit.com/r/compsci/comments/10cm5e/women_bloggers/", "author_flair_text": null, "author": "[deleted]", "created_utc": 1348423785.0, "link_flair_text": null, "media": null, "num_reports": null}, "395": {"domain": "contrib.andrew.cmu.edu", "link_flair_class": null, "banned_by": null, "downvotes": 8, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10cp56", "clicked": false, "title": "Nice resource for learning about Fourier analysis of Boolean functions.", "num_comments": 0, "comments": [], "score": 21, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 29, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10cp56/nice_resource_for_learning_about_fourier_analysis/", "has_more_comments": false, "name": "t3_10cp56", "created": 1348430661.0, "url": "http://www.contrib.andrew.cmu.edu/~ryanod/?p=199", "author_flair_text": null, "author": "qkdhfjdjdhd", "created_utc": 1348427061.0, "link_flair_text": null, "media": null, "num_reports": null}, "396": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 36, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m a collage undergraduate, working as a programmer. At first I find it enjoyable because I need to learn how to program and everything seems cool. Now when I&amp;#39;m doing the n project which is basically a cluster of my old projects I get bored. I&amp;#39;ve to do this work to get money, but I would like something more challenging. I want to go deeper in compsci, but I&amp;#39;ve no idea what computer scientists are doing these days. What are you working on ? How do you get paid? Where do you work? Are you only publishing papers? I would really appreciate if someone introduce me to this field. Thanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm a collage undergraduate, working as a programmer. At first I find it enjoyable because I need to learn how to program and everything seems cool. Now when I'm doing the n project which is basically a cluster of my old projects I get bored. I've to do this work to get money, but I would like something more challenging. I want to go deeper in compsci, but I've no idea what computer scientists are doing these days. What are you working on ? How do you get paid? Where do you work? Are you only publishing papers? I would really appreciate if someone introduce me to this field. Thanks", "saved": false, "id": "10c5la", "clicked": false, "title": "What are computer scientists working on these days?", "num_comments": 49, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 7, "link_id": "t3_10c5la", "children": [], "author": "StealthNerd", "id": "c6c6qjo", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 37, "body": "Computer Scientists end up working everywhere on the spectrum from Academia to Industry on infinitely varied fields. \n\nCheck out the ACM digests for current research news from all over the CS community: http://technews.acm.org/", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Computer Scientists end up working everywhere on the spectrum from Academia to Industry on infinitely varied fields. &lt;/p&gt;\n\n&lt;p&gt;Check out the ACM digests for current research news from all over the CS community: &lt;a href=\"http://technews.acm.org/\"&gt;http://technews.acm.org/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c6qjo", "flair_text": null, "created": 1348403791.0, "created_utc": 1348400191.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10c5la", "children": [], "author": "larsberg", "id": "c6c74kw", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 14, "body": "The best way to find out about research is to get involved in it!\n\nCheck with the faculty at your school, particularly those running larger projects (multiple graduate students) to see if they need any help. You may have to volunteer first, but that usually changes after a quarter to a paid position since the NSF makes lots of money available for hiring undergrads.\n\nIt's hard to generalize on current areas of research because everybody works on different things. But, I can safely say, \"everything.\" There are very few closed problems in CS.\n\nFeel free to ask me more specific questions! I'm a grad student right now, but I typically work with 2-3 undergrads at a time in our group, which works on a high-performance parallel functional compiler.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The best way to find out about research is to get involved in it!&lt;/p&gt;\n\n&lt;p&gt;Check with the faculty at your school, particularly those running larger projects (multiple graduate students) to see if they need any help. You may have to volunteer first, but that usually changes after a quarter to a paid position since the NSF makes lots of money available for hiring undergrads.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s hard to generalize on current areas of research because everybody works on different things. But, I can safely say, &amp;quot;everything.&amp;quot; There are very few closed problems in CS.&lt;/p&gt;\n\n&lt;p&gt;Feel free to ask me more specific questions! I&amp;#39;m a grad student right now, but I typically work with 2-3 undergrads at a time in our group, which works on a high-performance parallel functional compiler.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c74kw", "flair_text": null, "created": 1348408258.0, "created_utc": 1348404658.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10c5la", "children": [], "author": "gasche", "id": "c6cauwf", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 14, "body": "I'm familiar with the field of programming language theory. It's very diverse, with people considering the design of new programming language features, or new techniques to reason about existing programming languages (to find bugs, prove memory safety, prove security properties, improve tooling...). A sub-community in particular is very interested in type systems, which are a style of static analysis that has grown more and more powerful over time, and is also the basis of some \"proof assistants\" (languages to write mathematical proofs instead of computer programs).\n\nSome examples of open questions/problems:\n\n- There are a lot of different approaches to parallelism and concurrency, and we're not sure how to integrate them in programming languages. There is a rough consensus that we're not looking for \"one technique to rule them all\" anymore, but rather how to combine different techniques on different problem domains in a way that doesn't require writing ten different versions of the program.\n\n- The most powerful form of type system we know about are so-called \"dependent types\", where small pieces of programs are executed at type-checking time. They can do really powerful things (prove deep things about programs), but are also very complex (and pose hard constraints on language design). How to design a programming language that support them yet is simple enough to be used by programmers is an open question.\n\n- There is no agreement on what kind of programming language features is necessary to write large modular programs (\"programming in the large\"). Object-oriented techniques, ML module systems, formal concurrent calculi, there are a lot of different approaches, but none is both simple enough and powerful enough to be the clear \"right solution\" (and, as opposed to concurrency approaches, it's not clear that we couldn't find one good approach to fit all modularity needs).\n\n- We are not able to reason very easily on programs with side effects (eg. update of mutable state or communication with concurrent programs). Some of the most successful approaches are based on so-called \"separation logic\" that emphasize that some side-effects can be independent from each other and therefore handled in isolation. While we understand how to go about proving some well-understood programs by hand, or even checking those proofs mechanically, we're not able to integrate them in a system that is simple and convenient enough to be used by interested programmers. If we had this, we could for example reject all program with data races or deadlocks, because we would request that the programmer justifies why those can't happen.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m familiar with the field of programming language theory. It&amp;#39;s very diverse, with people considering the design of new programming language features, or new techniques to reason about existing programming languages (to find bugs, prove memory safety, prove security properties, improve tooling...). A sub-community in particular is very interested in type systems, which are a style of static analysis that has grown more and more powerful over time, and is also the basis of some &amp;quot;proof assistants&amp;quot; (languages to write mathematical proofs instead of computer programs).&lt;/p&gt;\n\n&lt;p&gt;Some examples of open questions/problems:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;There are a lot of different approaches to parallelism and concurrency, and we&amp;#39;re not sure how to integrate them in programming languages. There is a rough consensus that we&amp;#39;re not looking for &amp;quot;one technique to rule them all&amp;quot; anymore, but rather how to combine different techniques on different problem domains in a way that doesn&amp;#39;t require writing ten different versions of the program.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;The most powerful form of type system we know about are so-called &amp;quot;dependent types&amp;quot;, where small pieces of programs are executed at type-checking time. They can do really powerful things (prove deep things about programs), but are also very complex (and pose hard constraints on language design). How to design a programming language that support them yet is simple enough to be used by programmers is an open question.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;There is no agreement on what kind of programming language features is necessary to write large modular programs (&amp;quot;programming in the large&amp;quot;). Object-oriented techniques, ML module systems, formal concurrent calculi, there are a lot of different approaches, but none is both simple enough and powerful enough to be the clear &amp;quot;right solution&amp;quot; (and, as opposed to concurrency approaches, it&amp;#39;s not clear that we couldn&amp;#39;t find one good approach to fit all modularity needs).&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;We are not able to reason very easily on programs with side effects (eg. update of mutable state or communication with concurrent programs). Some of the most successful approaches are based on so-called &amp;quot;separation logic&amp;quot; that emphasize that some side-effects can be independent from each other and therefore handled in isolation. While we understand how to go about proving some well-understood programs by hand, or even checking those proofs mechanically, we&amp;#39;re not able to integrate them in a system that is simple and convenient enough to be used by interested programmers. If we had this, we could for example reject all program with data races or deadlocks, because we would request that the programmer justifies why those can&amp;#39;t happen.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cauwf", "flair_text": null, "created": 1348428212.0, "created_utc": 1348424612.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10c5la", "children": [], "author": "hereticmoox", "id": "c6c7qx5", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 10, "body": "A pretty large field of research is Artificial Intelligence. If you want to know wether or not you like working in AI, you check out [Kaggle](http://kaggle.com) for a more practical approach. As for research, the field is still in its infancy so you won't have any problems finding things to study.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A pretty large field of research is Artificial Intelligence. If you want to know wether or not you like working in AI, you check out &lt;a href=\"http://kaggle.com\"&gt;Kaggle&lt;/a&gt; for a more practical approach. As for research, the field is still in its infancy so you won&amp;#39;t have any problems finding things to study.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c7qx5", "flair_text": null, "created": 1348413140.0, "created_utc": 1348409540.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10c5la", "children": [], "author": "dhotson", "id": "c6c9d6v", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 8, "body": "I'm always impressed with what's new in the field of Computer Graphics: [http://www.youtube.com/watch?v=cKrng7ztpog](http://www.youtube.com/watch?v=cKrng7ztpog)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m always impressed with what&amp;#39;s new in the field of Computer Graphics: &lt;a href=\"http://www.youtube.com/watch?v=cKrng7ztpog\"&gt;http://www.youtube.com/watch?v=cKrng7ztpog&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c9d6v", "flair_text": null, "created": 1348421829.0, "created_utc": 1348418229.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10c5la", "children": [], "author": "schneider707", "id": "c6c85hi", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 5, "body": "I work for the university of arizona as a Research Programmer. We are working on network visualization. [NETVUE project](http://netvue.cs.arizona.edu) We are hoping to get a number of papers out of this.\n\nIf you want to work in academia, you have to really focus on finding professors that are interested in the same thing you are (databases, networking, systems, machine learning, security). I guarantee that they have a desk drawer full of half written papers and ideas. Let them know you are looking to help with research papers and they may give you a job. You definitely don't need to bring ideas to them. They want \"minions\"...trust me lol.\n\nFor more ideas on what the UA does...\n[http://www.cs.arizona.edu/research/featured/](http://www.cs.arizona.edu/research/featured/)\n\nAnother big thing to look at is who your University would subcontract work to. Usually its a local company. Look them up and send them an email. Interns are valuable slave labor to them and they are likely a mid-tier developer house which is an excellent place to be.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I work for the university of arizona as a Research Programmer. We are working on network visualization. &lt;a href=\"http://netvue.cs.arizona.edu\"&gt;NETVUE project&lt;/a&gt; We are hoping to get a number of papers out of this.&lt;/p&gt;\n\n&lt;p&gt;If you want to work in academia, you have to really focus on finding professors that are interested in the same thing you are (databases, networking, systems, machine learning, security). I guarantee that they have a desk drawer full of half written papers and ideas. Let them know you are looking to help with research papers and they may give you a job. You definitely don&amp;#39;t need to bring ideas to them. They want &amp;quot;minions&amp;quot;...trust me lol.&lt;/p&gt;\n\n&lt;p&gt;For more ideas on what the UA does...\n&lt;a href=\"http://www.cs.arizona.edu/research/featured/\"&gt;http://www.cs.arizona.edu/research/featured/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Another big thing to look at is who your University would subcontract work to. Usually its a local company. Look them up and send them an email. Interns are valuable slave labor to them and they are likely a mid-tier developer house which is an excellent place to be.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c85hi", "flair_text": null, "created": 1348415642.0, "created_utc": 1348412042.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10c5la", "children": [], "author": "rosensan", "id": "c6ca322", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 4, "body": "I'm more in computer engineering, but I am doing research.  And basically, as far as I can tell, everything.\n\nIn security and networking there is a lot of interest in the security of mobile devices (some people say too much interest...) and in cellular networking protocols lately.  I know other people are working on improving the performance of cloud data centers in various ways.  \n\nRead professors' web pages.  Read a few of their research papers.  See if anything catches your eye, and go talk to them about it.  Professors love to talk about their research and many will hire undergrads for a summer to help out.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m more in computer engineering, but I am doing research.  And basically, as far as I can tell, everything.&lt;/p&gt;\n\n&lt;p&gt;In security and networking there is a lot of interest in the security of mobile devices (some people say too much interest...) and in cellular networking protocols lately.  I know other people are working on improving the performance of cloud data centers in various ways.  &lt;/p&gt;\n\n&lt;p&gt;Read professors&amp;#39; web pages.  Read a few of their research papers.  See if anything catches your eye, and go talk to them about it.  Professors love to talk about their research and many will hire undergrads for a summer to help out.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ca322", "flair_text": null, "created": 1348424982.0, "created_utc": 1348421382.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10c5la", "children": [], "author": "DrSweetscent", "id": "c6cahkg", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 5, "body": "PhD-student here: I research algorithms, in particular for NP-complete problems---primarily [parameterized algorithms](http://en.wikipedia.org/wiki/Parameterized_complexity) and [kernelization](http://en.wikipedia.org/wiki/Kernelization). Our approach, in short, is \"NP-hardness is not the end\".\n\nOther big theoretical areas are Logic, Automata Theory and Model Checking. In theory alone the field is very diverse, and in practical CS (the engineering-leaning side) even more so.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;PhD-student here: I research algorithms, in particular for NP-complete problems---primarily &lt;a href=\"http://en.wikipedia.org/wiki/Parameterized_complexity\"&gt;parameterized algorithms&lt;/a&gt; and &lt;a href=\"http://en.wikipedia.org/wiki/Kernelization\"&gt;kernelization&lt;/a&gt;. Our approach, in short, is &amp;quot;NP-hardness is not the end&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;Other big theoretical areas are Logic, Automata Theory and Model Checking. In theory alone the field is very diverse, and in practical CS (the engineering-leaning side) even more so.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cahkg", "flair_text": null, "created": 1348426681.0, "created_utc": 1348423081.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10c5la", "children": [], "author": "cruise02", "id": "c6c8l4t", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 4, "body": "There's a Stack Exchange (Q&amp;A site) for theoretical computer scientists and researchers in related fields.  You can look there to see what kinds of things computer scientists are working on.  [Theoretical Computer Science](http://cstheory.stackexchange.com/)\n\nThere's also a site for questions about [Academia](http://academia.stackexchange.com/) in general, where you might find answers to your questions about how academics get paid, publish papers, etc.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There&amp;#39;s a Stack Exchange (Q&amp;amp;A site) for theoretical computer scientists and researchers in related fields.  You can look there to see what kinds of things computer scientists are working on.  &lt;a href=\"http://cstheory.stackexchange.com/\"&gt;Theoretical Computer Science&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s also a site for questions about &lt;a href=\"http://academia.stackexchange.com/\"&gt;Academia&lt;/a&gt; in general, where you might find answers to your questions about how academics get paid, publish papers, etc.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c8l4t", "flair_text": null, "created": 1348418070.0, "created_utc": 1348414470.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10c5la", "children": [], "author": "Oncocerca", "id": "c6cddr0", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 3, "body": "There is going to be a deluge of genomic data. This is increadibly complex and needs people that can use good algorithms that can make sense of the data and present it in a meaningful form to Biologists.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There is going to be a deluge of genomic data. This is increadibly complex and needs people that can use good algorithms that can make sense of the data and present it in a meaningful form to Biologists.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cddr0", "flair_text": null, "created": 1348438261.0, "created_utc": 1348434661.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10c5la", "children": [], "author": "alnkpa", "id": "c6cc6z2", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 3, "body": "So I just started working for a professor, but I can safely say 'only publishing papers' is the wrong approach. It may seem like it's underpaid and there won't be any real fame from it, but there may be other factors:\n\n1. I think that doing research is extremely more fun than writing [overly abstract classes for a decade-old program](http://static.springsource.org/spring/docs/2.5.x/api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html) (please don't hit me), as you will do much more diverse programming (I think).\n2. Coding without a user may seem unappealing but it is actually quite fun, as the only person you code for is yourself. You develop something you consider cool.\n3. I'd like to think that in ten to 15 years some big company comes by, finds that research, sees a market, implements it and has to write my name on their product.\n\nI should add that I'm currently still what you would consider an undergrad and working in the field of human-computer interaction, which is a very hands-on-y field, compared to theoritical computer science and the like.\n\n**tl;dr**: alnkpa rants about how cool and fun researching is.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;So I just started working for a professor, but I can safely say &amp;#39;only publishing papers&amp;#39; is the wrong approach. It may seem like it&amp;#39;s underpaid and there won&amp;#39;t be any real fame from it, but there may be other factors:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;I think that doing research is extremely more fun than writing &lt;a href=\"http://static.springsource.org/spring/docs/2.5.x/api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html\"&gt;overly abstract classes for a decade-old program&lt;/a&gt; (please don&amp;#39;t hit me), as you will do much more diverse programming (I think).&lt;/li&gt;\n&lt;li&gt;Coding without a user may seem unappealing but it is actually quite fun, as the only person you code for is yourself. You develop something you consider cool.&lt;/li&gt;\n&lt;li&gt;I&amp;#39;d like to think that in ten to 15 years some big company comes by, finds that research, sees a market, implements it and has to write my name on their product.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;I should add that I&amp;#39;m currently still what you would consider an undergrad and working in the field of human-computer interaction, which is a very hands-on-y field, compared to theoritical computer science and the like.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;tl;dr&lt;/strong&gt;: alnkpa rants about how cool and fun researching is.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cc6z2", "flair_text": null, "created": 1348433623.0, "created_utc": 1348430023.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10c5la", "children": [], "author": "finprogger", "id": "c6c86sq", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 1, "body": "You could also get a more challenging programming job, like getting into Google/Amazon/etc. where you maybe more likely to hit real algorithmic problems and not just plumbing.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You could also get a more challenging programming job, like getting into Google/Amazon/etc. where you maybe more likely to hit real algorithmic problems and not just plumbing.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c86sq", "flair_text": null, "created": 1348415853.0, "created_utc": 1348412253.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10c5la", "children": [], "author": "theniatethesky", "id": "c6c9oby", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 1, "body": "I'm an undergraduate music performance major/computer science minor getting into research with my adviser. She works with a program called Tots on Bots, which takes kids with motor disabilities and puts them on robots designed to help them learn motor skills. Starting research with her next semester, and I'm so excited.\n\nI think it's cool how this project combines physical therapy and computer science. Another one of our professors is working on basically a local version of Pandora, which is another cool combination of computer science and an outside field (music).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m an undergraduate music performance major/computer science minor getting into research with my adviser. She works with a program called Tots on Bots, which takes kids with motor disabilities and puts them on robots designed to help them learn motor skills. Starting research with her next semester, and I&amp;#39;m so excited.&lt;/p&gt;\n\n&lt;p&gt;I think it&amp;#39;s cool how this project combines physical therapy and computer science. Another one of our professors is working on basically a local version of Pandora, which is another cool combination of computer science and an outside field (music).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c9oby", "flair_text": null, "created": 1348423189.0, "created_utc": 1348419589.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10c5la", "children": [], "author": "danogburn", "id": "c6cw1rn", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 1, "body": "yet another dod project ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;yet another dod project &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cw1rn", "flair_text": null, "created": 1348529455.0, "created_utc": 1348525855.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10c5la", "children": [], "author": "carlc75", "id": "c6cwn5u", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 1, "body": "I'm a 3rd yeard PhD in the ubiquitous computing (ubicomp) field. I essentially spend my time in MATLAB working with sensor data and creating statistical models for predicting heating trends. I'm from the UK working at Lancaster and get a stipend from the EPSRC. I've been publishing papers since my undergraduate degree and have worked on broadcast algorithms in mobile adhoc networks, sensor network localisation, and my thesis is on home heating models and control.\n\nOnly proper programming I get to do is in my own time these days.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m a 3rd yeard PhD in the ubiquitous computing (ubicomp) field. I essentially spend my time in MATLAB working with sensor data and creating statistical models for predicting heating trends. I&amp;#39;m from the UK working at Lancaster and get a stipend from the EPSRC. I&amp;#39;ve been publishing papers since my undergraduate degree and have worked on broadcast algorithms in mobile adhoc networks, sensor network localisation, and my thesis is on home heating models and control.&lt;/p&gt;\n\n&lt;p&gt;Only proper programming I get to do is in my own time these days.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cwn5u", "flair_text": null, "created": 1348531793.0, "created_utc": 1348528193.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10c5la", "children": [], "author": "[deleted]", "id": "c6d4kzv", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 3, "body": "I work as an assistant researcher for a railway company.\nMy research is on Scheduling with Uncertainty with a particular focus on Stochastic Resource-Constrained Project Scheduling.\n\nThe SwU branch of CS research has important industrial applications so your research gets funded by companies, and they also pay you to implement usable products, based on the research results (i.e., the algorithms).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I work as an assistant researcher for a railway company.\nMy research is on Scheduling with Uncertainty with a particular focus on Stochastic Resource-Constrained Project Scheduling.&lt;/p&gt;\n\n&lt;p&gt;The SwU branch of CS research has important industrial applications so your research gets funded by companies, and they also pay you to implement usable products, based on the research results (i.e., the algorithms).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6d4kzv", "flair_text": null, "created": 1348570301.0, "created_utc": 1348566701.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10c5la", "children": [], "author": "unpopular_opinion", "id": "c6e5r4m", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 3, "body": "Enslavement", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Enslavement&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6e5r4m", "flair_text": null, "created": 1348754987.0, "created_utc": 1348751387.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_10c5la", "children": [], "author": "gromgull", "id": "c6c7vjr", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 4, "body": "Everything google does? :) From auto-completing search, through automatic transcription and automatic steadying of youtube videos, to the new google knowledge graph, etc. etc. \n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Everything google does? :) From auto-completing search, through automatic transcription and automatic steadying of youtube videos, to the new google knowledge graph, etc. etc. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c7vjr", "flair_text": null, "created": 1348413946.0, "created_utc": 1348410346.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10c5la", "children": [], "author": "JAPH", "id": "c6c9k9n", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 2, "body": "I write high-performance simulation code.\n\nHow do I get paid?  Via direct deposit.\n\nI work for a medium-large government contractor.\n\nPublishing is infrequent, but not rare.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I write high-performance simulation code.&lt;/p&gt;\n\n&lt;p&gt;How do I get paid?  Via direct deposit.&lt;/p&gt;\n\n&lt;p&gt;I work for a medium-large government contractor.&lt;/p&gt;\n\n&lt;p&gt;Publishing is infrequent, but not rare.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c9k9n", "flair_text": null, "created": 1348422700.0, "created_utc": 1348419100.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 15, "link_id": "t3_10c5la", "children": [], "author": "[deleted]", "id": "c6c8bac", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 8, "body": "[deleted]", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c8bac", "flair_text": null, "created": 1348416571.0, "created_utc": 1348412971.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 13, "link_id": "t3_10c5la", "children": [], "author": "gbay", "id": "c6c89t9", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 7, "body": "iOS development - doing random projects for my company and hopefully some games soon (computer science degree, smallish company called BNOTIONS)\n\nHere's a list of where my close friends have ended up (we all graduated with undergrad degrees around may of last year)\n\nAmazon - web back end dev (software engineer, a couple friends here)\nGoogle - idk, magical stuff (software engineers)\nStart up called Sweet Tooth (co owner and is a director of operations, software engineer)\nMicrosoft - windows phone 7 team ( cs degree)\nQualcomm - tools developer in c# (ca degree)\nMorgan Stanley - some sort of dev (comp eng)\nSome start up similar to mine doing assortment of random projects for random company's for iOS (comp eng)\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;iOS development - doing random projects for my company and hopefully some games soon (computer science degree, smallish company called BNOTIONS)&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s a list of where my close friends have ended up (we all graduated with undergrad degrees around may of last year)&lt;/p&gt;\n\n&lt;p&gt;Amazon - web back end dev (software engineer, a couple friends here)\nGoogle - idk, magical stuff (software engineers)\nStart up called Sweet Tooth (co owner and is a director of operations, software engineer)\nMicrosoft - windows phone 7 team ( cs degree)\nQualcomm - tools developer in c# (ca degree)\nMorgan Stanley - some sort of dev (comp eng)\nSome start up similar to mine doing assortment of random projects for random company&amp;#39;s for iOS (comp eng)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c89t9", "flair_text": null, "created": 1348416334.0, "created_utc": 1348412734.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 24, "link_id": "t3_10c5la", "children": [], "author": "turnipX", "id": "c6c6g6z", "parent_id": "t3_10c5la", "score": 0, "approved_by": null, "upvotes": 10, "body": "I think you work as a programmer for a while and move to either management or software architect, meaning you design the entire project from a high level perspective and how the pieces works together.  This is what my friend told me anyway as his two options, after programming professionally for 10 years.  Maybe a master degree in either management or software architecture would be interesting?  Or you could do security, lots of money to be made there and its pretty challenging.", "edited": 1348396466.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think you work as a programmer for a while and move to either management or software architect, meaning you design the entire project from a high level perspective and how the pieces works together.  This is what my friend told me anyway as his two options, after programming professionally for 10 years.  Maybe a master degree in either management or software architecture would be interesting?  Or you could do security, lots of money to be made there and its pretty challenging.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c6g6z", "flair_text": null, "created": 1348399798.0, "created_utc": 1348396198.0, "num_reports": null}], "score": 65, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 101, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/10c5la/what_are_computer_scientists_working_on_these_days/", "has_more_comments": false, "name": "t3_10c5la", "created": 1348399469.0, "url": "http://www.reddit.com/r/compsci/comments/10c5la/what_are_computer_scientists_working_on_these_days/", "author_flair_text": null, "author": "tetek", "created_utc": 1348395869.0, "link_flair_text": null, "media": null, "num_reports": null}, "397": {"domain": "chrisp.gr", "link_flair_class": null, "banned_by": null, "downvotes": 15, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10c2s8", "clicked": false, "title": "HTML5 Bird Flocks Simulation using KD-trees and binary heaps", "num_comments": 12, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10c2s8", "children": [], "author": "zokier", "id": "c6c9xgr", "parent_id": "t3_10c2s8", "score": 0, "approved_by": null, "upvotes": 6, "body": "People keep saying that JS is fast enough etc. But still it definitely feels like a slow. Eg on my system I can have about 70 boids before the performance begins to suffer (one core gets fully utilized). Meanwhile a [C implementation](https://github.com/GenTiradentes/tinyflock) of boids that has been submitted recently to reddit can have 1024 boids and do about 90 ticks per second (using only one core to make it more fair). And that C implementation is not probably the most optimal, afaik it doesn't use fancy data structures like this JS one etc.\n\nSure, TinyFlock uses OpenGL for graphics, which probably explains some of the performance difference. But on the other hand, I'd argue that HTML5 encourages to use inefficient graphics like `&lt;canvas&gt;`. Or that the design of `&lt;canvas&gt;` hasn't taken implementation performance into consideration enough.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;People keep saying that JS is fast enough etc. But still it definitely feels like a slow. Eg on my system I can have about 70 boids before the performance begins to suffer (one core gets fully utilized). Meanwhile a &lt;a href=\"https://github.com/GenTiradentes/tinyflock\"&gt;C implementation&lt;/a&gt; of boids that has been submitted recently to reddit can have 1024 boids and do about 90 ticks per second (using only one core to make it more fair). And that C implementation is not probably the most optimal, afaik it doesn&amp;#39;t use fancy data structures like this JS one etc.&lt;/p&gt;\n\n&lt;p&gt;Sure, TinyFlock uses OpenGL for graphics, which probably explains some of the performance difference. But on the other hand, I&amp;#39;d argue that HTML5 encourages to use inefficient graphics like &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;. Or that the design of &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; hasn&amp;#39;t taken implementation performance into consideration enough.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c9xgr", "flair_text": null, "created": 1348424312.0, "created_utc": 1348420712.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10c2s8", "children": [], "author": "SarahC", "id": "c6c9u3i", "parent_id": "t3_10c2s8", "score": 0, "approved_by": null, "upvotes": 3, "body": "The \"Simulation speed\" isn't - it's boid speed!\n\nSpeeding it up makes the boids fly past the food at great velocity, every time.\n\nSlow it down, and they all end up very close to the food.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The &amp;quot;Simulation speed&amp;quot; isn&amp;#39;t - it&amp;#39;s boid speed!&lt;/p&gt;\n\n&lt;p&gt;Speeding it up makes the boids fly past the food at great velocity, every time.&lt;/p&gt;\n\n&lt;p&gt;Slow it down, and they all end up very close to the food.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c9u3i", "flair_text": null, "created": 1348423889.0, "created_utc": 1348420289.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10c2s8", "children": [], "author": "airencracken", "id": "c6cbjf9", "parent_id": "t3_10c2s8", "score": 0, "approved_by": null, "upvotes": 5, "body": "They look more like sperm trying to fertilize an egg than birds.\n\nStill very interesting.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;They look more like sperm trying to fertilize an egg than birds.&lt;/p&gt;\n\n&lt;p&gt;Still very interesting.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cbjf9", "flair_text": null, "created": 1348430999.0, "created_utc": 1348427399.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10c2s8", "children": [], "author": "squidesquide", "id": "c6ccy0t", "parent_id": "t3_10c2s8", "score": 0, "approved_by": null, "upvotes": 1, "body": "My computer can deal with Skyrim and does not hold that.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My computer can deal with Skyrim and does not hold that.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ccy0t", "flair_text": null, "created": 1348436541.0, "created_utc": 1348432941.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10c2s8", "children": [], "author": "repsilat", "id": "c6ck29h", "parent_id": "t3_10c2s8", "score": 0, "approved_by": null, "upvotes": 1, "body": "I wonder what the effects are of using the \"k nearest boids\" instead of just \"everything within x units of here\". Certainly the latter is simpler to write acceleration structures for - instead of using KD-trees you can just use square/hex bins, after all.\n\nI also wonder if there's anything interesting to say about boids. People say there's some interesting chaotic behaviour going on, that flocks might behave \"intelligently\" somehow, or they can be used to solve real problems, but I'm not really sure how much credence to give those ideas. At best it looks like an introductory programming exercise that everyone is inordinately proud to show off to the world.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I wonder what the effects are of using the &amp;quot;k nearest boids&amp;quot; instead of just &amp;quot;everything within x units of here&amp;quot;. Certainly the latter is simpler to write acceleration structures for - instead of using KD-trees you can just use square/hex bins, after all.&lt;/p&gt;\n\n&lt;p&gt;I also wonder if there&amp;#39;s anything interesting to say about boids. People say there&amp;#39;s some interesting chaotic behaviour going on, that flocks might behave &amp;quot;intelligently&amp;quot; somehow, or they can be used to solve real problems, but I&amp;#39;m not really sure how much credence to give those ideas. At best it looks like an introductory programming exercise that everyone is inordinately proud to show off to the world.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ck29h", "flair_text": null, "created": 1348464656.0, "created_utc": 1348461056.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 12, "link_id": "t3_10c2s8", "children": [], "author": "m1sc", "id": "c6c6h9e", "parent_id": "t3_10c2s8", "score": 0, "approved_by": null, "upvotes": 4, "body": "how is babby formed?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;how is babby formed?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c6h9e", "flair_text": null, "created": 1348400218.0, "created_utc": 1348396618.0, "num_reports": null}], "score": 33, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 48, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10c2s8/html5_bird_flocks_simulation_using_kdtrees_and/", "has_more_comments": false, "name": "t3_10c2s8", "created": 1348391129.0, "url": "http://chrisp.gr/projects/boids/", "author_flair_text": null, "author": "CIRCLEJERK-BANNED", "created_utc": 1348387529.0, "link_flair_text": null, "media": null, "num_reports": null}, "398": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 3, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Horn-clauses are DNF (Disjunctive Normal Forms) with at most one positive literal. They are separated into 3 kinds:  &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Goal: n negated literals, e.g. (not A or not B or not C) &lt;/li&gt;\n&lt;li&gt;Rule: 1 positive literal and n negated ones, for n&amp;gt;0&lt;/li&gt;\n&lt;li&gt;Fact: 1 positive literal&lt;br/&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Now you can &amp;quot;reduce&amp;quot; them. A reduced Horn-Clause is a close in which every &lt;a href=\"http://www.reddit.com/r/compsci/comments/10c6ej/reduction_of_hornclauses_are_there_any_standard/c6c9js5\"&gt;propositional symbol&lt;/a&gt; only used once. \nI have no idea how to do this though, are there any standard methodes to accomplish this? \nThe only information I found online is that &amp;quot;every clause which contains a complimentary literal pair can be reduced&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;tl;dr: How do I reduce Horn-Clauses?  &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Horn-clauses are DNF (Disjunctive Normal Forms) with at most one positive literal. They are separated into 3 kinds:  \n   \n* Goal: n negated literals, e.g. (not A or not B or not C) \n* Rule: 1 positive literal and n negated ones, for n&gt;0\n* Fact: 1 positive literal   \n\nNow you can \"reduce\" them. A reduced Horn-Clause is a close in which every [propositional symbol](http://www.reddit.com/r/compsci/comments/10c6ej/reduction_of_hornclauses_are_there_any_standard/c6c9js5) only used once. \nI have no idea how to do this though, are there any standard methodes to accomplish this? \nThe only information I found online is that \"every clause which contains a complimentary literal pair can be reduced\".\n\ntl;dr: How do I reduce Horn-Clauses?  ", "saved": false, "id": "10c6ej", "clicked": false, "title": "Reduction of Horn-Clauses: Are there any standard methodes?", "num_comments": 7, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10c6ej", "children": [], "author": "tunstall", "id": "c6c6zgn", "parent_id": "t3_10c6ej", "score": 0, "approved_by": null, "upvotes": 6, "body": "The literals in a Horn clause are combined by disjunction, i.e. \"or\". So normal rules for propositional logic apply:\n\n\"not A or not A\" is equivalent to \"not A\". this means if a negated literal appears several times, you only have to keep one of them.\n\n\"A or not A\" is equivalent to \"True\". This means if a literal appears both positive and negated, you can remove all appearances of this literal.\n\n(\"A or A\" would reduce to \"A\" but this cannot appear in a Horn clause.)\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The literals in a Horn clause are combined by disjunction, i.e. &amp;quot;or&amp;quot;. So normal rules for propositional logic apply:&lt;/p&gt;\n\n&lt;p&gt;&amp;quot;not A or not A&amp;quot; is equivalent to &amp;quot;not A&amp;quot;. this means if a negated literal appears several times, you only have to keep one of them.&lt;/p&gt;\n\n&lt;p&gt;&amp;quot;A or not A&amp;quot; is equivalent to &amp;quot;True&amp;quot;. This means if a literal appears both positive and negated, you can remove all appearances of this literal.&lt;/p&gt;\n\n&lt;p&gt;(&amp;quot;A or A&amp;quot; would reduce to &amp;quot;A&amp;quot; but this cannot appear in a Horn clause.)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c6zgn", "flair_text": null, "created": 1348406768.0, "created_utc": 1348403168.0, "num_reports": null}], "score": 2, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 5, "hidden": false, "thumbnail": "", "edited": 1348493780.0, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/10c6ej/reduction_of_hornclauses_are_there_any_standard/", "has_more_comments": false, "name": "t3_10c6ej", "created": 1348402027.0, "url": "http://www.reddit.com/r/compsci/comments/10c6ej/reduction_of_hornclauses_are_there_any_standard/", "author_flair_text": null, "author": "nixoninajar", "created_utc": 1348398427.0, "link_flair_text": null, "media": null, "num_reports": null}, "399": {"domain": "cs.unc.edu", "link_flair_class": null, "banned_by": null, "downvotes": 4, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "109u6d", "clicked": false, "title": "[PDF] Phonotactic Reconstruction of Encrypted VoIP Conversations: Hookt on fon-iks", "num_comments": 1, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_109u6d", "children": [], "author": "Saqajaweiner", "id": "c6c4byp", "parent_id": "t3_109u6d", "score": 0, "approved_by": null, "upvotes": 1, "body": "This just reinforces the fact that i should have been a software engineer. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This just reinforces the fact that i should have been a software engineer. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c4byp", "flair_text": null, "created": 1348381235.0, "created_utc": 1348377635.0, "num_reports": null}], "score": 25, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 29, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/109u6d/pdf_phonotactic_reconstruction_of_encrypted_voip/", "has_more_comments": false, "name": "t3_109u6d", "created": 1348271858.0, "url": "http://www.cs.unc.edu/~fabian/papers/foniks-oak11.pdf", "author_flair_text": null, "author": "JAPH", "created_utc": 1348268258.0, "link_flair_text": null, "media": null, "num_reports": null}, "350": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 4, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Can any one direct me to some material on succinct representation of data structures. I am specifically looking for succinct representation of graphs. After some searching, I found that Guy Jacobson&amp;#39;s PhD thesis was on succinct data structures but I couldn&amp;#39;t find any paper on it.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Can any one direct me to some material on succinct representation of data structures. I am specifically looking for succinct representation of graphs. After some searching, I found that Guy Jacobson's PhD thesis was on succinct data structures but I couldn't find any paper on it.", "saved": false, "id": "119u2h", "clicked": false, "title": "Succinct Data Structures - specifically graphs", "num_comments": 4, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_119u2h", "children": [], "author": "seeitbelieveit", "id": "c6kreuc", "parent_id": "t3_119u2h", "score": 0, "approved_by": null, "upvotes": 1, "body": "It is available on ProQuest, says certain copyrighted materials, if it contained them, were deleted and annotated. Maybe the graphs were part of that if it does not contain them? Not sure how to further help you.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It is available on ProQuest, says certain copyrighted materials, if it contained them, were deleted and annotated. Maybe the graphs were part of that if it does not contain them? Not sure how to further help you.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6kreuc", "flair_text": null, "created": 1349933250.0, "created_utc": 1349929650.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_119u2h", "children": [], "author": "HansWurst121", "id": "c6kt9at", "parent_id": "t3_119u2h", "score": 0, "approved_by": null, "upvotes": 3, "body": "I know a representation of trees in 2n bits (where n is the number of leafs). It is called \"balanced parenthesis sequence\", google should help you out.\n\nNinja edit: fuck, google \"succinct representation of graphs\" there are a ton of papers publicly available.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I know a representation of trees in 2n bits (where n is the number of leafs). It is called &amp;quot;balanced parenthesis sequence&amp;quot;, google should help you out.&lt;/p&gt;\n\n&lt;p&gt;Ninja edit: fuck, google &amp;quot;succinct representation of graphs&amp;quot; there are a ton of papers publicly available.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6kt9at", "flair_text": null, "created": 1349943401.0, "created_utc": 1349939801.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_119u2h", "children": [], "author": "gilleain", "id": "c6ktfj7", "parent_id": "t3_119u2h", "score": 0, "approved_by": null, "upvotes": 1, "body": "As HansWurst points out, you could just google-scholar this. You did do that, right?\n\nAnyway [here](http://people.scs.carleton.ca/~maheshwa/courses/5703COMP/SuccinctDS.pdf) is a paper (non peer-reviewed?) on this topic, which references a Jacobson paper :\n\n&gt;Jacobson, E.: Space-efficient Static Trees and Graphs, FOCS, 42, (1989), 549-554.\n\nImplementing this stuff looks pretty hairy, what with all the bit-packing and so on. Page and book embeddings of graphs look interesting though - apparently I have been drawing page embeddings of graphs for a while now without realising...", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As HansWurst points out, you could just google-scholar this. You did do that, right?&lt;/p&gt;\n\n&lt;p&gt;Anyway &lt;a href=\"http://people.scs.carleton.ca/%7Emaheshwa/courses/5703COMP/SuccinctDS.pdf\"&gt;here&lt;/a&gt; is a paper (non peer-reviewed?) on this topic, which references a Jacobson paper :&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Jacobson, E.: Space-efficient Static Trees and Graphs, FOCS, 42, (1989), 549-554.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Implementing this stuff looks pretty hairy, what with all the bit-packing and so on. Page and book embeddings of graphs look interesting though - apparently I have been drawing page embeddings of graphs for a while now without realising...&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ktfj7", "flair_text": null, "created": 1349944725.0, "created_utc": 1349941125.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_119u2h", "children": [], "author": "smhanov", "id": "c6llgq2", "parent_id": "t3_119u2h", "score": 0, "approved_by": null, "upvotes": 2, "body": "Jacobson's short paper on this is a good reference. Unfortunately, arbitrary graphs cannot be represented succinctly. But planar ones are fine.\n\nhttp://scholar.google.ca/scholar?hl=en&amp;q=space+efficient+trees+and+graphs&amp;btnG=&amp;as_sdt=1%2C5&amp;as_sdtp=\n\nIf you are interested in encoding Tries, a good solution is the LZ-trie.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Jacobson&amp;#39;s short paper on this is a good reference. Unfortunately, arbitrary graphs cannot be represented succinctly. But planar ones are fine.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://scholar.google.ca/scholar?hl=en&amp;amp;q=space+efficient+trees+and+graphs&amp;amp;btnG=&amp;amp;as_sdt=1%2C5&amp;amp;as_sdtp=\"&gt;http://scholar.google.ca/scholar?hl=en&amp;amp;q=space+efficient+trees+and+graphs&amp;amp;btnG=&amp;amp;as_sdt=1%2C5&amp;amp;as_sdtp=&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;If you are interested in encoding Tries, a good solution is the LZ-trie.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6llgq2", "flair_text": null, "created": 1350080959.0, "created_utc": 1350077359.0, "num_reports": null}], "score": 7, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 11, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/119u2h/succinct_data_structures_specifically_graphs/", "has_more_comments": false, "name": "t3_119u2h", "created": 1349907150.0, "url": "http://www.reddit.com/r/compsci/comments/119u2h/succinct_data_structures_specifically_graphs/", "author_flair_text": null, "author": "bonzothebeast", "created_utc": 1349903550.0, "link_flair_text": null, "media": null, "num_reports": null}, "351": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 16, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;We&amp;#39;re learning Scheme (along with PLAI and Racket) in my programming languages class, and I (and most of the rest of my class) am having far too much trouble wrapping my head around it. We moved onto JavaCC and everything made sense again, but our prof realized no one had a clue how to do Scheme so he&amp;#39;s trying to (unsuccessfully) teach us it again. I&amp;#39;m trying to find a good resource on my own, but quite frankly it seems like people who do understand it have trouble explaining it :(&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "We're learning Scheme (along with PLAI and Racket) in my programming languages class, and I (and most of the rest of my class) am having far too much trouble wrapping my head around it. We moved onto JavaCC and everything made sense again, but our prof realized no one had a clue how to do Scheme so he's trying to (unsuccessfully) teach us it again. I'm trying to find a good resource on my own, but quite frankly it seems like people who do understand it have trouble explaining it :(", "saved": false, "id": "1173ql", "clicked": false, "title": "Good resource to learn scheme?", "num_comments": 61, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_1173ql", "children": [], "author": "fromclouds", "id": "c6jw0bg", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 53, "body": "No, no, no.  I knew people would recommend SICP.  It's a great book, but it's not for learning scheme--it just happens to use scheme in order to illustrate larger points about computer science, the design of language, etc.  It's definitely not for beginners.\n\nFor scheme itself, stick to:\n\n[The Scheme Programmig Language, 4e](http://www.scheme.com/tspl4/)\nor\n[How to Design Programs](http://htdp.org/)\n\nNow, those are about the language itself, but if you're having trouble conceptualizing, I would recommend shelling out to buy:\n\n[The Little Schemer](http://www.amazon.com/The-Little-Schemer-4th-Edition/dp/0262560992/ref=sr_1_1?ie=UTF8&amp;qid=1349795339&amp;sr=8-1&amp;keywords=the+little+schemer)\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No, no, no.  I knew people would recommend SICP.  It&amp;#39;s a great book, but it&amp;#39;s not for learning scheme--it just happens to use scheme in order to illustrate larger points about computer science, the design of language, etc.  It&amp;#39;s definitely not for beginners.&lt;/p&gt;\n\n&lt;p&gt;For scheme itself, stick to:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.scheme.com/tspl4/\"&gt;The Scheme Programmig Language, 4e&lt;/a&gt;\nor\n&lt;a href=\"http://htdp.org/\"&gt;How to Design Programs&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Now, those are about the language itself, but if you&amp;#39;re having trouble conceptualizing, I would recommend shelling out to buy:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.amazon.com/The-Little-Schemer-4th-Edition/dp/0262560992/ref=sr_1_1?ie=UTF8&amp;amp;qid=1349795339&amp;amp;sr=8-1&amp;amp;keywords=the+little+schemer\"&gt;The Little Schemer&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jw0bg", "flair_text": null, "created": 1349798957.0, "created_utc": 1349795357.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1173ql", "children": [], "author": "goatsgomoo", "id": "c6jx3wk", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 6, "body": "Racket (formerly PLT Scheme) is actually what my school uses for its introductory courses. You can look at the [list of lectures](http://web.cs.wpi.edu/~cs1102/a12/Lectures/index.html) (which has links into How To Design Programs along with sample code and homework assignments).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Racket (formerly PLT Scheme) is actually what my school uses for its introductory courses. You can look at the &lt;a href=\"http://web.cs.wpi.edu/%7Ecs1102/a12/Lectures/index.html\"&gt;list of lectures&lt;/a&gt; (which has links into How To Design Programs along with sample code and homework assignments).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jx3wk", "flair_text": null, "created": 1349803300.0, "created_utc": 1349799700.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1173ql", "children": [], "author": "dooges", "id": "c6k4foz", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 7, "body": "[Simply Scheme](http://www.eecs.berkeley.edu/~bh/ss-toc2.html)\nBrian Harvey(UC Berkeley) wrote the text and also has some online lectures.  Sort of a \"SICP LIte\", really.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.eecs.berkeley.edu/%7Ebh/ss-toc2.html\"&gt;Simply Scheme&lt;/a&gt;\nBrian Harvey(UC Berkeley) wrote the text and also has some online lectures.  Sort of a &amp;quot;SICP LIte&amp;quot;, really.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6k4foz", "flair_text": null, "created": 1349830228.0, "created_utc": 1349826628.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_1173ql", "children": [], "author": "lobstertainment", "id": "c6jw8xv", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 9, "body": "The Little Schemer", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The Little Schemer&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jw8xv", "flair_text": null, "created": 1349799943.0, "created_utc": 1349796343.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1173ql", "children": [], "author": "mcpherrinm", "id": "c6jxau9", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 10, "body": "Teach Yourself Racket.\n\nhttps://cs.uwaterloo.ca/~plragde/tyr/index.html\n\nNo idea if it's appropriate, but one of my former professors recently started working on this.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Teach Yourself Racket.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://cs.uwaterloo.ca/%7Eplragde/tyr/index.html\"&gt;https://cs.uwaterloo.ca/~plragde/tyr/index.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;No idea if it&amp;#39;s appropriate, but one of my former professors recently started working on this.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jxau9", "flair_text": null, "created": 1349804040.0, "created_utc": 1349800440.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_1173ql", "children": [], "author": "ponchedeburro", "id": "c6k3c8w", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 5, "body": "The little Schemer - most definitely ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The little Schemer - most definitely &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6k3c8w", "flair_text": null, "created": 1349825874.0, "created_utc": 1349822274.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1173ql", "children": [], "author": "pbewig", "id": "c6jylkv", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 3, "body": "If you're just getting started, Chapter 2 of Kent Dybvig's book [The Scheme Programming Language](http://www.scheme.com/tspl4/) is superb; the rest of the book is pretty good, too, equivalent to K&amp;R for C.\n\nOnce you have a little bit of experience and you need some programming exercises to refine your knowledge, I recommend my blog [Programming Praxis](http://programmingpraxis.com), which provides two exercises each week with suggested solutions in Scheme.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you&amp;#39;re just getting started, Chapter 2 of Kent Dybvig&amp;#39;s book &lt;a href=\"http://www.scheme.com/tspl4/\"&gt;The Scheme Programming Language&lt;/a&gt; is superb; the rest of the book is pretty good, too, equivalent to K&amp;amp;R for C.&lt;/p&gt;\n\n&lt;p&gt;Once you have a little bit of experience and you need some programming exercises to refine your knowledge, I recommend my blog &lt;a href=\"http://programmingpraxis.com\"&gt;Programming Praxis&lt;/a&gt;, which provides two exercises each week with suggested solutions in Scheme.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jylkv", "flair_text": null, "created": 1349808682.0, "created_utc": 1349805082.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1173ql", "children": [], "author": "treerex", "id": "c6jzg31", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 3, "body": "What in particular are you having trouble wrapping your head around? The syntax? Recursion? Something else?\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What in particular are you having trouble wrapping your head around? The syntax? Recursion? Something else?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jzg31", "flair_text": null, "created": 1349811790.0, "created_utc": 1349808190.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_1173ql", "children": [], "author": "vkasra", "id": "c6jvxlk", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 8, "body": "The famous MIT textbook SICP is very good, and free: http://mitpress.mit.edu/sicp/full-text/book/book.html\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The famous MIT textbook SICP is very good, and free: &lt;a href=\"http://mitpress.mit.edu/sicp/full-text/book/book.html\"&gt;http://mitpress.mit.edu/sicp/full-text/book/book.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jvxlk", "flair_text": null, "created": 1349798637.0, "created_utc": 1349795037.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1173ql", "children": [], "author": "cruise02", "id": "c6jvxlv", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 5, "body": "[Structure and Interpretation of Computer Programs](http://mitpress.mit.edu/sicp/full-text/book/book.html) teaches Scheme.  The books is free online, with [companion lectures](http://groups.csail.mit.edu/mac/classes/6.001/abelson-sussman-lectures/) by the authors.  I'd start with the first lecture, since it gives a really good \"Scheme in a nutshell\" overview of the language, then start reading the book.\n\nAlso, I've been doing the SICP exercises and examples in DrRacket, so you'll be able to learn Racket as well.", "edited": 1349795223.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://mitpress.mit.edu/sicp/full-text/book/book.html\"&gt;Structure and Interpretation of Computer Programs&lt;/a&gt; teaches Scheme.  The books is free online, with &lt;a href=\"http://groups.csail.mit.edu/mac/classes/6.001/abelson-sussman-lectures/\"&gt;companion lectures&lt;/a&gt; by the authors.  I&amp;#39;d start with the first lecture, since it gives a really good &amp;quot;Scheme in a nutshell&amp;quot; overview of the language, then start reading the book.&lt;/p&gt;\n\n&lt;p&gt;Also, I&amp;#39;ve been doing the SICP exercises and examples in DrRacket, so you&amp;#39;ll be able to learn Racket as well.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jvxlv", "flair_text": null, "created": 1349798639.0, "created_utc": 1349795039.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_1173ql", "children": [], "author": "TipsTheJust", "id": "c6jz2yl", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 4, "body": "Enjoy this time. It is a GREAT language that you will rarely get to use again.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Enjoy this time. It is a GREAT language that you will rarely get to use again.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jz2yl", "flair_text": null, "created": 1349810472.0, "created_utc": 1349806872.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1173ql", "children": [], "author": "schwiz", "id": "c6jw15v", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 2, "body": "Here is the book we used, I found the best way to learn was just do it, follow along with the book samples.  http://www.cs.brown.edu/people/sk/Publications/Books/ProgLangs/2007-04-26/", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here is the book we used, I found the best way to learn was just do it, follow along with the book samples.  &lt;a href=\"http://www.cs.brown.edu/people/sk/Publications/Books/ProgLangs/2007-04-26/\"&gt;http://www.cs.brown.edu/people/sk/Publications/Books/ProgLangs/2007-04-26/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jw15v", "flair_text": null, "created": 1349799052.0, "created_utc": 1349795452.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1173ql", "children": [], "author": "drewfer", "id": "c6jy24x", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 2, "body": "I've always found [Teach Yourself Scheme in Fixnum Days](http://www.ccs.neu.edu/home/dorai/t-y-scheme/t-y-scheme.html) to be an excellent 'quick start' guide to scheme for people who are already familiar with programming.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve always found &lt;a href=\"http://www.ccs.neu.edu/home/dorai/t-y-scheme/t-y-scheme.html\"&gt;Teach Yourself Scheme in Fixnum Days&lt;/a&gt; to be an excellent &amp;#39;quick start&amp;#39; guide to scheme for people who are already familiar with programming.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jy24x", "flair_text": null, "created": 1349806744.0, "created_utc": 1349803144.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1173ql", "children": [], "author": "pandanomic", "id": "c6jyhgx", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 1, "body": "Thanks guys! My classmates and I truly appreciate all the help!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks guys! My classmates and I truly appreciate all the help!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jyhgx", "flair_text": null, "created": 1349808255.0, "created_utc": 1349804655.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1173ql", "children": [], "author": "kiwibird2", "id": "c6jzcwj", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 1, "body": "Just a guess. Do you go to UT?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just a guess. Do you go to UT?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jzcwj", "flair_text": null, "created": 1349811473.0, "created_utc": 1349807873.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1173ql", "children": [], "author": "cbann", "id": "c6k0o9v", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 1, "body": "Abelson &amp; Sussman is available as a free e-book now. My university course used that text. Graham's ANSI Common LISP is a good text on the other dialect. From what I remember, both have good style, good examples, and good introductions to the fundamentals.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Abelson &amp;amp; Sussman is available as a free e-book now. My university course used that text. Graham&amp;#39;s ANSI Common LISP is a good text on the other dialect. From what I remember, both have good style, good examples, and good introductions to the fundamentals.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6k0o9v", "flair_text": null, "created": 1349816210.0, "created_utc": 1349812610.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1173ql", "children": [], "author": "ChaosNil", "id": "c6k0u5d", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 1, "body": "Everyone else already linked to what I used, the big blue book with the lambda sicp I think. Great language. Fun to use recursion on everything and it just becomes second nature. Our final project was to program a text based game like Zork. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Everyone else already linked to what I used, the big blue book with the lambda sicp I think. Great language. Fun to use recursion on everything and it just becomes second nature. Our final project was to program a text based game like Zork. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6k0u5d", "flair_text": null, "created": 1349816774.0, "created_utc": 1349813174.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1173ql", "children": [], "author": "dddbbb", "id": "c6k5n8a", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 1, "body": "I found [Casting Spels in Lisp](http://www.lisperati.com/clojure-spels/casting.html) to be a good intro that doesn't expect you to know anything about lisp and tries to avoid confusion (to the extent of [redefining macros as spels](http://www.lisperati.com/clojure-spels/no_macros.html)). Unfortunately, there only seems to be Common Lisp, Emacs Lisp, and Clojure versions. I don't know how Scheme's keywords differ, but this might not be helpful...", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I found &lt;a href=\"http://www.lisperati.com/clojure-spels/casting.html\"&gt;Casting Spels in Lisp&lt;/a&gt; to be a good intro that doesn&amp;#39;t expect you to know anything about lisp and tries to avoid confusion (to the extent of &lt;a href=\"http://www.lisperati.com/clojure-spels/no_macros.html\"&gt;redefining macros as spels&lt;/a&gt;). Unfortunately, there only seems to be Common Lisp, Emacs Lisp, and Clojure versions. I don&amp;#39;t know how Scheme&amp;#39;s keywords differ, but this might not be helpful...&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6k5n8a", "flair_text": null, "created": 1349835132.0, "created_utc": 1349831532.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1173ql", "children": [], "author": "DavidM01", "id": "c6k7gdv", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 1, "body": "When you write  foo( bar, baz )  a compiler transforms it into (foo bar baz).  Likewise when you write 1 + b the compiler turns it into (+ 1 b). \n\nWhy not just skip the compiler step and write your code in these tree data structures directly.  Then you can do what the compiler writers do : they transform one tree into another.  You can write your own IF statement, WHILE, etc.   \n\nAs a matter of fact you can do more than people writing the first syntax ever could because you can now direct the flow of compilation directly.\n\nThat said I like \"Scheme and the art of programming\".  Its good and easy to follow.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;When you write  foo( bar, baz )  a compiler transforms it into (foo bar baz).  Likewise when you write 1 + b the compiler turns it into (+ 1 b). &lt;/p&gt;\n\n&lt;p&gt;Why not just skip the compiler step and write your code in these tree data structures directly.  Then you can do what the compiler writers do : they transform one tree into another.  You can write your own IF statement, WHILE, etc.   &lt;/p&gt;\n\n&lt;p&gt;As a matter of fact you can do more than people writing the first syntax ever could because you can now direct the flow of compilation directly.&lt;/p&gt;\n\n&lt;p&gt;That said I like &amp;quot;Scheme and the art of programming&amp;quot;.  Its good and easy to follow.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6k7gdv", "flair_text": null, "created": 1349842272.0, "created_utc": 1349838672.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1173ql", "children": [], "author": "rkenned", "id": "c6k8prj", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 1, "body": "Sounds like my programming languages course in college.  \n\nThe problem with scheme (or any functional language) is that it is an entirely different paradigm compared to most languages that college students have seen up until that point.  In college, students think that the hardest part of learning a language is the syntax.  This isn't really true.  When switching between FP and OOP, one must think about how to solve a problem in very different ways.  \n\nSICP is a great resource in learning how to think in a way conducive to functional programming and is fairly language agnostic.  Once you learn how to do that, learning scheme, clojure, haskell, etc... will be very easy.  ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sounds like my programming languages course in college.  &lt;/p&gt;\n\n&lt;p&gt;The problem with scheme (or any functional language) is that it is an entirely different paradigm compared to most languages that college students have seen up until that point.  In college, students think that the hardest part of learning a language is the syntax.  This isn&amp;#39;t really true.  When switching between FP and OOP, one must think about how to solve a problem in very different ways.  &lt;/p&gt;\n\n&lt;p&gt;SICP is a great resource in learning how to think in a way conducive to functional programming and is fairly language agnostic.  Once you learn how to do that, learning scheme, clojure, haskell, etc... will be very easy.  &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6k8prj", "flair_text": null, "created": 1349847727.0, "created_utc": 1349844127.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1173ql", "children": [], "author": "berlinbrown", "id": "c6k96kg", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 1, "body": "Write your own simple scheme, look at the code for jscheme and then revisit scheme.\n\nLisp actually influenced python, you may even go back and forth between scheme code and comparable python code.\n\nScheme is more an approach to programming and not necessarily a system where you get caught up on the details.  Java, on the other hand, is full of memorizing details.  Scheme uses simple, easy to understand approach to a language.  And it just happens to be functional language.\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Write your own simple scheme, look at the code for jscheme and then revisit scheme.&lt;/p&gt;\n\n&lt;p&gt;Lisp actually influenced python, you may even go back and forth between scheme code and comparable python code.&lt;/p&gt;\n\n&lt;p&gt;Scheme is more an approach to programming and not necessarily a system where you get caught up on the details.  Java, on the other hand, is full of memorizing details.  Scheme uses simple, easy to understand approach to a language.  And it just happens to be functional language.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6k96kg", "flair_text": null, "created": 1349850043.0, "created_utc": 1349846443.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1173ql", "children": [], "author": "berlinbrown", "id": "c6k97dh", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 1, "body": "What does JavaCC have to do with Scheme?\n\nIs this the \"programming language\" class?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What does JavaCC have to do with Scheme?&lt;/p&gt;\n\n&lt;p&gt;Is this the &amp;quot;programming language&amp;quot; class?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6k97dh", "flair_text": null, "created": 1349850150.0, "created_utc": 1349846550.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 13, "link_id": "t3_1173ql", "children": [], "author": "Guido125", "id": "c6k0hcz", "parent_id": "t3_1173ql", "score": 0, "approved_by": null, "upvotes": 6, "body": "(((((((((((((((I hope you like brackets)))))))))))))))", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;(((((((((((((((I hope you like brackets)))))))))))))))&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6k0hcz", "flair_text": null, "created": 1349815530.0, "created_utc": 1349811930.0, "num_reports": null}], "score": 55, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 71, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/1173ql/good_resource_to_learn_scheme/", "has_more_comments": false, "name": "t3_1173ql", "created": 1349797159.0, "url": "http://www.reddit.com/r/compsci/comments/1173ql/good_resource_to_learn_scheme/", "author_flair_text": null, "author": "pandanomic", "created_utc": 1349793559.0, "link_flair_text": null, "media": null, "num_reports": null}, "352": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 4, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;is there a simple expression to find if exactly 2 or 3 out of 4 inputs are high?&lt;/p&gt;\n\n&lt;p&gt;Ex. ( In: A,B,C,D Out: Sum(m3, m5, m6, m7, m9, m10, m11, m12, m13, m14))&lt;/p&gt;\n\n&lt;p&gt;i think i did that right... min-terms right? /me is only a freshmen CE....&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "is there a simple expression to find if exactly 2 or 3 out of 4 inputs are high?\n\nEx. ( In: A,B,C,D Out: Sum(m3, m5, m6, m7, m9, m10, m11, m12, m13, m14))\n\ni think i did that right... min-terms right? /me is only a freshmen CE....", "saved": false, "id": "117sla", "clicked": false, "title": "A Boolean Logic Question", "num_comments": 9, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_117sla", "children": [], "author": "Howie6554", "id": "c6k92bb", "parent_id": "t3_117sla", "score": 0, "approved_by": null, "upvotes": 5, "body": "Your terms are correct, and here's the K-map they would create: http://imgur.com/N32k2\n\nUnfortunately, it's not a real nice K-map, and if you just use a minimal SoP equation, you'll end up with 6 terms with three variables each.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your terms are correct, and here&amp;#39;s the K-map they would create: &lt;a href=\"http://imgur.com/N32k2\"&gt;http://imgur.com/N32k2&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Unfortunately, it&amp;#39;s not a real nice K-map, and if you just use a minimal SoP equation, you&amp;#39;ll end up with 6 terms with three variables each.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6k92bb", "flair_text": null, "created": 1349849449.0, "created_utc": 1349845849.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_117sla", "children": [], "author": "zhrusk", "id": "c6k34gn", "parent_id": "t3_117sla", "score": 0, "approved_by": null, "upvotes": 5, "body": "Keep in mind that you can also reverse an output. One thing you can do, if it makes the problem simpler, is craft the expression that looks for either **all four high** or **exactly one high** (a quadruple AND and a quadruple XOR do these quite nicely) and then reverse the value with a prepended NOT", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Keep in mind that you can also reverse an output. One thing you can do, if it makes the problem simpler, is craft the expression that looks for either &lt;strong&gt;all four high&lt;/strong&gt; or &lt;strong&gt;exactly one high&lt;/strong&gt; (a quadruple AND and a quadruple XOR do these quite nicely) and then reverse the value with a prepended NOT&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6k34gn", "flair_text": null, "created": 1349825043.0, "created_utc": 1349821443.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_117sla", "children": [], "author": "smog_alado", "id": "c6k3e3q", "parent_id": "t3_117sla", "score": 0, "approved_by": null, "upvotes": 1, "body": "One way do do this kind of thing without ending up with a ridiculously huge formula is to create some extra variables. This mimics how an usual algorithm for counting the number of \"truths\"  would work.\n\nCreate a set of variables `x_i_j` standing for \"there are *i* high inputs in the first *j* inputs\". You can then represent the counting by adding initial rules saying that `x_0_0` is true and `x_i_0` are false and \"iteration\" rules saying that `x_(i+1)_(j+1) &lt;-&gt; (x_i_j and v_j) or (x_(i+1)_j and not v_j)`", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;One way do do this kind of thing without ending up with a ridiculously huge formula is to create some extra variables. This mimics how an usual algorithm for counting the number of &amp;quot;truths&amp;quot;  would work.&lt;/p&gt;\n\n&lt;p&gt;Create a set of variables &lt;code&gt;x_i_j&lt;/code&gt; standing for &amp;quot;there are &lt;em&gt;i&lt;/em&gt; high inputs in the first &lt;em&gt;j&lt;/em&gt; inputs&amp;quot;. You can then represent the counting by adding initial rules saying that &lt;code&gt;x_0_0&lt;/code&gt; is true and &lt;code&gt;x_i_0&lt;/code&gt; are false and &amp;quot;iteration&amp;quot; rules saying that &lt;code&gt;x_(i+1)_(j+1) &amp;lt;-&amp;gt; (x_i_j and v_j) or (x_(i+1)_j and not v_j)&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6k3e3q", "flair_text": null, "created": 1349826077.0, "created_utc": 1349822477.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_117sla", "children": [], "author": "ryanakron", "id": "c6k61zg", "parent_id": "t3_117sla", "score": 0, "approved_by": null, "upvotes": 1, "body": "In C ^ is an XOR so to do 3/4 high:\n\n!A ^ !B ^ !C ^ !D\n\n\nYou can also cast each to 0/1 and add them to see how many are high.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In C ^ is an XOR so to do 3/4 high:&lt;/p&gt;\n\n&lt;p&gt;!A ^ !B ^ !C ^ !D&lt;/p&gt;\n\n&lt;p&gt;You can also cast each to 0/1 and add them to see how many are high.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6k61zg", "flair_text": null, "created": 1349836761.0, "created_utc": 1349833161.0, "num_reports": null}], "score": 10, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 14, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/117sla/a_boolean_logic_question/", "has_more_comments": false, "name": "t3_117sla", "created": 1349821989.0, "url": "http://www.reddit.com/r/compsci/comments/117sla/a_boolean_logic_question/", "author_flair_text": null, "author": "LordFedora", "created_utc": 1349818389.0, "link_flair_text": null, "media": null, "num_reports": null}, "353": {"domain": "net.tutsplus.com", "link_flair_class": null, "banned_by": null, "downvotes": 24, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "1158wm", "clicked": false, "title": "Understanding the Principles of Algorithm Design | Nettuts+", "num_comments": 19, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_1158wm", "children": [], "author": "more_exercise", "id": "c6jfu50", "parent_id": "t3_1158wm", "score": 0, "approved_by": null, "upvotes": 18, "body": "&gt;For instance, let\u2019s say you wanted to create an algorithm for adding 1 to any negative number, and subtracting 1 from any positive number, and doing nothing to 0. You might do something like this (in JavaScript-esque pseudo code):\n\n    function addOrSubtractOne(number){\n        if (number &lt; 0) {            //&lt;- Condition 1\n            return number + 1\n        } else if (number &lt; 0) {     //&lt;- Condition 2, same as condition 1\n            return number - 1\n        } else if (number == 0) {\n            return 0;\n        }\n    }\n\nWell, that was a good start to the tutorial.", "edited": 1349718144.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;For instance, let\u2019s say you wanted to create an algorithm for adding 1 to any negative number, and subtracting 1 from any positive number, and doing nothing to 0. You might do something like this (in JavaScript-esque pseudo code):&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre&gt;&lt;code&gt;function addOrSubtractOne(number){\n    if (number &amp;lt; 0) {            //&amp;lt;- Condition 1\n        return number + 1\n    } else if (number &amp;lt; 0) {     //&amp;lt;- Condition 2, same as condition 1\n        return number - 1\n    } else if (number == 0) {\n        return 0;\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Well, that was a good start to the tutorial.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jfu50", "flair_text": null, "created": 1349721502.0, "created_utc": 1349717902.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_1158wm", "children": [], "author": "snappywan", "id": "c6jnefh", "parent_id": "t3_1158wm", "score": 0, "approved_by": null, "upvotes": 16, "body": "&gt; Take an hour or two every week and read The Art of Computer Programming\n\nIf comprehension matters, you will only get through a few pages a week. There are far gentler and more focused algorithm design books, such as [Algorithm Design by Kleinberg and Tardos](http://www.amazon.com/Algorithm-Design-Jon-Kleinberg/dp/0321295358), [Algorithm Design by Goodrich and Tamassia](http://www.amazon.com/Algorithm-Design-Foundations-Analysis-Internet/dp/0471383651), and [Data Structures &amp; Algorithms: The Basic Toolbox](http://www.mpi-inf.mpg.de/~mehlhorn/Toolbox.html).\n\nWhy start with material that's intended for an advanced audience to begin with?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Take an hour or two every week and read The Art of Computer Programming&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;If comprehension matters, you will only get through a few pages a week. There are far gentler and more focused algorithm design books, such as &lt;a href=\"http://www.amazon.com/Algorithm-Design-Jon-Kleinberg/dp/0321295358\"&gt;Algorithm Design by Kleinberg and Tardos&lt;/a&gt;, &lt;a href=\"http://www.amazon.com/Algorithm-Design-Foundations-Analysis-Internet/dp/0471383651\"&gt;Algorithm Design by Goodrich and Tamassia&lt;/a&gt;, and &lt;a href=\"http://www.mpi-inf.mpg.de/%7Emehlhorn/Toolbox.html\"&gt;Data Structures &amp;amp; Algorithms: The Basic Toolbox&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Why start with material that&amp;#39;s intended for an advanced audience to begin with?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jnefh", "flair_text": null, "created": 1349749186.0, "created_utc": 1349745586.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1158wm", "children": [], "author": "jabagawee", "id": "c6jg6wv", "parent_id": "t3_1158wm", "score": 0, "approved_by": null, "upvotes": 7, "body": "    function naiveSearch(needle, haystack){\n        for (var i = 0; i &lt; haystack.length; i++){ // Theta(N) runtime\n            if (haystack[i] == needle) { return needle; }\n        }\n        return false;\n    }\n\n&gt; Fortunately, we can do better than this for search.\n\n    sortedHaystack = recursiveSort(haystack); // Omega(N log N)\n    function bSearch(needle, sortedHaystack, firstIteration){ // Theta(log N)\n        if (firstIteration){\n            if (needle &gt; sortedHaystack.last || needle &lt; sortedHaystack.first){\n                return false;\n            }\n        }\n        if (haystack.length == 2){\n            if (needle == haystack[0]) {\n                return haystack[0];\n                } else {\n                return haystack[1];\n                }\n        }\n        if (needle &lt; haystack[haystack.length/2]){\n            bSearch(needle, haystack[0..haystack.length/2 -1], false);\n        } else {\n            bSearch(needle, haystack[haystack.length/2..haystack.length], false);\n        }\n    }\n\n&amp;#3232;\\_&amp;#3232; There's a time and place for the correct algorithms, and quicksort/mergesort and binary search are two very powerful algorithms. However if the article intends to talk about when this time and where this place is, it better get things right.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;pre&gt;&lt;code&gt;function naiveSearch(needle, haystack){\n    for (var i = 0; i &amp;lt; haystack.length; i++){ // Theta(N) runtime\n        if (haystack[i] == needle) { return needle; }\n    }\n    return false;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Fortunately, we can do better than this for search.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre&gt;&lt;code&gt;sortedHaystack = recursiveSort(haystack); // Omega(N log N)\nfunction bSearch(needle, sortedHaystack, firstIteration){ // Theta(log N)\n    if (firstIteration){\n        if (needle &amp;gt; sortedHaystack.last || needle &amp;lt; sortedHaystack.first){\n            return false;\n        }\n    }\n    if (haystack.length == 2){\n        if (needle == haystack[0]) {\n            return haystack[0];\n            } else {\n            return haystack[1];\n            }\n    }\n    if (needle &amp;lt; haystack[haystack.length/2]){\n        bSearch(needle, haystack[0..haystack.length/2 -1], false);\n    } else {\n        bSearch(needle, haystack[haystack.length/2..haystack.length], false);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#3232;_&amp;#3232; There&amp;#39;s a time and place for the correct algorithms, and quicksort/mergesort and binary search are two very powerful algorithms. However if the article intends to talk about when this time and where this place is, it better get things right.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jg6wv", "flair_text": null, "created": 1349722805.0, "created_utc": 1349719205.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_1158wm", "children": [], "author": "xivSolutions", "id": "c6jfyyk", "parent_id": "t3_1158wm", "score": 0, "approved_by": null, "upvotes": 3, "body": "I am one of those who has taught myself most of what I know about programming. I recognize that, with the exception of some of the basic control-flow structures, much of what I do is more about gluing API's together than classical *programming*. \n\nI am hoping some disciplined research into algorithms, starting at about the level of this article and working my way up, will help me break out of that, and into \"real\" programming know-how. \n\nAt least, until I can take a couple years off work and go back to school!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I am one of those who has taught myself most of what I know about programming. I recognize that, with the exception of some of the basic control-flow structures, much of what I do is more about gluing API&amp;#39;s together than classical &lt;em&gt;programming&lt;/em&gt;. &lt;/p&gt;\n\n&lt;p&gt;I am hoping some disciplined research into algorithms, starting at about the level of this article and working my way up, will help me break out of that, and into &amp;quot;real&amp;quot; programming know-how. &lt;/p&gt;\n\n&lt;p&gt;At least, until I can take a couple years off work and go back to school!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jfyyk", "flair_text": null, "created": 1349721989.0, "created_utc": 1349718389.0, "num_reports": null}], "score": 32, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 56, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/1158wm/understanding_the_principles_of_algorithm_design/", "has_more_comments": false, "name": "t3_1158wm", "created": 1349719500.0, "url": "http://net.tutsplus.com/tutorials/tools-and-tips/understanding-the-principles-of-algorithm-design/", "author_flair_text": null, "author": "xivSolutions", "created_utc": 1349715900.0, "link_flair_text": null, "media": null, "num_reports": null}, "354": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 10, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;As a personal project, I started to write an automated makefile generator that would parse C files and identify their full dependency list based on the #include macro as well as identify if the program contained int main().&lt;/p&gt;\n\n&lt;p&gt;I was able to get the functionality I wanted by implementing an FSM with the rules I wanted, but I&amp;#39;m pretty sure it&amp;#39;s not going to be able to handle edge cases.&lt;/p&gt;\n\n&lt;p&gt;I know that the best way to go about this would probably be to create some sort of parser that utilizes grammar rules, but as a freshman in Comp Sci, I have no idea where to even begin finding a resource. It seems every source I can find on the topic is written with more discrete math than I understand.&lt;/p&gt;\n\n&lt;p&gt;Is there a simple, down-to-earth way to learn about what I&amp;#39;m trying to do? And if so, where? Or am I going to have to take a couple of discrete math courses first.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "As a personal project, I started to write an automated makefile generator that would parse C files and identify their full dependency list based on the #include macro as well as identify if the program contained int main().\n\nI was able to get the functionality I wanted by implementing an FSM with the rules I wanted, but I'm pretty sure it's not going to be able to handle edge cases.\n\nI know that the best way to go about this would probably be to create some sort of parser that utilizes grammar rules, but as a freshman in Comp Sci, I have no idea where to even begin finding a resource. It seems every source I can find on the topic is written with more discrete math than I understand.\n\nIs there a simple, down-to-earth way to learn about what I'm trying to do? And if so, where? Or am I going to have to take a couple of discrete math courses first.", "saved": false, "id": "115592", "clicked": false, "title": "Need help finding a good place to learn about grammar and parsers.", "num_comments": 24, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_115592", "children": [], "author": "dazzford", "id": "c6jgg0x", "parent_id": "t3_115592", "score": 0, "approved_by": null, "upvotes": 9, "body": "I would recommend [Antler](http://www.antlr.org/).\nA really nice parser generator with a simple to use IDE.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I would recommend &lt;a href=\"http://www.antlr.org/\"&gt;Antler&lt;/a&gt;.\nA really nice parser generator with a simple to use IDE.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jgg0x", "flair_text": null, "created": 1349723722.0, "created_utc": 1349720122.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_115592", "children": [], "author": "jutct", "id": "c6jemdl", "parent_id": "t3_115592", "score": 0, "approved_by": null, "upvotes": 8, "body": "Check out the GOLD Parser generator.  There's C grammar files for it.\n\nParsing doesn't require any math skills.  They are made of a tokenizer and either a LALR or Recursive Descent parser.  The tokenizer uses regular expressions to grab tokens from the input stream.  Each token has an ID associated with it.  The grammar is written using token IDs.  Basically, at runtime, the parser will fire an event when it recognizes a grammar construct, such as an if/then statement.  Each element of the statement can be retrieved programmatically, as the original lexer tokens will be associated with the grammar IDs.\n\nAlthough it's pretty dry to read, the Dragon Book is a good source.  Or just Google it.  There's tons of resources online.  To create a lexer (the first step), you will convert regular expressions first to an NFA, then to a DFA.  Optionally, you can optimize the DFA.  Creating an NFA from a regex is pretty simple, just Google it.\n\nI would suggest messing with recursive descent parsing first.  LALR is pretty hard to wrap your head around if you're knew to the whole thing.\n\n\nGood luck!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Check out the GOLD Parser generator.  There&amp;#39;s C grammar files for it.&lt;/p&gt;\n\n&lt;p&gt;Parsing doesn&amp;#39;t require any math skills.  They are made of a tokenizer and either a LALR or Recursive Descent parser.  The tokenizer uses regular expressions to grab tokens from the input stream.  Each token has an ID associated with it.  The grammar is written using token IDs.  Basically, at runtime, the parser will fire an event when it recognizes a grammar construct, such as an if/then statement.  Each element of the statement can be retrieved programmatically, as the original lexer tokens will be associated with the grammar IDs.&lt;/p&gt;\n\n&lt;p&gt;Although it&amp;#39;s pretty dry to read, the Dragon Book is a good source.  Or just Google it.  There&amp;#39;s tons of resources online.  To create a lexer (the first step), you will convert regular expressions first to an NFA, then to a DFA.  Optionally, you can optimize the DFA.  Creating an NFA from a regex is pretty simple, just Google it.&lt;/p&gt;\n\n&lt;p&gt;I would suggest messing with recursive descent parsing first.  LALR is pretty hard to wrap your head around if you&amp;#39;re knew to the whole thing.&lt;/p&gt;\n\n&lt;p&gt;Good luck!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jemdl", "flair_text": null, "created": 1349717002.0, "created_utc": 1349713402.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_115592", "children": [], "author": "oridb", "id": "c6jh304", "parent_id": "t3_115592", "score": 0, "approved_by": null, "upvotes": 2, "body": "As First off, an FSM is effectively equivalent to a regular expression. If all you need is '#include' grepping, it's actually good enough. If you want to parse all of C, you're going to need a real parser. The simplest of these to grok is a recursive descent parser, although it might take a few contortions to do the left factoring. For higher performance and shallower recursion, switch to an operator precedence parser when you get to expressions.\n\nI think now that you know the keywords, you can probably find decent references on your own. If you have trouble, I can try to dig up references, and maybe write up some documentation.\n\nYou can also start from the older ANSI C grammar, and update it from there. (I only suggest it because there's a simple Yacc grammar you can adapt from sitting here:) http://www.lysator.liu.se/c/ANSI-C-grammar-y.html\n\nAs far as real production work, you can probably skip parsing C; you can generate makefile fragments with gcc's `-M ` option. So, for example, in my makefiles, I have this fragment:\n\n    _DEPSDIR = .deps\n    _DEPS=$(addprefix $(_DEPSDIR)/, $(OBJ:.o=.d))\n\n    CFLAGS += -MMD -MP -MF ${_DEPSDIR}/$(subst /,-,$*).d\n\n    -include $(_DEPS)\n\nThis sets the `_DEPS` variable to `.deps/foo.d .deps/bar.d ...`. These .d files are small makefile fragments listing the dependencies for each C file, which get generated by GCC when you pass it the `-M` options above. Including them means that you get dependency information for \"free\".", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As First off, an FSM is effectively equivalent to a regular expression. If all you need is &amp;#39;#include&amp;#39; grepping, it&amp;#39;s actually good enough. If you want to parse all of C, you&amp;#39;re going to need a real parser. The simplest of these to grok is a recursive descent parser, although it might take a few contortions to do the left factoring. For higher performance and shallower recursion, switch to an operator precedence parser when you get to expressions.&lt;/p&gt;\n\n&lt;p&gt;I think now that you know the keywords, you can probably find decent references on your own. If you have trouble, I can try to dig up references, and maybe write up some documentation.&lt;/p&gt;\n\n&lt;p&gt;You can also start from the older ANSI C grammar, and update it from there. (I only suggest it because there&amp;#39;s a simple Yacc grammar you can adapt from sitting here:) &lt;a href=\"http://www.lysator.liu.se/c/ANSI-C-grammar-y.html\"&gt;http://www.lysator.liu.se/c/ANSI-C-grammar-y.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;As far as real production work, you can probably skip parsing C; you can generate makefile fragments with gcc&amp;#39;s &lt;code&gt;-M&lt;/code&gt; option. So, for example, in my makefiles, I have this fragment:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;_DEPSDIR = .deps\n_DEPS=$(addprefix $(_DEPSDIR)/, $(OBJ:.o=.d))\n\nCFLAGS += -MMD -MP -MF ${_DEPSDIR}/$(subst /,-,$*).d\n\n-include $(_DEPS)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This sets the &lt;code&gt;_DEPS&lt;/code&gt; variable to &lt;code&gt;.deps/foo.d .deps/bar.d ...&lt;/code&gt;. These .d files are small makefile fragments listing the dependencies for each C file, which get generated by GCC when you pass it the &lt;code&gt;-M&lt;/code&gt; options above. Including them means that you get dependency information for &amp;quot;free&amp;quot;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jh304", "flair_text": null, "created": 1349726056.0, "created_utc": 1349722456.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_115592", "children": [], "author": "eigenheckler", "id": "c6jh31f", "parent_id": "t3_115592", "score": 0, "approved_by": null, "upvotes": 1, "body": "If you are only looking at #include statements and function definitions, you can get away with using an FSM, because there aren't arbitrary numbers of balanced symbols. Writing [an FSM to handle #include &lt;whatever1.h&gt; (SVG image)](http://hackingoff.com/images/re2nfa/2012-10-08_11-49-09_-0700-nfa.svg) is easy.\n\nWriting one to handle \"int main(whatever) {\" is also trivial.\n\nYou could just write something that scans files line by line for matches on regular expressions (which FSMs often drive).\n\nAll of that said, if you want to extend your program to do more stuff later, you'll be in trouble, because C (and most programming languages) are not regular. This means you can't use a FSM to handle balanced ()s, []s, {}s, and so on. That's where [CFGs (Context Free Grammars)](http://en.wikipedia.org/wiki/Context-free_grammar) and full fledged parsers come in.\n\nIf you need/want something to test against, [NmDepend](http://www.muftor.com/Wikka/wikka.php?wakka=NmDepend) graphs C and C++ dependencies using [GraphViz](http://www.graphviz.org/).\n\n\u00a0\n\n**_________________________**\n\n\u00a0\n\nNow, answering in a bit more detail than necessary:\n\n**If you potentially plan to go further with your tool**, then you should instead consider building it using [ANTLR](http://antlr.org/), a robust, mature parser generator framework with lots of documentation.\n\nDoing all of the obnoxious grunt work that ANTLR gets out of your way gets covered in an often junior or senior level course on compilers. You don't need that or much background in discrete math to use ANTLR. (As long as you know what sets are, and what unions and intersections are, you should be in good shape.)\n\n&gt;I was able to get the functionality I wanted by implementing an FSM with the rules I wanted, but I'm pretty sure it's not going to be able to handle edge cases.\n\nCan you give an example of an edge case you'd run into with #include or main declarations? Finite state machines can handle regular languages (e.g. stuff not including arbitrary amount of matched symbols like parens, braces, brackets, as mentioned up above). However, they're good for [tokenizing](http://en.wikipedia.org/wiki/Tokenizing) (breaking input up into discrete, classified components for the parser).\n\nLexical analyzer generators like [Lex](http://en.wikipedia.org/wiki/Lex_(software)) and [hackingoff.com's Scanner Generator](http://hackingoff.com/compilers/scanner-generator) use deterministic finite state machines to that end. Said [scanner generator](http://hackingoff.com/compilers/scanner-generator) is handy for debugging custom token definitions, because you can rapidly tweak token definitions and test against input from within your browser.\n\nIf you ever need to explicitly do stuff with finite state machines (protocol implementations, etc.) [Ragel](http://www.complang.org/ragel/) is a pretty mature, well-documented tool for it. But it's not what you want for regular languages.", "edited": 1349723411.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you are only looking at #include statements and function definitions, you can get away with using an FSM, because there aren&amp;#39;t arbitrary numbers of balanced symbols. Writing &lt;a href=\"http://hackingoff.com/images/re2nfa/2012-10-08_11-49-09_-0700-nfa.svg\"&gt;an FSM to handle #include &amp;lt;whatever1.h&amp;gt; (SVG image)&lt;/a&gt; is easy.&lt;/p&gt;\n\n&lt;p&gt;Writing one to handle &amp;quot;int main(whatever) {&amp;quot; is also trivial.&lt;/p&gt;\n\n&lt;p&gt;You could just write something that scans files line by line for matches on regular expressions (which FSMs often drive).&lt;/p&gt;\n\n&lt;p&gt;All of that said, if you want to extend your program to do more stuff later, you&amp;#39;ll be in trouble, because C (and most programming languages) are not regular. This means you can&amp;#39;t use a FSM to handle balanced ()s, []s, {}s, and so on. That&amp;#39;s where &lt;a href=\"http://en.wikipedia.org/wiki/Context-free_grammar\"&gt;CFGs (Context Free Grammars)&lt;/a&gt; and full fledged parsers come in.&lt;/p&gt;\n\n&lt;p&gt;If you need/want something to test against, &lt;a href=\"http://www.muftor.com/Wikka/wikka.php?wakka=NmDepend\"&gt;NmDepend&lt;/a&gt; graphs C and C++ dependencies using &lt;a href=\"http://www.graphviz.org/\"&gt;GraphViz&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;\u00a0&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;_________________________&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;\u00a0&lt;/p&gt;\n\n&lt;p&gt;Now, answering in a bit more detail than necessary:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;If you potentially plan to go further with your tool&lt;/strong&gt;, then you should instead consider building it using &lt;a href=\"http://antlr.org/\"&gt;ANTLR&lt;/a&gt;, a robust, mature parser generator framework with lots of documentation.&lt;/p&gt;\n\n&lt;p&gt;Doing all of the obnoxious grunt work that ANTLR gets out of your way gets covered in an often junior or senior level course on compilers. You don&amp;#39;t need that or much background in discrete math to use ANTLR. (As long as you know what sets are, and what unions and intersections are, you should be in good shape.)&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;I was able to get the functionality I wanted by implementing an FSM with the rules I wanted, but I&amp;#39;m pretty sure it&amp;#39;s not going to be able to handle edge cases.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Can you give an example of an edge case you&amp;#39;d run into with #include or main declarations? Finite state machines can handle regular languages (e.g. stuff not including arbitrary amount of matched symbols like parens, braces, brackets, as mentioned up above). However, they&amp;#39;re good for &lt;a href=\"http://en.wikipedia.org/wiki/Tokenizing\"&gt;tokenizing&lt;/a&gt; (breaking input up into discrete, classified components for the parser).&lt;/p&gt;\n\n&lt;p&gt;Lexical analyzer generators like &lt;a href=\"http://en.wikipedia.org/wiki/Lex_(software\"&gt;Lex&lt;/a&gt;) and &lt;a href=\"http://hackingoff.com/compilers/scanner-generator\"&gt;hackingoff.com&amp;#39;s Scanner Generator&lt;/a&gt; use deterministic finite state machines to that end. Said &lt;a href=\"http://hackingoff.com/compilers/scanner-generator\"&gt;scanner generator&lt;/a&gt; is handy for debugging custom token definitions, because you can rapidly tweak token definitions and test against input from within your browser.&lt;/p&gt;\n\n&lt;p&gt;If you ever need to explicitly do stuff with finite state machines (protocol implementations, etc.) &lt;a href=\"http://www.complang.org/ragel/\"&gt;Ragel&lt;/a&gt; is a pretty mature, well-documented tool for it. But it&amp;#39;s not what you want for regular languages.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jh31f", "flair_text": null, "created": 1349726060.0, "created_utc": 1349722460.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_115592", "children": [], "author": "zzing", "id": "c6jh89k", "parent_id": "t3_115592", "score": 0, "approved_by": null, "upvotes": 1, "body": "You might want to look in Parsec from Haskell, or Boost::Spirit in C++. Both are parser combinators and are rather nice to work with (once you get the hang of them).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You might want to look in Parsec from Haskell, or Boost::Spirit in C++. Both are parser combinators and are rather nice to work with (once you get the hang of them).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jh89k", "flair_text": null, "created": 1349726578.0, "created_utc": 1349722978.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_115592", "children": [], "author": "tef", "id": "c6jmbkw", "parent_id": "t3_115592", "score": 0, "approved_by": null, "upvotes": 2, "body": "The book 'parsing techniques' is a treasure ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The book &amp;#39;parsing techniques&amp;#39; is a treasure &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jmbkw", "flair_text": null, "created": 1349745217.0, "created_utc": 1349741617.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_115592", "children": [], "author": "bhrgunatha", "id": "c6jox05", "parent_id": "t3_115592", "score": 0, "approved_by": null, "upvotes": 2, "body": "You could try taking [Udacity's CS262 course - Programming Languages](http://www.udacity.com/overview/Course/cs262/CourseRev/apr2012)\n\nDespite the title - you won't build a web browser or create a programming language, but it will take you step by step through Finite State Machines, Regular Expressions, Grammars, and some basic Parsing techniques. None of it is formal, but there are quizzes, homework assignments and an exam to test your knowledge. \n\nIt's not going to help you directly with your problem, but I think it's a good, practical guide to get you up and running in a less rigorous mathematical way. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You could try taking &lt;a href=\"http://www.udacity.com/overview/Course/cs262/CourseRev/apr2012\"&gt;Udacity&amp;#39;s CS262 course - Programming Languages&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Despite the title - you won&amp;#39;t build a web browser or create a programming language, but it will take you step by step through Finite State Machines, Regular Expressions, Grammars, and some basic Parsing techniques. None of it is formal, but there are quizzes, homework assignments and an exam to test your knowledge. &lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s not going to help you directly with your problem, but I think it&amp;#39;s a good, practical guide to get you up and running in a less rigorous mathematical way. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jox05", "flair_text": null, "created": 1349754550.0, "created_utc": 1349750950.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_115592", "children": [], "author": "bart2019", "id": "c6jtlc5", "parent_id": "t3_115592", "score": 0, "approved_by": null, "upvotes": 1, "body": "If you don't mind Perl, [Marpa](http://jeffreykegler.github.com/Marpa/) could be interesting. I've had an eye on it for a long time, though I've never actually tried it out. Yet.\n\n([Libmarpa](http://jeffreykegler.github.com/Marpa/libmarpa.html) is a C library of the same.)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you don&amp;#39;t mind Perl, &lt;a href=\"http://jeffreykegler.github.com/Marpa/\"&gt;Marpa&lt;/a&gt; could be interesting. I&amp;#39;ve had an eye on it for a long time, though I&amp;#39;ve never actually tried it out. Yet.&lt;/p&gt;\n\n&lt;p&gt;(&lt;a href=\"http://jeffreykegler.github.com/Marpa/libmarpa.html\"&gt;Libmarpa&lt;/a&gt; is a C library of the same.)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jtlc5", "flair_text": null, "created": 1349783768.0, "created_utc": 1349780168.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_115592", "children": [], "author": "sixstringartist", "id": "c6jg9d9", "parent_id": "t3_115592", "score": 0, "approved_by": null, "upvotes": 3, "body": "Are you aware of Cmake? Also Clang? Clang already has a tool for generating header dependancies, and cmake is great for generating makefiles. Im not sure if these tools cover everything you desire (or if you just want to do it anyway for personal gain), but I wouldnt want you to put a lot of effort into this and then find something that already does it.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Are you aware of Cmake? Also Clang? Clang already has a tool for generating header dependancies, and cmake is great for generating makefiles. Im not sure if these tools cover everything you desire (or if you just want to do it anyway for personal gain), but I wouldnt want you to put a lot of effort into this and then find something that already does it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jg9d9", "flair_text": null, "created": 1349723045.0, "created_utc": 1349719445.0, "num_reports": null}], "score": 31, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 41, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/115592/need_help_finding_a_good_place_to_learn_about/", "has_more_comments": false, "name": "t3_115592", "created": 1349715974.0, "url": "http://www.reddit.com/r/compsci/comments/115592/need_help_finding_a_good_place_to_learn_about/", "author_flair_text": null, "author": "[deleted]", "created_utc": 1349712374.0, "link_flair_text": null, "media": null, "num_reports": null}, "355": {"domain": "recursivedrawing.com", "link_flair_class": null, "banned_by": null, "downvotes": 17, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "114inn", "clicked": false, "title": "Recursive Drawing with Video Demonstration", "num_comments": 10, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_114inn", "children": [], "author": "DXQRYW", "id": "c6ja37e", "parent_id": "t3_114inn", "score": 0, "approved_by": null, "upvotes": 13, "body": "Why would you link to the completely unintelligible draw.html page when the website has a perfectly good explanation video and instruction set?\n\nhttp://recursivedrawing.com/\n\nEdit: Sorry for being a dick.  It really is a cool site, thank's for sharing :)", "edited": 1350243135.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Why would you link to the completely unintelligible draw.html page when the website has a perfectly good explanation video and instruction set?&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://recursivedrawing.com/\"&gt;http://recursivedrawing.com/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: Sorry for being a dick.  It really is a cool site, thank&amp;#39;s for sharing :)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ja37e", "flair_text": null, "created": 1349685598.0, "created_utc": 1349681998.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_114inn", "children": [], "author": "rayo2nd", "id": "c6jawvb", "parent_id": "t3_114inn", "score": 0, "approved_by": null, "upvotes": 8, "body": "Needs:\n\n * a database of shapes created by others\n * a link to share created images", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Needs:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;a database of shapes created by others&lt;/li&gt;\n&lt;li&gt;a link to share created images&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jawvb", "flair_text": null, "created": 1349693660.0, "created_utc": 1349690060.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_114inn", "children": [], "author": "redexme", "id": "c6j9qh3", "parent_id": "t3_114inn", "score": 0, "approved_by": null, "upvotes": 2, "body": "What do you mean by \"recursive\"?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What do you mean by &amp;quot;recursive&amp;quot;?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6j9qh3", "flair_text": null, "created": 1349683090.0, "created_utc": 1349679490.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_114inn", "children": [], "author": "5outh", "id": "c6jbwm2", "parent_id": "t3_114inn", "score": 0, "approved_by": null, "upvotes": 4, "body": "This is a brilliant idea, and I love it.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is a brilliant idea, and I love it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jbwm2", "flair_text": null, "created": 1349703927.0, "created_utc": 1349700327.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_114inn", "children": [], "author": "rarededilerore", "id": "c6je5lx", "parent_id": "t3_114inn", "score": 0, "approved_by": null, "upvotes": 4, "body": "Here\u2019s my sloppy [Sierpinski triangle](http://imgur.com/0bPuy).", "edited": 1349718783.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here\u2019s my sloppy &lt;a href=\"http://imgur.com/0bPuy\"&gt;Sierpinski triangle&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6je5lx", "flair_text": null, "created": 1349715176.0, "created_utc": 1349711576.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_114inn", "children": [], "author": "zazerr", "id": "c6jew1p", "parent_id": "t3_114inn", "score": 0, "approved_by": null, "upvotes": 1, "body": "[Instructions](https://news.ycombinator.com/item?id=3951499) (if you don't want to watch the video).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://news.ycombinator.com/item?id=3951499\"&gt;Instructions&lt;/a&gt; (if you don&amp;#39;t want to watch the video).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jew1p", "flair_text": null, "created": 1349718007.0, "created_utc": 1349714407.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_114inn", "children": [], "author": "KalamMekhar", "id": "c6k5eho", "parent_id": "t3_114inn", "score": 0, "approved_by": null, "upvotes": 2, "body": "Here are some pretty basic drawings I did:\n\nhttp://i.imgur.com/P3Bmd.jpg\n\nhttp://i.minus.com/ibuTGzd9F3tqy4.PNG\n\nhttp://i.minus.com/ibwaqhSH1RrxFo.PNG\n\nhttp://i.imgur.com/B1ya7.png\n\nhttp://i.imgur.com/RORBs.png\n\nhttp://i.imgur.com/uSTVH.png", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here are some pretty basic drawings I did:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://i.imgur.com/P3Bmd.jpg\"&gt;http://i.imgur.com/P3Bmd.jpg&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://i.minus.com/ibuTGzd9F3tqy4.PNG\"&gt;http://i.minus.com/ibuTGzd9F3tqy4.PNG&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://i.minus.com/ibwaqhSH1RrxFo.PNG\"&gt;http://i.minus.com/ibwaqhSH1RrxFo.PNG&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://i.imgur.com/B1ya7.png\"&gt;http://i.imgur.com/B1ya7.png&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://i.imgur.com/RORBs.png\"&gt;http://i.imgur.com/RORBs.png&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://i.imgur.com/uSTVH.png\"&gt;http://i.imgur.com/uSTVH.png&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6k5eho", "flair_text": null, "created": 1349834155.0, "created_utc": 1349830555.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_114inn", "children": [], "author": "szienze", "id": "c6jawu8", "parent_id": "t3_114inn", "score": 0, "approved_by": null, "upvotes": 3, "body": "Very interesting. Needs colors!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Very interesting. Needs colors!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jawu8", "flair_text": null, "created": 1349693653.0, "created_utc": 1349690053.0, "num_reports": null}], "score": 25, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 42, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/114inn/recursive_drawing_with_video_demonstration/", "has_more_comments": false, "name": "t3_114inn", "created": 1349678186.0, "url": "http://recursivedrawing.com/draw.html", "author_flair_text": null, "author": "tubadammit69", "created_utc": 1349674586.0, "link_flair_text": null, "media": null, "num_reports": null}, "356": {"domain": "tulip.labri.fr", "link_flair_class": null, "banned_by": null, "downvotes": 6, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "114y63", "clicked": false, "title": "Tulip 4.0, a graph visualization software sees its 4.0 release (x-post from /r/programmming)", "num_comments": 0, "comments": [], "score": 4, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 10, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/114y63/tulip_40_a_graph_visualization_software_sees_its/", "has_more_comments": false, "name": "t3_114y63", "created": 1349708090.0, "url": "http://tulip.labri.fr/TulipDrupal/?q=node/1891", "author_flair_text": null, "author": "packadal", "created_utc": 1349704490.0, "link_flair_text": null, "media": null, "num_reports": null}, "357": {"domain": "aeonmagazine.com", "link_flair_class": null, "banned_by": null, "downvotes": 27, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "11109d", "clicked": false, "title": "Deutsch: The laws of physics imply that artificial intelligence must be possible. What's holding us up?", "num_comments": 54, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_11109d", "children": [], "author": "rudster", "id": "c6ijm5e", "parent_id": "t3_11109d", "score": 0, "approved_by": null, "upvotes": 16, "body": "There's a huge leap between \"artificial intelligence must be possible,\" and \"understanding in detail how it works must be possible.\"  By all appearances, our brains are an enormous conglomerate of hacks and spaghetti wiring. There may be no simpler design, and ultimately AI may *need* to be generated by some sort of evolutionary process (artificial or not), and even if produced by us in a lab may remain mysterious to us (i.e., there's no explanation simple enough for even our brightest scientists to make any sense of).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There&amp;#39;s a huge leap between &amp;quot;artificial intelligence must be possible,&amp;quot; and &amp;quot;understanding in detail how it works must be possible.&amp;quot;  By all appearances, our brains are an enormous conglomerate of hacks and spaghetti wiring. There may be no simpler design, and ultimately AI may &lt;em&gt;need&lt;/em&gt; to be generated by some sort of evolutionary process (artificial or not), and even if produced by us in a lab may remain mysterious to us (i.e., there&amp;#39;s no explanation simple enough for even our brightest scientists to make any sense of).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ijm5e", "flair_text": null, "created": 1349550608.0, "created_utc": 1349547008.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_11109d", "children": [], "author": "moor-GAYZ", "id": "c6ihn2d", "parent_id": "t3_11109d", "score": 0, "approved_by": null, "upvotes": 28, "body": "His criticism is good, but when he begins to speak about his own ideas...\n\n&gt; Thinking of an AGI as a machine for translating experiences, rewards and punishments into ideas (or worse, just into behaviours) is like trying to cure infectious diseases by balancing bodily humours: futile because it is rooted in an archaic and wildly mistaken world view.\n\nThat may be, but here's the thing: humans do not pop out of vaginas with the ability to create theories by conjecture and criticism. In fact they don't learn to use this ability properly, fully consciously, for like five to ten years. And they don't acquire it in a sudden flash of enlightenment, but gradually, and not always even completely. So this ability can't be all that \"qualitatively different\", either you have it or not, as he makes it to be.\n\nOn one hand this means that it makes sense to learn to make a fruit-fly-level intelligence first, before an ape-like, and toddler-like, and maybe then it would become clear how to move from that to human-level intelligence. It happens in nature that way, so it probably could be reproduced.\n\nOn the other hand his optimism regarding the possibility of bypassing all the intermediate steps and propelling ourselves straight to AGI with a purely philosophical breakthrough seems quite unfounded.\n\n&gt; Clearing this logjam will not, by itself, provide the answer. Yet the answer, conceived in those terms, cannot be all that difficult. For yet another consequence of understanding that the target ability is qualitatively different is that, since humans have it and apes do not, the information for how to achieve it must be encoded in the relatively tiny number of differences between the DNA of humans and that of chimpanzees.\n\nGuys, you guys, I have a better idea, let's examine the differences between the DNA of toddlers and grownups, the answer _must_ be there, guys?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;His criticism is good, but when he begins to speak about his own ideas...&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Thinking of an AGI as a machine for translating experiences, rewards and punishments into ideas (or worse, just into behaviours) is like trying to cure infectious diseases by balancing bodily humours: futile because it is rooted in an archaic and wildly mistaken world view.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;That may be, but here&amp;#39;s the thing: humans do not pop out of vaginas with the ability to create theories by conjecture and criticism. In fact they don&amp;#39;t learn to use this ability properly, fully consciously, for like five to ten years. And they don&amp;#39;t acquire it in a sudden flash of enlightenment, but gradually, and not always even completely. So this ability can&amp;#39;t be all that &amp;quot;qualitatively different&amp;quot;, either you have it or not, as he makes it to be.&lt;/p&gt;\n\n&lt;p&gt;On one hand this means that it makes sense to learn to make a fruit-fly-level intelligence first, before an ape-like, and toddler-like, and maybe then it would become clear how to move from that to human-level intelligence. It happens in nature that way, so it probably could be reproduced.&lt;/p&gt;\n\n&lt;p&gt;On the other hand his optimism regarding the possibility of bypassing all the intermediate steps and propelling ourselves straight to AGI with a purely philosophical breakthrough seems quite unfounded.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Clearing this logjam will not, by itself, provide the answer. Yet the answer, conceived in those terms, cannot be all that difficult. For yet another consequence of understanding that the target ability is qualitatively different is that, since humans have it and apes do not, the information for how to achieve it must be encoded in the relatively tiny number of differences between the DNA of humans and that of chimpanzees.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Guys, you guys, I have a better idea, let&amp;#39;s examine the differences between the DNA of toddlers and grownups, the answer &lt;em&gt;must&lt;/em&gt; be there, guys?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ihn2d", "flair_text": null, "created": 1349540798.0, "created_utc": 1349537198.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_11109d", "children": [], "author": "bo1024", "id": "c6ilx7h", "parent_id": "t3_11109d", "score": 0, "approved_by": null, "upvotes": 9, "body": "I did not like this article. For one, I think the disrespect toward the accomplishments made in AI is untrue and unwarranted. I also don't see any basis for his claims that AGI will require a fundamental new insight/shift in thinking.\n\nAn ant has about 250,000 neurons, meaning that just to write down an adjacency matrix describing its connections would require something like 250 GB. Figuring out how to actually simulate it would require orders of magnitude more computing power than that.\n\nThat's an *ant*. I doubt Deutsch would consider a simulation of an ant to be true AGI, and we're probably barely capable of that right now. So I don't see why he dismisses the argument that our hardware isn't yet up to the challenge.\n\nTo me it sounds like Deutsch, as smart of a guy as he is, seems to vastly underestimate the incredible hardware that is our brains.\n\nEdit: After thinking about it, I'd phrase my objection like this. Deutsch seems to think there is something amazingly special that separates human thinking from, say, that of mice. But we are still very far even from building computers as smart and adaptive to new situations as mice are (as far as I know). So this special human factor can't be the bottleneck; not yet.", "edited": 1349561967.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I did not like this article. For one, I think the disrespect toward the accomplishments made in AI is untrue and unwarranted. I also don&amp;#39;t see any basis for his claims that AGI will require a fundamental new insight/shift in thinking.&lt;/p&gt;\n\n&lt;p&gt;An ant has about 250,000 neurons, meaning that just to write down an adjacency matrix describing its connections would require something like 250 GB. Figuring out how to actually simulate it would require orders of magnitude more computing power than that.&lt;/p&gt;\n\n&lt;p&gt;That&amp;#39;s an &lt;em&gt;ant&lt;/em&gt;. I doubt Deutsch would consider a simulation of an ant to be true AGI, and we&amp;#39;re probably barely capable of that right now. So I don&amp;#39;t see why he dismisses the argument that our hardware isn&amp;#39;t yet up to the challenge.&lt;/p&gt;\n\n&lt;p&gt;To me it sounds like Deutsch, as smart of a guy as he is, seems to vastly underestimate the incredible hardware that is our brains.&lt;/p&gt;\n\n&lt;p&gt;Edit: After thinking about it, I&amp;#39;d phrase my objection like this. Deutsch seems to think there is something amazingly special that separates human thinking from, say, that of mice. But we are still very far even from building computers as smart and adaptive to new situations as mice are (as far as I know). So this special human factor can&amp;#39;t be the bottleneck; not yet.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ilx7h", "flair_text": null, "created": 1349561155.0, "created_utc": 1349557555.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_11109d", "children": [], "author": "keten", "id": "c6iizvb", "parent_id": "t3_11109d", "score": 0, "approved_by": null, "upvotes": 4, "body": "I don't quite understand why he focuses on computers not being able to create explanations. Because they can. There are proof algorithms that produce the intermediary steps that lead to a final result. I believe that counts as creating a new explanation.\n\nNow we certainly don't have anything as sophisticated as taking arbitrary human language input and proving that but doesn't that merely reflect the complexity of the human language rather then showing how computers can't create explanations.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t quite understand why he focuses on computers not being able to create explanations. Because they can. There are proof algorithms that produce the intermediary steps that lead to a final result. I believe that counts as creating a new explanation.&lt;/p&gt;\n\n&lt;p&gt;Now we certainly don&amp;#39;t have anything as sophisticated as taking arbitrary human language input and proving that but doesn&amp;#39;t that merely reflect the complexity of the human language rather then showing how computers can&amp;#39;t create explanations.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6iizvb", "flair_text": null, "created": 1349547709.0, "created_utc": 1349544109.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_11109d", "children": [], "author": "conscioncience", "id": "c6irg1u", "parent_id": "t3_11109d", "score": 0, "approved_by": null, "upvotes": 1, "body": "&gt; Estimates vary for an adult, ranging from 1014 to 5 x 1014 synapses (100 to 500 trillion).\n\nNow simulate all those connections and their ability to organically rearrange. Its a problem of computational ability, not of approach.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Estimates vary for an adult, ranging from 1014 to 5 x 1014 synapses (100 to 500 trillion).&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Now simulate all those connections and their ability to organically rearrange. Its a problem of computational ability, not of approach.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6irg1u", "flair_text": null, "created": 1349586175.0, "created_utc": 1349582575.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_11109d", "children": [], "author": "jmmcd", "id": "c6jc0g8", "parent_id": "t3_11109d", "score": 0, "approved_by": null, "upvotes": 1, "body": "A lot to like here, and then some disappointing incoherence :-/\n\n&gt; So, in this case, and actually in all other cases of programming genuine AGI, only an algorithm with the right functionality would suffice. But writing that algorithm (without first making new discoveries in physics and hiding them in the program) is exactly what you wanted the programmers to do!\n\n\"hiding them in the program\" is a misunderstanding. Hiding them *in the test* is what's really happening. A program that passed such a test would indeed have demonstrated the type of creativity we want. It just wouldn't be useful (yet) because it would only have produced an answer we already knew. But if it passed several such tests we might decide to run it on a new problem.\n\n&gt;Traditionally, discussions of AGI have evaded that issue by imagining only a test of the program, not its specification \u2014 the traditional test having been proposed by Turing himself. It was that (human) judges be unable to detect whether the program is human or not, when interacting with it via some purely textual medium so that only its cognitive abilities would affect the outcome. But that test, being purely behavioural, gives no clue for how to meet the criterion.\n\nDoesn't mean it's not a useful test.\n\n&gt; Nor can it be met by the technique of \u2018evolutionary algorithms\u2019:\n\nBizarre non-sequitur.\n\n&gt; the Turing test cannot itself be automated without first knowing how to write an AGI program, since the \u2018judges\u2019 of a program need to have the target ability themselves. \n\nNo they don't, and anyway we don't need to automate the Turing test. Not even for an evolutionary algorithm, strictly speaking. But if we do want to automate it, we can do lots of approximations which would serve just fine for the first several million generations.\n\n&gt; And in any case, AGI cannot possibly be defined purely behaviourally. In the classic \u2018brain in a vat\u2019 thought experiment, the brain, when temporarily disconnected from its input and output channels, is thinking, feeling, creating explanations \u2014 it has all the cognitive attributes of an AGI. So the relevant attributes of an AGI program do not consist only of the relationships between its inputs and outputs.\n\nI think this line of argument defeats Deutsch, rather than supporting him.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A lot to like here, and then some disappointing incoherence :-/&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;So, in this case, and actually in all other cases of programming genuine AGI, only an algorithm with the right functionality would suffice. But writing that algorithm (without first making new discoveries in physics and hiding them in the program) is exactly what you wanted the programmers to do!&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&amp;quot;hiding them in the program&amp;quot; is a misunderstanding. Hiding them &lt;em&gt;in the test&lt;/em&gt; is what&amp;#39;s really happening. A program that passed such a test would indeed have demonstrated the type of creativity we want. It just wouldn&amp;#39;t be useful (yet) because it would only have produced an answer we already knew. But if it passed several such tests we might decide to run it on a new problem.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Traditionally, discussions of AGI have evaded that issue by imagining only a test of the program, not its specification \u2014 the traditional test having been proposed by Turing himself. It was that (human) judges be unable to detect whether the program is human or not, when interacting with it via some purely textual medium so that only its cognitive abilities would affect the outcome. But that test, being purely behavioural, gives no clue for how to meet the criterion.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Doesn&amp;#39;t mean it&amp;#39;s not a useful test.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Nor can it be met by the technique of \u2018evolutionary algorithms\u2019:&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Bizarre non-sequitur.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;the Turing test cannot itself be automated without first knowing how to write an AGI program, since the \u2018judges\u2019 of a program need to have the target ability themselves. &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;No they don&amp;#39;t, and anyway we don&amp;#39;t need to automate the Turing test. Not even for an evolutionary algorithm, strictly speaking. But if we do want to automate it, we can do lots of approximations which would serve just fine for the first several million generations.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;And in any case, AGI cannot possibly be defined purely behaviourally. In the classic \u2018brain in a vat\u2019 thought experiment, the brain, when temporarily disconnected from its input and output channels, is thinking, feeling, creating explanations \u2014 it has all the cognitive attributes of an AGI. So the relevant attributes of an AGI program do not consist only of the relationships between its inputs and outputs.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I think this line of argument defeats Deutsch, rather than supporting him.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jc0g8", "flair_text": null, "created": 1349704711.0, "created_utc": 1349701111.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_11109d", "children": [], "author": "jmmcd", "id": "c6jc7nu", "parent_id": "t3_11109d", "score": 0, "approved_by": null, "upvotes": 2, "body": "&gt; That AGIs are people has been implicit in the very concept from the outset. If there were a program that lacked even a single cognitive ability that is characteristic of people then by definition it would not qualify as an AGI.\n\nNonsense. An agent that lacked, say, face-recognition, but was able to carry on a good conversation via a terminal and was able to solve lots of problems in diverse domains and write a poem about cherry trees  would be an AGI.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;That AGIs are people has been implicit in the very concept from the outset. If there were a program that lacked even a single cognitive ability that is characteristic of people then by definition it would not qualify as an AGI.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Nonsense. An agent that lacked, say, face-recognition, but was able to carry on a good conversation via a terminal and was able to solve lots of problems in diverse domains and write a poem about cherry trees  would be an AGI.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jc7nu", "flair_text": null, "created": 1349706115.0, "created_utc": 1349702515.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_11109d", "children": [], "author": "mionendy", "id": "c6jsc8y", "parent_id": "t3_11109d", "score": 0, "approved_by": null, "upvotes": 1, "body": "another issue i foresee is even if we come to some philosophical breakthrough on AGI and have at the very least an idea of how to approach it, what if it turns out that the necessary \"algorithms\" are pspace or exptime or worse (which seems likely i guess), and thus nothing we have (or ever will have as long as its a turing machine) will ever be able to realistically solve it (unless we are content with running a simulation for millions of years). as to why our brains can do it, it would be similar to how quantum computers can theoretically solve BQP problems, so we are back again at having to come up with the appropriate hardware. and the only analog we have is our own human brain, which sadly we don't understand well enough. so once again it seems that the only realistic path to AGI is to figure out how our own brain achieves GI. \n\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;another issue i foresee is even if we come to some philosophical breakthrough on AGI and have at the very least an idea of how to approach it, what if it turns out that the necessary &amp;quot;algorithms&amp;quot; are pspace or exptime or worse (which seems likely i guess), and thus nothing we have (or ever will have as long as its a turing machine) will ever be able to realistically solve it (unless we are content with running a simulation for millions of years). as to why our brains can do it, it would be similar to how quantum computers can theoretically solve BQP problems, so we are back again at having to come up with the appropriate hardware. and the only analog we have is our own human brain, which sadly we don&amp;#39;t understand well enough. so once again it seems that the only realistic path to AGI is to figure out how our own brain achieves GI. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jsc8y", "flair_text": null, "created": 1349770425.0, "created_utc": 1349766825.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_11109d", "children": [], "author": "kamatsu", "id": "c6l6kqv", "parent_id": "t3_11109d", "score": 0, "approved_by": null, "upvotes": 1, "body": "I'm not an AI researcher, but I don't think that AI as a field has ever really looked at the idea of reproducing human intelligence as a possibility for decades now.\n\nIt's all about machine learning methods and stuff like that now, forget the Turing Test. In my personal view, this is a good thing. These are useful goals to be setting in research, not questing for a way to reproduce human thought processes - we already have machines that are pretty good at human thought processes: humans. Where conventional computers come in is to do things where human thought processes are weaker (e.g, number crunching, communicating over a great distance, etc.). I don't see how a truly artificial human intelligence could contribute to this end.  ", "edited": 1350002983.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not an AI researcher, but I don&amp;#39;t think that AI as a field has ever really looked at the idea of reproducing human intelligence as a possibility for decades now.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s all about machine learning methods and stuff like that now, forget the Turing Test. In my personal view, this is a good thing. These are useful goals to be setting in research, not questing for a way to reproduce human thought processes - we already have machines that are pretty good at human thought processes: humans. Where conventional computers come in is to do things where human thought processes are weaker (e.g, number crunching, communicating over a great distance, etc.). I don&amp;#39;t see how a truly artificial human intelligence could contribute to this end.  &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6l6kqv", "flair_text": null, "created": 1350006256.0, "created_utc": 1350002656.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_11109d", "children": [], "author": "Snootwaller", "id": "c6lzu18", "parent_id": "t3_11109d", "score": 0, "approved_by": null, "upvotes": 1, "body": "I will argue that the laws of physics do *not* imply that artificial intelligence must be possible.  We have every reason to believe that it is possible, but until it actually happens we must curb our confidence.  Some great thinkers (Roger Penrose just for instance) have suggested that deterministic yet non-algorithmic processes may lie at the core of intelligence.  This is--of course--in direct contradiction to the Church-Turing conjecture.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I will argue that the laws of physics do &lt;em&gt;not&lt;/em&gt; imply that artificial intelligence must be possible.  We have every reason to believe that it is possible, but until it actually happens we must curb our confidence.  Some great thinkers (Roger Penrose just for instance) have suggested that deterministic yet non-algorithmic processes may lie at the core of intelligence.  This is--of course--in direct contradiction to the Church-Turing conjecture.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6lzu18", "flair_text": null, "created": 1350166274.0, "created_utc": 1350162674.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_11109d", "children": [], "author": "NoMoreNicksLeft", "id": "c6ikqny", "parent_id": "t3_11109d", "score": 0, "approved_by": null, "upvotes": 5, "body": "We have the wrong goals. What we need isn't artificial intelligence, but rather *artificial stupidity*.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;We have the wrong goals. What we need isn&amp;#39;t artificial intelligence, but rather &lt;em&gt;artificial stupidity&lt;/em&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ikqny", "flair_text": null, "created": 1349555831.0, "created_utc": 1349552231.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_11109d", "children": [], "author": "luveroftrees", "id": "c6ileik", "parent_id": "t3_11109d", "score": 0, "approved_by": null, "upvotes": 3, "body": "we don't understand how our brains work yet...", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;we don&amp;#39;t understand how our brains work yet...&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ileik", "flair_text": null, "created": 1349559017.0, "created_utc": 1349555417.0, "num_reports": null}], "score": 42, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 69, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/11109d/deutsch_the_laws_of_physics_imply_that_artificial/", "has_more_comments": false, "name": "t3_11109d", "created": 1349497908.0, "url": "http://www.aeonmagazine.com/being-human/david-deutsch-artificial-intelligence/", "author_flair_text": null, "author": "qkdhfjdjdhd", "created_utc": 1349494308.0, "link_flair_text": null, "media": null, "num_reports": null}, "358": {"domain": "patrickcraig.co.uk", "link_flair_class": null, "banned_by": null, "downvotes": 45, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "1100el", "clicked": false, "title": "The $5000 Compression Challenge", "num_comments": 92, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_1100el", "children": [], "author": "Chandon", "id": "c6i4fj1", "parent_id": "t3_1100el", "score": 0, "approved_by": null, "upvotes": 43, "body": "Although Patrick clearly won the bet as worded - Mike screwed up by allowing multiple files with no explicit caveats - he did not in fact \"compress\" the data.\n\nTo properly run this challenge, you'd want to require submissions to be a single self-extracting file. If you can get compression by splitting things into pieces, great, but you've got to store those pieces efficiently yourself.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Although Patrick clearly won the bet as worded - Mike screwed up by allowing multiple files with no explicit caveats - he did not in fact &amp;quot;compress&amp;quot; the data.&lt;/p&gt;\n\n&lt;p&gt;To properly run this challenge, you&amp;#39;d want to require submissions to be a single self-extracting file. If you can get compression by splitting things into pieces, great, but you&amp;#39;ve got to store those pieces efficiently yourself.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6i4fj1", "flair_text": null, "created": 1349464277.0, "created_utc": 1349460677.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 15, "link_id": "t3_1100el", "children": [], "author": "adremeaux", "id": "c6i3rd3", "parent_id": "t3_1100el", "score": 0, "approved_by": null, "upvotes": 87, "body": "I love the solution he came up with. Hilarious. \n\nFor those that haven't read through the whole thing: \n\nPatrick took the 3mb file and broke it up into 218 pieces, each of them ending with a 5. He then removed the 5 from the end of all of those files, and his decompressor was a very simple script that put all the 5s back at the end of the files and combined them all together. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I love the solution he came up with. Hilarious. &lt;/p&gt;\n\n&lt;p&gt;For those that haven&amp;#39;t read through the whole thing: &lt;/p&gt;\n\n&lt;p&gt;Patrick took the 3mb file and broke it up into 218 pieces, each of them ending with a 5. He then removed the 5 from the end of all of those files, and his decompressor was a very simple script that put all the 5s back at the end of the files and combined them all together. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6i3rd3", "flair_text": null, "created": 1349461827.0, "created_utc": 1349458227.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 7, "link_id": "t3_1100el", "children": [], "author": "LastAvailableUser", "id": "c6i47bh", "parent_id": "t3_1100el", "score": 0, "approved_by": null, "upvotes": 51, "body": "If he was required to include the filesystem overhead in the total byte calculation, then making use of the filename to store part of the data should have been allowed within the rules.\n\nAlso, I feel that he was never going to get paid no matter what. Had he completed it in some other way (say his \"gunzip $1\" script) then he would have lost due to the fact that the size of gzip needed to be included in the calculation also. Rules were going to be added to ensure he never won the challenge.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If he was required to include the filesystem overhead in the total byte calculation, then making use of the filename to store part of the data should have been allowed within the rules.&lt;/p&gt;\n\n&lt;p&gt;Also, I feel that he was never going to get paid no matter what. Had he completed it in some other way (say his &amp;quot;gunzip $1&amp;quot; script) then he would have lost due to the fact that the size of gzip needed to be included in the calculation also. Rules were going to be added to ensure he never won the challenge.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6i47bh", "flair_text": null, "created": 1349463431.0, "created_utc": 1349459831.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1100el", "children": [], "author": "AnalyticContinuation", "id": "c6i8r8m", "parent_id": "t3_1100el", "score": 0, "approved_by": null, "upvotes": 12, "body": "Very funny. Of course it isn't really about the theoretical properties of compression at all. It is about making what gamblers call a [prop bet](http://en.wikipedia.org/wiki/Proposition_bet#Secondary_definition). ([Some great examples by Amarillo Slim here.](http://betting.betfair.com/poker/news/amarillo-slim-passes-away-300412-162.html)) \n\nClearly computer science theoreticians are not as familiar with the concept as they need to be, if they want to make $5000 bets. But if you make a challenge with rules, then expect someone to take full advantage of any loopholes you happen to leave open.\n\nAlthough Patrick exploited quite a simple loophole in the end, as he points out earlier on the piece, when you only have to compress a single file there are an enormous number of possible exploits that you might find.\n\n(And I am pretty damn sure that Amarillo Slim would not have been as kind as Patrick in letting Mike off his bet. A bet's a bet!)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Very funny. Of course it isn&amp;#39;t really about the theoretical properties of compression at all. It is about making what gamblers call a &lt;a href=\"http://en.wikipedia.org/wiki/Proposition_bet#Secondary_definition\"&gt;prop bet&lt;/a&gt;. (&lt;a href=\"http://betting.betfair.com/poker/news/amarillo-slim-passes-away-300412-162.html\"&gt;Some great examples by Amarillo Slim here.&lt;/a&gt;) &lt;/p&gt;\n\n&lt;p&gt;Clearly computer science theoreticians are not as familiar with the concept as they need to be, if they want to make $5000 bets. But if you make a challenge with rules, then expect someone to take full advantage of any loopholes you happen to leave open.&lt;/p&gt;\n\n&lt;p&gt;Although Patrick exploited quite a simple loophole in the end, as he points out earlier on the piece, when you only have to compress a single file there are an enormous number of possible exploits that you might find.&lt;/p&gt;\n\n&lt;p&gt;(And I am pretty damn sure that Amarillo Slim would not have been as kind as Patrick in letting Mike off his bet. A bet&amp;#39;s a bet!)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6i8r8m", "flair_text": null, "created": 1349481379.0, "created_utc": 1349477779.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1100el", "children": [], "author": "JustADev", "id": "c6i55x5", "parent_id": "t3_1100el", "score": 0, "approved_by": null, "upvotes": 8, "body": "Is this challenge still up?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is this challenge still up?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6i55x5", "flair_text": null, "created": 1349466992.0, "created_utc": 1349463392.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1100el", "children": [], "author": "zkincaid", "id": "c6iasoh", "parent_id": "t3_1100el", "score": 0, "approved_by": null, "upvotes": 9, "body": "Realistically, this is not an impossible challenge.  From an information theoretic perspective, clearly it is impossible to write a compression algorithm that compresses every possible file by at least one bit.  But that's not what the challenge is asking for.  The challenge is asking for a program that compresses a *given* file by at least one bit.  Now the challenge boils down to whether Mike Goldman can generate an algorithmically random string of a given length.  He can do this with high probability, but it's not feasible to generate a string that's guaranteed to be algorithmically random.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Realistically, this is not an impossible challenge.  From an information theoretic perspective, clearly it is impossible to write a compression algorithm that compresses every possible file by at least one bit.  But that&amp;#39;s not what the challenge is asking for.  The challenge is asking for a program that compresses a &lt;em&gt;given&lt;/em&gt; file by at least one bit.  Now the challenge boils down to whether Mike Goldman can generate an algorithmically random string of a given length.  He can do this with high probability, but it&amp;#39;s not feasible to generate a string that&amp;#39;s guaranteed to be algorithmically random.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6iasoh", "flair_text": null, "created": 1349490685.0, "created_utc": 1349487085.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_1100el", "children": [], "author": "paul_miner", "id": "c6iadud", "parent_id": "t3_1100el", "score": 0, "approved_by": null, "upvotes": 6, "body": "Not really compression, but very clever. By splitting the data into multiple files, he was effectively able to \"hide\" information from the method used to account for information (total file size).\n\nHere's an extreme variation: For every byte in a file, create an output file that is zero bytes, and with a name corresponding to the byte position in the input file and an extension corresponding to the value of the byte. For example, an input file simply containing the string \"Hello\" would be encoded as five files: 0.72, 1.101, 2.108, 3.108, 4.111, each zero bytes, resulting in \"infinite\" \"compression\".\n\nEDIT: Aside from the \"decompressor\" anyway. But it would approach infinity as file size went up.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not really compression, but very clever. By splitting the data into multiple files, he was effectively able to &amp;quot;hide&amp;quot; information from the method used to account for information (total file size).&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s an extreme variation: For every byte in a file, create an output file that is zero bytes, and with a name corresponding to the byte position in the input file and an extension corresponding to the value of the byte. For example, an input file simply containing the string &amp;quot;Hello&amp;quot; would be encoded as five files: 0.72, 1.101, 2.108, 3.108, 4.111, each zero bytes, resulting in &amp;quot;infinite&amp;quot; &amp;quot;compression&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;EDIT: Aside from the &amp;quot;decompressor&amp;quot; anyway. But it would approach infinity as file size went up.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6iadud", "flair_text": null, "created": 1349488822.0, "created_utc": 1349485222.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1100el", "children": [], "author": "freakygeeky", "id": "c6ibv93", "parent_id": "t3_1100el", "score": 0, "approved_by": null, "upvotes": 7, "body": "Christ, what an asshole. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Christ, what an asshole. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ibv93", "flair_text": null, "created": 1349495753.0, "created_utc": 1349492153.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_1100el", "children": [], "author": "trucekill", "id": "c6i54l2", "parent_id": "t3_1100el", "score": 0, "approved_by": null, "upvotes": 14, "body": "What if you write a random number generator, and by brute force identified a seed that would eventually produce that sequence within the memory and cpu limits of a modern system, then just included the rng as the decompressor and the seed plus the starting and ending address of of that sequence as the compressed file?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What if you write a random number generator, and by brute force identified a seed that would eventually produce that sequence within the memory and cpu limits of a modern system, then just included the rng as the decompressor and the seed plus the starting and ending address of of that sequence as the compressed file?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6i54l2", "flair_text": null, "created": 1349466856.0, "created_utc": 1349463256.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1100el", "children": [], "author": "ish123", "id": "c6i827p", "parent_id": "t3_1100el", "score": 0, "approved_by": null, "upvotes": 4, "body": "Excellent read. I actually believe he met the rules of the challenge and deserves to be rewarded. I didn't believe he really compressed the data up until the very end. Afterall, EOF takes up more space than '5'. However, he really is correct - \"It's not my fault that a file system uses up more space storing the same amount of data in two files rather than a single file.\"\n\nTaken to an extreme, if the data was delivered as a series of printed 1s and 0s on physical pieces of paper, and then the compressed data was returned the same way, plus the size of the program, he would have completed the challenge. I guess the size of the program becomes kind of abstract here, but the point is the same - in this case, information hiding definitely appears in bounds according to the stated rules in the email exchange.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Excellent read. I actually believe he met the rules of the challenge and deserves to be rewarded. I didn&amp;#39;t believe he really compressed the data up until the very end. Afterall, EOF takes up more space than &amp;#39;5&amp;#39;. However, he really is correct - &amp;quot;It&amp;#39;s not my fault that a file system uses up more space storing the same amount of data in two files rather than a single file.&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;Taken to an extreme, if the data was delivered as a series of printed 1s and 0s on physical pieces of paper, and then the compressed data was returned the same way, plus the size of the program, he would have completed the challenge. I guess the size of the program becomes kind of abstract here, but the point is the same - in this case, information hiding definitely appears in bounds according to the stated rules in the email exchange.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6i827p", "flair_text": null, "created": 1349478288.0, "created_utc": 1349474688.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 11, "link_id": "t3_1100el", "children": [], "author": "FloppyDonkeyDick", "id": "c6i61rg", "parent_id": "t3_1100el", "score": 0, "approved_by": null, "upvotes": 23, "body": "Troll trolling troll.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Troll trolling troll.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6i61rg", "flair_text": null, "created": 1349470333.0, "created_utc": 1349466733.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_1100el", "children": [], "author": "schrobe", "id": "c6i8v9e", "parent_id": "t3_1100el", "score": 0, "approved_by": null, "upvotes": 7, "body": "I read this like a nerd-drama!\n\nAre there more such amazing storys about challenges of this type? Maybe one that actually ended up in a useful contribution for improving some kind of technology?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I read this like a nerd-drama!&lt;/p&gt;\n\n&lt;p&gt;Are there more such amazing storys about challenges of this type? Maybe one that actually ended up in a useful contribution for improving some kind of technology?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6i8v9e", "flair_text": null, "created": 1349481871.0, "created_utc": 1349478271.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_1100el", "children": [], "author": "ixid", "id": "c6ia3l5", "parent_id": "t3_1100el", "score": 0, "approved_by": null, "upvotes": 9, "body": "I'm not sure why people find this clever or interesting, the method is clearly against the spirit of the challenge. It's almost impossible to have completely water-tight rules, that doesn't make evading those rules worthwhile.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not sure why people find this clever or interesting, the method is clearly against the spirit of the challenge. It&amp;#39;s almost impossible to have completely water-tight rules, that doesn&amp;#39;t make evading those rules worthwhile.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ia3l5", "flair_text": null, "created": 1349487477.0, "created_utc": 1349483877.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 6, "link_id": "t3_1100el", "children": [], "author": "martinus", "id": "c6i91oc", "parent_id": "t3_1100el", "score": 0, "approved_by": null, "upvotes": 11, "body": "I just would have sent him a script that uses wget to download the file from the FTP. Just the script is only a few bytes, and after you run it, you have the exact original file.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I just would have sent him a script that uses wget to download the file from the FTP. Just the script is only a few bytes, and after you run it, you have the exact original file.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6i91oc", "flair_text": null, "created": 1349482654.0, "created_utc": 1349479054.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1100el", "children": [], "author": "skyclown", "id": "c6igxk9", "parent_id": "t3_1100el", "score": 0, "approved_by": null, "upvotes": 2, "body": "Can't believe I read all that, was worth it though. Two clever gents indeed.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Can&amp;#39;t believe I read all that, was worth it though. Two clever gents indeed.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6igxk9", "flair_text": null, "created": 1349536396.0, "created_utc": 1349532796.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 13, "link_id": "t3_1100el", "children": [], "author": "jonivy", "id": "c6ibgdj", "parent_id": "t3_1100el", "score": 0, "approved_by": null, "upvotes": 5, "body": "Anyone, especially Patrick Craig, who thinks that his solution meets the challenge is either a moron or a teenager.  Cheers to all the teenagers on reddit, who upvote this crap.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Anyone, especially Patrick Craig, who thinks that his solution meets the challenge is either a moron or a teenager.  Cheers to all the teenagers on reddit, who upvote this crap.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ibgdj", "flair_text": null, "created": 1349493782.0, "created_utc": 1349490182.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_1100el", "children": [], "author": "MrDecimal", "id": "c6i8vfl", "parent_id": "t3_1100el", "score": 0, "approved_by": null, "upvotes": 1, "body": "I must be missing something. Goldman said that the contestant had to send him two files.  \n\"a decompressor and a compressed file\"  \nso how did Patrick meet the terms of that bet?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I must be missing something. Goldman said that the contestant had to send him two files.&lt;br/&gt;\n&amp;quot;a decompressor and a compressed file&amp;quot;&lt;br/&gt;\nso how did Patrick meet the terms of that bet?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6i8vfl", "flair_text": null, "created": 1349481894.0, "created_utc": 1349478294.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 15, "link_id": "t3_1100el", "children": [], "author": "[deleted]", "id": "c6ibu0n", "parent_id": "t3_1100el", "score": 0, "approved_by": null, "upvotes": 4, "body": "[deleted]", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ibu0n", "flair_text": null, "created": 1349495589.0, "created_utc": 1349491989.0, "num_reports": null}], "score": 198, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 243, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/1100el/the_5000_compression_challenge/", "has_more_comments": false, "name": "t3_1100el", "created": 1349459935.0, "url": "http://www.patrickcraig.co.uk/other/compression.htm", "author_flair_text": null, "author": "riz_", "created_utc": 1349456335.0, "link_flair_text": null, "media": null, "num_reports": null}, "359": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 12, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Like many people here, I have a big interest in programming languages. I keep my eye open for new languages coming out, and am interested in what they are doing which is different.&lt;/p&gt;\n\n&lt;p&gt;However I have noticed many languages tend to re-invent the same ideas.&lt;/p&gt;\n\n&lt;p&gt;So I am interested in what languages, or new research idea in languages, over the last decade (or slightly further) do people think really helped to bring something that was new, original, productive, and/or novel?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Like many people here, I have a big interest in programming languages. I keep my eye open for new languages coming out, and am interested in what they are doing which is different.\n\nHowever I have noticed many languages tend to re-invent the same ideas.\n\nSo I am interested in what languages, or new research idea in languages, over the last decade (or slightly further) do people think really helped to bring something that was new, original, productive, and/or novel?", "saved": false, "id": "110a2b", "clicked": false, "title": "What is the most novel, interesting, and original aspect of a programming language you have seen in the last 10 years?", "num_comments": 30, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_110a2b", "children": [], "author": "donri", "id": "c6ibvq0", "parent_id": "t3_110a2b", "score": 0, "approved_by": null, "upvotes": 24, "body": "Another one, not sure how novel or recent an innovation but anyway: mixfix operators, as seen in Agda. Basically lets you define arbitrary syntax:\n\n    if_then_else_ : {A : Set} -&gt; Bool -&gt; A -&gt; A -&gt; A\n    if true  then x else y = x\n    if false then x else y = y\n\nPrefer the Python syntax? Why not!\n\n    _if_else_ : {A : Set} -&gt; A -&gt; Bool -&gt; A -&gt; A\n    x if true  else y = x\n    x if false else y = y\n\nIt's the ultimate DSL tool. I imagine it would be batshit insane if used liberally in any larger program, but fun to play with!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Another one, not sure how novel or recent an innovation but anyway: mixfix operators, as seen in Agda. Basically lets you define arbitrary syntax:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if_then_else_ : {A : Set} -&amp;gt; Bool -&amp;gt; A -&amp;gt; A -&amp;gt; A\nif true  then x else y = x\nif false then x else y = y\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Prefer the Python syntax? Why not!&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;_if_else_ : {A : Set} -&amp;gt; A -&amp;gt; Bool -&amp;gt; A -&amp;gt; A\nx if true  else y = x\nx if false else y = y\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It&amp;#39;s the ultimate DSL tool. I imagine it would be batshit insane if used liberally in any larger program, but fun to play with!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ibvq0", "flair_text": null, "created": 1349495814.0, "created_utc": 1349492214.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_110a2b", "children": [], "author": "yogthos", "id": "c6ih1k1", "parent_id": "t3_110a2b", "score": 0, "approved_by": null, "upvotes": 16, "body": "I think that [persistent data structures](http://en.wikipedia.org/wiki/Persistent_data_structure) are one of the most interesting ideas to gain attention recently. When working with mutable data structures, you either have the option of passing by reference or by value. The first is cheap, but makes code more difficult to reason about, as the data can be shared between many sections. The second is safe but also expensive. \n\nPersistent data structures provide a third option. Any time a change is made a revision of the existing data is created. This approach ensures that all changes are inherently localized, and you only pay the price proportional to the change. \n\nIn my opinion this is akin to having garbage collection. Instead of having to ensure that data is not changed out of context by hand the language does it for you. From user perspective you simply create new data any time you make a change and don't worry about it.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think that &lt;a href=\"http://en.wikipedia.org/wiki/Persistent_data_structure\"&gt;persistent data structures&lt;/a&gt; are one of the most interesting ideas to gain attention recently. When working with mutable data structures, you either have the option of passing by reference or by value. The first is cheap, but makes code more difficult to reason about, as the data can be shared between many sections. The second is safe but also expensive. &lt;/p&gt;\n\n&lt;p&gt;Persistent data structures provide a third option. Any time a change is made a revision of the existing data is created. This approach ensures that all changes are inherently localized, and you only pay the price proportional to the change. &lt;/p&gt;\n\n&lt;p&gt;In my opinion this is akin to having garbage collection. Instead of having to ensure that data is not changed out of context by hand the language does it for you. From user perspective you simply create new data any time you make a change and don&amp;#39;t worry about it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ih1k1", "flair_text": null, "created": 1349537170.0, "created_utc": 1349533570.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_110a2b", "children": [], "author": "VSMNeophyte", "id": "c6iau3q", "parent_id": "t3_110a2b", "score": 0, "approved_by": null, "upvotes": 10, "body": "Take a look at [txl](http://txl.ca). It's a rule-based paradigm which is extremely useful for source-to-source transformation. Click on the [learn](http://txl.ca/nlearn.html) link, and you can find the [txl challenge](http://txl.ca/nchallenge.html).\n\nEnjoy!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Take a look at &lt;a href=\"http://txl.ca\"&gt;txl&lt;/a&gt;. It&amp;#39;s a rule-based paradigm which is extremely useful for source-to-source transformation. Click on the &lt;a href=\"http://txl.ca/nlearn.html\"&gt;learn&lt;/a&gt; link, and you can find the &lt;a href=\"http://txl.ca/nchallenge.html\"&gt;txl challenge&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Enjoy!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6iau3q", "flair_text": null, "created": 1349490864.0, "created_utc": 1349487264.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_110a2b", "children": [], "author": "bhurt42", "id": "c6icxhs", "parent_id": "t3_110a2b", "score": 0, "approved_by": null, "upvotes": 7, "body": "Haskel's REPA library.  Take a look at:\nhttp://www.youtube.com/watch?v=NWSZ4c9yqW8\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haskel&amp;#39;s REPA library.  Take a look at:\n&lt;a href=\"http://www.youtube.com/watch?v=NWSZ4c9yqW8\"&gt;http://www.youtube.com/watch?v=NWSZ4c9yqW8&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6icxhs", "flair_text": null, "created": 1349500806.0, "created_utc": 1349497206.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_110a2b", "children": [], "author": "Gertm", "id": "c6iefze", "parent_id": "t3_110a2b", "score": 0, "approved_by": null, "upvotes": 9, "body": "[Factor](http://factorcode.org)\n\nA truly great concatenative language. The concatenative paradigm is very interesting to learn. I recommend it.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://factorcode.org\"&gt;Factor&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;A truly great concatenative language. The concatenative paradigm is very interesting to learn. I recommend it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6iefze", "flair_text": null, "created": 1349510304.0, "created_utc": 1349506704.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_110a2b", "children": [], "author": "tikhonjelvis", "id": "c6ic08h", "parent_id": "t3_110a2b", "score": 0, "approved_by": null, "upvotes": 13, "body": "One interesting language I've seen recently is [Church](http://projects.csail.mit.edu/church/wiki/Church), which is a probabilistic programming language (that is, it is designed to let you express probability distributions in a systematic and uniform way). I believe there are also several other probabilistic languages, but I haven't looked at them at all.\n\nA very interesting idea--rather than a language--is program synthesis. The basic concept (generating programs based on some high-level specification) has been around for a very long time; however, fairly recent (at least I think they're fairly recent) advances in SAT and SMT solver performance have made writing synthesizers based on these solvers far more practical, which significantly lowers the barrier to implementing new synthesizers for domain-specific languages. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;One interesting language I&amp;#39;ve seen recently is &lt;a href=\"http://projects.csail.mit.edu/church/wiki/Church\"&gt;Church&lt;/a&gt;, which is a probabilistic programming language (that is, it is designed to let you express probability distributions in a systematic and uniform way). I believe there are also several other probabilistic languages, but I haven&amp;#39;t looked at them at all.&lt;/p&gt;\n\n&lt;p&gt;A very interesting idea--rather than a language--is program synthesis. The basic concept (generating programs based on some high-level specification) has been around for a very long time; however, fairly recent (at least I think they&amp;#39;re fairly recent) advances in SAT and SMT solver performance have made writing synthesizers based on these solvers far more practical, which significantly lowers the barrier to implementing new synthesizers for domain-specific languages. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ic08h", "flair_text": null, "created": 1349496433.0, "created_utc": 1349492833.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_110a2b", "children": [], "author": "donri", "id": "c6i96sb", "parent_id": "t3_110a2b", "score": 0, "approved_by": null, "upvotes": 8, "body": "Duno if it qualifies all the criteria, but how about functional lenses?\n\n* https://github.com/ekmett/lens/wiki/Derivation\n* http://comonad.com/reader/2012/mirrored-lenses/\n* http://twanvl.nl/tag/lens\n* http://www.scs.stanford.edu/11au-cs240h/notes/zipper.html", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Duno if it qualifies all the criteria, but how about functional lenses?&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://github.com/ekmett/lens/wiki/Derivation\"&gt;https://github.com/ekmett/lens/wiki/Derivation&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://comonad.com/reader/2012/mirrored-lenses/\"&gt;http://comonad.com/reader/2012/mirrored-lenses/&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://twanvl.nl/tag/lens\"&gt;http://twanvl.nl/tag/lens&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://www.scs.stanford.edu/11au-cs240h/notes/zipper.html\"&gt;http://www.scs.stanford.edu/11au-cs240h/notes/zipper.html&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6i96sb", "flair_text": null, "created": 1349483285.0, "created_utc": 1349479685.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_110a2b", "children": [], "author": "mixis", "id": "c6ig046", "parent_id": "t3_110a2b", "score": 0, "approved_by": null, "upvotes": 4, "body": "Interaction Points in Agda: While developing you can leave holes in your program and the typechecker won't bother you too much about it. You can enter the holes, query what's in scope, which goal you have to achieve and try to get closer. It's probably more of an implementation thing but it does interact nicely with the language and it's the one feature I miss most in other environments.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Interaction Points in Agda: While developing you can leave holes in your program and the typechecker won&amp;#39;t bother you too much about it. You can enter the holes, query what&amp;#39;s in scope, which goal you have to achieve and try to get closer. It&amp;#39;s probably more of an implementation thing but it does interact nicely with the language and it&amp;#39;s the one feature I miss most in other environments.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ig046", "flair_text": null, "created": 1349527560.0, "created_utc": 1349523960.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_110a2b", "children": [], "author": "ansible", "id": "c6igdao", "parent_id": "t3_110a2b", "score": 0, "approved_by": null, "upvotes": 8, "body": "[Lua Tables](http://www.lua.org/pil/2.5.html).\n\nTables are 'just' associative arrays, but they are implemented efficiently [1].  Tables are the only data structure provided by the language itself, and tables are all you need to implement other data structures elegantly, as well as to do object oriented programming, modules, and more.\n\nThis emphasis on tables has numerous benefits to the design and compactness of the language.  For starters, there is only one set of syntax for creation and accessing table elements. [2] There are also shortcuts built into the language that make common usage scenarios work nicely.  For example, if you have table elements with string keys, you can access those values with mytable.keyname instead of using mytable[\"keyname\"].\n\nI liken Lua to a Scheme with a more Pascal-ish syntax, no macros [3], and built around a much more useful fundamental data structure instead of a linked list.\n\n[1] [The Implementation of Lua 5.0 - PDF](http://www.lua.org/doc/jucs05.pdf)\n\n[2] As a counter-example: Python programmers have to remember to use square brackets for lists, braces for dictionaries, and parens for tuples.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.lua.org/pil/2.5.html\"&gt;Lua Tables&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Tables are &amp;#39;just&amp;#39; associative arrays, but they are implemented efficiently [1].  Tables are the only data structure provided by the language itself, and tables are all you need to implement other data structures elegantly, as well as to do object oriented programming, modules, and more.&lt;/p&gt;\n\n&lt;p&gt;This emphasis on tables has numerous benefits to the design and compactness of the language.  For starters, there is only one set of syntax for creation and accessing table elements. [2] There are also shortcuts built into the language that make common usage scenarios work nicely.  For example, if you have table elements with string keys, you can access those values with mytable.keyname instead of using mytable[&amp;quot;keyname&amp;quot;].&lt;/p&gt;\n\n&lt;p&gt;I liken Lua to a Scheme with a more Pascal-ish syntax, no macros [3], and built around a much more useful fundamental data structure instead of a linked list.&lt;/p&gt;\n\n&lt;p&gt;[1] &lt;a href=\"http://www.lua.org/doc/jucs05.pdf\"&gt;The Implementation of Lua 5.0 - PDF&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;[2] As a counter-example: Python programmers have to remember to use square brackets for lists, braces for dictionaries, and parens for tuples.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6igdao", "flair_text": null, "created": 1349531657.0, "created_utc": 1349528057.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_110a2b", "children": [], "author": "FoeHammer99099", "id": "c6iksrs", "parent_id": "t3_110a2b", "score": 0, "approved_by": null, "upvotes": 1, "body": "Not sure if it's really anything new, but synthetic events in JavaScript are an incredibly powerful tool that I only learned about yesterday", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not sure if it&amp;#39;s really anything new, but synthetic events in JavaScript are an incredibly powerful tool that I only learned about yesterday&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6iksrs", "flair_text": null, "created": 1349556116.0, "created_utc": 1349552516.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_110a2b", "children": [], "author": "hst_samurai", "id": "c6j7fzf", "parent_id": "t3_110a2b", "score": 0, "approved_by": null, "upvotes": 1, "body": "I am really enjoying Clojure and some of the things mentioned here already (u/yogthos mentioned persistant data structures).  I guess it is a reinvention of lisp, but with some nice modern features (java interop, seq,  and good metaphors/handlers for state mutation)  and clean syntax/keywords.  Plus Rich Hickey is my favorite 'language inventor' and gives amazing, informative talks.  ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I am really enjoying Clojure and some of the things mentioned here already (u/yogthos mentioned persistant data structures).  I guess it is a reinvention of lisp, but with some nice modern features (java interop, seq,  and good metaphors/handlers for state mutation)  and clean syntax/keywords.  Plus Rich Hickey is my favorite &amp;#39;language inventor&amp;#39; and gives amazing, informative talks.  &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6j7fzf", "flair_text": null, "created": 1349671789.0, "created_utc": 1349668189.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_110a2b", "children": [], "author": "eigenheckler", "id": "c6jhbun", "parent_id": "t3_110a2b", "score": 0, "approved_by": null, "upvotes": 2, "body": "I found Haskell's [lazy evaluation](http://en.wikipedia.org/wiki/Lazy_evaluation) to be pretty novel when I first read about it. (Then again, I have no familiarity with Miranda or OCaml.)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I found Haskell&amp;#39;s &lt;a href=\"http://en.wikipedia.org/wiki/Lazy_evaluation\"&gt;lazy evaluation&lt;/a&gt; to be pretty novel when I first read about it. (Then again, I have no familiarity with Miranda or OCaml.)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jhbun", "flair_text": null, "created": 1349726941.0, "created_utc": 1349723341.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_110a2b", "children": [], "author": "kamatsu", "id": "c6l6squ", "parent_id": "t3_110a2b", "score": 0, "approved_by": null, "upvotes": 1, "body": "Well, dependent types and theorem proving. Agda is just the best language ever, so long as you don't actually want to get any work done.\n\nI really like parameterised modules, dependent types, and other similar features just for everyday programming.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well, dependent types and theorem proving. Agda is just the best language ever, so long as you don&amp;#39;t actually want to get any work done.&lt;/p&gt;\n\n&lt;p&gt;I really like parameterised modules, dependent types, and other similar features just for everyday programming.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6l6squ", "flair_text": null, "created": 1350007146.0, "created_utc": 1350003546.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_110a2b", "children": [], "author": "bart2019", "id": "c6iilff", "parent_id": "t3_110a2b", "score": 0, "approved_by": null, "upvotes": 6, "body": "Closures. Maybe they're older as a concept than 10 years, but I'm pretty sure I hadn't ever heard of them more than a decade ago.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Closures. Maybe they&amp;#39;re older as a concept than 10 years, but I&amp;#39;m pretty sure I hadn&amp;#39;t ever heard of them more than a decade ago.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6iilff", "flair_text": null, "created": 1349545744.0, "created_utc": 1349542144.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 18, "link_id": "t3_110a2b", "children": [], "author": "SparrowOS", "id": "c6igw56", "parent_id": "t3_110a2b", "score": 0, "approved_by": null, "upvotes": 7, "body": "if (13&lt;=age&lt;20) \"Teenager\\n\";\n\nhttp://www.sparrowos.com/Wb/Doc/Differences.html", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;if (13&amp;lt;=age&amp;lt;20) &amp;quot;Teenager\\n&amp;quot;;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.sparrowos.com/Wb/Doc/Differences.html\"&gt;http://www.sparrowos.com/Wb/Doc/Differences.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6igw56", "flair_text": null, "created": 1349536126.0, "created_utc": 1349532526.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 15, "link_id": "t3_110a2b", "children": [], "author": "ben0x539", "id": "c6iffb6", "parent_id": "t3_110a2b", "score": 0, "approved_by": null, "upvotes": 3, "body": "Monad transformers, in Haskell.\n\nI'm not even going to try to explain them, though, because I have no idea how to do anything with them.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Monad transformers, in Haskell.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m not even going to try to explain them, though, because I have no idea how to do anything with them.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6iffb6", "flair_text": null, "created": 1349520074.0, "created_utc": 1349516474.0, "num_reports": null}], "score": 57, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 69, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/110a2b/what_is_the_most_novel_interesting_and_original/", "has_more_comments": false, "name": "t3_110a2b", "created": 1349469170.0, "url": "http://www.reddit.com/r/compsci/comments/110a2b/what_is_the_most_novel_interesting_and_original/", "author_flair_text": null, "author": "JL235", "created_utc": 1349465570.0, "link_flair_text": null, "media": null, "num_reports": null}, "360": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 7, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Can someone who speaks another language tell me what programming in another actual language (i.e German, Spanish, French) is like? I&amp;#39;ve always been curious, then I remembered there are people I can actually ask. I speak a bit of German, if that helps.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Can someone who speaks another language tell me what programming in another actual language (i.e German, Spanish, French) is like? I've always been curious, then I remembered there are people I can actually ask. I speak a bit of German, if that helps.", "saved": false, "id": "110zv9", "clicked": false, "title": "Programming in other (actual) languages.", "num_comments": 15, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_110zv9", "children": [], "author": "adolfojp", "id": "c6ice6v", "parent_id": "t3_110zv9", "score": 0, "approved_by": null, "upvotes": 9, "body": "http://www.reddit.com/r/programming/comments/dg5jo/do_people_in_nonenglishspeaking_countries_code_in/", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.reddit.com/r/programming/comments/dg5jo/do_people_in_nonenglishspeaking_countries_code_in/\"&gt;http://www.reddit.com/r/programming/comments/dg5jo/do_people_in_nonenglishspeaking_countries_code_in/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ice6v", "flair_text": null, "created": 1349498262.0, "created_utc": 1349494662.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_110zv9", "children": [], "author": "hst_samurai", "id": "c6idgo1", "parent_id": "t3_110zv9", "score": 0, "approved_by": null, "upvotes": 2, "body": "It isn't too different.  Your variables and such are in your native language, but the syntax is still english/computer.   I haven't really looked, but I'm sure someone has 'translated' a 'native computer language' into a 'foreign computer language'...", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It isn&amp;#39;t too different.  Your variables and such are in your native language, but the syntax is still english/computer.   I haven&amp;#39;t really looked, but I&amp;#39;m sure someone has &amp;#39;translated&amp;#39; a &amp;#39;native computer language&amp;#39; into a &amp;#39;foreign computer language&amp;#39;...&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6idgo1", "flair_text": null, "created": 1349503575.0, "created_utc": 1349499975.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_110zv9", "children": [], "author": "soopasloth", "id": "c6imx6u", "parent_id": "t3_110zv9", "score": 0, "approved_by": null, "upvotes": 2, "body": "I'm Scottish and currently programming in Austria, the entire company programs in American English and it's pretty much the same as programming with native English speakers. Sometimes you do get things that are named oddly because they don't know the word for it, but not so badly that you can't understand it.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m Scottish and currently programming in Austria, the entire company programs in American English and it&amp;#39;s pretty much the same as programming with native English speakers. Sometimes you do get things that are named oddly because they don&amp;#39;t know the word for it, but not so badly that you can&amp;#39;t understand it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6imx6u", "flair_text": null, "created": 1349565972.0, "created_utc": 1349562372.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_110zv9", "children": [], "author": "gerusz", "id": "c6ioy0l", "parent_id": "t3_110zv9", "score": 0, "approved_by": null, "upvotes": 1, "body": "English. For school projects, private projects, etc... I sometimes used Hungarian variable names (or especially when teaching someone else), but production code is always US English.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;English. For school projects, private projects, etc... I sometimes used Hungarian variable names (or especially when teaching someone else), but production code is always US English.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ioy0l", "flair_text": null, "created": 1349574507.0, "created_utc": 1349570907.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_110zv9", "children": [], "author": "syzygote", "id": "c6jvwgx", "parent_id": "t3_110zv9", "score": 0, "approved_by": null, "upvotes": 2, "body": "As others noted, English is the global language of computing, but in the past there have programming languages in other languages, and fortunately [Wikipedia has a list](http://en.wikipedia.org/wiki/Non-English-based_programming_languages)\n\nSome of these are esoteric or visual language but others are based on real-world languages like Arabic, Polish or Russian, to name a few...", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As others noted, English is the global language of computing, but in the past there have programming languages in other languages, and fortunately &lt;a href=\"http://en.wikipedia.org/wiki/Non-English-based_programming_languages\"&gt;Wikipedia has a list&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Some of these are esoteric or visual language but others are based on real-world languages like Arabic, Polish or Russian, to name a few...&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jvwgx", "flair_text": null, "created": 1349798502.0, "created_utc": 1349794902.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 34, "link_id": "t3_110zv9", "children": [], "author": "amastoras", "id": "c6idhmt", "parent_id": "t3_110zv9", "score": 0, "approved_by": null, "upvotes": 10, "body": "The only language you should be programming in is C. C and pen and paper!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The only language you should be programming in is C. C and pen and paper!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6idhmt", "flair_text": null, "created": 1349503778.0, "created_utc": 1349500178.0, "num_reports": null}], "score": 5, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 12, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/110zv9/programming_in_other_actual_languages/", "has_more_comments": false, "name": "t3_110zv9", "created": 1349497391.0, "url": "http://www.reddit.com/r/compsci/comments/110zv9/programming_in_other_actual_languages/", "author_flair_text": null, "author": "Jedimastert", "created_utc": 1349493791.0, "link_flair_text": null, "media": null, "num_reports": null}, "361": {"domain": "nand2tetris.org", "link_flair_class": null, "banned_by": null, "downvotes": 15, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10ykld", "clicked": false, "title": "NAND to Tetris: A completely open course that takes the learner from the basics of logic to operating system design while creating a general purpose computer from the ground up", "num_comments": 7, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10ykld", "children": [], "author": "desu_desu", "id": "c6i2b1u", "parent_id": "t3_10ykld", "score": 0, "approved_by": null, "upvotes": 5, "body": "&gt;commercial use prohibited\n\n&gt;\"open\"\n\nThe term is officially worthless", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;commercial use prohibited&lt;/p&gt;\n\n&lt;p&gt;&amp;quot;open&amp;quot;&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;The term is officially worthless&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6i2b1u", "flair_text": null, "created": 1349456503.0, "created_utc": 1349452903.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10ykld", "children": [], "author": "__dbro__", "id": "c6hqd9g", "parent_id": "t3_10ykld", "score": 0, "approved_by": null, "upvotes": 5, "body": "This is where the idea for that 16-bit Minecraft arithmetic logic unit came from! The Hack computer!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is where the idea for that 16-bit Minecraft arithmetic logic unit came from! The Hack computer!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6hqd9g", "flair_text": null, "created": 1349392144.0, "created_utc": 1349388544.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10ykld", "children": [], "author": "zirtik", "id": "c6i26ft", "parent_id": "t3_10ykld", "score": 0, "approved_by": null, "upvotes": 2, "body": "Thanks for submittin this. Looks like a great resource. I'm saving it and you are upvoted!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for submittin this. Looks like a great resource. I&amp;#39;m saving it and you are upvoted!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6i26ft", "flair_text": null, "created": 1349456040.0, "created_utc": 1349452440.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10ykld", "children": [], "author": "rubymonday", "id": "c6i2voi", "parent_id": "t3_10ykld", "score": 0, "approved_by": null, "upvotes": 2, "body": "I guess in Israel they've yet to realize that comic sans makes you look goofy.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I guess in Israel they&amp;#39;ve yet to realize that comic sans makes you look goofy.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6i2voi", "flair_text": null, "created": 1349458603.0, "created_utc": 1349455003.0, "num_reports": null}], "score": 77, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 92, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10ykld/nand_to_tetris_a_completely_open_course_that/", "has_more_comments": false, "name": "t3_10ykld", "created": 1349391930.0, "url": "http://www.nand2tetris.org/", "author_flair_text": null, "author": "nonomus", "created_utc": 1349388330.0, "link_flair_text": null, "media": null, "num_reports": null}, "362": {"domain": "news.iastate.edu", "link_flair_class": null, "banned_by": null, "downvotes": 11, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10y4x4", "clicked": false, "title": "TMI: Genome sequence data overwhelms scientists; Time for some HPC tools ", "num_comments": 7, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10y4x4", "children": [], "author": "szaero", "id": "c6ho1ph", "parent_id": "t3_10y4x4", "score": 0, "approved_by": null, "upvotes": 11, "body": "&gt; Researchers will start by identifying a large set of building blocks frequently used in genomic studies. They\u2019ll develop the parallel algorithms and high performance implementations needed to do the necessary data analysis. And they\u2019ll wrap all of those technologies in software libraries researchers can access for help. On top of all that, they\u2019ll design a domain specific language that automatically generates computing codes for researchers.\n\nEvery large scale genome analysis team is already doing this, and has been doing it since at least 2004. The story here is that the NSF has decided to fund it directly. All of the systems I worked with were developed purely out of necessity to complete research. The funding for the software teams is part of the overhead on genome-specific research grants.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Researchers will start by identifying a large set of building blocks frequently used in genomic studies. They\u2019ll develop the parallel algorithms and high performance implementations needed to do the necessary data analysis. And they\u2019ll wrap all of those technologies in software libraries researchers can access for help. On top of all that, they\u2019ll design a domain specific language that automatically generates computing codes for researchers.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Every large scale genome analysis team is already doing this, and has been doing it since at least 2004. The story here is that the NSF has decided to fund it directly. All of the systems I worked with were developed purely out of necessity to complete research. The funding for the software teams is part of the overhead on genome-specific research grants.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ho1ph", "flair_text": null, "created": 1349383572.0, "created_utc": 1349379972.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10y4x4", "children": [], "author": "Oncocerca", "id": "c6hnyhk", "parent_id": "t3_10y4x4", "score": 0, "approved_by": null, "upvotes": 4, "body": "Ill chime in as a biologist. What is needed here is someone who can do good exploratory analysis. This sort of thing is important. A lot of interesting discoveries are made when scientists take the attitude of lets take a look at this and see what we find. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ill chime in as a biologist. What is needed here is someone who can do good exploratory analysis. This sort of thing is important. A lot of interesting discoveries are made when scientists take the attitude of lets take a look at this and see what we find. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6hnyhk", "flair_text": null, "created": 1349383227.0, "created_utc": 1349379627.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10y4x4", "children": [], "author": "bfxnow", "id": "c6hv8qj", "parent_id": "t3_10y4x4", "score": 0, "approved_by": null, "upvotes": 3, "body": "If you think you can do this type of work, we're hiring. We do everything from HPC to \"Big Data\" pipelines, to SIMD/GPU/FPGA programming.  Everything is on the table.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you think you can do this type of work, we&amp;#39;re hiring. We do everything from HPC to &amp;quot;Big Data&amp;quot; pipelines, to SIMD/GPU/FPGA programming.  Everything is on the table.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6hv8qj", "flair_text": null, "created": 1349411760.0, "created_utc": 1349408160.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10y4x4", "children": [], "author": "otakucode", "id": "c6i5zb2", "parent_id": "t3_10y4x4", "score": 0, "approved_by": null, "upvotes": 1, "body": "Time for posting online.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Time for posting online.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6i5zb2", "flair_text": null, "created": 1349470068.0, "created_utc": 1349466468.0, "num_reports": null}], "score": 43, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 54, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10y4x4/tmi_genome_sequence_data_overwhelms_scientists/", "has_more_comments": false, "name": "t3_10y4x4", "created": 1349378133.0, "url": "http://www.news.iastate.edu/news/2012/10/03/bigdata", "author_flair_text": null, "author": "greenprius", "created_utc": 1349374533.0, "link_flair_text": null, "media": null, "num_reports": null}, "363": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 6, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;My girlfriend&amp;#39;s a PhD student who, as an assistant researcher, is tasked with assigning subjects (people answering surveys) to studies. Each study requires a certain number of subjects &lt;em&gt;(it&amp;#39;s not useful to go over that number of subjects requested)&lt;/em&gt; who meet certain criteria (a particular race/ethnicity, background, stuff like that). &lt;em&gt;Each study is estimated to take &lt;del&gt;at least half an hour&lt;/del&gt; between half an hour and one hour.&lt;/em&gt; The subjects themselves are restricted in that each subject must and may only participate in something like 3 hours or 4 different studies, whichever &amp;quot;comes first&amp;quot; for that subject. &lt;em&gt;The order in which a subject completes assigned surveys doesn&amp;#39;t matter.&lt;/em&gt; There are about a dozen studies and &lt;del&gt;a few hundred&lt;/del&gt; about 1,100 student subjects.&lt;/p&gt;\n\n&lt;p&gt;So... I&amp;#39;m just a senior-level CS student, but I&amp;#39;ve heard of something called the &amp;quot;assignment problem,&amp;quot; which seems to be a generalization of the &amp;quot;hospitals-residents problem...&amp;quot; (&lt;a href=\"http://www.nrmp.org/res_match/about_res/algorithms.html\"&gt;http://www.nrmp.org/res_match/about_res/algorithms.html&lt;/a&gt;) And I think algorithms that provide solutions to those problems might work on this problem, but I have no idea how to design such a thing.&lt;/p&gt;\n\n&lt;p&gt;edit: clarifications in italics&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "My girlfriend's a PhD student who, as an assistant researcher, is tasked with assigning subjects (people answering surveys) to studies. Each study requires a certain number of subjects *(it's not useful to go over that number of subjects requested)* who meet certain criteria (a particular race/ethnicity, background, stuff like that). *Each study is estimated to take ~~at least half an hour~~ between half an hour and one hour.* The subjects themselves are restricted in that each subject must and may only participate in something like 3 hours or 4 different studies, whichever \"comes first\" for that subject. *The order in which a subject completes assigned surveys doesn't matter.* There are about a dozen studies and ~~a few hundred~~ about 1,100 student subjects.\n\nSo... I'm just a senior-level CS student, but I've heard of something called the \"assignment problem,\" which seems to be a generalization of the \"hospitals-residents problem...\" (http://www.nrmp.org/res_match/about_res/algorithms.html) And I think algorithms that provide solutions to those problems might work on this problem, but I have no idea how to design such a thing.\n\nedit: clarifications in italics", "saved": false, "id": "10xe0i", "clicked": false, "title": "[Algorithms] Assigning subjects to studies with restrictions on both: how would you solve this?", "num_comments": 18, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10xe0i", "children": [], "author": "Malachite6", "id": "c6hiu2j", "parent_id": "t3_10xe0i", "score": 0, "approved_by": null, "upvotes": 5, "body": "What's the balance between subjects and studies? That is, are you overflowing with people and very few studies to assign them to, or are subjects scarce compared to the sum of the minimum numbers for each study, or is it roughly balanced where you have close to the amount of \"people resources\" for the study places available?  (What the balance is like can affect the sort of algorithm that would work best.) \n\nThe information that it's ~12 studies and a few hundred student subjects isn't quite sufficient here as you haven't said how time-consuming these sorts of studies are (studies can vary pretty widely), nor how many places the studies have to fill (or have capacity for), on average.  \n\nAlso, what is the goal here? Are you trying to just find *any* old assignment of people to studies that doesn't go against the criteria?\nAre you trying to get as many people for the studies as you can? (i.e. making maximal use of the human resources available) Or are you just trying to find sufficient people for the particular studies and it doesn't matter whether there are humans left over?\n\nYou might find that a matching algorithm helps to solve it, but only if the shape of the problem is the same. If it isn't, you might need a different line of approach, like a backtracking algorithm.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What&amp;#39;s the balance between subjects and studies? That is, are you overflowing with people and very few studies to assign them to, or are subjects scarce compared to the sum of the minimum numbers for each study, or is it roughly balanced where you have close to the amount of &amp;quot;people resources&amp;quot; for the study places available?  (What the balance is like can affect the sort of algorithm that would work best.) &lt;/p&gt;\n\n&lt;p&gt;The information that it&amp;#39;s ~12 studies and a few hundred student subjects isn&amp;#39;t quite sufficient here as you haven&amp;#39;t said how time-consuming these sorts of studies are (studies can vary pretty widely), nor how many places the studies have to fill (or have capacity for), on average.  &lt;/p&gt;\n\n&lt;p&gt;Also, what is the goal here? Are you trying to just find &lt;em&gt;any&lt;/em&gt; old assignment of people to studies that doesn&amp;#39;t go against the criteria?\nAre you trying to get as many people for the studies as you can? (i.e. making maximal use of the human resources available) Or are you just trying to find sufficient people for the particular studies and it doesn&amp;#39;t matter whether there are humans left over?&lt;/p&gt;\n\n&lt;p&gt;You might find that a matching algorithm helps to solve it, but only if the shape of the problem is the same. If it isn&amp;#39;t, you might need a different line of approach, like a backtracking algorithm.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6hiu2j", "flair_text": null, "created": 1349363991.0, "created_utc": 1349360391.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10xe0i", "children": [], "author": "rosulek", "id": "c6hj1jo", "parent_id": "t3_10xe0i", "score": 0, "approved_by": null, "upvotes": 6, "body": "These kinds of problems (assign X's to Y's) can typically be solved using a network flow/circulation. The simplest example of such an assignment problem is bipartite matching, where you would put studies in one of the partite sets and subjects in the other. You express compatibility between studies &amp; subjects via the presence/absence of edges. A matching in the graph (which can be found by a simple network flow) represents a feasible assignment of studies to subjects.\n\nIn your case, to express conditions like \"participating in exactly 3 hours or exactly 4 studies\" you may need to turn things into a network circulation problem, and add some more \"gadgets\" to the graph.\n\nI suggest you read the section on network flows from the Kleinberg &amp; Tardos textbook (the \"flows &amp; cuts\" chapters of [Jeff Erickson's lecture notes](http://compgeom.cs.uiuc.edu/~jeffe/teaching/algorithms/) are likely to also be a good reference) .. K&amp;T do a very good job of describing these things. I think some of their examples (like the airline scheduling section) would be quite helpful for you. Unfortunately, because this is just a reddit comment and some aspects of your question are a little unclear, I can't give any more specific pointers. I hope this has helped though.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;These kinds of problems (assign X&amp;#39;s to Y&amp;#39;s) can typically be solved using a network flow/circulation. The simplest example of such an assignment problem is bipartite matching, where you would put studies in one of the partite sets and subjects in the other. You express compatibility between studies &amp;amp; subjects via the presence/absence of edges. A matching in the graph (which can be found by a simple network flow) represents a feasible assignment of studies to subjects.&lt;/p&gt;\n\n&lt;p&gt;In your case, to express conditions like &amp;quot;participating in exactly 3 hours or exactly 4 studies&amp;quot; you may need to turn things into a network circulation problem, and add some more &amp;quot;gadgets&amp;quot; to the graph.&lt;/p&gt;\n\n&lt;p&gt;I suggest you read the section on network flows from the Kleinberg &amp;amp; Tardos textbook (the &amp;quot;flows &amp;amp; cuts&amp;quot; chapters of &lt;a href=\"http://compgeom.cs.uiuc.edu/%7Ejeffe/teaching/algorithms/\"&gt;Jeff Erickson&amp;#39;s lecture notes&lt;/a&gt; are likely to also be a good reference) .. K&amp;amp;T do a very good job of describing these things. I think some of their examples (like the airline scheduling section) would be quite helpful for you. Unfortunately, because this is just a reddit comment and some aspects of your question are a little unclear, I can&amp;#39;t give any more specific pointers. I hope this has helped though.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6hj1jo", "flair_text": null, "created": 1349364938.0, "created_utc": 1349361338.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10xe0i", "children": [], "author": "DrSweetscent", "id": "c6hja57", "parent_id": "t3_10xe0i", "score": 0, "approved_by": null, "upvotes": 6, "body": "This kind of problem usually is solvable via some form of matching/flow formulation (or one of the many possible extensions) OR it is NP-hard: in which category it falls depends heavily on the imposed constraints. We have a Masters student who currently looks at something quite similar (assigning students to study groups of lectures, with scheduling constraints between the groups and a minimal requirement of lectures per student) and found that one can easily reduce it to SAT. \n\nSolving it to optimality might therefore be unfeasible, so maybe she just has to resort back to finding a good LP-formulation and solve that as good as possible.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This kind of problem usually is solvable via some form of matching/flow formulation (or one of the many possible extensions) OR it is NP-hard: in which category it falls depends heavily on the imposed constraints. We have a Masters student who currently looks at something quite similar (assigning students to study groups of lectures, with scheduling constraints between the groups and a minimal requirement of lectures per student) and found that one can easily reduce it to SAT. &lt;/p&gt;\n\n&lt;p&gt;Solving it to optimality might therefore be unfeasible, so maybe she just has to resort back to finding a good LP-formulation and solve that as good as possible.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6hja57", "flair_text": null, "created": 1349365969.0, "created_utc": 1349362369.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10xe0i", "children": [], "author": "krankumar", "id": "c6hqpfr", "parent_id": "t3_10xe0i", "score": 0, "approved_by": null, "upvotes": 2, "body": "open an excel sheet, fill in all the columns, set filters and pick the ones left out. Add a filter column called number with constraint &lt; 4 and &lt; 3  hours.\n\nBut yes if you want to crack your head open and do a numbnuts solution, it is a combinatorial optimization problem. You have a graph with all the subjects (population). Now you have a set of experiments, actually the constraints on the experiment. You have to perform a matching of the nodes from the graph onto the nodes in the set such that none of the constraints are violated. If a experiment has multiple constraints, then it becomes a set in itself, subset of the larger set. \n\nSo if you have a lot of constraints, the problem just quickly gets out of hand. This is one way to formulate the problem, which causes the problem to become a integer programming type. \n\nUnless you are dealing with like a large number of subjects, I would say just filter each constraint at a time, if the number left is greater than the requirement, random sample, if lesser, go find some more.\n\nDon't know if that helps, but seriously you don't have to go nuclear always, a knife is also a very good weapon.\n\nedit: but yes if you go nuclear use http://networkx.lanl.gov/index.html, think its the best nuclear library I know of", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;open an excel sheet, fill in all the columns, set filters and pick the ones left out. Add a filter column called number with constraint &amp;lt; 4 and &amp;lt; 3  hours.&lt;/p&gt;\n\n&lt;p&gt;But yes if you want to crack your head open and do a numbnuts solution, it is a combinatorial optimization problem. You have a graph with all the subjects (population). Now you have a set of experiments, actually the constraints on the experiment. You have to perform a matching of the nodes from the graph onto the nodes in the set such that none of the constraints are violated. If a experiment has multiple constraints, then it becomes a set in itself, subset of the larger set. &lt;/p&gt;\n\n&lt;p&gt;So if you have a lot of constraints, the problem just quickly gets out of hand. This is one way to formulate the problem, which causes the problem to become a integer programming type. &lt;/p&gt;\n\n&lt;p&gt;Unless you are dealing with like a large number of subjects, I would say just filter each constraint at a time, if the number left is greater than the requirement, random sample, if lesser, go find some more.&lt;/p&gt;\n\n&lt;p&gt;Don&amp;#39;t know if that helps, but seriously you don&amp;#39;t have to go nuclear always, a knife is also a very good weapon.&lt;/p&gt;\n\n&lt;p&gt;edit: but yes if you go nuclear use &lt;a href=\"http://networkx.lanl.gov/index.html\"&gt;http://networkx.lanl.gov/index.html&lt;/a&gt;, think its the best nuclear library I know of&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6hqpfr", "flair_text": null, "created": 1349393514.0, "created_utc": 1349389914.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10xe0i", "children": [], "author": "[deleted]", "id": "c6hstvj", "parent_id": "t3_10xe0i", "score": 0, "approved_by": null, "upvotes": 1, "body": "[deleted]", "edited": 1349399346.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6hstvj", "flair_text": null, "created": 1349402320.0, "created_utc": 1349398720.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10xe0i", "children": [], "author": "otakucode", "id": "c6hmfge", "parent_id": "t3_10xe0i", "score": 0, "approved_by": null, "upvotes": 1, "body": "Sounds like someone is trying very hard to guarantee that none of their conclusions have any scientific validity whatsoever.\n\nYou do not achieve random sampling by intentionally skewing your sample set.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sounds like someone is trying very hard to guarantee that none of their conclusions have any scientific validity whatsoever.&lt;/p&gt;\n\n&lt;p&gt;You do not achieve random sampling by intentionally skewing your sample set.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6hmfge", "flair_text": null, "created": 1349377597.0, "created_utc": 1349373997.0, "num_reports": null}], "score": 15, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 21, "hidden": false, "thumbnail": "", "edited": 1349408110.0, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/10xe0i/algorithms_assigning_subjects_to_studies_with/", "has_more_comments": false, "name": "t3_10xe0i", "created": 1349342435.0, "url": "http://www.reddit.com/r/compsci/comments/10xe0i/algorithms_assigning_subjects_to_studies_with/", "author_flair_text": null, "author": "hilhilhil", "created_utc": 1349338835.0, "link_flair_text": null, "media": null, "num_reports": null}, "364": {"domain": "research.microsoft.com", "link_flair_class": null, "banned_by": null, "downvotes": 10, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10w5qt", "clicked": false, "title": "Microsoft Research releases Z3 source code", "num_comments": 16, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 6, "link_id": "t3_10w5qt", "children": [], "author": "fuzzynyanko", "id": "c6h8vig", "parent_id": "t3_10w5qt", "score": 0, "approved_by": null, "upvotes": 43, "body": "&gt; Z3 is a high-performance theorem prover being developed at Microsoft Research. Z3 supports linear real and integer arithmetic, fixed-size bit-vectors, extensional arrays, uninterpreted functions, and quantifiers. Z3 is integrated with a number of program analysis, testing, and verification tools from Microsoft Research. These include: VCC, Spec#, Boogie, Pex, Yogi, Vigilante, SLAM, F7, F*, SAGE, VS3, FORMULA, and HAVOC.\n\nNeeded that ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Z3 is a high-performance theorem prover being developed at Microsoft Research. Z3 supports linear real and integer arithmetic, fixed-size bit-vectors, extensional arrays, uninterpreted functions, and quantifiers. Z3 is integrated with a number of program analysis, testing, and verification tools from Microsoft Research. These include: VCC, Spec#, Boogie, Pex, Yogi, Vigilante, SLAM, F7, F*, SAGE, VS3, FORMULA, and HAVOC.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Needed that &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6h8vig", "flair_text": null, "created": 1349308761.0, "created_utc": 1349305161.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10w5qt", "children": [], "author": "philly_fan_in_chi", "id": "c6hd8tq", "parent_id": "t3_10w5qt", "score": 0, "approved_by": null, "upvotes": 5, "body": "How does this differ from Coq?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;How does this differ from Coq?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6hd8tq", "flair_text": null, "created": 1349325297.0, "created_utc": 1349321697.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10w5qt", "children": [], "author": "inaneInTheMembrane", "id": "c6hmi7h", "parent_id": "t3_10w5qt", "score": 0, "approved_by": null, "upvotes": 4, "body": "This is an important thing: Z3 is a very powerful tool and research into static code analysis will benefit from this. Note that static property checkers for code annotations like [ACSL](http://frama-c.com/acsl.html) and [JML](http://www.eecs.ucf.edu/~leavens/JML//index.shtml) heavily rely on the ability to do SMT solving. \n\nSome have argued that SMT solving is a \"disruptive technology\" : it has the potential of fundamentally changing the way we do static code analysis, and the way we develop programs in general. For example, for critical code, it is beginning to be argued that high assurance can be obtained **at less expense** by using SMT solving than traditional testing.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is an important thing: Z3 is a very powerful tool and research into static code analysis will benefit from this. Note that static property checkers for code annotations like &lt;a href=\"http://frama-c.com/acsl.html\"&gt;ACSL&lt;/a&gt; and &lt;a href=\"http://www.eecs.ucf.edu/%7Eleavens/JML//index.shtml\"&gt;JML&lt;/a&gt; heavily rely on the ability to do SMT solving. &lt;/p&gt;\n\n&lt;p&gt;Some have argued that SMT solving is a &amp;quot;disruptive technology&amp;quot; : it has the potential of fundamentally changing the way we do static code analysis, and the way we develop programs in general. For example, for critical code, it is beginning to be argued that high assurance can be obtained &lt;strong&gt;at less expense&lt;/strong&gt; by using SMT solving than traditional testing.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6hmi7h", "flair_text": null, "created": 1349377881.0, "created_utc": 1349374281.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10w5qt", "children": [], "author": "Denommus", "id": "c6hhnvm", "parent_id": "t3_10w5qt", "score": 0, "approved_by": null, "upvotes": 9, "body": "&gt; ~~Z3 is now open source.~~ Z3 source code is now available.\n\nTo be sincere, I laughed.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;&lt;del&gt;Z3 is now open source.&lt;/del&gt; Z3 source code is now available.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;To be sincere, I laughed.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6hhnvm", "flair_text": null, "created": 1349357172.0, "created_utc": 1349353572.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10w5qt", "children": [], "author": "bohpa", "id": "c703rcm", "parent_id": "t3_10w5qt", "score": 0, "approved_by": null, "upvotes": 1, "body": "Here is one practical usage of SMT solver: [Finding unknown algorithm using only input/output pairs and Z3 SMT solver](http://blog.yurichev.com/node/71)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here is one practical usage of SMT solver: &lt;a href=\"http://blog.yurichev.com/node/71\"&gt;Finding unknown algorithm using only input/output pairs and Z3 SMT solver&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c703rcm", "flair_text": null, "created": 1352712141.0, "created_utc": 1352708541.0, "num_reports": null}], "score": 89, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 99, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10w5qt/microsoft_research_releases_z3_source_code/", "has_more_comments": false, "name": "t3_10w5qt", "created": 1349298085.0, "url": "https://research.microsoft.com/en-us/um/people/leonardo/blog/2012/10/02/open-z3.html", "author_flair_text": null, "author": "hexa6on", "created_utc": 1349294485.0, "link_flair_text": null, "media": null, "num_reports": null}, "365": {"domain": "qmatica.com", "link_flair_class": null, "banned_by": null, "downvotes": 4, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10w75n", "clicked": false, "title": "Interactive Visualization of How AVL Trees Work", "num_comments": 2, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10w75n", "children": [], "author": "neutronbob", "id": "c6hy9s3", "parent_id": "t3_10w75n", "score": 0, "approved_by": null, "upvotes": 1, "body": "Nicely done, but not sure I get the bouncing. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nicely done, but not sure I get the bouncing. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6hy9s3", "flair_text": null, "created": 1349430148.0, "created_utc": 1349426548.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10w75n", "children": [], "author": "scartinator", "id": "c6i2jft", "parent_id": "t3_10w75n", "score": 0, "approved_by": null, "upvotes": 1, "body": "Very nice. Do you happen to have any visualizations of how other tree types work?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Very nice. Do you happen to have any visualizations of how other tree types work?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6i2jft", "flair_text": null, "created": 1349457362.0, "created_utc": 1349453762.0, "num_reports": null}], "score": 28, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 32, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10w75n/interactive_visualization_of_how_avl_trees_work/", "has_more_comments": false, "name": "t3_10w75n", "created": 1349299316.0, "url": "http://qmatica.com/DataStructures/Trees/AVL/AVLTree.html", "author_flair_text": null, "author": "Polinarik", "created_utc": 1349295716.0, "link_flair_text": null, "media": null, "num_reports": null}, "366": {"domain": "neil.fraser.name", "link_flair_class": null, "banned_by": null, "downvotes": 18, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10vd5c", "clicked": false, "title": "Differential Synchronization: the algorithm behind Google Docs' collaborative editing", "num_comments": 5, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10vd5c", "children": [], "author": "clarle", "id": "c6gzmdl", "parent_id": "t3_10vd5c", "score": 0, "approved_by": null, "upvotes": 23, "body": "I've been doing some research into operational transformation algorithms like these for a project of mine, so just thought I share some of the things I found:\n\n**Libraries**:\n\n**[Google's Diff, Match, and Patch Libraries](https://code.google.com/p/google-diff-match-patch/)**\n\nA library of algorithms meant to compare, search, and merge text data together.  There's some pretty neat demos on the page.\n\n**[Google's MobWrite](http://code.google.com/p/google-mobwrite/)**\n\nAn implementation of a real-time collaborative editor that uses the Diff-Match-Patch libraries at its core.\n\n**[ShareJS](http://sharejs.org/)**\n\nAn open-source operational transform library, written by an ex-Google Wave engineer.\n\n**Theoretical Resources**:\n\n**[Operational Transformation: An Introduction](http://fitzgeraldnick.com/weblog/41/)**\n\nA blog post by Nick Fitzgerald, more of a general layman's overview but has a lot of great sources.\n\n**[Understanding and Applying Operational Transformation](http://www.codecommit.com/blog/java/understanding-and-applying-operational-transformation)**\n\nA more advanced article by Daniel Spiewak on operational transform, with a more in-depth example.\n\n**[High-latency, low-bandwidth windowing in the Jupiter collaboration system\n](http://dl.acm.org/citation.cfm?doid=215585.215706)**\n\nThe most-cited research paper for operational transformation algorithms.  It's fairly easy to read, so definitely check it out if you have access to it.\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been doing some research into operational transformation algorithms like these for a project of mine, so just thought I share some of the things I found:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Libraries&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a href=\"https://code.google.com/p/google-diff-match-patch/\"&gt;Google&amp;#39;s Diff, Match, and Patch Libraries&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;A library of algorithms meant to compare, search, and merge text data together.  There&amp;#39;s some pretty neat demos on the page.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a href=\"http://code.google.com/p/google-mobwrite/\"&gt;Google&amp;#39;s MobWrite&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;An implementation of a real-time collaborative editor that uses the Diff-Match-Patch libraries at its core.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a href=\"http://sharejs.org/\"&gt;ShareJS&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;An open-source operational transform library, written by an ex-Google Wave engineer.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Theoretical Resources&lt;/strong&gt;:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a href=\"http://fitzgeraldnick.com/weblog/41/\"&gt;Operational Transformation: An Introduction&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;A blog post by Nick Fitzgerald, more of a general layman&amp;#39;s overview but has a lot of great sources.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a href=\"http://www.codecommit.com/blog/java/understanding-and-applying-operational-transformation\"&gt;Understanding and Applying Operational Transformation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;A more advanced article by Daniel Spiewak on operational transform, with a more in-depth example.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;&lt;a href=\"http://dl.acm.org/citation.cfm?doid=215585.215706\"&gt;High-latency, low-bandwidth windowing in the Jupiter collaboration system\n&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;The most-cited research paper for operational transformation algorithms.  It&amp;#39;s fairly easy to read, so definitely check it out if you have access to it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6gzmdl", "flair_text": null, "created": 1349276095.0, "created_utc": 1349272495.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10vd5c", "children": [], "author": "robotreader", "id": "c6hb2ri", "parent_id": "t3_10vd5c", "score": 0, "approved_by": null, "upvotes": 6, "body": "Link isn't working.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Link isn&amp;#39;t working.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6hb2ri", "flair_text": null, "created": 1349317234.0, "created_utc": 1349313634.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_10vd5c", "children": [], "author": "spankalee", "id": "c6h009s", "parent_id": "t3_10vd5c", "score": 0, "approved_by": null, "upvotes": 6, "body": "Where'd you get the idea that this is the strategy used in Docs? As far as I know, it isn't.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Where&amp;#39;d you get the idea that this is the strategy used in Docs? As far as I know, it isn&amp;#39;t.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6h009s", "flair_text": null, "created": 1349277750.0, "created_utc": 1349274150.0, "num_reports": null}], "score": 103, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 121, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10vd5c/differential_synchronization_the_algorithm_behind/", "has_more_comments": false, "name": "t3_10vd5c", "created": 1349270215.0, "url": "http://neil.fraser.name/writing/sync/", "author_flair_text": null, "author": "clarle", "created_utc": 1349266615.0, "link_flair_text": null, "media": null, "num_reports": null}, "367": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 4, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m prepping a lecture that is an introduction/motivation for balanced tree structures/algorithms, and would like to tap the hivemind.&lt;/p&gt;\n\n&lt;p&gt;As a part of this lecture I would like to talk about some different applications, that are understandable by 1st/2nd years, where the different balancing algorithms/trees are &amp;quot;best&amp;quot; (or, at least, typically used). The idea is to help motivate &lt;em&gt;why&lt;/em&gt; we&amp;#39;re bothering to cover a variety of trees instead of just the one or two &amp;quot;best&amp;quot; ones. This is where I hope you can come in.&lt;/p&gt;\n\n&lt;p&gt;What applications, that could be quickly explained to a 1st/2nd year student, do you know of where the following balanced trees are a better choice than the others, and why?&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Perfectly balanced binary tree&lt;/li&gt;\n&lt;li&gt;AVL tree&lt;/li&gt;\n&lt;li&gt;2-3 tree&lt;/li&gt;\n&lt;li&gt;Red-black tree&lt;/li&gt;\n&lt;li&gt;B-tree&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;I know of a few (ex: B-tree for filesystems due to large nodes working well with high latency retrieval), but don&amp;#39;t claim to know everything. Thanks a million for your help.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm prepping a lecture that is an introduction/motivation for balanced tree structures/algorithms, and would like to tap the hivemind.\n\nAs a part of this lecture I would like to talk about some different applications, that are understandable by 1st/2nd years, where the different balancing algorithms/trees are \"best\" (or, at least, typically used). The idea is to help motivate *why* we're bothering to cover a variety of trees instead of just the one or two \"best\" ones. This is where I hope you can come in.\n\nWhat applications, that could be quickly explained to a 1st/2nd year student, do you know of where the following balanced trees are a better choice than the others, and why?\n\n* Perfectly balanced binary tree\n* AVL tree\n* 2-3 tree\n* Red-black tree\n* B-tree\n\nI know of a few (ex: B-tree for filesystems due to large nodes working well with high latency retrieval), but don't claim to know everything. Thanks a million for your help.", "saved": false, "id": "10x1hi", "clicked": false, "title": "Relatable applications of balanced trees", "num_comments": 2, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10x1hi", "children": [], "author": "JAPH", "id": "c6hff0z", "parent_id": "t3_10x1hi", "score": 0, "approved_by": null, "upvotes": 5, "body": "B-trees are great where you need stupid fast look-up times, and will want to get a large range of values with little overhead.  The downside is that the overhead can hurt when holding small amounts of data.  Each node is also larger, and larger branching factors can cause the key storage on the node to go off the end of a cache line.  That being said, the massive branching factor means that the O(log(n)) access time has a massive base on the log.  Common applications are DB indexes and filesystems.\n\nAVL trees are rigidly balanced, meaning that they can give a better guarantee of the O(log(n)) seek time.  The downside is that insertion will occasionally take a while while the tree re-balances.  These are best used when you'll mostly be reading, like in dictionaries and lookup structures.\n\nRed-Black trees generally have decent guarantees on both insertion and retrieval, so neither will ever take an exceptionally long time.  IIRC, one of the Linux schedulers uses it for this reason, as does the C++ set class.  I see these used a lot as general purpose trees, partly due to predictable performance, partly due to ease of implementation.\n\nI don't think I've ever seen a 2-3 tree (or any variation) in the wild.\n\nWhat do you mean by \"Perfectly balanced binary tree\"?  There are several ways of implementing binary trees that give guarantees about the balance.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;B-trees are great where you need stupid fast look-up times, and will want to get a large range of values with little overhead.  The downside is that the overhead can hurt when holding small amounts of data.  Each node is also larger, and larger branching factors can cause the key storage on the node to go off the end of a cache line.  That being said, the massive branching factor means that the O(log(n)) access time has a massive base on the log.  Common applications are DB indexes and filesystems.&lt;/p&gt;\n\n&lt;p&gt;AVL trees are rigidly balanced, meaning that they can give a better guarantee of the O(log(n)) seek time.  The downside is that insertion will occasionally take a while while the tree re-balances.  These are best used when you&amp;#39;ll mostly be reading, like in dictionaries and lookup structures.&lt;/p&gt;\n\n&lt;p&gt;Red-Black trees generally have decent guarantees on both insertion and retrieval, so neither will ever take an exceptionally long time.  IIRC, one of the Linux schedulers uses it for this reason, as does the C++ set class.  I see these used a lot as general purpose trees, partly due to predictable performance, partly due to ease of implementation.&lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t think I&amp;#39;ve ever seen a 2-3 tree (or any variation) in the wild.&lt;/p&gt;\n\n&lt;p&gt;What do you mean by &amp;quot;Perfectly balanced binary tree&amp;quot;?  There are several ways of implementing binary trees that give guarantees about the balance.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6hff0z", "flair_text": null, "created": 1349335719.0, "created_utc": 1349332119.0, "num_reports": null}], "score": 2, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 6, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/10x1hi/relatable_applications_of_balanced_trees/", "has_more_comments": false, "name": "t3_10x1hi", "created": 1349325530.0, "url": "http://www.reddit.com/r/compsci/comments/10x1hi/relatable_applications_of_balanced_trees/", "author_flair_text": null, "author": "dneilson", "created_utc": 1349321930.0, "link_flair_text": null, "media": null, "num_reports": null}, "368": {"domain": "secnerd.blogspot.com", "link_flair_class": null, "banned_by": null, "downvotes": 3, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10uafh", "clicked": false, "title": "PhD (in CS): expectations and reality", "num_comments": 7, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10uafh", "children": [], "author": "hayesti", "id": "c6gy0en", "parent_id": "t3_10uafh", "score": 0, "approved_by": null, "upvotes": 5, "body": "I wish the article had some reflections about the length of time in the PhD programme. The author had a master's degree already and spent six extra years dedicated to his doctorate. Is this normal or a bit excessive? Why so many years? Were there funding problems in the later years? I assume an average person can complete a doctorate (already having a master's) in three to four years; I see the author sometimes had TA duties but does this account for the extra two to three years? Would love to hear more!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I wish the article had some reflections about the length of time in the PhD programme. The author had a master&amp;#39;s degree already and spent six extra years dedicated to his doctorate. Is this normal or a bit excessive? Why so many years? Were there funding problems in the later years? I assume an average person can complete a doctorate (already having a master&amp;#39;s) in three to four years; I see the author sometimes had TA duties but does this account for the extra two to three years? Would love to hear more!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6gy0en", "flair_text": null, "created": 1349264678.0, "created_utc": 1349261078.0, "num_reports": null}], "score": 19, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 22, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10uafh/phd_in_cs_expectations_and_reality/", "has_more_comments": false, "name": "t3_10uafh", "created": 1349220160.0, "url": "http://secnerd.blogspot.com/2012/09/phd-expectations-and-reality.html", "author_flair_text": null, "author": "gannimo", "created_utc": 1349216560.0, "link_flair_text": null, "media": null, "num_reports": null}, "369": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 3, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey guys I&amp;#39;m doing prep for interviews and was wondering if there were any good audio lectures that I could listen to while driving or going out on a run. I&amp;#39;m mainly interested in algorithms and data structures, but anything would be nice!&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hey guys I'm doing prep for interviews and was wondering if there were any good audio lectures that I could listen to while driving or going out on a run. I'm mainly interested in algorithms and data structures, but anything would be nice!\n\nThanks!", "saved": false, "id": "10tqqk", "clicked": false, "title": "Any good audio lectures?", "num_comments": 3, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10tqqk", "children": [], "author": "marrick66", "id": "c6goaxd", "parent_id": "t3_10tqqk", "score": 0, "approved_by": null, "upvotes": 3, "body": "Most of the Berkeley CS iTunesU courses have audio only components.  I like listening to Steve Skiena's [algorithm lectures](http://www.cs.sunysb.edu/~algorith/video-lectures/), because his accent and delivery are more interesting than the MIT lectures.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Most of the Berkeley CS iTunesU courses have audio only components.  I like listening to Steve Skiena&amp;#39;s &lt;a href=\"http://www.cs.sunysb.edu/%7Ealgorith/video-lectures/\"&gt;algorithm lectures&lt;/a&gt;, because his accent and delivery are more interesting than the MIT lectures.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6goaxd", "flair_text": null, "created": 1349218238.0, "created_utc": 1349214638.0, "num_reports": null}], "score": 1, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 4, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/10tqqk/any_good_audio_lectures/", "has_more_comments": false, "name": "t3_10tqqk", "created": 1349202585.0, "url": "http://www.reddit.com/r/compsci/comments/10tqqk/any_good_audio_lectures/", "author_flair_text": null, "author": "howardho", "created_utc": 1349198985.0, "link_flair_text": null, "media": null, "num_reports": null}, "370": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 15, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi reddit!&lt;/p&gt;\n\n&lt;p&gt;This week we were talking about the different types of storage and RAM and stuff. We were talking about how if you had addresses that were 32bits, then you would have ( 2&lt;sup&gt;32&lt;/sup&gt; ) addresses (4,294,967,296 addresses).&lt;/p&gt;\n\n&lt;p&gt;However, back in high school I was told on two separate equations that memory is allocated to various programs/processes as is needed. &lt;/p&gt;\n\n&lt;p&gt;For instance (this is a ridiculous example): &lt;/p&gt;\n\n&lt;p&gt;Say you have 4GB of RAM (that&amp;#39;s not the ridiculous part)&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Process 1 :: Requires 247MB of RAM&lt;/li&gt;\n&lt;li&gt;Process 2 :: Requires 3GB of RAM (that&amp;#39;s the ridiculous part)&lt;/li&gt;\n&lt;li&gt;Process 3 :: Requires 256MB of RAM\netc...&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;So the system allocates 200MB for Process 1, 1GB for Process 2 etc...&lt;/p&gt;\n\n&lt;p&gt;And you end up with 521MB of RAM free.&lt;/p&gt;\n\n&lt;p&gt;However, now I&amp;#39;m confused because of this new found formula that I mentioned above: &lt;/p&gt;\n\n&lt;p&gt;2&lt;sup&gt;n&lt;/sup&gt; = # of addresses&lt;/p&gt;\n\n&lt;p&gt;So I&amp;#39;m confused because first I was told that memory is assigned proportionally to the processes that require it, but now I&amp;#39;m told there is a definitive way to accurately number/address how many memory locations you have. &lt;/p&gt;\n\n&lt;p&gt;Or as an analogy:&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Originally&lt;/em&gt; I was told that RAM is like a big warehouse, and someone (a process) comes in and says, &amp;quot;I need a section of this warehouse thats 5ft x 10ft&amp;quot; and the owner of the warehouse says, &amp;quot;Okay here you go!&amp;quot;. And that&amp;#39;s the end of it.&lt;/p&gt;\n\n&lt;p&gt;Now I&amp;#39;m being told that RAM is more like a hotel, where you &lt;em&gt;know&lt;/em&gt; there are 4 floors, each with 100 rooms on them (ranging from 000-499 / 000000000 - 111110011), and a process comes in and says, &amp;quot;I need a room (wink wink)&amp;quot;, and the system says, &amp;quot;Okay here you go!&amp;quot;. And that&amp;#39;s the end of that.&lt;/p&gt;\n\n&lt;p&gt;So what made sense about the first analogy is that if a process only requires 4 bits of memory, the system would only give it 4 bits, which makes things super efficient. &lt;/p&gt;\n\n&lt;p&gt;But now if the process (again) only requires 4 bits, then how big are the rooms? If they are only one size then what happens to the leftover space?&lt;/p&gt;\n\n&lt;p&gt;Can anyone help me? Tell me what I&amp;#39;ve got wrong? Link me to an article? Cheesecake?&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi reddit!\n\nThis week we were talking about the different types of storage and RAM and stuff. We were talking about how if you had addresses that were 32bits, then you would have ( 2^32 ) addresses (4,294,967,296 addresses).\n\n\nHowever, back in high school I was told on two separate equations that memory is allocated to various programs/processes as is needed. \n\nFor instance (this is a ridiculous example): \n\nSay you have 4GB of RAM (that's not the ridiculous part)\n\n* Process 1 :: Requires 247MB of RAM\n* Process 2 :: Requires 3GB of RAM (that's the ridiculous part)\n* Process 3 :: Requires 256MB of RAM\netc...\n\nSo the system allocates 200MB for Process 1, 1GB for Process 2 etc...\n\nAnd you end up with 521MB of RAM free.\n\nHowever, now I'm confused because of this new found formula that I mentioned above: \n\n2^n = # of addresses\n\nSo I'm confused because first I was told that memory is assigned proportionally to the processes that require it, but now I'm told there is a definitive way to accurately number/address how many memory locations you have. \n\nOr as an analogy:\n\n*Originally* I was told that RAM is like a big warehouse, and someone (a process) comes in and says, \"I need a section of this warehouse thats 5ft x 10ft\" and the owner of the warehouse says, \"Okay here you go!\". And that's the end of it.\n\nNow I'm being told that RAM is more like a hotel, where you *know* there are 4 floors, each with 100 rooms on them (ranging from 000-499 / 000000000 - 111110011), and a process comes in and says, \"I need a room (wink wink)\", and the system says, \"Okay here you go!\". And that's the end of that.\n\nSo what made sense about the first analogy is that if a process only requires 4 bits of memory, the system would only give it 4 bits, which makes things super efficient. \n\nBut now if the process (again) only requires 4 bits, then how big are the rooms? If they are only one size then what happens to the leftover space?\n\nCan anyone help me? Tell me what I've got wrong? Link me to an article? Cheesecake?\n\nThanks!", "saved": false, "id": "10s6qf", "clicked": false, "title": "Memory help...", "num_comments": 26, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10s6qf", "children": [], "author": "cabbagerat", "id": "c6g6s75", "parent_id": "t3_10s6qf", "score": 0, "approved_by": null, "upvotes": 33, "body": "You should read [What every programmer should know about memory](http://www.akkadia.org/drepper/cpumemory.pdf), starting with section 4. It goes into a bunch more depth that you probably need, but will answer your questions more accurately than I am able to do in a single comment.\n\nThe important point is that there is a layer between physical memory and the memory your process sees. Understanding how this \"virtual memory\" layer works is key to understanding how modern operating systems use memory.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You should read &lt;a href=\"http://www.akkadia.org/drepper/cpumemory.pdf\"&gt;What every programmer should know about memory&lt;/a&gt;, starting with section 4. It goes into a bunch more depth that you probably need, but will answer your questions more accurately than I am able to do in a single comment.&lt;/p&gt;\n\n&lt;p&gt;The important point is that there is a layer between physical memory and the memory your process sees. Understanding how this &amp;quot;virtual memory&amp;quot; layer works is key to understanding how modern operating systems use memory.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6g6s75", "flair_text": null, "created": 1349134202.0, "created_utc": 1349130602.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10s6qf", "children": [], "author": "sixstringartist", "id": "c6g6qei", "parent_id": "t3_10s6qf", "score": 0, "approved_by": null, "upvotes": 19, "body": "You are getting confused by the difference between virtual memory and physical memory. Before virtual memory, all programs shared an address space which was the physical address space. This was not ideal for a number of reasons, one being that processes could muck about with the memory of other processes. Virtual memory provides an abstraction to that in which each process \"thinks\" it has access to the entire address space and its the only program running.\n\nThe formula 2^n = #addresses refers to the number of addressable regions of memory where n is the width of addresses (32bit or 64bit for all modern desktops).\n\nplease reply with questions. I know this is not going to answer all of what you're getting hung up on, but its not clear to me what else you are asking. \n\nEDIT: I should add that vram is mapped to physical memory in the OS with the help of hardware, so there is no notion of an absolute physical memory address to the running (user-mode) processes. ", "edited": 1349130629.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You are getting confused by the difference between virtual memory and physical memory. Before virtual memory, all programs shared an address space which was the physical address space. This was not ideal for a number of reasons, one being that processes could muck about with the memory of other processes. Virtual memory provides an abstraction to that in which each process &amp;quot;thinks&amp;quot; it has access to the entire address space and its the only program running.&lt;/p&gt;\n\n&lt;p&gt;The formula 2&lt;sup&gt;n&lt;/sup&gt; = #addresses refers to the number of addressable regions of memory where n is the width of addresses (32bit or 64bit for all modern desktops).&lt;/p&gt;\n\n&lt;p&gt;please reply with questions. I know this is not going to answer all of what you&amp;#39;re getting hung up on, but its not clear to me what else you are asking. &lt;/p&gt;\n\n&lt;p&gt;EDIT: I should add that vram is mapped to physical memory in the OS with the help of hardware, so there is no notion of an absolute physical memory address to the running (user-mode) processes. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6g6qei", "flair_text": null, "created": 1349134013.0, "created_utc": 1349130413.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10s6qf", "children": [], "author": "Workaphobia", "id": "c6g6w2v", "parent_id": "t3_10s6qf", "score": 0, "approved_by": null, "upvotes": 4, "body": "&gt; We were talking about how if you had addresses that were 32bits, then you would have ( 232 ) addresses (4,294,967,296 addresses).\n\nAddresses, yes. Not all of those addresses are necessarily usable. Your machine may only have 1GB. Or even if you have 4GB, some addresses are considered special because they are reserved for the system, or correspond to certain hardware devices. (For instance, reading/writing a certain \"memory\" address may actually causes I/O to happen.)\n\n3GB of RAM for a single process is not at all ridiculous for many professional applications.\n\nThe main thing that would solve your conundrum is understanding *virtual memory*. There are physical addresses that correspond to actual cells of circuitry on a DRAM chip in your computer. And then there are logical addresses that a program works with, that get converted automatically to physical addresses by the system without the program knowing or caring. Each process has its own memory mappings from logical to physical addresses, so two different processes may both refer to the same address and get completely different unshared pieces of actual memory.\n\nThe management of these mappings from logical to physical addresses is done by the operating system. This is why a process needs to request more memory, and how it can be allocated on a per-need basis. If there were no such thing as virtual memory, every process would just read and write whatever part of physical memory it wanted. There would be no requesting, just a flat chunk of 4GB (or less).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;We were talking about how if you had addresses that were 32bits, then you would have ( 232 ) addresses (4,294,967,296 addresses).&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Addresses, yes. Not all of those addresses are necessarily usable. Your machine may only have 1GB. Or even if you have 4GB, some addresses are considered special because they are reserved for the system, or correspond to certain hardware devices. (For instance, reading/writing a certain &amp;quot;memory&amp;quot; address may actually causes I/O to happen.)&lt;/p&gt;\n\n&lt;p&gt;3GB of RAM for a single process is not at all ridiculous for many professional applications.&lt;/p&gt;\n\n&lt;p&gt;The main thing that would solve your conundrum is understanding &lt;em&gt;virtual memory&lt;/em&gt;. There are physical addresses that correspond to actual cells of circuitry on a DRAM chip in your computer. And then there are logical addresses that a program works with, that get converted automatically to physical addresses by the system without the program knowing or caring. Each process has its own memory mappings from logical to physical addresses, so two different processes may both refer to the same address and get completely different unshared pieces of actual memory.&lt;/p&gt;\n\n&lt;p&gt;The management of these mappings from logical to physical addresses is done by the operating system. This is why a process needs to request more memory, and how it can be allocated on a per-need basis. If there were no such thing as virtual memory, every process would just read and write whatever part of physical memory it wanted. There would be no requesting, just a flat chunk of 4GB (or less).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6g6w2v", "flair_text": null, "created": 1349134636.0, "created_utc": 1349131036.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10s6qf", "children": [], "author": "oofabz", "id": "c6g6zx8", "parent_id": "t3_10s6qf", "score": 0, "approved_by": null, "upvotes": 2, "body": "On your 32-bit machine, all programs get 32-bit pointers, they don't get \"4 bits of memory\". If they try to access memory that isn't theirs, they crash. It isn't allocated by the bit, it's like a range of numbers.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;On your 32-bit machine, all programs get 32-bit pointers, they don&amp;#39;t get &amp;quot;4 bits of memory&amp;quot;. If they try to access memory that isn&amp;#39;t theirs, they crash. It isn&amp;#39;t allocated by the bit, it&amp;#39;s like a range of numbers.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6g6zx8", "flair_text": null, "created": 1349135071.0, "created_utc": 1349131471.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10s6qf", "children": [], "author": "rbobby", "id": "c6gc165", "parent_id": "t3_10s6qf", "score": 0, "approved_by": null, "upvotes": 1, "body": "Part of what you're missing out on is that the CPU typically operates in two distinct modes... \"user mode\" and \"kernel mode\". User mode is where what most folks consider processes \"live\". Kernel mode is where the operating system \"lives\". When the CPU switches from user to kernel the virtual memory subsystem is automatically reconfigured such that the CPU can access all available memory directly. When the CPU switches from kernel mode to user mode the virtual memory system is automatically reconfigured such that to the executing program it appears that it can address all available memory, starting at 0 and going to the top of memory... but in fact the virtual memory system is automatically translating a requested \"virtual address\" to it's actual real physical memory address. A user mode process's actually memory could be sprinkled all over physical memory... but to a process in user mode memory looks contiguous (memory is normally managed in 8K chunks called pages). \n\nThings get even more tricky when all the processes together are using more memory than is actually in the system. When this happens the operating system uses the hard disk as temporary memory storage and \"swaps\" process's memory in/out of the \"paging file\" (the specific are a lot more complicated... but if you think of the process being suspended and its memory written to disk you won't be far off).\n\nNote... the above is not 100% accurate but should be close enough to aid in your understanding (especially that the CPU really does operate in two modes... user and kernel and that user mode is quite different from kernel mode)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Part of what you&amp;#39;re missing out on is that the CPU typically operates in two distinct modes... &amp;quot;user mode&amp;quot; and &amp;quot;kernel mode&amp;quot;. User mode is where what most folks consider processes &amp;quot;live&amp;quot;. Kernel mode is where the operating system &amp;quot;lives&amp;quot;. When the CPU switches from user to kernel the virtual memory subsystem is automatically reconfigured such that the CPU can access all available memory directly. When the CPU switches from kernel mode to user mode the virtual memory system is automatically reconfigured such that to the executing program it appears that it can address all available memory, starting at 0 and going to the top of memory... but in fact the virtual memory system is automatically translating a requested &amp;quot;virtual address&amp;quot; to it&amp;#39;s actual real physical memory address. A user mode process&amp;#39;s actually memory could be sprinkled all over physical memory... but to a process in user mode memory looks contiguous (memory is normally managed in 8K chunks called pages). &lt;/p&gt;\n\n&lt;p&gt;Things get even more tricky when all the processes together are using more memory than is actually in the system. When this happens the operating system uses the hard disk as temporary memory storage and &amp;quot;swaps&amp;quot; process&amp;#39;s memory in/out of the &amp;quot;paging file&amp;quot; (the specific are a lot more complicated... but if you think of the process being suspended and its memory written to disk you won&amp;#39;t be far off).&lt;/p&gt;\n\n&lt;p&gt;Note... the above is not 100% accurate but should be close enough to aid in your understanding (especially that the CPU really does operate in two modes... user and kernel and that user mode is quite different from kernel mode)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6gc165", "flair_text": null, "created": 1349157666.0, "created_utc": 1349154066.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10s6qf", "children": [], "author": "kqr", "id": "c6gefhr", "parent_id": "t3_10s6qf", "score": 0, "approved_by": null, "upvotes": 1, "body": "The memory could be seen like a huge warehouse where the minimum rent space is a square inch or something. Each square inch has an identifier, and you can rent however many square inches you require, but no less than a square inch. I guess that's more like the hotel, only the rooms are really, really small.\n\nIf you need less than a square inch, you'll have to rent a square inch and just not use the leftover space. I'm sure it sounds inefficient, but in reality it isn't because smaller sizes would be slower if you want to store larger data. A square inch is almost too small to be efficient, these days.\n\nWell, that's the basic idea, anyway. Virtual memory, paging and whatnot really complicates things.", "edited": 1349172462.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The memory could be seen like a huge warehouse where the minimum rent space is a square inch or something. Each square inch has an identifier, and you can rent however many square inches you require, but no less than a square inch. I guess that&amp;#39;s more like the hotel, only the rooms are really, really small.&lt;/p&gt;\n\n&lt;p&gt;If you need less than a square inch, you&amp;#39;ll have to rent a square inch and just not use the leftover space. I&amp;#39;m sure it sounds inefficient, but in reality it isn&amp;#39;t because smaller sizes would be slower if you want to store larger data. A square inch is almost too small to be efficient, these days.&lt;/p&gt;\n\n&lt;p&gt;Well, that&amp;#39;s the basic idea, anyway. Virtual memory, paging and whatnot really complicates things.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6gefhr", "flair_text": null, "created": 1349175799.0, "created_utc": 1349172199.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10s6qf", "children": [], "author": "zvrba", "id": "c6gf3fn", "parent_id": "t3_10s6qf", "score": 0, "approved_by": null, "upvotes": 1, "body": "It's more like this: there's a warehouse of fixed capacity (physical memory) and is run by a warehouse manager (the OS kernel). When you need some storage space, you ask the warehouse manager for it and he gives you out a ticket describing the location of that space (virtual memory address). Now imagine also that the warehouse is guarded by robots (hardware memory protection) who know your identity and know about all tickets issued to you. They constantly monitor your every move through the warehouse and if you try to go into an area of the warehouse without having a valid ticket that grants you access there, they will kill you (segmentation violation, yay! :)).\n\nNow, here's the funky part: the manager routinely gives out tickets whose total nominal value exceeds the physically available space (memory overcommit). The manager is monitoring how much space each customer is really using and how frequently they are accessing their storage. Those customers who are rarely in the warehouse get their stuff relocated to a distant location (swap file on disk) so that frequent customers get better service.\n\nThis scheme works because 1) most customers ask for more space than they will actually use, 2) the secondary storage location is often very large, 3) the actual physical space is allocated to you only after you have put some of your stuff there.\n\nSometimes the scheme breaks down too, read about oom killer (Linux artifact).\n\nAlso, the warehouse analogy isn't perfect.. Think of such warehouse been divided into cubicles of fixed-size. When you get a ticket, it grants you access to a number of cubicles (in proportion with your request), but they are not necessarily neighbors. Even if they are neighbors, there are still walls between them. There's a lot of hardware magic going underneath (virtual to physical address translation) that gives you an illusion of one large cubicle.\n\nThere, this was my best and imperfect attempt at explaining the stuff :)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s more like this: there&amp;#39;s a warehouse of fixed capacity (physical memory) and is run by a warehouse manager (the OS kernel). When you need some storage space, you ask the warehouse manager for it and he gives you out a ticket describing the location of that space (virtual memory address). Now imagine also that the warehouse is guarded by robots (hardware memory protection) who know your identity and know about all tickets issued to you. They constantly monitor your every move through the warehouse and if you try to go into an area of the warehouse without having a valid ticket that grants you access there, they will kill you (segmentation violation, yay! :)).&lt;/p&gt;\n\n&lt;p&gt;Now, here&amp;#39;s the funky part: the manager routinely gives out tickets whose total nominal value exceeds the physically available space (memory overcommit). The manager is monitoring how much space each customer is really using and how frequently they are accessing their storage. Those customers who are rarely in the warehouse get their stuff relocated to a distant location (swap file on disk) so that frequent customers get better service.&lt;/p&gt;\n\n&lt;p&gt;This scheme works because 1) most customers ask for more space than they will actually use, 2) the secondary storage location is often very large, 3) the actual physical space is allocated to you only after you have put some of your stuff there.&lt;/p&gt;\n\n&lt;p&gt;Sometimes the scheme breaks down too, read about oom killer (Linux artifact).&lt;/p&gt;\n\n&lt;p&gt;Also, the warehouse analogy isn&amp;#39;t perfect.. Think of such warehouse been divided into cubicles of fixed-size. When you get a ticket, it grants you access to a number of cubicles (in proportion with your request), but they are not necessarily neighbors. Even if they are neighbors, there are still walls between them. There&amp;#39;s a lot of hardware magic going underneath (virtual to physical address translation) that gives you an illusion of one large cubicle.&lt;/p&gt;\n\n&lt;p&gt;There, this was my best and imperfect attempt at explaining the stuff :)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6gf3fn", "flair_text": null, "created": 1349182714.0, "created_utc": 1349179114.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10s6qf", "children": [], "author": "imnotcam", "id": "c6ggup9", "parent_id": "t3_10s6qf", "score": 0, "approved_by": null, "upvotes": 1, "body": "I see there are a lot of answers here already, and I didn't skim them all. I'll give my insights as a CS major, which I'm sure many people in this subreddit are. When a program is executed, a segment of memory is allocated for it and the program gets loaded into RAM. In that segment there contains a section for the data you store, and a section for the actual machine instructions. In machine level langues, like for 80x86, you actually specify the amount of memory you want to set aside for the program. That would be like the warehouse part (I only *need* a 2' x 2' space, but just give me 5' x 5' anyway).\n\nI don't think you're interested in the machine instructions, so I'll discuss how the data is addressed. This is more like the hotel explanation. The reason, to use your example, that you wouldn't just reserve 4 bits is that a byte (8 bits) is the smallest \"room\" you can reserve. There are other \"rooms\" that can be taken, like word, which is 2 bytes, double word, and now quadword with 64 bit processors, so these can be your 4 floors of the hotel, but one floor may have 100 rooms, the next 50, then 25, then maybe 12 really big rooms. No process only requires 4 bits. Even if you are only dealing with values from 0 - 15, which would be 4 bits, your processor will fetch the entire byte allowing you to use values from 0 - 255.\n\nDoing bit addressing would severely reduce the number of possible allocations, and when accessing that memory, it would require not only the start of the data, but also how much you are taking (i.e. I may only be using 4 bits for this, but 13 bits for that). It actually would not make things super efficient. By potentially giving you slightly more space than you need, the computer just needs to know where to grab memory and then gives you all of it. Whoever told you that memory is assigned proportionally to the process that requires it is wrong. I can elaborate on any of this if needed.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I see there are a lot of answers here already, and I didn&amp;#39;t skim them all. I&amp;#39;ll give my insights as a CS major, which I&amp;#39;m sure many people in this subreddit are. When a program is executed, a segment of memory is allocated for it and the program gets loaded into RAM. In that segment there contains a section for the data you store, and a section for the actual machine instructions. In machine level langues, like for 80x86, you actually specify the amount of memory you want to set aside for the program. That would be like the warehouse part (I only &lt;em&gt;need&lt;/em&gt; a 2&amp;#39; x 2&amp;#39; space, but just give me 5&amp;#39; x 5&amp;#39; anyway).&lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t think you&amp;#39;re interested in the machine instructions, so I&amp;#39;ll discuss how the data is addressed. This is more like the hotel explanation. The reason, to use your example, that you wouldn&amp;#39;t just reserve 4 bits is that a byte (8 bits) is the smallest &amp;quot;room&amp;quot; you can reserve. There are other &amp;quot;rooms&amp;quot; that can be taken, like word, which is 2 bytes, double word, and now quadword with 64 bit processors, so these can be your 4 floors of the hotel, but one floor may have 100 rooms, the next 50, then 25, then maybe 12 really big rooms. No process only requires 4 bits. Even if you are only dealing with values from 0 - 15, which would be 4 bits, your processor will fetch the entire byte allowing you to use values from 0 - 255.&lt;/p&gt;\n\n&lt;p&gt;Doing bit addressing would severely reduce the number of possible allocations, and when accessing that memory, it would require not only the start of the data, but also how much you are taking (i.e. I may only be using 4 bits for this, but 13 bits for that). It actually would not make things super efficient. By potentially giving you slightly more space than you need, the computer just needs to know where to grab memory and then gives you all of it. Whoever told you that memory is assigned proportionally to the process that requires it is wrong. I can elaborate on any of this if needed.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ggup9", "flair_text": null, "created": 1349192595.0, "created_utc": 1349188995.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 15, "link_id": "t3_10s6qf", "children": [], "author": "[deleted]", "id": "c6g7yp9", "parent_id": "t3_10s6qf", "score": 0, "approved_by": null, "upvotes": 1, "body": "[deleted]", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6g7yp9", "flair_text": null, "created": 1349139070.0, "created_utc": 1349135470.0, "num_reports": null}], "score": 25, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 40, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/10s6qf/memory_help/", "has_more_comments": false, "name": "t3_10s6qf", "created": 1349131732.0, "url": "http://www.reddit.com/r/compsci/comments/10s6qf/memory_help/", "author_flair_text": null, "author": "atrumcontemno", "created_utc": 1349128132.0, "link_flair_text": null, "media": null, "num_reports": null}, "371": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 7, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have had introductory experience with using neural networks for regression and classification problems but I have several questions about intelligently creating a network architecture.&lt;/p&gt;\n\n&lt;p&gt;I suppose the most general question would be: What are the most common network architectures and what/why are they used for specific tasks.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m not quite sure how to elaborate my question further but I suppose I could start by describing some of what I know.&lt;/p&gt;\n\n&lt;p&gt;2 layer networks, (input/output only), are essentially the same as linear regression, and for this reason aren&amp;#39;t really used.&lt;/p&gt;\n\n&lt;p&gt;3 layer networks, (1 hidden layer), are the most common and can be used to model phenomenon with highly non-linear characteristics. These are the most popular because it has been mathematically shown that any phenomenon that can be modeled by a differentiable function can be fit with this type of network, (given enough data, and unbounded neurons in the hidden layer). &lt;/p&gt;\n\n&lt;p&gt;4 layer, 2 hidden layer, networks are used either because they could be more computationally efficient than a single hidden layer with tons of neurons or they are used to model phenomenon that have discontinuities (not sure how that is true). &lt;/p&gt;\n\n&lt;p&gt;Basically I&amp;#39;m looking for elaborated information like the above. For example I&amp;#39;ve seen pictures of networks with &amp;#39;split&amp;#39; layers, e.g. not all of the neurons in layer j are connected to every other neuron in layer j+1 or such. I would like to know what other kinds of networks there are and if there is a reason that they are good at what they are being used for.&lt;/p&gt;\n\n&lt;p&gt;I realize this isn&amp;#39;t necessarily a totally answerable question, but any kind of help or link to relevant resources would be great!&lt;/p&gt;\n\n&lt;p&gt;Thank you !&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I have had introductory experience with using neural networks for regression and classification problems but I have several questions about intelligently creating a network architecture.\n\nI suppose the most general question would be: What are the most common network architectures and what/why are they used for specific tasks.\n\nI'm not quite sure how to elaborate my question further but I suppose I could start by describing some of what I know.\n\n2 layer networks, (input/output only), are essentially the same as linear regression, and for this reason aren't really used.\n\n3 layer networks, (1 hidden layer), are the most common and can be used to model phenomenon with highly non-linear characteristics. These are the most popular because it has been mathematically shown that any phenomenon that can be modeled by a differentiable function can be fit with this type of network, (given enough data, and unbounded neurons in the hidden layer). \n\n4 layer, 2 hidden layer, networks are used either because they could be more computationally efficient than a single hidden layer with tons of neurons or they are used to model phenomenon that have discontinuities (not sure how that is true). \n\nBasically I'm looking for elaborated information like the above. For example I've seen pictures of networks with 'split' layers, e.g. not all of the neurons in layer j are connected to every other neuron in layer j+1 or such. I would like to know what other kinds of networks there are and if there is a reason that they are good at what they are being used for.\n\n I realize this isn't necessarily a totally answerable question, but any kind of help or link to relevant resources would be great!\n\nThank you !", "saved": false, "id": "10qlh2", "clicked": false, "title": "Neural network designs?", "num_comments": 20, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10qlh2", "children": [], "author": "maruszCS", "id": "c6fwwnx", "parent_id": "t3_10qlh2", "score": 0, "approved_by": null, "upvotes": 6, "body": "Slightly off-topic, but if it's of any interest to anybody then 'Neural Networks for Machine Learning' course actually starts today on coursera.org :)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Slightly off-topic, but if it&amp;#39;s of any interest to anybody then &amp;#39;Neural Networks for Machine Learning&amp;#39; course actually starts today on coursera.org :)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6fwwnx", "flair_text": null, "created": 1349085814.0, "created_utc": 1349082214.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10qlh2", "children": [], "author": "crwcomposer", "id": "c6fs4nq", "parent_id": "t3_10qlh2", "score": 0, "approved_by": null, "upvotes": 5, "body": "A lot of the time you have to rely on trial-and-error to get all the variables optimized for your purpose.\n\nAlso, there's more to it than just number of layers and neurons. There are also things like bias, learning rate, learning algorithms, etc.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A lot of the time you have to rely on trial-and-error to get all the variables optimized for your purpose.&lt;/p&gt;\n\n&lt;p&gt;Also, there&amp;#39;s more to it than just number of layers and neurons. There are also things like bias, learning rate, learning algorithms, etc.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6fs4nq", "flair_text": null, "created": 1349059039.0, "created_utc": 1349055439.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10qlh2", "children": [], "author": "[deleted]", "id": "c6ft7qc", "parent_id": "t3_10qlh2", "score": 0, "approved_by": null, "upvotes": 5, "body": "I'm currently a student, and have done (some) introductory neural net stuff and am planning to do more. When asking professors about neural net architecture, they have just said basically what crwcomposer said, \"just try stuff out and see what works\"...\n\nI'm interested to hear what anyone with more experience has to say as well.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m currently a student, and have done (some) introductory neural net stuff and am planning to do more. When asking professors about neural net architecture, they have just said basically what crwcomposer said, &amp;quot;just try stuff out and see what works&amp;quot;...&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m interested to hear what anyone with more experience has to say as well.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ft7qc", "flair_text": null, "created": 1349063387.0, "created_utc": 1349059787.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10qlh2", "children": [], "author": "rbobby", "id": "c6fwp3z", "parent_id": "t3_10qlh2", "score": 0, "approved_by": null, "upvotes": 3, "body": "Restricted Boltzman Machines are well worth a look. http://www.youtube.com/watch?v=AyzOUbkUf3M (Geoffrey Hinton). Also https://www.coursera.org/course/neuralnets (free online course starting soon)\n\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Restricted Boltzman Machines are well worth a look. &lt;a href=\"http://www.youtube.com/watch?v=AyzOUbkUf3M\"&gt;http://www.youtube.com/watch?v=AyzOUbkUf3M&lt;/a&gt; (Geoffrey Hinton). Also &lt;a href=\"https://www.coursera.org/course/neuralnets\"&gt;https://www.coursera.org/course/neuralnets&lt;/a&gt; (free online course starting soon)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6fwp3z", "flair_text": null, "created": 1349083381.0, "created_utc": 1349079781.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10qlh2", "children": [], "author": "CharredOldOakCask", "id": "c6g1bmr", "parent_id": "t3_10qlh2", "score": 0, "approved_by": null, "upvotes": 3, "body": "On phone, try evolution.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;On phone, try evolution.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6g1bmr", "flair_text": null, "created": 1349114303.0, "created_utc": 1349110703.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10qlh2", "children": [], "author": "zepaperclip", "id": "c6g1nx4", "parent_id": "t3_10qlh2", "score": 0, "approved_by": null, "upvotes": 1, "body": "I'm an undergrad students that's been itching to learn more neural networks; I won't get to take the AI course offered at my University.  Can anybody recommend me a good book? Maybe a good machine learning book? Currently I'm reading \" On Intelligence\"  (can't remember the author right now)  which talked briefly about neural networks. ", "edited": 1349112217.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m an undergrad students that&amp;#39;s been itching to learn more neural networks; I won&amp;#39;t get to take the AI course offered at my University.  Can anybody recommend me a good book? Maybe a good machine learning book? Currently I&amp;#39;m reading &amp;quot; On Intelligence&amp;quot;  (can&amp;#39;t remember the author right now)  which talked briefly about neural networks. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6g1nx4", "flair_text": null, "created": 1349115598.0, "created_utc": 1349111998.0, "num_reports": null}], "score": 23, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 30, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/10qlh2/neural_network_designs/", "has_more_comments": false, "name": "t3_10qlh2", "created": 1349058462.0, "url": "http://www.reddit.com/r/compsci/comments/10qlh2/neural_network_designs/", "author_flair_text": null, "author": "Hidden_Markov", "created_utc": 1349054862.0, "link_flair_text": null, "media": null, "num_reports": null}, "372": {"domain": "arxiv.org", "link_flair_class": null, "banned_by": null, "downvotes": 17, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10pzun", "clicked": false, "title": "Fast Algorithms for the Maximum Clique Problem on Massive Sparse Graphs", "num_comments": 2, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10pzun", "children": [], "author": "serious_guy", "id": "c6g2005", "parent_id": "t3_10pzun", "score": 0, "approved_by": null, "upvotes": 1, "body": "It has all the limits of exact algorithms on NP-complete problems, so for DIMACS instances I would go with meta-heuristics to be able to tackle graph of reasonable size, and for what concerns exact algorithms on big sparse graphs I would be curious of a comparison with [Eppstein's et al.](http://www.springerlink.com/content/650317j4jn76x1v7/):\n\n    @incollection {springerlink:10.1007/978-3-642-17517-6_36,\n       author = {Eppstein, David and L\u00f6ffler, Maarten and Strash, Darren},\n       affiliation = {Department of Computer Science, University of California, Irvine, USA},\n       title = {Listing All Maximal Cliques in Sparse Graphs in Near-Optimal Time},\n       booktitle = {Algorithms and Computation},\n       series = {Lecture Notes in Computer Science},\n       editor = {Cheong, Otfried and Chwa, Kyung-Yong and Park, Kunsoo},\n       publisher = {Springer Berlin / Heidelberg},\n       isbn = {978-3-642-17516-9},\n       keyword = {Computer Science},\n       pages = {403-414},\n       volume = {6506},\n       url = {http://dx.doi.org/10.1007/978-3-642-17517-6_36},\n       note = {10.1007/978-3-642-17517-6_36},\n       year = {2010}\n    }\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It has all the limits of exact algorithms on NP-complete problems, so for DIMACS instances I would go with meta-heuristics to be able to tackle graph of reasonable size, and for what concerns exact algorithms on big sparse graphs I would be curious of a comparison with &lt;a href=\"http://www.springerlink.com/content/650317j4jn76x1v7/\"&gt;Eppstein&amp;#39;s et al.&lt;/a&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;@incollection {springerlink:10.1007/978-3-642-17517-6_36,\n   author = {Eppstein, David and L\u00f6ffler, Maarten and Strash, Darren},\n   affiliation = {Department of Computer Science, University of California, Irvine, USA},\n   title = {Listing All Maximal Cliques in Sparse Graphs in Near-Optimal Time},\n   booktitle = {Algorithms and Computation},\n   series = {Lecture Notes in Computer Science},\n   editor = {Cheong, Otfried and Chwa, Kyung-Yong and Park, Kunsoo},\n   publisher = {Springer Berlin / Heidelberg},\n   isbn = {978-3-642-17516-9},\n   keyword = {Computer Science},\n   pages = {403-414},\n   volume = {6506},\n   url = {http://dx.doi.org/10.1007/978-3-642-17517-6_36},\n   note = {10.1007/978-3-642-17517-6_36},\n   year = {2010}\n}\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6g2005", "flair_text": null, "created": 1349116834.0, "created_utc": 1349113234.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10pzun", "children": [], "author": "rampion", "id": "c6i26zr", "parent_id": "t3_10pzun", "score": 0, "approved_by": null, "upvotes": 2, "body": "Good paper!  I misunderstood the algorithm at first (I misread how the while loop in the subroutine searched the space), but now I see it.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Good paper!  I misunderstood the algorithm at first (I misread how the while loop in the subroutine searched the space), but now I see it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6i26zr", "flair_text": null, "created": 1349456095.0, "created_utc": 1349452495.0, "num_reports": null}], "score": 38, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 55, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10pzun/fast_algorithms_for_the_maximum_clique_problem_on/", "has_more_comments": false, "name": "t3_10pzun", "created": 1349035997.0, "url": "http://arxiv.org/abs/1209.5818", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1349032397.0, "link_flair_text": null, "media": null, "num_reports": null}, "373": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 8, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been reading about parallel algorithms and have so far encountered:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Parallel_Random_Access_Machine\"&gt;PRAM&lt;/a&gt;: Simultaneous computation with access to shared memory. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Bulk_synchronous_parallel\"&gt;Bulk Synchronous&lt;/a&gt;: Simultaneous computation on processors accessing only local memory, interwoven with global synchronization/communications steps. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Message_passing\"&gt;Message Passing&lt;/a&gt;: Independent computational elements communicating without shared mutable memory or global synchronizations. &lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;What other ways are there to express/encode parallel computation? &lt;/p&gt;\n\n&lt;p&gt;edit: Just to clarify, I&amp;#39;m not looking for complexity classes (like NC) or hardware models (like SIMD). Also, by &amp;quot;parallel&amp;quot; I mean roughly &amp;quot;usefully spread work across thousands of processors&amp;quot;. &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I've been reading about parallel algorithms and have so far encountered:\n \n- [PRAM](http://en.wikipedia.org/wiki/Parallel_Random_Access_Machine): Simultaneous computation with access to shared memory. \n\n- [Bulk Synchronous](http://en.wikipedia.org/wiki/Bulk_synchronous_parallel): Simultaneous computation on processors accessing only local memory, interwoven with global synchronization/communications steps. \n\n- [Message Passing](http://en.wikipedia.org/wiki/Message_passing): Independent computational elements communicating without shared mutable memory or global synchronizations. \n\nWhat other ways are there to express/encode parallel computation? \n\nedit: Just to clarify, I'm not looking for complexity classes (like NC) or hardware models (like SIMD). Also, by \"parallel\" I mean roughly \"usefully spread work across thousands of processors\". \n", "saved": false, "id": "10q19h", "clicked": false, "title": "What other models are there for parallel computation?", "num_comments": 15, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10q19h", "children": [], "author": "JL235", "id": "c6fqcad", "parent_id": "t3_10q19h", "score": 0, "approved_by": null, "upvotes": 5, "body": "'Message Passing' usually means 'actors', but a kinda similar scheme is CSP. The practical difference in implementations for the developer is that with actors you usually hold on to the processes, as actual values. With CSP however you instead hold on to the channels that connect them, and don't hold the process.\n\nCSP also only communicates when both sides are reading and writing simultaneously; with many actor implementations one side can usually write, or read, without the other side being involved. A mailbox often sits in between, allowing writing to always be non-blocking, and reading happen in the future.\n\nI did a little programming with Occam-Pi at University, which is a buffed up version of Occam, which in turn is built around CSP. I really like the CSP model, and it feels like it would be a lot more efficient then most actor implementations; namely because there is no overhead from handling a mailbox (yet you can build one if you wish to).\n\nI don't know if this is specific to CSP, or an extension, but Occam-Pi also supports selecting multiple channels when reading. This is so they are tested in sequence (i.e. try to read from channel A, then B, then C, and so on), or it picks them psudo-randomly (so one channel can't starve out the others, although in practice, it often can).\n\nOccam also supports these neat PAR and SEQ blocks, where you state if the code in the block should be run in parallel or sequence. In theory PAR blocks can be run in parallel, but in practice it's more to infer your design. You see Occam can also detect dead locks, not only at runtime, but also at compile time (which is one of the cool things about Occam). So if you create two processes in sequence which both interact straight away, the first will be deadlocked the moment it begins, because the other doesn't yet exist. PAR gives your intention that conceptually, they start in parallel, and so avoids certain deadlocks (even if they really do start in sequence).\n\nThere is also far more to CSP than this; I am not an expert on the subject, and certainly haven't looked at the formal side of it such as the Pi calculus. However if you are interested in more, you could try contacting the [concurrency research team at the University of Kent](http://blogs.kent.ac.uk/crg-group/), who do a fair amount of CSP and Occam related projects. They are nice guys, and the model is awesome. However the Occam-Pi language they developed, when I used it, needed a lot more maturity. There is also a lot of CSP info around online.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&amp;#39;Message Passing&amp;#39; usually means &amp;#39;actors&amp;#39;, but a kinda similar scheme is CSP. The practical difference in implementations for the developer is that with actors you usually hold on to the processes, as actual values. With CSP however you instead hold on to the channels that connect them, and don&amp;#39;t hold the process.&lt;/p&gt;\n\n&lt;p&gt;CSP also only communicates when both sides are reading and writing simultaneously; with many actor implementations one side can usually write, or read, without the other side being involved. A mailbox often sits in between, allowing writing to always be non-blocking, and reading happen in the future.&lt;/p&gt;\n\n&lt;p&gt;I did a little programming with Occam-Pi at University, which is a buffed up version of Occam, which in turn is built around CSP. I really like the CSP model, and it feels like it would be a lot more efficient then most actor implementations; namely because there is no overhead from handling a mailbox (yet you can build one if you wish to).&lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t know if this is specific to CSP, or an extension, but Occam-Pi also supports selecting multiple channels when reading. This is so they are tested in sequence (i.e. try to read from channel A, then B, then C, and so on), or it picks them psudo-randomly (so one channel can&amp;#39;t starve out the others, although in practice, it often can).&lt;/p&gt;\n\n&lt;p&gt;Occam also supports these neat PAR and SEQ blocks, where you state if the code in the block should be run in parallel or sequence. In theory PAR blocks can be run in parallel, but in practice it&amp;#39;s more to infer your design. You see Occam can also detect dead locks, not only at runtime, but also at compile time (which is one of the cool things about Occam). So if you create two processes in sequence which both interact straight away, the first will be deadlocked the moment it begins, because the other doesn&amp;#39;t yet exist. PAR gives your intention that conceptually, they start in parallel, and so avoids certain deadlocks (even if they really do start in sequence).&lt;/p&gt;\n\n&lt;p&gt;There is also far more to CSP than this; I am not an expert on the subject, and certainly haven&amp;#39;t looked at the formal side of it such as the Pi calculus. However if you are interested in more, you could try contacting the &lt;a href=\"http://blogs.kent.ac.uk/crg-group/\"&gt;concurrency research team at the University of Kent&lt;/a&gt;, who do a fair amount of CSP and Occam related projects. They are nice guys, and the model is awesome. However the Occam-Pi language they developed, when I used it, needed a lot more maturity. There is also a lot of CSP info around online.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6fqcad", "flair_text": null, "created": 1349051631.0, "created_utc": 1349048031.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10q19h", "children": [], "author": "gorba", "id": "c6fn4pg", "parent_id": "t3_10q19h", "score": 0, "approved_by": null, "upvotes": 2, "body": "I'm not sure if this falls under some of your models, but there's also [Software transactional memory](https://en.wikipedia.org/wiki/Software_transactional_memory)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not sure if this falls under some of your models, but there&amp;#39;s also &lt;a href=\"https://en.wikipedia.org/wiki/Software_transactional_memory\"&gt;Software transactional memory&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6fn4pg", "flair_text": null, "created": 1349037869.0, "created_utc": 1349034269.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10q19h", "children": [], "author": "Meteorsw4rm", "id": "c6fni57", "parent_id": "t3_10q19h", "score": 0, "approved_by": null, "upvotes": 2, "body": "Delay insensitive circuitry is one hardware model, where wires can have arbitrary delay and there's no clock.  In practice, this is a mix of message passing and shared memory.\n\n http://en.m.wikipedia.org/wiki/Delay_insensitive_circuit", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Delay insensitive circuitry is one hardware model, where wires can have arbitrary delay and there&amp;#39;s no clock.  In practice, this is a mix of message passing and shared memory.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://en.m.wikipedia.org/wiki/Delay_insensitive_circuit\"&gt;http://en.m.wikipedia.org/wiki/Delay_insensitive_circuit&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6fni57", "flair_text": null, "created": 1349039403.0, "created_utc": 1349035803.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10q19h", "children": [], "author": "lgastako", "id": "c6fuium", "parent_id": "t3_10q19h", "score": 0, "approved_by": null, "upvotes": 1, "body": "Since I learned of it earlier this year I've come to consider Oz's Data Flow concurrency model to be underrated or perhaps just not widely enough known:\n\nhttp://en.wikipedia.org/wiki/Oz_(programming_language)#Dataflow_variables_and_declarative_concurrency\n\nI guess maybe part of the problem is that as far as I know Oz is the only working implementation of this (hopefully I'm wrong and people will post other examples) and Oz is in practice, about 50x slower than e.g. java/c etc for most things... preventing it from being used outside of Academia.  As far as I know these are just limitations of the current implementation and there's no reason why this couldn't be corrected or this same model couldn't be implemented in another language without any slowdown. \n\nETA: I consider Oz to be one of the most interesting fringe programming languages and if it were at least as fast as my current goto, python, I would be tempted to (after getting at least competent at it first) try using it as my goto language for a while to see how it went, and I would be expecting good results.", "edited": 1349065530.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Since I learned of it earlier this year I&amp;#39;ve come to consider Oz&amp;#39;s Data Flow concurrency model to be underrated or perhaps just not widely enough known:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Oz_(programming_language)#Dataflow_variables_and_declarative_concurrency\"&gt;http://en.wikipedia.org/wiki/Oz_(programming_language)#Dataflow_variables_and_declarative_concurrency&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I guess maybe part of the problem is that as far as I know Oz is the only working implementation of this (hopefully I&amp;#39;m wrong and people will post other examples) and Oz is in practice, about 50x slower than e.g. java/c etc for most things... preventing it from being used outside of Academia.  As far as I know these are just limitations of the current implementation and there&amp;#39;s no reason why this couldn&amp;#39;t be corrected or this same model couldn&amp;#39;t be implemented in another language without any slowdown. &lt;/p&gt;\n\n&lt;p&gt;ETA: I consider Oz to be one of the most interesting fringe programming languages and if it were at least as fast as my current goto, python, I would be tempted to (after getting at least competent at it first) try using it as my goto language for a while to see how it went, and I would be expecting good results.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6fuium", "flair_text": null, "created": 1349068864.0, "created_utc": 1349065264.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10q19h", "children": [], "author": "zvrba", "id": "c6fwwd0", "parent_id": "t3_10q19h", "score": 0, "approved_by": null, "upvotes": 2, "body": "Kahn process networks: message-passing, shared-nothing model. The most general concurrency model that is still able to guarantee determinism.\n\n(KPNs, their scheduling and implementation was a topic of my PhD, you can find link to the full text in the first paragraph here http://zvrba.net/publications.html)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Kahn process networks: message-passing, shared-nothing model. The most general concurrency model that is still able to guarantee determinism.&lt;/p&gt;\n\n&lt;p&gt;(KPNs, their scheduling and implementation was a topic of my PhD, you can find link to the full text in the first paragraph here &lt;a href=\"http://zvrba.net/publications.html\"&gt;http://zvrba.net/publications.html&lt;/a&gt;)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6fwwd0", "flair_text": null, "created": 1349085701.0, "created_utc": 1349082101.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10q19h", "children": [], "author": "ared38", "id": "c6hk7ap", "parent_id": "t3_10q19h", "score": 0, "approved_by": null, "upvotes": 1, "body": "This research is more for distributed than parallel, but may interest you. It's about the HPX/ParalleX model.\nhttp://stellar.cct.lsu.edu/about/", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This research is more for distributed than parallel, but may interest you. It&amp;#39;s about the HPX/ParalleX model.\n&lt;a href=\"http://stellar.cct.lsu.edu/about/\"&gt;http://stellar.cct.lsu.edu/about/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6hk7ap", "flair_text": null, "created": 1349369623.0, "created_utc": 1349366023.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10q19h", "children": [], "author": "NonBlocking", "id": "c6fuhuo", "parent_id": "t3_10q19h", "score": 0, "approved_by": null, "upvotes": 1, "body": "Intel has a really nice library called Thread Building Blocks, it is mostly for multi-processor systems with shared memory, not clusters.\nI am personally researching Wait-Free Algorithm design, which is a form of progress guarantee that guarantees in a finite amount of time a process will complete, regardless of what other processes are doing. In order to meet this progress guarantee, no locks or mutual exclusion can be used.\n\nAlso LIBCDS (libcds.sourceforge.net) CBBS (amino-cbbs.sourceforge.net) are good concurrent data structure libraries.\n\nAlso google has its own language \"GO\" http://golang.org/project/\n\nAre your more interested in clusters or shared memory systems?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Intel has a really nice library called Thread Building Blocks, it is mostly for multi-processor systems with shared memory, not clusters.\nI am personally researching Wait-Free Algorithm design, which is a form of progress guarantee that guarantees in a finite amount of time a process will complete, regardless of what other processes are doing. In order to meet this progress guarantee, no locks or mutual exclusion can be used.&lt;/p&gt;\n\n&lt;p&gt;Also LIBCDS (libcds.sourceforge.net) CBBS (amino-cbbs.sourceforge.net) are good concurrent data structure libraries.&lt;/p&gt;\n\n&lt;p&gt;Also google has its own language &amp;quot;GO&amp;quot; &lt;a href=\"http://golang.org/project/\"&gt;http://golang.org/project/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Are your more interested in clusters or shared memory systems?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6fuhuo", "flair_text": null, "created": 1349068737.0, "created_utc": 1349065137.0, "num_reports": null}], "score": 7, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 15, "hidden": false, "thumbnail": "", "edited": 1349034919.0, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/10q19h/what_other_models_are_there_for_parallel/", "has_more_comments": false, "name": "t3_10q19h", "created": 1349037468.0, "url": "http://www.reddit.com/r/compsci/comments/10q19h/what_other_models_are_there_for_parallel/", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1349033868.0, "link_flair_text": null, "media": null, "num_reports": null}, "374": {"domain": "cstheory.stackexchange.com", "link_flair_class": null, "banned_by": null, "downvotes": 12, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10ozvu", "clicked": false, "title": "Are Shannon entropy and Boltzmann entropy mutually convertible?", "num_comments": 5, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10ozvu", "children": [], "author": "amateurtoss", "id": "c6ffp3c", "parent_id": "t3_10ozvu", "score": 0, "approved_by": null, "upvotes": 8, "body": "They're related but not exactly the same thing. The two concepts are trying to measure fundamental properties of systems but they make generally different assumptions.\n\nThe Boltzmann entropy is a measure of a physical system's energy distribution. Naturally it is in units of Energy per Temperature.\n\nShannon's Entropy concerns the physical properties of signals (in the sense that information is physical). Specifically, it concerns how we can relate signals to eachother. Assuming very reasonable conditions, the signals 11111111111111111 and 1111 carry the same information so one may be transformed into the other and preserve a certain class of physical characteristics. \n\nSignals are actually a wider class of physical systems than are considered in Boltzmann entropy. Here is the connection then:\n\nIf we consider the a signal as a physical system that conveys information through energy distribution, the dynamics of the system will be describable by both Boltzmann entropy and Shannon entropy.\n\nEdit: Hahaha. I just noticed in your link that Peter Shor's answer is at the bottom of your link with no replies. ", "edited": 1348985157.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;They&amp;#39;re related but not exactly the same thing. The two concepts are trying to measure fundamental properties of systems but they make generally different assumptions.&lt;/p&gt;\n\n&lt;p&gt;The Boltzmann entropy is a measure of a physical system&amp;#39;s energy distribution. Naturally it is in units of Energy per Temperature.&lt;/p&gt;\n\n&lt;p&gt;Shannon&amp;#39;s Entropy concerns the physical properties of signals (in the sense that information is physical). Specifically, it concerns how we can relate signals to eachother. Assuming very reasonable conditions, the signals 11111111111111111 and 1111 carry the same information so one may be transformed into the other and preserve a certain class of physical characteristics. &lt;/p&gt;\n\n&lt;p&gt;Signals are actually a wider class of physical systems than are considered in Boltzmann entropy. Here is the connection then:&lt;/p&gt;\n\n&lt;p&gt;If we consider the a signal as a physical system that conveys information through energy distribution, the dynamics of the system will be describable by both Boltzmann entropy and Shannon entropy.&lt;/p&gt;\n\n&lt;p&gt;Edit: Hahaha. I just noticed in your link that Peter Shor&amp;#39;s answer is at the bottom of your link with no replies. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ffp3c", "flair_text": null, "created": 1348988437.0, "created_utc": 1348984837.0, "num_reports": null}], "score": 28, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 40, "hidden": false, "thumbnail": "", "edited": false, "modhash": "y9x9dw4ase9a7b4de8846e85956f7511a73ddac9741b1195ba", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10ozvu/are_shannon_entropy_and_boltzmann_entropy/", "has_more_comments": false, "name": "t3_10ozvu", "created": 1348974774.0, "url": "http://cstheory.stackexchange.com/questions/12763/are-shannon-entropy-and-boltzmann-entropy-mutually-convertible", "author_flair_text": null, "author": "qkdhfjdjdhd", "created_utc": 1348971174.0, "link_flair_text": null, "media": null, "num_reports": null}, "375": {"domain": "whiley.org", "link_flair_class": null, "banned_by": null, "downvotes": 7, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10pcpd", "clicked": false, "title": "Profiling Field Initialisation in Java", "num_comments": 4, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10pcpd", "children": [], "author": "f2u", "id": "c6fi2pv", "parent_id": "t3_10pcpd", "score": 0, "approved_by": null, "upvotes": 3, "body": "There are several odd things about the paper. The Java platform allows writing to final fields in principle, using reflection. (The semantics are a bit iffy, but this is used to implement serialization, for instance. This should be visible in the ) Even without reflection, it is quite straightforward to construct cyclic data structures based on final fields because you can pass around references to partially constructed objects.\n\nAnyway, apart from these minor nits, the conclusion\n\n&gt; The extremely high number of stationary fields that we found suggests that [...] VM authors should optimise for immutability.\n\nsimply doesn't follow from the data because their statistics are mapped back from run-time behavior to individual class fields. For all we know, some of the benchmarks could contain a staggeringly high number of repeated writes to a very small number of fields.\n\nThe authors also missed prior work in this area, in the form of`java.lang.invoke.SwitchPoint`, which can be used to implement quasi-constants which the VM will optimize as if they were constant, but can still be changed, resulting in deoptimization.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There are several odd things about the paper. The Java platform allows writing to final fields in principle, using reflection. (The semantics are a bit iffy, but this is used to implement serialization, for instance. This should be visible in the ) Even without reflection, it is quite straightforward to construct cyclic data structures based on final fields because you can pass around references to partially constructed objects.&lt;/p&gt;\n\n&lt;p&gt;Anyway, apart from these minor nits, the conclusion&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;The extremely high number of stationary fields that we found suggests that [...] VM authors should optimise for immutability.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;simply doesn&amp;#39;t follow from the data because their statistics are mapped back from run-time behavior to individual class fields. For all we know, some of the benchmarks could contain a staggeringly high number of repeated writes to a very small number of fields.&lt;/p&gt;\n\n&lt;p&gt;The authors also missed prior work in this area, in the form of&lt;code&gt;java.lang.invoke.SwitchPoint&lt;/code&gt;, which can be used to implement quasi-constants which the VM will optimize as if they were constant, but can still be changed, resulting in deoptimization.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6fi2pv", "flair_text": null, "created": 1349012571.0, "created_utc": 1349008971.0, "num_reports": null}], "score": 4, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 11, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10pcpd/profiling_field_initialisation_in_java/", "has_more_comments": false, "name": "t3_10pcpd", "created": 1348994945.0, "url": "http://whiley.org/2012/09/30/profiling-field-initialisation-in-java/", "author_flair_text": null, "author": "redjamjar", "created_utc": 1348991345.0, "link_flair_text": null, "media": null, "num_reports": null}, "376": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 17, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;For fun I will be programming a PacMan player AI. I was wondering if there is an optimal strategy to use, or if anyone could point me towards some resources for this. &lt;/p&gt;\n\n&lt;p&gt;Thanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "For fun I will be programming a PacMan player AI. I was wondering if there is an optimal strategy to use, or if anyone could point me towards some resources for this. \n\nThanks", "saved": false, "id": "10o69r", "clicked": false, "title": "Strategy for PacMan AI", "num_comments": 32, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10o69r", "children": [], "author": "dessiccant", "id": "c6f5wns", "parent_id": "t3_10o69r", "score": 0, "approved_by": null, "upvotes": 30, "body": "[The Pac-Man Dossier](http://home.comcast.net/~jpittman2/pacman/pacmandossier.html)\n\n[Understanding Pac-Man Ghost Behavior](http://gameinternals.com/post/2072558330/understanding-pac-man-ghost-behavior)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://home.comcast.net/%7Ejpittman2/pacman/pacmandossier.html\"&gt;The Pac-Man Dossier&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://gameinternals.com/post/2072558330/understanding-pac-man-ghost-behavior\"&gt;Understanding Pac-Man Ghost Behavior&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6f5wns", "flair_text": null, "created": 1348941172.0, "created_utc": 1348937572.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10o69r", "children": [], "author": "calling", "id": "c6f5wfe", "parent_id": "t3_10o69r", "score": 0, "approved_by": null, "upvotes": 22, "body": "Take a look at Berkeley's AI course (https://berkeley.edx.org/). The course covers a gambit of AI topics and all the projects involve making Pacman AI. It has live lectures, lecture slides, gradable homework/projects for the public. Plus, it's free and Klein (the lecturer) is super awesome.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Take a look at Berkeley&amp;#39;s AI course (&lt;a href=\"https://berkeley.edx.org/\"&gt;https://berkeley.edx.org/&lt;/a&gt;). The course covers a gambit of AI topics and all the projects involve making Pacman AI. It has live lectures, lecture slides, gradable homework/projects for the public. Plus, it&amp;#39;s free and Klein (the lecturer) is super awesome.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6f5wfe", "flair_text": null, "created": 1348941140.0, "created_utc": 1348937540.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 8, "link_id": "t3_10o69r", "children": [], "author": "slacy", "id": "c6f5ik9", "parent_id": "t3_10o69r", "score": 0, "approved_by": null, "upvotes": 53, "body": "Avoid the ghosts.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Avoid the ghosts.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6f5ik9", "flair_text": null, "created": 1348939258.0, "created_utc": 1348935658.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10o69r", "children": [], "author": "1338h4x", "id": "c6f6jy4", "parent_id": "t3_10o69r", "score": 0, "approved_by": null, "upvotes": 7, "body": "If you're talking about the original arcade version and not a generalized case, there's a known fastest route through each level up to 256 (where the game glitches out and it's impossible to proceed). So you don't need to do anything more than record those routes.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you&amp;#39;re talking about the original arcade version and not a generalized case, there&amp;#39;s a known fastest route through each level up to 256 (where the game glitches out and it&amp;#39;s impossible to proceed). So you don&amp;#39;t need to do anything more than record those routes.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6f6jy4", "flair_text": null, "created": 1348944242.0, "created_utc": 1348940642.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10o69r", "children": [], "author": "ur_god_izfake", "id": "c6f61lq", "parent_id": "t3_10o69r", "score": 0, "approved_by": null, "upvotes": 12, "body": "Been there, done this. At each intersection, check available directions. Two ghosts favor vertical, two favor horizontal. Take the direction that gets closer to PacMan. If a tie (as faras which gets closer), favored  axis wins. To make it easier (and mimic original PacMan behavior IIRC), have them only change direction when can no longer go in current direction.   For blue ghosts (evading), take direction that moves it further away instead of closer. Edit: for distance comparison, compute cell position to target (abs value) in each direction. For example, if in (leading position) in cell 5 but ghost is in 8, distance is 3 cells away for that axis.  Edit2: because you are working with 2 axis, your code can work for a generic axis, then run it for each axis.", "edited": 1348939837.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Been there, done this. At each intersection, check available directions. Two ghosts favor vertical, two favor horizontal. Take the direction that gets closer to PacMan. If a tie (as faras which gets closer), favored  axis wins. To make it easier (and mimic original PacMan behavior IIRC), have them only change direction when can no longer go in current direction.   For blue ghosts (evading), take direction that moves it further away instead of closer. Edit: for distance comparison, compute cell position to target (abs value) in each direction. For example, if in (leading position) in cell 5 but ghost is in 8, distance is 3 cells away for that axis.  Edit2: because you are working with 2 axis, your code can work for a generic axis, then run it for each axis.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6f61lq", "flair_text": null, "created": 1348941826.0, "created_utc": 1348938226.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10o69r", "children": [], "author": "crotchpoozie", "id": "c6fcusx", "parent_id": "t3_10o69r", "score": 0, "approved_by": null, "upvotes": 5, "body": "Google and find commented disassembles of the original. They exist. Then have your AI run a sim to see what the ghosts will do if you do x, and you can find moves that allow you to not be caught.\n\nDid this once to find board patterns. Since original pacman is deterministic it works perfectly", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Google and find commented disassembles of the original. They exist. Then have your AI run a sim to see what the ghosts will do if you do x, and you can find moves that allow you to not be caught.&lt;/p&gt;\n\n&lt;p&gt;Did this once to find board patterns. Since original pacman is deterministic it works perfectly&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6fcusx", "flair_text": null, "created": 1348973930.0, "created_utc": 1348970330.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10o69r", "children": [], "author": "Magnevv", "id": "c6f5t6n", "parent_id": "t3_10o69r", "score": 0, "approved_by": null, "upvotes": 1, "body": "I think the behavior of the ghosts is non-random, so you could start with predicting positions. You probably need some way to evaluate the strength of a state too, not sure what is the best strategy there", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think the behavior of the ghosts is non-random, so you could start with predicting positions. You probably need some way to evaluate the strength of a state too, not sure what is the best strategy there&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6f5t6n", "flair_text": null, "created": 1348940710.0, "created_utc": 1348937110.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10o69r", "children": [], "author": "skelterjohn", "id": "c6f612x", "parent_id": "t3_10o69r", "score": 0, "approved_by": null, "upvotes": 2, "body": "You could check out some of the papers spawned by http://cswww.essex.ac.uk/staff/sml/pacman/PacManContest.html", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You could check out some of the papers spawned by &lt;a href=\"http://cswww.essex.ac.uk/staff/sml/pacman/PacManContest.html\"&gt;http://cswww.essex.ac.uk/staff/sml/pacman/PacManContest.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6f612x", "flair_text": null, "created": 1348941754.0, "created_utc": 1348938154.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10o69r", "children": [], "author": "undershirt", "id": "c6f6etl", "parent_id": "t3_10o69r", "score": 0, "approved_by": null, "upvotes": 2, "body": "You can find a bunch of research papers on this.  Here's a competition that has spawn some of them: http://www.pacman-vs-ghosts.net/", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can find a bunch of research papers on this.  Here&amp;#39;s a competition that has spawn some of them: &lt;a href=\"http://www.pacman-vs-ghosts.net/\"&gt;http://www.pacman-vs-ghosts.net/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6f6etl", "flair_text": null, "created": 1348943559.0, "created_utc": 1348939959.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10o69r", "children": [], "author": "xxbondsxx", "id": "c6fadu9", "parent_id": "t3_10o69r", "score": 0, "approved_by": null, "upvotes": 1, "body": "Are you taking cs188 through EDX? If so, I'm a GSI for the course and feel free to PM me", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Are you taking cs188 through EDX? If so, I&amp;#39;m a GSI for the course and feel free to PM me&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6fadu9", "flair_text": null, "created": 1348962212.0, "created_utc": 1348958612.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10o69r", "children": [], "author": "zeekar", "id": "c6fcfzh", "parent_id": "t3_10o69r", "score": 0, "approved_by": null, "upvotes": 1, "body": "You don't really need AI to beat Pac-Man; the ghost behavior is non-random, so just following a preset pattern will win every time.  Now, if you're playing *Ms.* Pac-Man, that's another kettle of fish..", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You don&amp;#39;t really need AI to beat Pac-Man; the ghost behavior is non-random, so just following a preset pattern will win every time.  Now, if you&amp;#39;re playing &lt;em&gt;Ms.&lt;/em&gt; Pac-Man, that&amp;#39;s another kettle of fish..&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6fcfzh", "flair_text": null, "created": 1348971914.0, "created_utc": 1348968314.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10o69r", "children": [], "author": "ajsdklf9df", "id": "c6fdi2f", "parent_id": "t3_10o69r", "score": 0, "approved_by": null, "upvotes": 1, "body": "Make each tile smart, so it keeps track of what ran over it in which direction. It is a lot easier to track and calculate paths in this distributed way.\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Make each tile smart, so it keeps track of what ran over it in which direction. It is a lot easier to track and calculate paths in this distributed way.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6fdi2f", "flair_text": null, "created": 1348977001.0, "created_utc": 1348973401.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10o69r", "children": [], "author": "choguling", "id": "c6f5spu", "parent_id": "t3_10o69r", "score": 0, "approved_by": null, "upvotes": 3, "body": "have a look at \"reinforcement learning\"", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;have a look at &amp;quot;reinforcement learning&amp;quot;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6f5spu", "flair_text": null, "created": 1348940646.0, "created_utc": 1348937046.0, "num_reports": null}], "score": 41, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 58, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/10o69r/strategy_for_pacman_ai/", "has_more_comments": false, "name": "t3_10o69r", "created": 1348939020.0, "url": "http://www.reddit.com/r/compsci/comments/10o69r/strategy_for_pacman_ai/", "author_flair_text": null, "author": "vcxzzxcv", "created_utc": 1348935420.0, "link_flair_text": null, "media": null, "num_reports": null}, "377": {"domain": "h30565.www3.hp.com", "link_flair_class": null, "banned_by": null, "downvotes": 61, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10mhmp", "clicked": false, "title": "\"I wish there were general literacy in computer science,\" Jaron Lanier says, \"Which is different from learning to program.\"", "num_comments": 32, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 8, "link_id": "t3_10mhmp", "children": [], "author": "forgetfuljones", "id": "c6ertho", "parent_id": "t3_10mhmp", "score": 0, "approved_by": null, "upvotes": 41, "body": "One of my profs was especially determined to pound the math behind computer science into our thinking.  There was a *lot* of muttering from students because of this, since they were sure that C.S. was actually about producing lines of debugged code, and all he really needed to do was give the assignments and let them do it.  \n\n(This is a total tangent, but this is one of the reasons that I think students are the worst people to consult on the topic of education or prof's performance.  They don't know what they're talking about, and they refuse to separate personal issues from objective reasons.)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;One of my profs was especially determined to pound the math behind computer science into our thinking.  There was a &lt;em&gt;lot&lt;/em&gt; of muttering from students because of this, since they were sure that C.S. was actually about producing lines of debugged code, and all he really needed to do was give the assignments and let them do it.  &lt;/p&gt;\n\n&lt;p&gt;(This is a total tangent, but this is one of the reasons that I think students are the worst people to consult on the topic of education or prof&amp;#39;s performance.  They don&amp;#39;t know what they&amp;#39;re talking about, and they refuse to separate personal issues from objective reasons.)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ertho", "flair_text": null, "created": 1348859803.0, "created_utc": 1348856203.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_10mhmp", "children": [], "author": "pmorrisonfl", "id": "c6erncq", "parent_id": "t3_10mhmp", "score": 0, "approved_by": null, "upvotes": 13, "body": "Sounds like he's looking for Jeannette Wing's notion of ['Computational Thinking'](http://www.cs.cmu.edu/~wing/publications/Wing06.pdf). In a recent discussion over whether and how Algebra should be taught, [Dan Meyer said](http://blog.mrmeyer.com/?p=14736) 'Our world is increasingly automated and programmed and if you want any kind of active participation in that world, you're going to need to understand variable representation and manipulation. That's Algebra.'  I think there's something fundamental, probably more than Algebra, that is going to be central to life with pervasive computing.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sounds like he&amp;#39;s looking for Jeannette Wing&amp;#39;s notion of &lt;a href=\"http://www.cs.cmu.edu/%7Ewing/publications/Wing06.pdf\"&gt;&amp;#39;Computational Thinking&amp;#39;&lt;/a&gt;. In a recent discussion over whether and how Algebra should be taught, &lt;a href=\"http://blog.mrmeyer.com/?p=14736\"&gt;Dan Meyer said&lt;/a&gt; &amp;#39;Our world is increasingly automated and programmed and if you want any kind of active participation in that world, you&amp;#39;re going to need to understand variable representation and manipulation. That&amp;#39;s Algebra.&amp;#39;  I think there&amp;#39;s something fundamental, probably more than Algebra, that is going to be central to life with pervasive computing.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6erncq", "flair_text": null, "created": 1348859170.0, "created_utc": 1348855570.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 6, "link_id": "t3_10mhmp", "children": [], "author": "kurin", "id": "c6eszba", "parent_id": "t3_10mhmp", "score": 0, "approved_by": null, "upvotes": 17, "body": "I know it's a small and insignificant detail, but\n\n&gt; h30565.www3.hp.com\n\n\\*sigh\\*", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I know it&amp;#39;s a small and insignificant detail, but&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;h30565.www3.hp.com&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;*sigh*&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6eszba", "flair_text": null, "created": 1348864099.0, "created_utc": 1348860499.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10mhmp", "children": [], "author": "metrogramming", "id": "c6h16ro", "parent_id": "t3_10mhmp", "score": 0, "approved_by": null, "upvotes": 4, "body": "\"One problem is economic, he says: If we pretend that the people don't exist, then people (like artists and musicians) don't get paid. Eventually we'll have self-driving cars and automated manufacturing processing... which means even less employment for humans.\" \n\nWhy is that bad? Why do we have to come up with these worthless time-wasting jobs that could be automated using technology? Keeping innovation down to keep jobs up is not good for the economy.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&amp;quot;One problem is economic, he says: If we pretend that the people don&amp;#39;t exist, then people (like artists and musicians) don&amp;#39;t get paid. Eventually we&amp;#39;ll have self-driving cars and automated manufacturing processing... which means even less employment for humans.&amp;quot; &lt;/p&gt;\n\n&lt;p&gt;Why is that bad? Why do we have to come up with these worthless time-wasting jobs that could be automated using technology? Keeping innovation down to keep jobs up is not good for the economy.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6h16ro", "flair_text": null, "created": 1349282214.0, "created_utc": 1349278614.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 13, "link_id": "t3_10mhmp", "children": [], "author": "alphabetpal", "id": "c6et75g", "parent_id": "t3_10mhmp", "score": 0, "approved_by": null, "upvotes": 15, "body": "Oh, another \"every skill is useful except programming\" post. Is it that time of the week already?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Oh, another &amp;quot;every skill is useful except programming&amp;quot; post. Is it that time of the week already?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6et75g", "flair_text": null, "created": 1348864886.0, "created_utc": 1348861286.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10mhmp", "children": [], "author": "fuzzynyanko", "id": "c6evqwq", "parent_id": "t3_10mhmp", "score": 0, "approved_by": null, "upvotes": 1, "body": "Some of it is understandable. There's been times where I used some 3rd-party code and and I'm like \"Okay... how do you use this thing?\" No documentation. Original programmers are in a timezone 12 hours away, so got to wait until it's morning over there. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Some of it is understandable. There&amp;#39;s been times where I used some 3rd-party code and and I&amp;#39;m like &amp;quot;Okay... how do you use this thing?&amp;quot; No documentation. Original programmers are in a timezone 12 hours away, so got to wait until it&amp;#39;s morning over there. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6evqwq", "flair_text": null, "created": 1348874730.0, "created_utc": 1348871130.0, "num_reports": null}], "score": 143, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 204, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10mhmp/i_wish_there_were_general_literacy_in_computer/", "has_more_comments": false, "name": "t3_10mhmp", "created": 1348853071.0, "url": "http://h30565.www3.hp.com/t5/HPIO-Video/Jaron-Lanier-Let-s-Unmask-the-Great-and-Powerful-Oz-of/ba-p/7664", "author_flair_text": null, "author": "wordsmithie", "created_utc": 1348849471.0, "link_flair_text": null, "media": null, "num_reports": null}, "378": {"domain": "reddit.com", "link_flair_class": null, "banned_by": null, "downvotes": 0, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10mqsk", "clicked": false, "title": "An implementation of the 250 year old encryption algorithm by Leibniz that was recently rediscovered by Dr. Rescher at the University of Pittsburgh [x-post /r/crypto]", "num_comments": 0, "comments": [], "score": 8, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 8, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10mqsk/an_implementation_of_the_250_year_old_encryption/", "has_more_comments": false, "name": "t3_10mqsk", "created": 1348861563.0, "url": "http://www.reddit.com/r/crypto/comments/10mpz9/an_implementation_of_the_250_year_old_encryption/", "author_flair_text": null, "author": "anastas", "created_utc": 1348857963.0, "link_flair_text": null, "media": null, "num_reports": null}, "379": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 104, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m a Sophomore Computer Science major and I&amp;#39;m currently taking Discrete Math.  My professor is a visiting instructor from Japan who not only has an incredibly difficult accent to understand, but also speaks in recursive riddles.  The worst part is when you ask a question, most times my prof. doesn&amp;#39;t even understand what you&amp;#39;re trying to ask.&lt;/p&gt;\n\n&lt;p&gt;To further complicate matters, the textbook is also incredibly vague.&lt;/p&gt;\n\n&lt;p&gt;So I did what anyone would do: I searched reddit for Discrete Math (lol).&lt;/p&gt;\n\n&lt;p&gt;One of you fine redditors posted a link to University of Illinois Discrete Math class web page, complete with full and comprehensive lecture notes.  All of a sudden Discrete Math sounds a lot less like gibberish.&lt;/p&gt;\n\n&lt;p&gt;TL;DR - Thank you reddit, you have quite conceivably just saved my career in computer science.&lt;/p&gt;\n\n&lt;p&gt;edit:\nIf you were curious, the link: &lt;a href=\"http://courses.engr.illinois.edu/cs173/fa2011/\"&gt;http://courses.engr.illinois.edu/cs173/fa2011/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm a Sophomore Computer Science major and I'm currently taking Discrete Math.  My professor is a visiting instructor from Japan who not only has an incredibly difficult accent to understand, but also speaks in recursive riddles.  The worst part is when you ask a question, most times my prof. doesn't even understand what you're trying to ask.\n\nTo further complicate matters, the textbook is also incredibly vague.\n\nSo I did what anyone would do: I searched reddit for Discrete Math (lol).\n\nOne of you fine redditors posted a link to University of Illinois Discrete Math class web page, complete with full and comprehensive lecture notes.  All of a sudden Discrete Math sounds a lot less like gibberish.\n\nTL;DR - Thank you reddit, you have quite conceivably just saved my career in computer science.\n\nedit:\nIf you were curious, the link: [http://courses.engr.illinois.edu/cs173/fa2011/](http://courses.engr.illinois.edu/cs173/fa2011/)\n", "saved": false, "id": "10kme1", "clicked": false, "title": "Pretty sure reddit just saved my career in computer science...", "num_comments": 126, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 15, "link_id": "t3_10kme1", "children": [], "author": "rosulek", "id": "c6eb0mc", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 120, "body": "You should email the author of those lecture notes to say thanks. I've met her -- she's nice ;)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You should email the author of those lecture notes to say thanks. I&amp;#39;ve met her -- she&amp;#39;s nice ;)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6eb0mc", "flair_text": null, "created": 1348775879.0, "created_utc": 1348772279.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_10kme1", "children": [], "author": "5socks5", "id": "c6eeg41", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 25, "body": "UIUC is an amazing school. We have great computer science teachers and I'm glad they were able to help you out. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;UIUC is an amazing school. We have great computer science teachers and I&amp;#39;m glad they were able to help you out. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6eeg41", "flair_text": null, "created": 1348788741.0, "created_utc": 1348785141.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 7, "link_id": "t3_10kme1", "children": [], "author": "LeSageLocke", "id": "c6edvdf", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 35, "body": "Ah, good ol' CS 173.  \n\nIt always makes me feel warm and fuzzy whenever I see someone using a CS resource from my alma mater, so I'll promote another.  Whenever you start taking Algorithms (or in order to prepare), you should check out [Jeff Erickson's lecture notes and homework problems](http://compgeom.cs.uiuc.edu/~jeffe/teaching/algorithms/).  He's basically compiled an entire textbook worth of material and gives it away.\n\nConsidering that you're still in Discrete Math at the moment, it's probably still a bit too advanced to dive into, but you should take a peek if you're feeling adventurous. Most CS majors at U of I take that course 2nd semester Junior year or 1st semester Senior year.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ah, good ol&amp;#39; CS 173.  &lt;/p&gt;\n\n&lt;p&gt;It always makes me feel warm and fuzzy whenever I see someone using a CS resource from my alma mater, so I&amp;#39;ll promote another.  Whenever you start taking Algorithms (or in order to prepare), you should check out &lt;a href=\"http://compgeom.cs.uiuc.edu/%7Ejeffe/teaching/algorithms/\"&gt;Jeff Erickson&amp;#39;s lecture notes and homework problems&lt;/a&gt;.  He&amp;#39;s basically compiled an entire textbook worth of material and gives it away.&lt;/p&gt;\n\n&lt;p&gt;Considering that you&amp;#39;re still in Discrete Math at the moment, it&amp;#39;s probably still a bit too advanced to dive into, but you should take a peek if you&amp;#39;re feeling adventurous. Most CS majors at U of I take that course 2nd semester Junior year or 1st semester Senior year.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6edvdf", "flair_text": null, "created": 1348786429.0, "created_utc": 1348782829.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10kme1", "children": [], "author": "endlessvoid94", "id": "c6edum1", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 9, "body": "Professor Fleck is absolutely awesome. She's the nicest lady ever and definitely one of my favorite instructors.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Professor Fleck is absolutely awesome. She&amp;#39;s the nicest lady ever and definitely one of my favorite instructors.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6edum1", "flair_text": null, "created": 1348786345.0, "created_utc": 1348782745.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10kme1", "children": [], "author": "MrHerpDerp", "id": "c6eened", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 7, "body": "Can you provide an example of his recursive riddle speech patterns? That sounds interesting.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Can you provide an example of his recursive riddle speech patterns? That sounds interesting.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6eened", "flair_text": null, "created": 1348789540.0, "created_utc": 1348785940.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10kme1", "children": [], "author": "theniatethesky", "id": "c6ed2zs", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 17, "body": "Discrete math is the worst. Probably because it's usually taught by terrible professors (or ones who don't speak English). \n\nI wish I'd found this last semester :( It would have saved my GPA.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Discrete math is the worst. Probably because it&amp;#39;s usually taught by terrible professors (or ones who don&amp;#39;t speak English). &lt;/p&gt;\n\n&lt;p&gt;I wish I&amp;#39;d found this last semester :( It would have saved my GPA.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ed2zs", "flair_text": null, "created": 1348783390.0, "created_utc": 1348779790.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "jzelinskie", "id": "c6ee9si", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 4, "body": "Thank you for this link. I'm taking Discrete Math also and these will be very valuable for studying for my midterm next week. Heh, my professor has a Chinese accent, if he had a Japanese accent I'd be able to understand more (due to personal experience).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thank you for this link. I&amp;#39;m taking Discrete Math also and these will be very valuable for studying for my midterm next week. Heh, my professor has a Chinese accent, if he had a Japanese accent I&amp;#39;d be able to understand more (due to personal experience).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ee9si", "flair_text": null, "created": 1348788027.0, "created_utc": 1348784427.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10kme1", "children": [], "author": "kyrga", "id": "c6efb9b", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 5, "body": "You should also speak with the Dean, or someone else of authority at your college. You're paying money--probably a lot of it--to get an education *there*. This can be a challenging course even with an instructor who is fluent in your language, they should at least be providing TAs or something to help out. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You should also speak with the Dean, or someone else of authority at your college. You&amp;#39;re paying money--probably a lot of it--to get an education &lt;em&gt;there&lt;/em&gt;. This can be a challenging course even with an instructor who is fluent in your language, they should at least be providing TAs or something to help out. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6efb9b", "flair_text": null, "created": 1348792269.0, "created_utc": 1348788669.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "dMurdZ", "id": "c6ehbfx", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 5, "body": "As some one who is having a very difficult time in Discrete Math right now, thanks so much for this link!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As some one who is having a very difficult time in Discrete Math right now, thanks so much for this link!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ehbfx", "flair_text": null, "created": 1348800509.0, "created_utc": 1348796909.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "Manoodle", "id": "c6edota", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 3, "body": "Which textbook are you using?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Which textbook are you using?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6edota", "flair_text": null, "created": 1348785734.0, "created_utc": 1348782134.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "zxide", "id": "c6eahwx", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 2, "body": "Link?  I could refresh my discrete math skills.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Link?  I could refresh my discrete math skills.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6eahwx", "flair_text": null, "created": 1348773981.0, "created_utc": 1348770381.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "ingreenheaven", "id": "c6eeb6u", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 2, "body": "I am sure you will find a lot of useful material here too: https://www.coursera.org/courses", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I am sure you will find a lot of useful material here too: &lt;a href=\"https://www.coursera.org/courses\"&gt;https://www.coursera.org/courses&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6eeb6u", "flair_text": null, "created": 1348788186.0, "created_utc": 1348784586.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "bcbrz", "id": "c6eef1l", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 1, "body": "I'm glad you found a great resource!  In case you need a quick cram-resource, I found the schaums quick guides to Discrete to be not-terrible.  ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m glad you found a great resource!  In case you need a quick cram-resource, I found the schaums quick guides to Discrete to be not-terrible.  &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6eef1l", "flair_text": null, "created": 1348788617.0, "created_utc": 1348785017.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "eigenheckler", "id": "c6efc92", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 2, "body": "There's also [Gilbert Strang's Linear Algebra OpenCourseWare @ MIT](http://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2010/), accompanied by [lectures on YouTube](http://www.youtube.com/watch?v=ZK3O402wf1c).\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There&amp;#39;s also &lt;a href=\"http://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2010/\"&gt;Gilbert Strang&amp;#39;s Linear Algebra OpenCourseWare @ MIT&lt;/a&gt;, accompanied by &lt;a href=\"http://www.youtube.com/watch?v=ZK3O402wf1c\"&gt;lectures on YouTube&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6efc92", "flair_text": null, "created": 1348792383.0, "created_utc": 1348788783.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "DeadSalesman", "id": "c6efp7c", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 2, "body": "I had a similar problem with Differential Equations. The profession could teach the book in his sleep, but his strong accent and complete refusal to answer questions in class meant that I didn't pass it until his TA taught it in the summer.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I had a similar problem with Differential Equations. The profession could teach the book in his sleep, but his strong accent and complete refusal to answer questions in class meant that I didn&amp;#39;t pass it until his TA taught it in the summer.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6efp7c", "flair_text": null, "created": 1348793864.0, "created_utc": 1348790264.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10kme1", "children": [], "author": "CornellWest", "id": "c6efqsw", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 2, "body": "I would to actually hear one of his recursive riddles (translated to English though because monolingual). Good luck! Discrete is actually an awesome topic.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I would to actually hear one of his recursive riddles (translated to English though because monolingual). Good luck! Discrete is actually an awesome topic.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6efqsw", "flair_text": null, "created": 1348794046.0, "created_utc": 1348790446.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "shadesOG", "id": "c6efyrw", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 2, "body": "As a successful CS major, I cut out the middle of my discrete math book  and use it to hide money and weed in it. No one will EVER look in that book again - best hiding spot ever. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As a successful CS major, I cut out the middle of my discrete math book  and use it to hide money and weed in it. No one will EVER look in that book again - best hiding spot ever. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6efyrw", "flair_text": null, "created": 1348794993.0, "created_utc": 1348791393.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "not_melkor", "id": "c6eggiw", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 2, "body": "Here are other resources you might find useful:\n\n* [Aduni.org](http://aduni.org/courses/discrete/)\n* You may be able to find something helpful at [KahnAcademy](http://www.khanacademy.org/)\n* Don't forget to check free online courses by the big Universities(MIT, Harvard, Berkeley, etc.). They saved my ass several times.\n\nI wish you luck!\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here are other resources you might find useful:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"http://aduni.org/courses/discrete/\"&gt;Aduni.org&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;You may be able to find something helpful at &lt;a href=\"http://www.khanacademy.org/\"&gt;KahnAcademy&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Don&amp;#39;t forget to check free online courses by the big Universities(MIT, Harvard, Berkeley, etc.). They saved my ass several times.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;I wish you luck!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6eggiw", "flair_text": null, "created": 1348797070.0, "created_utc": 1348793470.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "com2kid", "id": "c6eic1w", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 2, "body": "One of my discreet math courses was taught almost entirely without spoken words.\n\nThankfully it was my second time through, I had taken the CS discreet math courses for my CS degree, the discreet math course from the math department counted towards a math minor. One of the easiest courses I've ever taken, but I can understand how some of the other students may have been disturbed by it. :-D\n\nHis proofs and examples were awesome though, the math really was quite lovely. Examples that build up to a unified crescendo are rare and hard to come by, but when done properly, are amazing to behold.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;One of my discreet math courses was taught almost entirely without spoken words.&lt;/p&gt;\n\n&lt;p&gt;Thankfully it was my second time through, I had taken the CS discreet math courses for my CS degree, the discreet math course from the math department counted towards a math minor. One of the easiest courses I&amp;#39;ve ever taken, but I can understand how some of the other students may have been disturbed by it. :-D&lt;/p&gt;\n\n&lt;p&gt;His proofs and examples were awesome though, the math really was quite lovely. Examples that build up to a unified crescendo are rare and hard to come by, but when done properly, are amazing to behold.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6eic1w", "flair_text": null, "created": 1348804513.0, "created_utc": 1348800913.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10kme1", "children": [], "author": "Geohump", "id": "c6eizja", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 3, "body": "Finite automata theory - \nKorean grad student teaching \nfirst six weeks of the course\n\nKo eff sent this \n\nko eff sent that \n\nko eff sent the other thing.... \n\nover and over..., six weeks\n\nNobody knows what the hell a ko eff sent is....... \n\nTurns out to be coefficent   ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Finite automata theory - \nKorean grad student teaching \nfirst six weeks of the course&lt;/p&gt;\n\n&lt;p&gt;Ko eff sent this &lt;/p&gt;\n\n&lt;p&gt;ko eff sent that &lt;/p&gt;\n\n&lt;p&gt;ko eff sent the other thing.... &lt;/p&gt;\n\n&lt;p&gt;over and over..., six weeks&lt;/p&gt;\n\n&lt;p&gt;Nobody knows what the hell a ko eff sent is....... &lt;/p&gt;\n\n&lt;p&gt;Turns out to be coefficent   &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6eizja", "flair_text": null, "created": 1348807209.0, "created_utc": 1348803609.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "onlywearscomfypants", "id": "c6ejpdb", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 2, "body": "Man, I love you. I'm a sophomore Comp Sci major as well. My discrete math class as been kind of challenging. My professor is NOT a good teacher. He understands the concepts, but he has virtually no idea how to share this knowledge with others. He often uses the phrase, \"but this should be obvious to you\" when I am clueless as can be, as is the rest of the class(the look on the two girls faces when going over challenge problems, OH LORD HA!) BECAUSE HE NEVER TAUGHT US IT. I'm motivated as shit right now, I'm just digesting these lectures. They are so well thought out and not boring as shit. The math refreshers are so helpful as examples throughout my book assume you understand and remember math terminology. \n\nFuck I love comp sci, I went to a meeting today about \"security consulting penetration tests\". They had VMs set up and did a live exploit to gain shell access on Windows XP. I've spent my evening compiling gentoo onto a VM to refresh my memory on bash, and adapt to a linux enviroment. \n\nI think you just saved my discrete math grade as well.\n\n\nTL;DR THANK YOU FERNANINO!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Man, I love you. I&amp;#39;m a sophomore Comp Sci major as well. My discrete math class as been kind of challenging. My professor is NOT a good teacher. He understands the concepts, but he has virtually no idea how to share this knowledge with others. He often uses the phrase, &amp;quot;but this should be obvious to you&amp;quot; when I am clueless as can be, as is the rest of the class(the look on the two girls faces when going over challenge problems, OH LORD HA!) BECAUSE HE NEVER TAUGHT US IT. I&amp;#39;m motivated as shit right now, I&amp;#39;m just digesting these lectures. They are so well thought out and not boring as shit. The math refreshers are so helpful as examples throughout my book assume you understand and remember math terminology. &lt;/p&gt;\n\n&lt;p&gt;Fuck I love comp sci, I went to a meeting today about &amp;quot;security consulting penetration tests&amp;quot;. They had VMs set up and did a live exploit to gain shell access on Windows XP. I&amp;#39;ve spent my evening compiling gentoo onto a VM to refresh my memory on bash, and adapt to a linux enviroment. &lt;/p&gt;\n\n&lt;p&gt;I think you just saved my discrete math grade as well.&lt;/p&gt;\n\n&lt;p&gt;TL;DR THANK YOU FERNANINO!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ejpdb", "flair_text": null, "created": 1348810424.0, "created_utc": 1348806824.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "Crystal_Cuckoo", "id": "c6el8qw", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 1, "body": "[Khan Academy](http://www.khanacademy.org/) has saved my ass on more than one occasion, if anyone is struggling with their math-related studies.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.khanacademy.org/\"&gt;Khan Academy&lt;/a&gt; has saved my ass on more than one occasion, if anyone is struggling with their math-related studies.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6el8qw", "flair_text": null, "created": 1348820353.0, "created_utc": 1348816753.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10kme1", "children": [], "author": "Zoood", "id": "c6elard", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 3, "body": "&gt; but also speaks in recursive riddles.\n\nTo understand recursion, one must first understand recursion.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;but also speaks in recursive riddles.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;To understand recursion, one must first understand recursion.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6elard", "flair_text": null, "created": 1348820871.0, "created_utc": 1348817271.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "Hammburglar", "id": "c6elqey", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 2, "body": "Zach Weiner of SMBC comics did some [things(?) about discrete math](http://www.theweinerworks.com/?cat=150). I haven't checked them out at all but maybe they'll help since they won't be in such a serious tone. Just figured I'd throw it out there.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Zach Weiner of SMBC comics did some &lt;a href=\"http://www.theweinerworks.com/?cat=150\"&gt;things(?) about discrete math&lt;/a&gt;. I haven&amp;#39;t checked them out at all but maybe they&amp;#39;ll help since they won&amp;#39;t be in such a serious tone. Just figured I&amp;#39;d throw it out there.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6elqey", "flair_text": null, "created": 1348825511.0, "created_utc": 1348821911.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "SuspiciousLamp", "id": "c6emuko", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 2, "body": "All discrete math professors are total whack-o's. Mine's left leg was smaller than his right, and thus had to wear a big ass shoe to compensate for the size difference. I quickly understood that they do not comprehend questions in layman terms. To learn discrete maths, you must first be an expert in discrete maths!!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;All discrete math professors are total whack-o&amp;#39;s. Mine&amp;#39;s left leg was smaller than his right, and thus had to wear a big ass shoe to compensate for the size difference. I quickly understood that they do not comprehend questions in layman terms. To learn discrete maths, you must first be an expert in discrete maths!!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6emuko", "flair_text": null, "created": 1348838342.0, "created_utc": 1348834742.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "5outh", "id": "c6emxbg", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 2, "body": "I'm in almost the exact same situation!\n\nSo, my teacher is Russian, can't really speak English that well, and skates over concepts like we can follow his train of thought perfectly. Only, he makes tons of mistakes anyway, and must have a vendetta against his students judging by the way he grades tests (it's ridiculous). I think he's definitely more interested in research than teaching, and it shows plain as day.\n\nIf I didn't have a strong background in Programming/Haskell I wouldn't have understood the first thing about discrete math, but I'm barely managing since I sort of understand the key concepts.\n\nBut, I definitely need supplementary stuff, and this looks excellent. I love that the notes are all there for the current class, and I can just follow along (the schedule surprisingly matches up almost perfectly). \n\nThanks for the link! I may drop her an email as well. This is great stuff.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m in almost the exact same situation!&lt;/p&gt;\n\n&lt;p&gt;So, my teacher is Russian, can&amp;#39;t really speak English that well, and skates over concepts like we can follow his train of thought perfectly. Only, he makes tons of mistakes anyway, and must have a vendetta against his students judging by the way he grades tests (it&amp;#39;s ridiculous). I think he&amp;#39;s definitely more interested in research than teaching, and it shows plain as day.&lt;/p&gt;\n\n&lt;p&gt;If I didn&amp;#39;t have a strong background in Programming/Haskell I wouldn&amp;#39;t have understood the first thing about discrete math, but I&amp;#39;m barely managing since I sort of understand the key concepts.&lt;/p&gt;\n\n&lt;p&gt;But, I definitely need supplementary stuff, and this looks excellent. I love that the notes are all there for the current class, and I can just follow along (the schedule surprisingly matches up almost perfectly). &lt;/p&gt;\n\n&lt;p&gt;Thanks for the link! I may drop her an email as well. This is great stuff.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6emxbg", "flair_text": null, "created": 1348838923.0, "created_utc": 1348835323.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "OneDeadPixel", "id": "c6enynf", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 2, "body": "As a Sophomore in Comp Eng. at UF who's in a similar situation (Foreign teacher, complex concepts, and a lot of talking in circles), I'm sure glad I decided to browse reddit this morning :)  These notes came at just the right time.  Thanks!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As a Sophomore in Comp Eng. at UF who&amp;#39;s in a similar situation (Foreign teacher, complex concepts, and a lot of talking in circles), I&amp;#39;m sure glad I decided to browse reddit this morning :)  These notes came at just the right time.  Thanks!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6enynf", "flair_text": null, "created": 1348845007.0, "created_utc": 1348841407.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "ilk425", "id": "c6epewm", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 2, "body": "And now I send thanks to you from me for showing me this!  I've been riding high on my grades but starting my Discrete Mathematics course with an Eastern European sounding gentleman has been incredibly taxing.  His delivery style is difficult to understand and he largely has trouble properly responding to questions from students.\n\nSo I say thank you from me to you for showing me these notes and I shall be doing the same and passing on my thanks to Professor Fleck.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;And now I send thanks to you from me for showing me this!  I&amp;#39;ve been riding high on my grades but starting my Discrete Mathematics course with an Eastern European sounding gentleman has been incredibly taxing.  His delivery style is difficult to understand and he largely has trouble properly responding to questions from students.&lt;/p&gt;\n\n&lt;p&gt;So I say thank you from me to you for showing me these notes and I shall be doing the same and passing on my thanks to Professor Fleck.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6epewm", "flair_text": null, "created": 1348850930.0, "created_utc": 1348847330.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "JPSE", "id": "c6epn9a", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 1, "body": "  I'm curious if this is a reoccurring theme across any other universities.  I went to school in  Geneseo and I had to drop computer science and switch to a different major because the two of the three main teachers in the major spoke such poor English, and yeah, in riddles!  I couldn't understand the lectures (no one could), and when I asked for help we couldn't understand each other either. \n  They actually terminated the major and Computer Science program at the school, it was that bad. \n\n  Gladly, I continued learning about computers on my own and just took on Psychology and Marketing in school. I'm curious though if there's any predictive value in these two anecdotes, if other schools may also be victim to incomprehensible educators for computer science classes.  \n\n  I took a course through Johns Hopkins over the summer in high school and my Indian professor had a bit of a thick accent, luckily it wasn't too hard to understand him, and we had a TA. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m curious if this is a reoccurring theme across any other universities.  I went to school in  Geneseo and I had to drop computer science and switch to a different major because the two of the three main teachers in the major spoke such poor English, and yeah, in riddles!  I couldn&amp;#39;t understand the lectures (no one could), and when I asked for help we couldn&amp;#39;t understand each other either. \n  They actually terminated the major and Computer Science program at the school, it was that bad. &lt;/p&gt;\n\n&lt;p&gt;Gladly, I continued learning about computers on my own and just took on Psychology and Marketing in school. I&amp;#39;m curious though if there&amp;#39;s any predictive value in these two anecdotes, if other schools may also be victim to incomprehensible educators for computer science classes.  &lt;/p&gt;\n\n&lt;p&gt;I took a course through Johns Hopkins over the summer in high school and my Indian professor had a bit of a thick accent, luckily it wasn&amp;#39;t too hard to understand him, and we had a TA. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6epn9a", "flair_text": null, "created": 1348851755.0, "created_utc": 1348848155.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "[deleted]", "id": "c6epu4k", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 1, "body": "My teacher likes to ramble about history and random ee stuff.  Currently I am trying to figure out the best easy to spend that class time.  \n\nShould I work on doilies, Afghan squares (crochet), or embroidery?  Any suggestions welcome.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My teacher likes to ramble about history and random ee stuff.  Currently I am trying to figure out the best easy to spend that class time.  &lt;/p&gt;\n\n&lt;p&gt;Should I work on doilies, Afghan squares (crochet), or embroidery?  Any suggestions welcome.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6epu4k", "flair_text": null, "created": 1348852484.0, "created_utc": 1348848884.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "Snootwaller", "id": "c6ez1q5", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 1, "body": "Not to detract from your story, but a somewhat related anecdote:\n\nI had a professor who taught a class on operating systems with a thick thick Indian accent that I had so much trouble understanding, but I tried my hardest, and he was very patient and ended up being one of my favorite professors.\n\nHe was exceptional though.  I could name another professor who I walked out on to cancel the class when I found that not only was she unintelligible but wrote \"winners and loosers\" [sic] on one of her handouts.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not to detract from your story, but a somewhat related anecdote:&lt;/p&gt;\n\n&lt;p&gt;I had a professor who taught a class on operating systems with a thick thick Indian accent that I had so much trouble understanding, but I tried my hardest, and he was very patient and ended up being one of my favorite professors.&lt;/p&gt;\n\n&lt;p&gt;He was exceptional though.  I could name another professor who I walked out on to cancel the class when I found that not only was she unintelligible but wrote &amp;quot;winners and loosers&amp;quot; [sic] on one of her handouts.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ez1q5", "flair_text": null, "created": 1348890237.0, "created_utc": 1348886637.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "zvrba", "id": "c6fx0gc", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 1, "body": "Have you tried to complain to the administration? People who cannot make themselves understood shouldn't be allowed to teach.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Have you tried to complain to the administration? People who cannot make themselves understood shouldn&amp;#39;t be allowed to teach.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6fx0gc", "flair_text": null, "created": 1349087122.0, "created_utc": 1349083522.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "moofins", "id": "c6jxmjz", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 1, "body": "Upvote for going to my dad's alma mater, and for notes from where I'm going now.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Upvote for going to my dad&amp;#39;s alma mater, and for notes from where I&amp;#39;m going now.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6jxmjz", "flair_text": null, "created": 1349805209.0, "created_utc": 1349801609.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10kme1", "children": [], "author": "ProGamerMatt", "id": "c8kpxrl", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 1, "body": "I'm in Discrete math at uiuc, pretty chill.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m in Discrete math at uiuc, pretty chill.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c8kpxrl", "flair_text": null, "created": 1361725209.0, "created_utc": 1361696409.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10kme1", "children": [], "author": "the_tubes", "id": "c6ej76y", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 2, "body": "You know what I hated about that class\nQuantifiers!\n\u2200p \u2208 S, W(p) \u2227 (\u2203q, r \u2208 S,C(q) \u2227 \u00acG(q) \u2227 \u00acG(r))", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You know what I hated about that class\nQuantifiers!\n\u2200p \u2208 S, W(p) \u2227 (\u2203q, r \u2208 S,C(q) \u2227 \u00acG(q) \u2227 \u00acG(r))&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ej76y", "flair_text": null, "created": 1348808111.0, "created_utc": 1348804511.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_10kme1", "children": [], "author": "criveros", "id": "c6eksxk", "parent_id": "t3_10kme1", "score": 0, "approved_by": null, "upvotes": 3, "body": "Lol. Doing bad in one course would ruin your career.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Lol. Doing bad in one course would ruin your career.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6eksxk", "flair_text": null, "created": 1348816859.0, "created_utc": 1348813259.0, "num_reports": null}], "score": 295, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 399, "hidden": false, "thumbnail": "", "edited": 1348771698.0, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/10kme1/pretty_sure_reddit_just_saved_my_career_in/", "has_more_comments": false, "name": "t3_10kme1", "created": 1348771015.0, "url": "http://www.reddit.com/r/compsci/comments/10kme1/pretty_sure_reddit_just_saved_my_career_in/", "author_flair_text": null, "author": "fernanino", "created_utc": 1348767415.0, "link_flair_text": null, "media": null, "num_reports": null}, "380": {"domain": "ieeexplore.ieee.org", "link_flair_class": null, "banned_by": null, "downvotes": 2, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10lwft", "clicked": false, "title": "Science and Engineering Beyond Moore's Law", "num_comments": 0, "comments": [], "score": 3, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 5, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10lwft/science_and_engineering_beyond_moores_law/", "has_more_comments": false, "name": "t3_10lwft", "created": 1348817499.0, "url": "http://ieeexplore.ieee.org/xpl/articleDetails.jsp?reload=true&amp;arnumber=6186749", "author_flair_text": null, "author": "thexavier", "created_utc": 1348813899.0, "link_flair_text": null, "media": null, "num_reports": null}, "381": {"domain": "blog.quenta.org", "link_flair_class": null, "banned_by": null, "downvotes": 31, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10k1n2", "clicked": false, "title": "The constant 0x5f3759df in inverse square root estimation", "num_comments": 14, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_10k1n2", "children": [], "author": "hijackthecar", "id": "c6e5zwc", "parent_id": "t3_10k1n2", "score": 0, "approved_by": null, "upvotes": 13, "body": "This is a very nice analysis of some crazy wizard voodoo magic.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is a very nice analysis of some crazy wizard voodoo magic.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6e5zwc", "flair_text": null, "created": 1348756312.0, "created_utc": 1348752712.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10k1n2", "children": [], "author": "dpitch40", "id": "c6e6qn9", "parent_id": "t3_10k1n2", "score": 0, "approved_by": null, "upvotes": 8, "body": "I think it might seem less like magic if they would stop giving the constant in hexadecimal notation.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think it might seem less like magic if they would stop giving the constant in hexadecimal notation.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6e6qn9", "flair_text": null, "created": 1348759855.0, "created_utc": 1348756255.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10k1n2", "children": [], "author": "darth_aardvark", "id": "c6ebxuq", "parent_id": "t3_10k1n2", "score": 0, "approved_by": null, "upvotes": 4, "body": "this exact link was posted 2 weeks ago\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;this exact link was posted 2 weeks ago&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ebxuq", "flair_text": null, "created": 1348779255.0, "created_utc": 1348775655.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_10k1n2", "children": [], "author": "ared38", "id": "c6e7ptv", "parent_id": "t3_10k1n2", "score": 0, "approved_by": null, "upvotes": 6, "body": "This is a good explanation, but this trick has been posted here and on /r/programming a bazzilion times. It's not at all new, and not used so much any more. Perhaps there should be a stick of common cool stuff, but this should not be posted so regularly.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is a good explanation, but this trick has been posted here and on &lt;a href=\"/r/programming\"&gt;/r/programming&lt;/a&gt; a bazzilion times. It&amp;#39;s not at all new, and not used so much any more. Perhaps there should be a stick of common cool stuff, but this should not be posted so regularly.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6e7ptv", "flair_text": null, "created": 1348763773.0, "created_utc": 1348760173.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10k1n2", "children": [], "author": "DutchmanDavid", "id": "c6iudpc", "parent_id": "t3_10k1n2", "score": 0, "approved_by": null, "upvotes": 2, "body": "I prefer this version:\n\n    float invSqrt(float x)\n    {\n    \tunion {\n    \t\tfloat x;\n    \t\tint i;\n    \t} u;\n    \n    \tfloat xhalf = 0.5f * x;\n    \tu.x = x;\n    \tu.i = 0x5f3759df - (u.i &gt;&gt; 1);\n    \tu.x = u.x * (1.5f - xhalf * u.x * u.x);\n    \treturn u.x;\n    }\n\nIt looks a lot cleaner to me while it does the exact same thing.\n\nMade by Greg Walsh.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I prefer this version:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;float invSqrt(float x)\n{\n    union {\n        float x;\n        int i;\n    } u;\n\n    float xhalf = 0.5f * x;\n    u.x = x;\n    u.i = 0x5f3759df - (u.i &amp;gt;&amp;gt; 1);\n    u.x = u.x * (1.5f - xhalf * u.x * u.x);\n    return u.x;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;It looks a lot cleaner to me while it does the exact same thing.&lt;/p&gt;\n\n&lt;p&gt;Made by Greg Walsh.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6iudpc", "flair_text": null, "created": 1349608862.0, "created_utc": 1349605262.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10k1n2", "children": [], "author": "tboneplayer", "id": "c6kwpti", "parent_id": "t3_10k1n2", "score": 0, "approved_by": null, "upvotes": 1, "body": "Not just square roots, either: any exponent between 1 and -1.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not just square roots, either: any exponent between 1 and -1.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6kwpti", "flair_text": null, "created": 1349970550.0, "created_utc": 1349966950.0, "num_reports": null}], "score": 86, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 117, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10k1n2/the_constant_0x5f3759df_in_inverse_square_root/", "has_more_comments": false, "name": "t3_10k1n2", "created": 1348742990.0, "url": "http://blog.quenta.org/2012/09/0x5f3759df.html", "author_flair_text": null, "author": "herabek", "created_utc": 1348739390.0, "link_flair_text": null, "media": null, "num_reports": null}, "382": {"domain": "youtube.com", "link_flair_class": null, "banned_by": null, "downvotes": 3, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10k1ts", "clicked": false, "title": "The U-Skate World, a newly-discovered continuous cellular automata that supports gliders.", "num_comments": 0, "comments": [], "score": 9, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 12, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"http://www.youtube.com/embed/F5oKgVZ6bTk?fs=1&amp;feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10k1ts/the_uskate_world_a_newlydiscovered_continuous/", "has_more_comments": false, "name": "t3_10k1ts", "created": 1348743417.0, "url": "https://www.youtube.com/watch?v=F5oKgVZ6bTk", "author_flair_text": null, "author": "tim_hutton", "created_utc": 1348739817.0, "link_flair_text": null, "media": {"type": "youtube.com", "oembed": {"provider_url": "http://www.youtube.com/", "description": "Gray-Scott reaction-diffusion, running on a square grid with toroidal wrap-around. Parameters: k = 0.06093, F = 0.062. This region of Gray-Scott has been called the U-Skate World by Robert Munafo, who discovered its amazing behavior in 2009. http://mrob.com/pub/comp/xmorphia/index.html (more...) Computed by forward Euler integration, with diffusion values of 0.64 (D_a) and 0.32 (D_b) and a timestep of 0.2.", "title": "The U-Skate World", "url": "http://www.youtube.com/watch?v=F5oKgVZ6bTk", "author_name": "Tim Hutton", "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"http://www.youtube.com/embed/F5oKgVZ6bTk?fs=1&amp;feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "version": "1.0", "provider_name": "YouTube", "thumbnail_url": "http://i3.ytimg.com/vi/F5oKgVZ6bTk/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "http://www.youtube.com/user/ferkeltongs"}}, "num_reports": null}, "383": {"domain": "dirkgorissen.com", "link_flair_class": null, "banned_by": null, "downvotes": 12, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10irbp", "clicked": false, "title": "The Research Software Engineer.", "num_comments": 7, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_10irbp", "children": [], "author": "otakucode", "id": "c6dux0l", "parent_id": "t3_10irbp", "score": 0, "approved_by": null, "upvotes": 15, "body": "I have always wanted to be involved in writing software for the purposes of research... and was very disappointed when I found out that there is essentially no market for this.  Scientists that do see the benefits of computer systems to their research generally cobble together terrible abominations of Excel and other closed source tools having tantric sex and then expect the rest of the scientific community to just take their word for it that their software heresy didn't introduce any kind of bias or flaw into their data.  And the scientific community just believes them.  They think it would be way too hard to present the source code for the software they use along with their data, so they just don't.  Sure, this exact same issue has come up dozens of times in history, and relaxing the standards of science to skip over some 'hard' aspect has only resulted in loads of death and suffering, so let's just invite that right on in to modern science.  Let's just cross our fingers and hope we don't fuel a new 'eugenics' based on ignoring limitations we could have accounted for all along.  Maybe history will be kind to us?\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I have always wanted to be involved in writing software for the purposes of research... and was very disappointed when I found out that there is essentially no market for this.  Scientists that do see the benefits of computer systems to their research generally cobble together terrible abominations of Excel and other closed source tools having tantric sex and then expect the rest of the scientific community to just take their word for it that their software heresy didn&amp;#39;t introduce any kind of bias or flaw into their data.  And the scientific community just believes them.  They think it would be way too hard to present the source code for the software they use along with their data, so they just don&amp;#39;t.  Sure, this exact same issue has come up dozens of times in history, and relaxing the standards of science to skip over some &amp;#39;hard&amp;#39; aspect has only resulted in loads of death and suffering, so let&amp;#39;s just invite that right on in to modern science.  Let&amp;#39;s just cross our fingers and hope we don&amp;#39;t fuel a new &amp;#39;eugenics&amp;#39; based on ignoring limitations we could have accounted for all along.  Maybe history will be kind to us?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dux0l", "flair_text": null, "created": 1348695499.0, "created_utc": 1348691899.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10irbp", "children": [], "author": "IrishWilly", "id": "c6es4i9", "parent_id": "t3_10irbp", "score": 0, "approved_by": null, "upvotes": 1, "body": "I would have loved to pursue this as a career path, but unfortunately there wasn't anything pointing me in that direction and I could not afford the school to get the science degrees that most places seem to require for an entry level job. Building software to assist research would be so much more enriching than the never ending web apps I find myself stuck with now. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I would have loved to pursue this as a career path, but unfortunately there wasn&amp;#39;t anything pointing me in that direction and I could not afford the school to get the science degrees that most places seem to require for an entry level job. Building software to assist research would be so much more enriching than the never ending web apps I find myself stuck with now. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6es4i9", "flair_text": null, "created": 1348860927.0, "created_utc": 1348857327.0, "num_reports": null}], "score": 53, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 65, "hidden": false, "thumbnail": "", "edited": false, "modhash": "albofis54e80504b49fd18eb923d66e197bfb140eef9abc993", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10irbp/the_research_software_engineer/", "has_more_comments": false, "name": "t3_10irbp", "created": 1348689786.0, "url": "http://dirkgorissen.com/2012/09/13/the-research-software-engineer/", "author_flair_text": null, "author": "qkdhfjdjdhd", "created_utc": 1348686186.0, "link_flair_text": null, "media": null, "num_reports": null}}