{"200": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 8, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t know much about compiling, but a thought occured to me.&lt;/p&gt;\n\n&lt;p&gt;Imagine compiling your high-level code into an intermediate language, similar to Java byte code or Microsofts CIL. But in stead of having a virtual machine interpret that byte code, you use some software that automatically compiles the intermediate code into native code. That is, just compile it once; sort of like installing by compiling.&lt;/p&gt;\n\n&lt;p&gt;Does this exists already, and if so, why isn&amp;#39;t it used more? Wouldn&amp;#39;t that give you the &amp;quot;write-once-run-everywhere&amp;quot;-advantage, while retaining the speed of native code?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I don't know much about compiling, but a thought occured to me.\n\nImagine compiling your high-level code into an intermediate language, similar to Java byte code or Microsofts CIL. But in stead of having a virtual machine interpret that byte code, you use some software that automatically compiles the intermediate code into native code. That is, just compile it once; sort of like installing by compiling.\n\nDoes this exists already, and if so, why isn't it used more? Wouldn't that give you the \"write-once-run-everywhere\"-advantage, while retaining the speed of native code?", "saved": false, "id": "1484zf", "clicked": false, "title": "Why not compile intermediate byte-code (say Java byte code) to native code as \"installation\"?", "num_comments": 31, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_1484zf", "children": [], "author": "csgordon", "id": "c7apuh5", "parent_id": "t3_1484zf", "score": 0, "approved_by": null, "upvotes": 26, "body": "Both the JVM and the .NET virtual machine JIT compile the bytecode (see other comments).\n\nIt is possible to ahead-of-time (AOT) compile bytecode.  The Mono implementation of .NET does this (http://www.mono-project.com/Mono:Runtime:Documentation:AOT).  Microsoft research has experimented with this (http://en.wikipedia.org/wiki/Bartok_(compiler)).\n\nAside from the fact that JIT compilation seems to be satisfactory for most uses, you lose a couple advantages going to ahead-of-time compilation:\n\n* Compiling at install time requires an installation :-) With a VM, only the VM is installed, and applications are download-and-run\n* If a VM has a bug in the JIT, upgrading the VM fixes all programs that hit the bug.  If you compile at installation, upgrading your Java/.NET installation requires recompiling all of your installed programs using that platform.\n* Some optimizations are available to a JIT that are difficult to do with ahead-of-time compilation, like dynamically optimizing a hot path through multiple functions based on the current application's workload.\n\nOf course, there are advantages to ahead-of-time, too, like not paying the cost of JIT compiling every time you run a program.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Both the JVM and the .NET virtual machine JIT compile the bytecode (see other comments).&lt;/p&gt;\n\n&lt;p&gt;It is possible to ahead-of-time (AOT) compile bytecode.  The Mono implementation of .NET does this (&lt;a href=\"http://www.mono-project.com/Mono:Runtime:Documentation:AOT\"&gt;http://www.mono-project.com/Mono:Runtime:Documentation:AOT&lt;/a&gt;).  Microsoft research has experimented with this (&lt;a href=\"http://en.wikipedia.org/wiki/Bartok_(compiler)\"&gt;http://en.wikipedia.org/wiki/Bartok_(compiler)&lt;/a&gt;).&lt;/p&gt;\n\n&lt;p&gt;Aside from the fact that JIT compilation seems to be satisfactory for most uses, you lose a couple advantages going to ahead-of-time compilation:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Compiling at install time requires an installation :-) With a VM, only the VM is installed, and applications are download-and-run&lt;/li&gt;\n&lt;li&gt;If a VM has a bug in the JIT, upgrading the VM fixes all programs that hit the bug.  If you compile at installation, upgrading your Java/.NET installation requires recompiling all of your installed programs using that platform.&lt;/li&gt;\n&lt;li&gt;Some optimizations are available to a JIT that are difficult to do with ahead-of-time compilation, like dynamically optimizing a hot path through multiple functions based on the current application&amp;#39;s workload.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Of course, there are advantages to ahead-of-time, too, like not paying the cost of JIT compiling every time you run a program.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7apuh5", "flair_text": null, "created": 1354580523.0, "created_utc": 1354576923.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1484zf", "children": [], "author": "koorogi", "id": "c7as19q", "parent_id": "t3_1484zf", "score": 0, "approved_by": null, "upvotes": 6, "body": "As others have noted, this is essentially just doing JIT compilation further ahead of time, which is an idea that does exist.\n\nThis may actually result in slower code.  If you have a function with an expensive loop that uses a value passed as a parameter, the JIT compiler can kick in and compile an optimized version of the loop for the particular value that was actually passed to this invocation of the function.  It can do constant propagation, and maybe optimize out a whole bunch of stuff from the loop body.\n\nIf we do the compilation ahead of time, the compiler does not, in general, know the value that is passed for the parameter, and cannot perform this sort of optimization.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As others have noted, this is essentially just doing JIT compilation further ahead of time, which is an idea that does exist.&lt;/p&gt;\n\n&lt;p&gt;This may actually result in slower code.  If you have a function with an expensive loop that uses a value passed as a parameter, the JIT compiler can kick in and compile an optimized version of the loop for the particular value that was actually passed to this invocation of the function.  It can do constant propagation, and maybe optimize out a whole bunch of stuff from the loop body.&lt;/p&gt;\n\n&lt;p&gt;If we do the compilation ahead of time, the compiler does not, in general, know the value that is passed for the parameter, and cannot perform this sort of optimization.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7as19q", "flair_text": null, "created": 1354587853.0, "created_utc": 1354584253.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_1484zf", "children": [], "author": "kyr", "id": "c7ar676", "parent_id": "t3_1484zf", "score": 0, "approved_by": null, "upvotes": 3, "body": "[NGEN](http://msdn.microsoft.com/en-us/library/6t9t5wcf%28v=vs.110%29.aspx) does something along those lines for .NET.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://msdn.microsoft.com/en-us/library/6t9t5wcf%28v=vs.110%29.aspx\"&gt;NGEN&lt;/a&gt; does something along those lines for .NET.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ar676", "flair_text": null, "created": 1354584939.0, "created_utc": 1354581339.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1484zf", "children": [], "author": "bo1024", "id": "c7axzah", "parent_id": "t3_1484zf", "score": 0, "approved_by": null, "upvotes": 2, "body": "I don't understand what's going on here -- why not just compile the source code straight to native code?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t understand what&amp;#39;s going on here -- why not just compile the source code straight to native code?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7axzah", "flair_text": null, "created": 1354609464.0, "created_utc": 1354605864.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1484zf", "children": [], "author": "gilgoomesh", "id": "c7ay6iy", "parent_id": "t3_1484zf", "score": 0, "approved_by": null, "upvotes": 1, "body": "What you're talking about is normally called pre-JIT and is an available option for standard .NET apps.\n\nHowever, it is rarely used since it doesn't help most applications and adds a couple minutes or more of work to the installer for mid-sized applications.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What you&amp;#39;re talking about is normally called pre-JIT and is an available option for standard .NET apps.&lt;/p&gt;\n\n&lt;p&gt;However, it is rarely used since it doesn&amp;#39;t help most applications and adds a couple minutes or more of work to the installer for mid-sized applications.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ay6iy", "flair_text": null, "created": 1354610604.0, "created_utc": 1354607004.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1484zf", "children": [], "author": "maliklund87", "id": "c7b057i", "parent_id": "t3_1484zf", "score": 0, "approved_by": null, "upvotes": 1, "body": "Nice answers. Thank you all. :)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nice answers. Thank you all. :)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7b057i", "flair_text": null, "created": 1354627982.0, "created_utc": 1354624382.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1484zf", "children": [], "author": "weAreAllSlugs", "id": "c7cutse", "parent_id": "t3_1484zf", "score": 0, "approved_by": null, "upvotes": 1, "body": "This is the basis for ANDF - application-neutral distribution format, at least 15 years ago.  It didn't win.  Maybe it can now ...", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is the basis for ANDF - application-neutral distribution format, at least 15 years ago.  It didn&amp;#39;t win.  Maybe it can now ...&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cutse", "flair_text": null, "created": 1354913524.0, "created_utc": 1354909924.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1484zf", "children": [], "author": "spinwizard69", "id": "c7h3gjo", "parent_id": "t3_1484zf", "score": 0, "approved_by": null, "upvotes": 1, "body": "Have you looked into LLVM?    It would be very possible to build a system as you describe.  That is one that takes byte code that gets translated into native at install time.   Frankly this should be rather useful in an embedded OS as you could decouple much of the code from the underlying hardware.  \n\nOn the flip side, that is big OS hardware, I could see Apple moving to this in Mac OS/X.  It would allow code to be written once and then be compiled at install for the underlying hardware.   That hardware could be i86, ARM or advanced i86 like Phi.  Frankly Apple has kinda achieved this already for OpenCL code running on GPUs.  \n\nThe future maybe closer than you think.  ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Have you looked into LLVM?    It would be very possible to build a system as you describe.  That is one that takes byte code that gets translated into native at install time.   Frankly this should be rather useful in an embedded OS as you could decouple much of the code from the underlying hardware.  &lt;/p&gt;\n\n&lt;p&gt;On the flip side, that is big OS hardware, I could see Apple moving to this in Mac OS/X.  It would allow code to be written once and then be compiled at install for the underlying hardware.   That hardware could be i86, ARM or advanced i86 like Phi.  Frankly Apple has kinda achieved this already for OpenCL code running on GPUs.  &lt;/p&gt;\n\n&lt;p&gt;The future maybe closer than you think.  &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7h3gjo", "flair_text": null, "created": 1355605010.0, "created_utc": 1355601410.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1484zf", "children": [], "author": "Man-EatingSquirrel", "id": "c7izcrh", "parent_id": "t3_1484zf", "score": 0, "approved_by": null, "upvotes": 1, "body": "Would that even make a major difference?  I was under the impression that most of the overhead from Java comes from features like garbage collection, not having POD types, expensive function calls, etc, rather than the JIT.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Would that even make a major difference?  I was under the impression that most of the overhead from Java comes from features like garbage collection, not having POD types, expensive function calls, etc, rather than the JIT.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7izcrh", "flair_text": null, "created": 1355910941.0, "created_utc": 1355907341.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_1484zf", "children": [], "author": "Qubed", "id": "c7apba5", "parent_id": "t3_1484zf", "score": 0, "approved_by": null, "upvotes": 1, "body": "&gt; Does this exists already\n\nYes it does.\n\nhttp://en.wikipedia.org/wiki/Just-in-time_compilation\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Does this exists already&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Yes it does.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Just-in-time_compilation\"&gt;http://en.wikipedia.org/wiki/Just-in-time_compilation&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7apba5", "flair_text": null, "created": 1354578768.0, "created_utc": 1354575168.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_1484zf", "children": [], "author": "calzoneman", "id": "c7apej0", "parent_id": "t3_1484zf", "score": 0, "approved_by": null, "upvotes": 1, "body": "This does exist (see JIT compilation).  However, it's a lot easier to write a VM for an arbitrary platform than it is to write a JIT compiler, which would require advanced knowledge of the architecture.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This does exist (see JIT compilation).  However, it&amp;#39;s a lot easier to write a VM for an arbitrary platform than it is to write a JIT compiler, which would require advanced knowledge of the architecture.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7apej0", "flair_text": null, "created": 1354579057.0, "created_utc": 1354575457.0, "num_reports": null}], "score": 11, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 19, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/1484zf/why_not_compile_intermediate_bytecode_say_java/", "has_more_comments": false, "name": "t3_1484zf", "created": 1354574389.0, "url": "http://www.reddit.com/r/compsci/comments/1484zf/why_not_compile_intermediate_bytecode_say_java/", "author_flair_text": null, "author": "maliklund87", "created_utc": 1354574389.0, "link_flair_text": null, "media": null, "num_reports": null}, "201": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 51, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "143mu2", "clicked": false, "title": "What's the most fascinating computational concept you know of?", "num_comments": 112, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 8, "link_id": "t3_143mu2", "children": [], "author": "NegatedVoid", "id": "c79s9kf", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 53, "body": "[Diffie-Hellman Key Exchange](http://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange)\n\nBasically, two parties (with no pre-shared information), can agree upon a secret key. With all of their communications intercepted by a third party.\n\nAnd that third party does not learn the key.\n\nIt's freaking magic. (There's a cool youtube video explaining it with color mixing if you have trouble with the concept).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange\"&gt;Diffie-Hellman Key Exchange&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Basically, two parties (with no pre-shared information), can agree upon a secret key. With all of their communications intercepted by a third party.&lt;/p&gt;\n\n&lt;p&gt;And that third party does not learn the key.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s freaking magic. (There&amp;#39;s a cool youtube video explaining it with color mixing if you have trouble with the concept).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79s9kf", "flair_text": null, "created": 1354409230.0, "created_utc": 1354405630.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_143mu2", "children": [], "author": "glinsvad", "id": "c79kfz6", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 26, "body": "Topological optimization or genetic algorithms.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Topological optimization or genetic algorithms.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79kfz6", "flair_text": null, "created": 1354368457.0, "created_utc": 1354364857.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 13, "link_id": "t3_143mu2", "children": [], "author": "tikhonjelvis", "id": "c79l1ka", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 54, "body": "I've always been fascinated by how many radically different models of computation are Turing complete. While any given model--like a Turing machines or some programming language--is arbitrary and artificial, the class of problems it can handle is somehow fundamental and natural. \n\nThis is the fact that made me finally realize how some of the CS stuff I was learning actually reflected some underlying universal truth rather than just something made up by humans. (That is, there is some emergent internal consistency.)\n\nAlso, more recently, I've learned about mathematical duality and how seemingly disparate things are often, in a certain sense, inverses. A great example would be product types (tuples) and sum  (disjoint unions). But this is more of a math idea than a computation one. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve always been fascinated by how many radically different models of computation are Turing complete. While any given model--like a Turing machines or some programming language--is arbitrary and artificial, the class of problems it can handle is somehow fundamental and natural. &lt;/p&gt;\n\n&lt;p&gt;This is the fact that made me finally realize how some of the CS stuff I was learning actually reflected some underlying universal truth rather than just something made up by humans. (That is, there is some emergent internal consistency.)&lt;/p&gt;\n\n&lt;p&gt;Also, more recently, I&amp;#39;ve learned about mathematical duality and how seemingly disparate things are often, in a certain sense, inverses. A great example would be product types (tuples) and sum  (disjoint unions). But this is more of a math idea than a computation one. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79l1ka", "flair_text": null, "created": 1354374570.0, "created_utc": 1354370970.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 9, "link_id": "t3_143mu2", "children": [], "author": "grayvedigga", "id": "c79l961", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 53, "body": "The Busy Beaver function grows faster than any computable function.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The Busy Beaver function grows faster than any computable function.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79l961", "flair_text": null, "created": 1354376183.0, "created_utc": 1354372583.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 17, "link_id": "t3_143mu2", "children": [], "author": "TarMil", "id": "c79kmc5", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 75, "body": "The Curry-Howard correspondence. When I was explained how a ~~type inference~~ typed program (see tactics's response) is equivalent to a logical proof, my mind exploded.", "edited": 1354448935.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The Curry-Howard correspondence. When I was explained how a &lt;del&gt;type inference&lt;/del&gt; typed program (see tactics&amp;#39;s response) is equivalent to a logical proof, my mind exploded.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79kmc5", "flair_text": null, "created": 1354370468.0, "created_utc": 1354366868.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 6, "link_id": "t3_143mu2", "children": [], "author": "leegao", "id": "c79nz5t", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 16, "body": "Some of the coolest things I've ever read about/seen\n\n* Information flow on a graph: solve systems of equivalences/constraints on an arbitrary DAG via fixed point iteration, or dataflow analysis\n\nThis is a very prevalent concept in basic compiler optimization analysis whereby seemingly \"monotone\" properties of a system (I.E. suppose we superimpose a partial ordering with GLB of [; \\top ;] on the information computed by our program, then the modifications on the information by each instruction or whatever the unit of our graph is will always tend towards [; \\top ;]) can be framed in such a way that we can guarantee convergence to a satisfying solution given that our lattice of information is at most a complete partial order (i.e., finite in *height*) provided that we keep on applying the modifications that each instruction performs on our information at each program point until convergence.\n\nThere is also a really elegant way of interpreting this. Suppose that we have an optimal solution graph G* = (V\\*, E), where V* is the optimal sets of information at each program point. Suppose that we began our iteration at a solution that is guaranteed to be ordered lower than V* (for example, we can begin with the LUB of the complete lattice, which serves as the [; \\bot ;] element), then every time we apply a modification made by a program point, we will monotonically increase the amount of information in [; V \\to V\\^* \\to \\top ;]. If we are then good at checking our process at every step, we will be able to detect when we reach V* (by seeing whether everything satisfies the system of equivalences we've established or, better yet, seeing if another set of modifications will produce a different set of information that is not equivalent to the one in the previous iteration). We're guaranteed this convergence by monotonicity, so all we need to do is wait.\n\nIn simple algebra, this is equivalent to having some system of equation like\n\nx = cos(x)\n\nwhereby we can prove that in some sense, the sequence [; \\left\\lbrace x, \\cos(x), \\cos(cos(x)), \\cdots \\right\\rbrace ;] is monotone in some metric tending towards the true solution x\\*. Therefore, suppose I have some initial guess x = 0, which is obviously not a solution; I can generate a better initial guess at the true solution by setting x = cos(0) and using that, since we know that we're closer to optimal. If we keep on doing this and take a limit on the number of applications of cos, we'll find that eventually, cos^(n)(0) converges to x*.\n\nThe above system will compute what we call the MFP (maximal fixed point, or the fixed point solution that satisfies some form of optimality within all solutions reachable via the fixed point)  solution to our information flow problem (henceforth, dataflow analysis). However, if our modifications (which we can model as a 2-ary function [; T : L \\times I \\to L ;] where L is our lattice of information and I an inductively defined set of instructions within our program) T(info, instr) satisfies distributiveness over joins and meet points (meet(A,B) = glb(A,B), in the forward sense, you can thing of it as set intersection since meet({x,y,z}, {y,z}) over the partial ordering relation subseteq is the set {y,z} (since this is the greatest lower bound of both {x,y,z} and {y,z})), then the maximal fixed point solution computed by our analysis is also optimal in the sense of computing this set of constraints over all possible paths from beginning to some exit point (this is in general an intractable operation on its own) which is a nice bonus.\n\n* The general technique of breaking problems down into (disjoint or nondisjoint) subproblems, or dynamic programming.\n\nThis is way cool. \n\nSince many problems regarding collections of things will have solutions that are inductively define in terms of each other, we can model the problem itself inductively. For example, the classic motivating problem for discrete DP is the question of given 1, 5, and 25 cent denominations, what is the smallest number of coins need to make change for x dollars. We can model the solution for x dollars by contending that in order to make change for x dollars, we will need to have a list of n coins; suppose we look at the last coin in that list, it can be either 1, 5, or 25, then the solution will be of the form OPT[x] = OPT[x-coin] + 1, or, the optimum for making 1 dollar given that the last coin given to us is 25 cents will be 1 coin (for that last 25 cent) plus the optimum for making 75 cents. Since we don't know what the last coin given to us is in the optimal way of making change, we go with our gut feeling and just as for the minimum over all ways of setting that last coin, giving us\n\n    [; OPT[x] = min_{i \\in \\lbrace 1,5,25 \\rbrace} OPT[x - i] + 1 ;]\n\nThis simple technique is dead useful in helping us framing other types of similar problems thrown at us.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Some of the coolest things I&amp;#39;ve ever read about/seen&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Information flow on a graph: solve systems of equivalences/constraints on an arbitrary DAG via fixed point iteration, or dataflow analysis&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;This is a very prevalent concept in basic compiler optimization analysis whereby seemingly &amp;quot;monotone&amp;quot; properties of a system (I.E. suppose we superimpose a partial ordering with GLB of [; \\top ;] on the information computed by our program, then the modifications on the information by each instruction or whatever the unit of our graph is will always tend towards [; \\top ;]) can be framed in such a way that we can guarantee convergence to a satisfying solution given that our lattice of information is at most a complete partial order (i.e., finite in &lt;em&gt;height&lt;/em&gt;) provided that we keep on applying the modifications that each instruction performs on our information at each program point until convergence.&lt;/p&gt;\n\n&lt;p&gt;There is also a really elegant way of interpreting this. Suppose that we have an optimal solution graph G* = (V*, E), where V* is the optimal sets of information at each program point. Suppose that we began our iteration at a solution that is guaranteed to be ordered lower than V* (for example, we can begin with the LUB of the complete lattice, which serves as the [; \\bot ;] element), then every time we apply a modification made by a program point, we will monotonically increase the amount of information in [; V \\to V^* \\to \\top ;]. If we are then good at checking our process at every step, we will be able to detect when we reach V* (by seeing whether everything satisfies the system of equivalences we&amp;#39;ve established or, better yet, seeing if another set of modifications will produce a different set of information that is not equivalent to the one in the previous iteration). We&amp;#39;re guaranteed this convergence by monotonicity, so all we need to do is wait.&lt;/p&gt;\n\n&lt;p&gt;In simple algebra, this is equivalent to having some system of equation like&lt;/p&gt;\n\n&lt;p&gt;x = cos(x)&lt;/p&gt;\n\n&lt;p&gt;whereby we can prove that in some sense, the sequence [; \\left\\lbrace x, \\cos(x), \\cos(cos(x)), \\cdots \\right\\rbrace ;] is monotone in some metric tending towards the true solution x*. Therefore, suppose I have some initial guess x = 0, which is obviously not a solution; I can generate a better initial guess at the true solution by setting x = cos(0) and using that, since we know that we&amp;#39;re closer to optimal. If we keep on doing this and take a limit on the number of applications of cos, we&amp;#39;ll find that eventually, cos&lt;sup&gt;n&lt;/sup&gt;(0) converges to x*.&lt;/p&gt;\n\n&lt;p&gt;The above system will compute what we call the MFP (maximal fixed point, or the fixed point solution that satisfies some form of optimality within all solutions reachable via the fixed point)  solution to our information flow problem (henceforth, dataflow analysis). However, if our modifications (which we can model as a 2-ary function [; T : L \\times I \\to L ;] where L is our lattice of information and I an inductively defined set of instructions within our program) T(info, instr) satisfies distributiveness over joins and meet points (meet(A,B) = glb(A,B), in the forward sense, you can thing of it as set intersection since meet({x,y,z}, {y,z}) over the partial ordering relation subseteq is the set {y,z} (since this is the greatest lower bound of both {x,y,z} and {y,z})), then the maximal fixed point solution computed by our analysis is also optimal in the sense of computing this set of constraints over all possible paths from beginning to some exit point (this is in general an intractable operation on its own) which is a nice bonus.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;The general technique of breaking problems down into (disjoint or nondisjoint) subproblems, or dynamic programming.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;This is way cool. &lt;/p&gt;\n\n&lt;p&gt;Since many problems regarding collections of things will have solutions that are inductively define in terms of each other, we can model the problem itself inductively. For example, the classic motivating problem for discrete DP is the question of given 1, 5, and 25 cent denominations, what is the smallest number of coins need to make change for x dollars. We can model the solution for x dollars by contending that in order to make change for x dollars, we will need to have a list of n coins; suppose we look at the last coin in that list, it can be either 1, 5, or 25, then the solution will be of the form OPT[x] = OPT[x-coin] + 1, or, the optimum for making 1 dollar given that the last coin given to us is 25 cents will be 1 coin (for that last 25 cent) plus the optimum for making 75 cents. Since we don&amp;#39;t know what the last coin given to us is in the optimal way of making change, we go with our gut feeling and just as for the minimum over all ways of setting that last coin, giving us&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;[; OPT[x] = min_{i \\in \\lbrace 1,5,25 \\rbrace} OPT[x - i] + 1 ;]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This simple technique is dead useful in helping us framing other types of similar problems thrown at us.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79nz5t", "flair_text": null, "created": 1354390148.0, "created_utc": 1354386548.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 9, "link_id": "t3_143mu2", "children": [], "author": "MeanFoo", "id": "c79nw28", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 63, "body": "Bubble sort is still dope. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Bubble sort is still dope. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79nw28", "flair_text": null, "created": 1354389764.0, "created_utc": 1354386164.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_143mu2", "children": [], "author": "alanturingslovechild", "id": "c79oyta", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 16, "body": "Undecidability.  What amazes me is that something so seemingly esoteric actually has significant effects on real problems.  For instance, certain type systems (e.g. with dependent types) have very desirable properties but can't be automatically checked because when a type system gets sufficiently powerful, it becomes undecidable.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Undecidability.  What amazes me is that something so seemingly esoteric actually has significant effects on real problems.  For instance, certain type systems (e.g. with dependent types) have very desirable properties but can&amp;#39;t be automatically checked because when a type system gets sufficiently powerful, it becomes undecidable.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79oyta", "flair_text": null, "created": 1354394552.0, "created_utc": 1354390952.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_143mu2", "children": [], "author": "rosulek", "id": "c79q3z4", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 13, "body": "Every result about computation can be proved by writing an algorithm. Even when you are proving something like \"no algorithm exists for this problem\", the way you prove it is by writing an algorithm!\n\nExamples:\n\n* Want to prove: \"If factoring is hard, then there is no algorithm that breaks my cryptosystem.\" What you actually do is write an algorithm that makes calls to a subroutine, and if that subroutine is an algorithm that breaks the cryptosystem, your new algorithm solves factoring.\n\n* Want to prove: \"halting problem is undecidable.\" What you actually do is write an algorithm that makes calls to a subroutine, and if that subroutine solves the halting problem, then your algorithm generates a contradiction.\n\n* Want to prove: [\"problems in the complexity class E^NP don't have constant-depth circuits with modular addition gates.\"](http://rjlipton.wordpress.com/2010/11/16/how-ryans-circuit-lower-bound-works/) What you actually do is develop an improved algorithm for the satisfiability problem on such constant-depth circuits.\n\n* Want to prove: \"my problem is NP complete.\" What you actually do is write an algorithm for 3SAT that uses a subroutine that solves your problem.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Every result about computation can be proved by writing an algorithm. Even when you are proving something like &amp;quot;no algorithm exists for this problem&amp;quot;, the way you prove it is by writing an algorithm!&lt;/p&gt;\n\n&lt;p&gt;Examples:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Want to prove: &amp;quot;If factoring is hard, then there is no algorithm that breaks my cryptosystem.&amp;quot; What you actually do is write an algorithm that makes calls to a subroutine, and if that subroutine is an algorithm that breaks the cryptosystem, your new algorithm solves factoring.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Want to prove: &amp;quot;halting problem is undecidable.&amp;quot; What you actually do is write an algorithm that makes calls to a subroutine, and if that subroutine solves the halting problem, then your algorithm generates a contradiction.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Want to prove: &lt;a href=\"http://rjlipton.wordpress.com/2010/11/16/how-ryans-circuit-lower-bound-works/\"&gt;&amp;quot;problems in the complexity class E&lt;sup&gt;NP&lt;/sup&gt; don&amp;#39;t have constant-depth circuits with modular addition gates.&amp;quot;&lt;/a&gt; What you actually do is develop an improved algorithm for the satisfiability problem on such constant-depth circuits.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Want to prove: &amp;quot;my problem is NP complete.&amp;quot; What you actually do is write an algorithm for 3SAT that uses a subroutine that solves your problem.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79q3z4", "flair_text": null, "created": 1354399590.0, "created_utc": 1354395990.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_143mu2", "children": [], "author": "foreheadteeth", "id": "c79mkvb", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 21, "body": "I love algorithms. I think some of the best algorithms are these: http://en.wikipedia.org/wiki/Computational_complexity_of_mathematical_operations\n\nDid you know that the long multiplication algorithm you learnt in elementary school is slow (O(n^2 )), and that there is a much faster algorithm (O(nlogn) or so) for multiplying numbers? I find it astonishing that such a universally taught algorithm can be improved in such a dramatic fashion.", "edited": 1354394828.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I love algorithms. I think some of the best algorithms are these: &lt;a href=\"http://en.wikipedia.org/wiki/Computational_complexity_of_mathematical_operations\"&gt;http://en.wikipedia.org/wiki/Computational_complexity_of_mathematical_operations&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Did you know that the long multiplication algorithm you learnt in elementary school is slow (O(n&lt;sup&gt;2&lt;/sup&gt; )), and that there is a much faster algorithm (O(nlogn) or so) for multiplying numbers? I find it astonishing that such a universally taught algorithm can be improved in such a dramatic fashion.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79mkvb", "flair_text": null, "created": 1354383770.0, "created_utc": 1354380170.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_143mu2", "children": [], "author": "PartyButton", "id": "c79qdh4", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 9, "body": "[tarski's undefinability theorem](http://en.wikipedia.org/wiki/Tarski%27s_undefinability_theorem)/[godel's incompleteness theorems](http://en.wikipedia.org/wiki/G%C3%B6del%27s_incompleteness_theorems)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Tarski%27s_undefinability_theorem\"&gt;tarski&amp;#39;s undefinability theorem&lt;/a&gt;/&lt;a href=\"http://en.wikipedia.org/wiki/G%C3%B6del%27s_incompleteness_theorems\"&gt;godel&amp;#39;s incompleteness theorems&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79qdh4", "flair_text": null, "created": 1354400707.0, "created_utc": 1354397107.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_143mu2", "children": [], "author": "cratylus", "id": "c79qr5m", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 11, "body": "Partial evaluation: http://wry.me/misc/peval.html", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Partial evaluation: &lt;a href=\"http://wry.me/misc/peval.html\"&gt;http://wry.me/misc/peval.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79qr5m", "flair_text": null, "created": 1354402397.0, "created_utc": 1354398797.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_143mu2", "children": [], "author": "nikkos", "id": "c79xoq6", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 9, "body": "How Ken Thompson (turing award winner) wrote a compiler that had self-replicating code targeting itself and the block of code responsible for login on the unix OS. This allowed the compiler he worked on to infinitely perpetuate a hack such that whenever someone compiled the unix OS, it would inject code allowing a password he originally embedded to login to the system and second, that if someone compiled the clean source code of a compiler with the compiler he worked on - it would inject this code into the compiler.\n\nPaper explaining how this works (easy read - 3 pages): http://dl.acm.org/citation.cfm?id=1283940\n\nKen's Wikipedia entry: http://en.wikipedia.org/wiki/Ken_Thompson\n\nSo essentially, after the first version of the code he wrote for the compiler, the hack only ever existed in the executable - it did not exist in the source code. Compiling secure source code of a compiler would turn into a compromised executable. Still fascinates me. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;How Ken Thompson (turing award winner) wrote a compiler that had self-replicating code targeting itself and the block of code responsible for login on the unix OS. This allowed the compiler he worked on to infinitely perpetuate a hack such that whenever someone compiled the unix OS, it would inject code allowing a password he originally embedded to login to the system and second, that if someone compiled the clean source code of a compiler with the compiler he worked on - it would inject this code into the compiler.&lt;/p&gt;\n\n&lt;p&gt;Paper explaining how this works (easy read - 3 pages): &lt;a href=\"http://dl.acm.org/citation.cfm?id=1283940\"&gt;http://dl.acm.org/citation.cfm?id=1283940&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Ken&amp;#39;s Wikipedia entry: &lt;a href=\"http://en.wikipedia.org/wiki/Ken_Thompson\"&gt;http://en.wikipedia.org/wiki/Ken_Thompson&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;So essentially, after the first version of the code he wrote for the compiler, the hack only ever existed in the executable - it did not exist in the source code. Compiling secure source code of a compiler would turn into a compromised executable. Still fascinates me. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79xoq6", "flair_text": null, "created": 1354435709.0, "created_utc": 1354432109.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_143mu2", "children": [], "author": "datadude", "id": "c7a3orx", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 6, "body": "Recursion.  :)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Recursion.  :)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7a3orx", "flair_text": null, "created": 1354476633.0, "created_utc": 1354473033.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_143mu2", "children": [], "author": "imMAW", "id": "c79xsxi", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 5, "body": "[Chaitin's constant](https://en.wikipedia.org/wiki/Chaitin%27s_constant)\n\nIt's a number that\n\n - is definable but not computable (you can't write a program that will output its nth digit, like you can with pi or any other familiar constant)\n - is computably enumerable (you can make a non-halting program that outputs a sequence of numbers approaching the constant)\n - is algorithmically random (essentially this means the digits are random/incompressible. A slightly innacurate definition: the shortest program you can write that would output the first n bits of the number is going to be the ~n bit program \"print x.xxxxxxxxxxxxxx\")\n\nI would actually like to see a proof of the third point (I'm just trusting wikipedia), if anyone has a link or knows a book with the proof, let me know.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://en.wikipedia.org/wiki/Chaitin%27s_constant\"&gt;Chaitin&amp;#39;s constant&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s a number that&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;is definable but not computable (you can&amp;#39;t write a program that will output its nth digit, like you can with pi or any other familiar constant)&lt;/li&gt;\n&lt;li&gt;is computably enumerable (you can make a non-halting program that outputs a sequence of numbers approaching the constant)&lt;/li&gt;\n&lt;li&gt;is algorithmically random (essentially this means the digits are random/incompressible. A slightly innacurate definition: the shortest program you can write that would output the first n bits of the number is going to be the ~n bit program &amp;quot;print x.xxxxxxxxxxxxxx&amp;quot;)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;I would actually like to see a proof of the third point (I&amp;#39;m just trusting wikipedia), if anyone has a link or knows a book with the proof, let me know.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79xsxi", "flair_text": null, "created": 1354436423.0, "created_utc": 1354432823.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_143mu2", "children": [], "author": "dhjdhj", "id": "c79p98p", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 10, "body": "Quantum computation", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Quantum computation&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79p98p", "flair_text": null, "created": 1354395830.0, "created_utc": 1354392230.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_143mu2", "children": [], "author": "smog_alado", "id": "c7a0jcl", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 5, "body": "I'm impressed noone mentioned NP-completeness. Sure, its the obvious example, but its still really cool.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m impressed noone mentioned NP-completeness. Sure, its the obvious example, but its still really cool.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7a0jcl", "flair_text": null, "created": 1354460530.0, "created_utc": 1354456930.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_143mu2", "children": [], "author": "andreasw", "id": "c79qxjf", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 6, "body": "[Solomonoff induction](http://wiki.lesswrong.com/wiki/Solomonoff_induction).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://wiki.lesswrong.com/wiki/Solomonoff_induction\"&gt;Solomonoff induction&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79qxjf", "flair_text": null, "created": 1354403195.0, "created_utc": 1354399595.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_143mu2", "children": [], "author": "aj910martin", "id": "c79ulsk", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 3, "body": "Queuing Theory. The fact that we can model enormous systems using math and study them in order to optimize power, response/waiting time, etc. has been very fascinating for me.\n\nIn general, modeling stochastic processes has always been a challenge in industry and when you see neat proofs using  Markov chains, Little's law used with probability distributions to model stochastic processes, they turn out to be so neat! Not just in theory but also in applied research.  ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Queuing Theory. The fact that we can model enormous systems using math and study them in order to optimize power, response/waiting time, etc. has been very fascinating for me.&lt;/p&gt;\n\n&lt;p&gt;In general, modeling stochastic processes has always been a challenge in industry and when you see neat proofs using  Markov chains, Little&amp;#39;s law used with probability distributions to model stochastic processes, they turn out to be so neat! Not just in theory but also in applied research.  &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79ulsk", "flair_text": null, "created": 1354420006.0, "created_utc": 1354416406.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_143mu2", "children": [], "author": "hoeg", "id": "c79z35v", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 3, "body": "[Secure multiparty computation](http://en.wikipedia.org/wiki/Secure_multiparty_computation). Being able to evaluate a function with input from several players such that nobody learns the other players input. \n\nDoing multiplication in this setting is what computationally makes this fascinating since some protocols does this in linear number of bits send in each multiplication instead of the expected exponential number of bits.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Secure_multiparty_computation\"&gt;Secure multiparty computation&lt;/a&gt;. Being able to evaluate a function with input from several players such that nobody learns the other players input. &lt;/p&gt;\n\n&lt;p&gt;Doing multiplication in this setting is what computationally makes this fascinating since some protocols does this in linear number of bits send in each multiplication instead of the expected exponential number of bits.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79z35v", "flair_text": null, "created": 1354446598.0, "created_utc": 1354442998.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_143mu2", "children": [], "author": "spazzm", "id": "c79miks", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 6, "body": "Self-organisation.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Self-organisation.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79miks", "flair_text": null, "created": 1354383456.0, "created_utc": 1354379856.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_143mu2", "children": [], "author": "idoescompooters", "id": "c79rb39", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 6, "body": "Moore's Law.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Moore&amp;#39;s Law.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79rb39", "flair_text": null, "created": 1354404893.0, "created_utc": 1354401293.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_143mu2", "children": [], "author": "miellaby", "id": "c79spkv", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 2, "body": "hash consing - and the concept of a full computing stack based on \"hons\" ( -&gt; [shameless link to my reddit](http://www.reddit.com/r/entrelacs))", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;hash consing - and the concept of a full computing stack based on &amp;quot;hons&amp;quot; ( -&amp;gt; &lt;a href=\"http://www.reddit.com/r/entrelacs\"&gt;shameless link to my reddit&lt;/a&gt;)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79spkv", "flair_text": null, "created": 1354411132.0, "created_utc": 1354407532.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_143mu2", "children": [], "author": "agumonkey", "id": "c79vcp5", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 3, "body": "  - logic programming : why bother making a half-assed job at searching the solution space when the computer can do it for you.\n  - symbolic programming : mccarthy original lisp paper about expression derivation.\n  - virtual machines and evaluation towers\n  - reflection\n  - simulated annealing\n\noh and some principles in lambda calculus:  currying, and this notion of programming with nothing somehow creating by capacity and symmetry, e.g : a list is a function that will take a function such that it will act like a list, same for conditionals; shapeless puzzle pieces from which emerge a concept.", "edited": 1354420261.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;ul&gt;\n&lt;li&gt;logic programming : why bother making a half-assed job at searching the solution space when the computer can do it for you.&lt;/li&gt;\n&lt;li&gt;symbolic programming : mccarthy original lisp paper about expression derivation.&lt;/li&gt;\n&lt;li&gt;virtual machines and evaluation towers&lt;/li&gt;\n&lt;li&gt;reflection&lt;/li&gt;\n&lt;li&gt;simulated annealing&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;oh and some principles in lambda calculus:  currying, and this notion of programming with nothing somehow creating by capacity and symmetry, e.g : a list is a function that will take a function such that it will act like a list, same for conditionals; shapeless puzzle pieces from which emerge a concept.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79vcp5", "flair_text": null, "created": 1354423609.0, "created_utc": 1354420009.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_143mu2", "children": [], "author": "IHaveALargePenis", "id": "c79xubl", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 2, "body": "Hamming code and some other assembly algorithms. It blew my mind how simple, easy to learn and understand and effective they were. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hamming code and some other assembly algorithms. It blew my mind how simple, easy to learn and understand and effective they were. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79xubl", "flair_text": null, "created": 1354436677.0, "created_utc": 1354433077.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_143mu2", "children": [], "author": "zem", "id": "c79yfzs", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 2, "body": "Efficient matrix multiplication. It's pretty fascinating that anyone thought to do it in less than O(n^3 ) in the first place, and the possibility that the lower bound might be O( n^2 ) is mindblowing.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Efficient matrix multiplication. It&amp;#39;s pretty fascinating that anyone thought to do it in less than O(n&lt;sup&gt;3&lt;/sup&gt; ) in the first place, and the possibility that the lower bound might be O( n&lt;sup&gt;2&lt;/sup&gt; ) is mindblowing.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79yfzs", "flair_text": null, "created": 1354440978.0, "created_utc": 1354437378.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_143mu2", "children": [], "author": "berlinbrown", "id": "c79zn3k", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 1, "body": "genetic programming.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;genetic programming.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79zn3k", "flair_text": null, "created": 1354451906.0, "created_utc": 1354448306.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_143mu2", "children": [], "author": "jkff", "id": "c79zntw", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 2, "body": "This: http://math.andrej.com/2007/09/28/seemingly-impossible-functional-programs/ - enumeration of infinite but topologically compact spaces of functions and their arguments.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This: &lt;a href=\"http://math.andrej.com/2007/09/28/seemingly-impossible-functional-programs/\"&gt;http://math.andrej.com/2007/09/28/seemingly-impossible-functional-programs/&lt;/a&gt; - enumeration of infinite but topologically compact spaces of functions and their arguments.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79zntw", "flair_text": null, "created": 1354452118.0, "created_utc": 1354448518.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_143mu2", "children": [], "author": "Jackopo", "id": "c7a35ug", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 1, "body": "[SVD](https://en.wikipedia.org/wiki/Singular_value_decomposition) ~~decomposition~~. It's incredible how many use cases are there, from text indexing to face recognition through recommendation systems.\n\n\nIt took some time to understand what it does, and still the algebra behind looks hard to me, it's like a spell which in some cases shows interesting properties of data and allow to reduce the number of dimensions preserving information.", "edited": 1354478712.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://en.wikipedia.org/wiki/Singular_value_decomposition\"&gt;SVD&lt;/a&gt; &lt;del&gt;decomposition&lt;/del&gt;. It&amp;#39;s incredible how many use cases are there, from text indexing to face recognition through recommendation systems.&lt;/p&gt;\n\n&lt;p&gt;It took some time to understand what it does, and still the algebra behind looks hard to me, it&amp;#39;s like a spell which in some cases shows interesting properties of data and allow to reduce the number of dimensions preserving information.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7a35ug", "flair_text": null, "created": 1354474511.0, "created_utc": 1354470911.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_143mu2", "children": [], "author": "doomsday1216", "id": "c7acysd", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 1, "body": "Visible Light Communication\n\nhttp://en.wikipedia.org/wiki/Visible_light_communication", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Visible Light Communication&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Visible_light_communication\"&gt;http://en.wikipedia.org/wiki/Visible_light_communication&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7acysd", "flair_text": null, "created": 1354520056.0, "created_utc": 1354516456.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_143mu2", "children": [], "author": "BumSkeeter", "id": "c7bgtyy", "parent_id": "t3_143mu2", "score": 0, "approved_by": null, "upvotes": 1, "body": "I think it has been stated in comment already, but that there is underlying struture to problem (idk if all problems) that we can find and use to solve them. Such that gravity is a constant, there is also constants in \"problems\" such that given any instance of a problem a single algorithm can solve it. \n\nIt always makes me think that there is any easier way to come to an algorithm, maybe we can think of how a problem is made. Say a problem A always arises when situation X is present. Is there a predefined way to make a situation X such that a problem A arises? If so maybe the predefined way that X is made relates to the algorithm for A; an inverse of X creates the algorithm? \n\nSomething along those lines, in RSA, we can create a massive prime number easily by throwing a few other primes together. But refinding those primes is hard (factorization problem). -- side note -- I always was intriguied with factoring throughout school and prime numbers. I practically get off to them. I feel like there is a simple way to find factors and I feel like I'm going to find it. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think it has been stated in comment already, but that there is underlying struture to problem (idk if all problems) that we can find and use to solve them. Such that gravity is a constant, there is also constants in &amp;quot;problems&amp;quot; such that given any instance of a problem a single algorithm can solve it. &lt;/p&gt;\n\n&lt;p&gt;It always makes me think that there is any easier way to come to an algorithm, maybe we can think of how a problem is made. Say a problem A always arises when situation X is present. Is there a predefined way to make a situation X such that a problem A arises? If so maybe the predefined way that X is made relates to the algorithm for A; an inverse of X creates the algorithm? &lt;/p&gt;\n\n&lt;p&gt;Something along those lines, in RSA, we can create a massive prime number easily by throwing a few other primes together. But refinding those primes is hard (factorization problem). -- side note -- I always was intriguied with factoring throughout school and prime numbers. I practically get off to them. I feel like there is a simple way to find factors and I feel like I&amp;#39;m going to find it. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bgtyy", "flair_text": null, "created": 1354688969.0, "created_utc": 1354685369.0, "num_reports": null}], "score": 125, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 176, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/143mu2/whats_the_most_fascinating_computational_concept/", "has_more_comments": false, "name": "t3_143mu2", "created": 1354363791.0, "url": "http://www.reddit.com/r/compsci/comments/143mu2/whats_the_most_fascinating_computational_concept/", "author_flair_text": null, "author": "dontFeelLikeDancing", "created_utc": 1354363791.0, "link_flair_text": null, "media": null, "num_reports": null}, "202": {"domain": "pltgames.com", "link_flair_class": null, "banned_by": null, "downvotes": 11, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "1437bc", "clicked": false, "title": "December PLT Games Challenge - Turing Tarpits", "num_comments": 3, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1437bc", "children": [], "author": "JD557", "id": "c7b9zy6", "parent_id": "t3_1437bc", "score": 0, "approved_by": null, "upvotes": 2, "body": "My submition: https://github.com/JD557/Wolf\n\nI'm afraid it might be a little bit too powerful for a Turing Tarpit. Do you guys think I should remove the call stack (C and P commands)?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My submition: &lt;a href=\"https://github.com/JD557/Wolf\"&gt;https://github.com/JD557/Wolf&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m afraid it might be a little bit too powerful for a Turing Tarpit. Do you guys think I should remove the call stack (C and P commands)?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7b9zy6", "flair_text": null, "created": 1354664729.0, "created_utc": 1354661129.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1437bc", "children": [], "author": "jhartwell", "id": "c7bz4ss", "parent_id": "t3_1437bc", "score": 0, "approved_by": null, "upvotes": 2, "body": "Here is my entry: [PunchCard](https://github.com/jhartwell/PunchCard). It is the ScanTron of programming languages. You have one \"operator\" and the location it is placed determines what happens. The memory model is similar to Brainfuck, cell based in an array, however, PunchCaArd will loop back through the memory.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here is my entry: &lt;a href=\"https://github.com/jhartwell/PunchCard\"&gt;PunchCard&lt;/a&gt;. It is the ScanTron of programming languages. You have one &amp;quot;operator&amp;quot; and the location it is placed determines what happens. The memory model is similar to Brainfuck, cell based in an array, however, PunchCaArd will loop back through the memory.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bz4ss", "flair_text": null, "created": 1354767297.0, "created_utc": 1354763697.0, "num_reports": null}], "score": 35, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 46, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/1437bc/december_plt_games_challenge_turing_tarpits/", "has_more_comments": false, "name": "t3_1437bc", "created": 1354334514.0, "url": "http://pltgames.com/", "author_flair_text": null, "author": "jhartwell", "created_utc": 1354334514.0, "link_flair_text": null, "media": null, "num_reports": null}, "203": {"domain": "youtube.com", "link_flair_class": null, "banned_by": null, "downvotes": 31, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "141d58", "clicked": false, "title": "Timelapse Writing of a CS Research Paper", "num_comments": 39, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_141d58", "children": [], "author": "b110100100", "id": "c7911ef", "parent_id": "t3_141d58", "score": 0, "approved_by": null, "upvotes": 17, "body": "Do we get to read the paper?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Do we get to read the paper?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7911ef", "flair_text": null, "created": 1354263226.0, "created_utc": 1354259626.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_141d58", "children": [], "author": "mumrah", "id": "c794doo", "parent_id": "t3_141d58", "score": 0, "approved_by": null, "upvotes": 18, "body": "I'd say more like \"time lapse of typesetting a CS paper\"", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d say more like &amp;quot;time lapse of typesetting a CS paper&amp;quot;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c794doo", "flair_text": null, "created": 1354290007.0, "created_utc": 1354286407.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_141d58", "children": [], "author": "KalimasPinky", "id": "c791f2d", "parent_id": "t3_141d58", "score": 0, "approved_by": null, "upvotes": 6, "body": "I am wondering what was used to write this paper. Was it word? pages? or Latex? If if it was Tex how was the time lapse captured?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I am wondering what was used to write this paper. Was it word? pages? or Latex? If if it was Tex how was the time lapse captured?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c791f2d", "flair_text": null, "created": 1354265843.0, "created_utc": 1354262243.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_141d58", "children": [], "author": "bw0", "id": "c7942k7", "parent_id": "t3_141d58", "score": 0, "approved_by": null, "upvotes": 10, "body": "The music makes it look like something tragic is about to happen while you write.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The music makes it look like something tragic is about to happen while you write.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7942k7", "flair_text": null, "created": 1354288486.0, "created_utc": 1354284886.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_141d58", "children": [], "author": "genunix", "id": "c79526p", "parent_id": "t3_141d58", "score": 0, "approved_by": null, "upvotes": 5, "body": "Scumbag latex.  Delete one line and suddenly the paper is half a page shorter.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Scumbag latex.  Delete one line and suddenly the paper is half a page shorter.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79526p", "flair_text": null, "created": 1354293716.0, "created_utc": 1354290116.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_141d58", "children": [], "author": "mepcotterell", "id": "c795uff", "parent_id": "t3_141d58", "score": 0, "approved_by": null, "upvotes": 3, "body": "This is pretty cool. I'd be interested in the script that does that this, using LaTeX.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is pretty cool. I&amp;#39;d be interested in the script that does that this, using LaTeX.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c795uff", "flair_text": null, "created": 1354296693.0, "created_utc": 1354293093.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_141d58", "children": [], "author": "MeowMeowFuckingMeow", "id": "c79azsw", "parent_id": "t3_141d58", "score": 0, "approved_by": null, "upvotes": 2, "body": "Nice curves.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nice curves.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79azsw", "flair_text": null, "created": 1354314517.0, "created_utc": 1354310917.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_141d58", "children": [], "author": "metabrain", "id": "c7bkqkn", "parent_id": "t3_141d58", "score": 0, "approved_by": null, "upvotes": 1, "body": "Please post the script or make itmopen source!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please post the script or make itmopen source!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bkqkn", "flair_text": null, "created": 1354718127.0, "created_utc": 1354714527.0, "num_reports": null}], "score": 146, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 177, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"http://www.youtube.com/embed/hNENiG7LAnc?fs=1&amp;feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/141d58/timelapse_writing_of_a_cs_research_paper/", "has_more_comments": false, "name": "t3_141d58", "created": 1354251433.0, "url": "http://youtube.com/watch?v=hNENiG7LAnc", "author_flair_text": null, "author": "tyrial", "created_utc": 1354251433.0, "link_flair_text": null, "media": {"type": "youtube.com", "oembed": {"provider_url": "http://www.youtube.com/", "description": "I saved several versions while writing a paper submitted to the computer science conference, \"World Wide Web.\" This resulted in 463 intermediate versions of the paper. I stitched all of the versions together into a video. This is the result.", "title": "Timelapse Writing of a Research Paper", "url": "http://www.youtube.com/watch?v=hNENiG7LAnc", "author_name": "timothyweninger", "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"http://www.youtube.com/embed/hNENiG7LAnc?fs=1&amp;feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "version": "1.0", "provider_name": "YouTube", "thumbnail_url": "http://i1.ytimg.com/vi/hNENiG7LAnc/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "http://www.youtube.com/user/timothyweninger"}}, "num_reports": null}, "204": {"domain": "canada.com", "link_flair_class": null, "banned_by": null, "downvotes": 21, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "141skb", "clicked": false, "title": "Canadian scientists create a functioning, virtual brain", "num_comments": 4, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_141skb", "children": [], "author": "cypherx", "id": "c798zxa", "parent_id": "t3_141skb", "score": 0, "approved_by": null, "upvotes": 21, "body": "Broad point: Making models of the brain is always an easy way to score PR/news coverage but never seems to amount to much insight or increased understanding. We've had maps of the full connectivity of all 302 neurons in C. Elegans for decades now, and still we can't make anything like a compelling simulation of the behavior of a nematode. It's not clear to me why scaling up this approach to human-sized brains (where the connectivity/architecture is much less understood) will do any better. \n\nSpecific point: The paper claims 94% accuracy on MNIST digit recognition (for comparison, a vanilla SVM with gaussian kernel gets about 98.6%). I couldn't, however, figure out how they trained their 'brain': where does the error or label signal go into? What sort of learning rule is used? It seems implausible to make a \"biological\" brain receive constant error updates for each prediction (the way a supervised learning algorithm does). \n\nedit: Digging through their [supplemental materials](http://www.sciencemag.org/content/suppl/2012/11/28/338.6111.1202.DC1/1225266.Eliasmith.SM.pdf) I suspect that a lot of the heavy lifting is being done by ordinary machine learning techniques (an [RBM](http://deeplearning.net/tutorial/rbm.html) for their \"visual cortex\" and least squares optimization in place of real neuroplasticity). Can someone who knows more about this field or particular work confirm? ", "edited": 1354304794.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Broad point: Making models of the brain is always an easy way to score PR/news coverage but never seems to amount to much insight or increased understanding. We&amp;#39;ve had maps of the full connectivity of all 302 neurons in C. Elegans for decades now, and still we can&amp;#39;t make anything like a compelling simulation of the behavior of a nematode. It&amp;#39;s not clear to me why scaling up this approach to human-sized brains (where the connectivity/architecture is much less understood) will do any better. &lt;/p&gt;\n\n&lt;p&gt;Specific point: The paper claims 94% accuracy on MNIST digit recognition (for comparison, a vanilla SVM with gaussian kernel gets about 98.6%). I couldn&amp;#39;t, however, figure out how they trained their &amp;#39;brain&amp;#39;: where does the error or label signal go into? What sort of learning rule is used? It seems implausible to make a &amp;quot;biological&amp;quot; brain receive constant error updates for each prediction (the way a supervised learning algorithm does). &lt;/p&gt;\n\n&lt;p&gt;edit: Digging through their &lt;a href=\"http://www.sciencemag.org/content/suppl/2012/11/28/338.6111.1202.DC1/1225266.Eliasmith.SM.pdf\"&gt;supplemental materials&lt;/a&gt; I suspect that a lot of the heavy lifting is being done by ordinary machine learning techniques (an &lt;a href=\"http://deeplearning.net/tutorial/rbm.html\"&gt;RBM&lt;/a&gt; for their &amp;quot;visual cortex&amp;quot; and least squares optimization in place of real neuroplasticity). Can someone who knows more about this field or particular work confirm? &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c798zxa", "flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "created": 1354307537.0, "created_utc": 1354303937.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_141skb", "children": [], "author": "genunix", "id": "c794b8p", "parent_id": "t3_141skb", "score": 0, "approved_by": null, "upvotes": 9, "body": "Link to publication: http://www.sciencemag.org/content/338/6111/1202\n\nPDF here: http://www.filedropper.com/eliasmith12", "edited": 1354286515.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Link to publication: &lt;a href=\"http://www.sciencemag.org/content/338/6111/1202\"&gt;http://www.sciencemag.org/content/338/6111/1202&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;PDF here: &lt;a href=\"http://www.filedropper.com/eliasmith12\"&gt;http://www.filedropper.com/eliasmith12&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c794b8p", "flair_text": null, "created": 1354289680.0, "created_utc": 1354286080.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_141skb", "children": [], "author": "Choreographed", "id": "c7ctpst", "parent_id": "t3_141skb", "score": 0, "approved_by": null, "upvotes": 1, "body": "What they omitted in the report: The brain was modeled on the brain of a human with anencephaly.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What they omitted in the report: The brain was modeled on the brain of a human with anencephaly.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ctpst", "flair_text": null, "created": 1354909866.0, "created_utc": 1354906266.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_141skb", "children": [], "author": "gigitrix", "id": "c79gjdm", "parent_id": "t3_141skb", "score": 0, "approved_by": null, "upvotes": 4, "body": "Oh, please.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Oh, please.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79gjdm", "flair_text": null, "created": 1354338358.0, "created_utc": 1354334758.0, "num_reports": null}], "score": 27, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 48, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/141skb/canadian_scientists_create_a_functioning_virtual/", "has_more_comments": false, "name": "t3_141skb", "created": 1354279647.0, "url": "http://www.canada.com/news/Canadian+scientists+create+functioning+virtual+brain/7628440/story.html", "author_flair_text": null, "author": "szza", "created_utc": 1354279647.0, "link_flair_text": null, "media": null, "num_reports": null}, "205": {"domain": "techvyom.com", "link_flair_class": null, "banned_by": null, "downvotes": 34, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13zo4y", "clicked": false, "title": "10 Free online resources for learning Algorithms and Data Structures", "num_comments": 5, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_13zo4y", "children": [], "author": "nitram9", "id": "c78qkl1", "parent_id": "t3_13zo4y", "score": 0, "approved_by": null, "upvotes": 9, "body": "haven't actually read it but I bookmarked this a while back \n\nhttp://www.cs.berkeley.edu/~vazirani/algorithms.html", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;haven&amp;#39;t actually read it but I bookmarked this a while back &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.cs.berkeley.edu/%7Evazirani/algorithms.html\"&gt;http://www.cs.berkeley.edu/~vazirani/algorithms.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78qkl1", "flair_text": null, "created": 1354223198.0, "created_utc": 1354219598.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13zo4y", "children": [], "author": "iamsmrtk", "id": "c78qwmr", "parent_id": "t3_13zo4y", "score": 0, "approved_by": null, "upvotes": 2, "body": "Awesome, I was going to do the Stanford one through coursera, now I don't have to wait until January!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Awesome, I was going to do the Stanford one through coursera, now I don&amp;#39;t have to wait until January!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78qwmr", "flair_text": null, "created": 1354224286.0, "created_utc": 1354220686.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_13zo4y", "children": [], "author": "quegcipay", "id": "c78tza6", "parent_id": "t3_13zo4y", "score": 0, "approved_by": null, "upvotes": 3, "body": "Yes! Precisely what I was looking for. Thank you. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes! Precisely what I was looking for. Thank you. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78tza6", "flair_text": null, "created": 1354234200.0, "created_utc": 1354230600.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13zo4y", "children": [], "author": "jazz2600", "id": "c7c3jd3", "parent_id": "t3_13zo4y", "score": 0, "approved_by": null, "upvotes": 1, "body": "Just my luck, at the end of the semester that I take my Data Structures class.\n\nHopefully they go more in depth or explain the concepts better than my professor.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just my luck, at the end of the semester that I take my Data Structures class.&lt;/p&gt;\n\n&lt;p&gt;Hopefully they go more in depth or explain the concepts better than my professor.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7c3jd3", "flair_text": null, "created": 1354787177.0, "created_utc": 1354783577.0, "num_reports": null}], "score": 176, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 210, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/13zo4y/10_free_online_resources_for_learning_algorithms/", "has_more_comments": false, "name": "t3_13zo4y", "created": 1354192598.0, "url": "http://www.techvyom.com/free-online-resources-learning-algorithms-data-structures.html", "author_flair_text": null, "author": "chankya25", "created_utc": 1354192598.0, "link_flair_text": null, "media": null, "num_reports": null}, "206": {"domain": "youtube.com", "link_flair_class": null, "banned_by": null, "downvotes": 6, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13zasy", "clicked": false, "title": "Discrete Differential Geometry - Helping Machines (and People) Think Clearly about Shape", "num_comments": 3, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_13zasy", "children": [], "author": "cypherx", "id": "c79y28c", "parent_id": "t3_13zasy", "score": 0, "approved_by": null, "upvotes": 4, "body": "I'm really disappointed this isn't getting voted higher--- I think it's a well delivered lecture about a really fascinating topic with pretty visualizations. What more can you ask for? ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m really disappointed this isn&amp;#39;t getting voted higher--- I think it&amp;#39;s a well delivered lecture about a really fascinating topic with pretty visualizations. What more can you ask for? &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79y28c", "flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "created": 1354438178.0, "created_utc": 1354434578.0, "num_reports": null}], "score": 13, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 19, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"http://www.youtube.com/embed/Mcal5Cy7r4E?fs=1&amp;feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/13zasy/discrete_differential_geometry_helping_machines/", "has_more_comments": false, "name": "t3_13zasy", "created": 1354167787.0, "url": "http://www.youtube.com/watch?v=Mcal5Cy7r4E", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1354167787.0, "link_flair_text": null, "media": {"type": "youtube.com", "oembed": {"provider_url": "http://www.youtube.com/", "description": "(For more information, see: http://www.cs.caltech.edu/~keenan) The world around us is full of shapes: airplane wings and cell phones, brain tumors and rising loaves of bread, fossil records and freeform architectural surfaces. To a large extent, our ability to master these domains is limited by our capacity to design, process, and analyze geometry.", "title": "Discrete Differential Geometry - Helping Machines (and People) Think Clearly about Shape", "url": "http://www.youtube.com/watch?v=Mcal5Cy7r4E", "author_name": "keenancrane", "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"http://www.youtube.com/embed/Mcal5Cy7r4E?fs=1&amp;feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "version": "1.0", "provider_name": "YouTube", "thumbnail_url": "http://i2.ytimg.com/vi/Mcal5Cy7r4E/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "http://www.youtube.com/user/keenancrane"}}, "num_reports": null}, "207": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 14, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m a junior comp sci major at a small liberal arts college. Recently, I&amp;#39;ve found that my notes for upper-level com sci courses are inadequate, and often don&amp;#39;t capture the essential parts of topics in these courses. Generally, I just copy (with pen and paper) what the professor writes on the board, verbatim. I was wondering if there were any better strategies for note taking, be they specific to comp sci courses or not. Any advice on the organization of notes would also be greatly appreciated.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm a junior comp sci major at a small liberal arts college. Recently, I've found that my notes for upper-level com sci courses are inadequate, and often don't capture the essential parts of topics in these courses. Generally, I just copy (with pen and paper) what the professor writes on the board, verbatim. I was wondering if there were any better strategies for note taking, be they specific to comp sci courses or not. Any advice on the organization of notes would also be greatly appreciated.", "saved": false, "id": "13zake", "clicked": false, "title": "Any advice on note taking in comp sci courses?", "num_comments": 39, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_13zake", "children": [], "author": "mgob", "id": "c78hine", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 38, "body": "I used to write down everything verbatim, but I found that I was missing key parts of lecture because I was trying to scribble everything down before the slide changed rather than paying attention to what was being said *about* that slide. Since my lecture slides get posted online in all of my classes, I rarely write down what's on them anymore, unless it requires explanations. I usually just sit and pay close attention rather than spend my time writing and missing what's being lectured. I'll try to write down an idea or two per slide  or every 30 seconds or so but in my own words - quickly taking my understanding of the material and getting it down to help remember it. \n\nHope this helps.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I used to write down everything verbatim, but I found that I was missing key parts of lecture because I was trying to scribble everything down before the slide changed rather than paying attention to what was being said &lt;em&gt;about&lt;/em&gt; that slide. Since my lecture slides get posted online in all of my classes, I rarely write down what&amp;#39;s on them anymore, unless it requires explanations. I usually just sit and pay close attention rather than spend my time writing and missing what&amp;#39;s being lectured. I&amp;#39;ll try to write down an idea or two per slide  or every 30 seconds or so but in my own words - quickly taking my understanding of the material and getting it down to help remember it. &lt;/p&gt;\n\n&lt;p&gt;Hope this helps.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78hine", "flair_text": null, "created": 1354177732.0, "created_utc": 1354174132.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_13zake", "children": [], "author": "albenesi", "id": "c78hmcd", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 17, "body": "If the teacher uses slides, try getting the slides before the lesson and writing on top of / next to the slides any additional notes. \n\nBesides that, you really just need to figure out which bits are the most important. Things you'll ACTUALLY need to look back on later. Maybe before writing something down think to yourself: will this be something I won't look at a second time?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If the teacher uses slides, try getting the slides before the lesson and writing on top of / next to the slides any additional notes. &lt;/p&gt;\n\n&lt;p&gt;Besides that, you really just need to figure out which bits are the most important. Things you&amp;#39;ll ACTUALLY need to look back on later. Maybe before writing something down think to yourself: will this be something I won&amp;#39;t look at a second time?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78hmcd", "flair_text": null, "created": 1354178465.0, "created_utc": 1354174865.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_13zake", "children": [], "author": "reParaoh", "id": "c78hvg8", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 13, "body": "I dont take notes. I listen in class and do my homework extremely well.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I dont take notes. I listen in class and do my homework extremely well.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78hvg8", "flair_text": null, "created": 1354180404.0, "created_utc": 1354176804.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13zake", "children": [], "author": "craiig", "id": "c78i0mj", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 13, "body": "Try taking less notes. Copying everything down can take up a lot of time you should be spending listening and understanding. Once you understand what a professor is saying, it becomes easier to decide what needs to get written down. For starters, you might want to try to write nothing down unless you know it can't be found in the slides/notes.\n\nInstead of taking notes, try to think of a question to ask about the material. Try thinking through a particular case where the idea might not work, or where it would work best, or maybe another application for the same idea. Most of the time you'll be able to answer those questions in your head without asking the prof, other times you'll need to ask.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Try taking less notes. Copying everything down can take up a lot of time you should be spending listening and understanding. Once you understand what a professor is saying, it becomes easier to decide what needs to get written down. For starters, you might want to try to write nothing down unless you know it can&amp;#39;t be found in the slides/notes.&lt;/p&gt;\n\n&lt;p&gt;Instead of taking notes, try to think of a question to ask about the material. Try thinking through a particular case where the idea might not work, or where it would work best, or maybe another application for the same idea. Most of the time you&amp;#39;ll be able to answer those questions in your head without asking the prof, other times you&amp;#39;ll need to ask.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78i0mj", "flair_text": null, "created": 1354181614.0, "created_utc": 1354178014.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_13zake", "children": [], "author": "dsampson92", "id": "c78hydg", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 7, "body": "99.9% or more of what your professor tells you can be found on the internet.  Now, I am not telling you to skip lectures and surf the web, but if you are having trouble getting everything down, take notes on what specific topics the professor is explaining, rather than trying to cram in the actual explanation.  With a suitably thorough description of what the professor is trying to explain, you can easily go find an explanation in your study time.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;99.9% or more of what your professor tells you can be found on the internet.  Now, I am not telling you to skip lectures and surf the web, but if you are having trouble getting everything down, take notes on what specific topics the professor is explaining, rather than trying to cram in the actual explanation.  With a suitably thorough description of what the professor is trying to explain, you can easily go find an explanation in your study time.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78hydg", "flair_text": null, "created": 1354181080.0, "created_utc": 1354177480.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13zake", "children": [], "author": "Kushali", "id": "c78i0hb", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 6, "body": "Without an example of something you've missed or the types of classes you are talking about (algs? math? operating systems?) its hard to give specific tips but here are some guidelines I used:\n\n* Write down any proofs, derivations, definitions, formulas, and the meaning of any acronyms. Include an example, running time, name etc if you can. \n* Copy any example problems the professor walks through. You want enough notes that you can follow the same steps on your own later. \n* If the professor introduces any crazy math symbols copy them down with a note about what they mean.\n* If the professor repeats a term/concept/phrase more than twice in a lecture consider writing it down. The professor thinks its important and/or difficult.\n\nThat said I took almost no notes during my CS classes. I would have taken some in classes like algs but the professor provided print outs of the slides and I amend them as he went.\n\nI found it helpful to start my homework as soon as possible after class. I usually couldn't start coding right away but I'd read over the assignment and jot down some notes about what algorithms to use etc. I'd also double check that my notes had everything while the lecture was still fresh. ", "edited": 1354178271.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Without an example of something you&amp;#39;ve missed or the types of classes you are talking about (algs? math? operating systems?) its hard to give specific tips but here are some guidelines I used:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Write down any proofs, derivations, definitions, formulas, and the meaning of any acronyms. Include an example, running time, name etc if you can. &lt;/li&gt;\n&lt;li&gt;Copy any example problems the professor walks through. You want enough notes that you can follow the same steps on your own later. &lt;/li&gt;\n&lt;li&gt;If the professor introduces any crazy math symbols copy them down with a note about what they mean.&lt;/li&gt;\n&lt;li&gt;If the professor repeats a term/concept/phrase more than twice in a lecture consider writing it down. The professor thinks its important and/or difficult.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;That said I took almost no notes during my CS classes. I would have taken some in classes like algs but the professor provided print outs of the slides and I amend them as he went.&lt;/p&gt;\n\n&lt;p&gt;I found it helpful to start my homework as soon as possible after class. I usually couldn&amp;#39;t start coding right away but I&amp;#39;d read over the assignment and jot down some notes about what algorithms to use etc. I&amp;#39;d also double check that my notes had everything while the lecture was still fresh. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78i0hb", "flair_text": null, "created": 1354181578.0, "created_utc": 1354177978.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13zake", "children": [], "author": "rahmu", "id": "c78jl0y", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 3, "body": "If you're a fast typist and you're (willing to get) familiar with emacs, you should take a look at [Org mode](http://orgmode.org/). In itself it won't resolve all your note-taking issues, much like any tool won't magically solve all your problems.\n\nThe easiest way to describe Org mode is \"a set of functions available inside your text editor that help you turn random notes scribbled down on an empty sheet into a structured document\".\n\nMy experience has been very pleasant, the functions are easy to use and make a lot of sense.\n\nA couple of things to make the experience even better:\n\n - Learn to use emacs. \n - Learn to touch type.\n\nMy post is not meant to contradict the other approaches proposed here, but rather complement them. emacs + org-mode has proven more pleasant to me than my long time partners: the pen and the paper.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you&amp;#39;re a fast typist and you&amp;#39;re (willing to get) familiar with emacs, you should take a look at &lt;a href=\"http://orgmode.org/\"&gt;Org mode&lt;/a&gt;. In itself it won&amp;#39;t resolve all your note-taking issues, much like any tool won&amp;#39;t magically solve all your problems.&lt;/p&gt;\n\n&lt;p&gt;The easiest way to describe Org mode is &amp;quot;a set of functions available inside your text editor that help you turn random notes scribbled down on an empty sheet into a structured document&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;My experience has been very pleasant, the functions are easy to use and make a lot of sense.&lt;/p&gt;\n\n&lt;p&gt;A couple of things to make the experience even better:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Learn to use emacs. &lt;/li&gt;\n&lt;li&gt;Learn to touch type.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;My post is not meant to contradict the other approaches proposed here, but rather complement them. emacs + org-mode has proven more pleasant to me than my long time partners: the pen and the paper.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78jl0y", "flair_text": null, "created": 1354196980.0, "created_utc": 1354193380.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13zake", "children": [], "author": "DerP00", "id": "c78hmrt", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 2, "body": "I would say write down what you think you'll forget. And listen to everything else. You can always use google for your questions.\r", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I would say write down what you think you&amp;#39;ll forget. And listen to everything else. You can always use google for your questions.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78hmrt", "flair_text": null, "created": 1354178551.0, "created_utc": 1354174951.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13zake", "children": [], "author": "KalimasPinky", "id": "c78hqqp", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 2, "body": "I just write down what is covered like which algorithms or topics. I have notes from lectures that are 4 lines. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I just write down what is covered like which algorithms or topics. I have notes from lectures that are 4 lines. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78hqqp", "flair_text": null, "created": 1354179373.0, "created_utc": 1354175773.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13zake", "children": [], "author": "disinterested_hacker", "id": "c78hxrp", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 2, "body": "It's been a few years, but I recall my experience varying from professor to professor &amp; class to class. For some professors I wrote down everything and for others I hardly wrote anything at all, just listened and noted a few references. I usually started somewhere in the middle and as the semester progressed I would ramp up or relax my note taking in any given class. I can't really offer a comp sci note taking panacea. It took a bit of experimentation on my part. Be dynamic.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s been a few years, but I recall my experience varying from professor to professor &amp;amp; class to class. For some professors I wrote down everything and for others I hardly wrote anything at all, just listened and noted a few references. I usually started somewhere in the middle and as the semester progressed I would ramp up or relax my note taking in any given class. I can&amp;#39;t really offer a comp sci note taking panacea. It took a bit of experimentation on my part. Be dynamic.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78hxrp", "flair_text": null, "created": 1354180938.0, "created_utc": 1354177338.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13zake", "children": [], "author": "bchurchill", "id": "c78j9y4", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 2, "body": "I'm a Ph.D. student in computer science at a large school.  I find that usually it's best to listen carefully before taking notes.  In lecture, a lot of information is presented, but usually there are only a few important points that they really want you to learn.  You can get details from the internet or the textbook later.\n\nIn practice, this means that you actually should do almost the opposite: instead of copying down what's on the board, listen carefully.  Copy down anything the professor says that sounds important or conceptually significant.  You will find that you need to write less, which allows you to pay more attention to what's going on.\n\nAs far as organization goes, I recommend the KISS (keep it simple, silly) approach.  Just date your page and take notes cronologically.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m a Ph.D. student in computer science at a large school.  I find that usually it&amp;#39;s best to listen carefully before taking notes.  In lecture, a lot of information is presented, but usually there are only a few important points that they really want you to learn.  You can get details from the internet or the textbook later.&lt;/p&gt;\n\n&lt;p&gt;In practice, this means that you actually should do almost the opposite: instead of copying down what&amp;#39;s on the board, listen carefully.  Copy down anything the professor says that sounds important or conceptually significant.  You will find that you need to write less, which allows you to pay more attention to what&amp;#39;s going on.&lt;/p&gt;\n\n&lt;p&gt;As far as organization goes, I recommend the KISS (keep it simple, silly) approach.  Just date your page and take notes cronologically.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78j9y4", "flair_text": null, "created": 1354194602.0, "created_utc": 1354191002.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13zake", "children": [], "author": "Dick_Justice", "id": "c78jy9c", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 1, "body": "I have some general tips that apply to all courses but it seemed especially useful in CS ones.\n\nTake fewer notes, get slides (if there are some), ask questions (try to understand in class, if possible), **start on homework right after class**.  If you're really adamant on capturing the lecture, purchase a small audio recording device and ask to place it at the front of the room.  Ask if there are [Tegrity](http://www.tegrity.com/) lectures available (may not be if it's a smaller school).\n\nTruly though, the best (and probably most difficult to do) is to review and apply the material directly after class.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I have some general tips that apply to all courses but it seemed especially useful in CS ones.&lt;/p&gt;\n\n&lt;p&gt;Take fewer notes, get slides (if there are some), ask questions (try to understand in class, if possible), &lt;strong&gt;start on homework right after class&lt;/strong&gt;.  If you&amp;#39;re really adamant on capturing the lecture, purchase a small audio recording device and ask to place it at the front of the room.  Ask if there are &lt;a href=\"http://www.tegrity.com/\"&gt;Tegrity&lt;/a&gt; lectures available (may not be if it&amp;#39;s a smaller school).&lt;/p&gt;\n\n&lt;p&gt;Truly though, the best (and probably most difficult to do) is to review and apply the material directly after class.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78jy9c", "flair_text": null, "created": 1354199422.0, "created_utc": 1354195822.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13zake", "children": [], "author": "grelphy", "id": "c78m9id", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 1, "body": "I paraphrase: write the content of the lecture/slides in my own words/notation. I seldom copy down proofs or verbatim \"look-it-up\" information, since spending time on that distracts from the content of the lecture and it can be researched easily. If I can't keep up paraphrasing, the lecture's moving too fast or is too complicated for me to follow; I stop note-taking, pay attention and try to catch up, and (ideally) later learn the material from the textbook and paraphrase it from there on my own time or (more probably) struggle to figure it out to finish problem sets.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I paraphrase: write the content of the lecture/slides in my own words/notation. I seldom copy down proofs or verbatim &amp;quot;look-it-up&amp;quot; information, since spending time on that distracts from the content of the lecture and it can be researched easily. If I can&amp;#39;t keep up paraphrasing, the lecture&amp;#39;s moving too fast or is too complicated for me to follow; I stop note-taking, pay attention and try to catch up, and (ideally) later learn the material from the textbook and paraphrase it from there on my own time or (more probably) struggle to figure it out to finish problem sets.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78m9id", "flair_text": null, "created": 1354209381.0, "created_utc": 1354205781.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13zake", "children": [], "author": "nonconvergent", "id": "c78q6s5", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 1, "body": "Rigorous notes are not as helpful as an understanding of the material.  I write notes to evoke my memory, take pictures of algorithms or code blocks with my camera phone, and just try to stay engaged.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Rigorous notes are not as helpful as an understanding of the material.  I write notes to evoke my memory, take pictures of algorithms or code blocks with my camera phone, and just try to stay engaged.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78q6s5", "flair_text": null, "created": 1354221972.0, "created_utc": 1354218372.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13zake", "children": [], "author": "danogburn", "id": "c7961we", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 2, "body": "the best strategy is to not take notes and just pay attention", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;the best strategy is to not take notes and just pay attention&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7961we", "flair_text": null, "created": 1354297410.0, "created_utc": 1354293810.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13zake", "children": [], "author": "Red_Raven", "id": "c79hoxj", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 1, "body": "You could always tape it with your laptop and a reverse facing web cam. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You could always tape it with your laptop and a reverse facing web cam. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c79hoxj", "flair_text": null, "created": 1354344228.0, "created_utc": 1354340628.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13zake", "children": [], "author": "shokodemon", "id": "c7b16va", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 1, "body": "read a book about the subject matter before going into the lecture - then just write the stuff that augments your current know how.\n\ncs lectures are often times surveys and/or extremely demanding - trying to keeping up with the horse may not be what you should be doing. you're better off sneaking into the race track a few hours before the race starts and run a good distance before the GO shots are heard. \n\n:}", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;read a book about the subject matter before going into the lecture - then just write the stuff that augments your current know how.&lt;/p&gt;\n\n&lt;p&gt;cs lectures are often times surveys and/or extremely demanding - trying to keeping up with the horse may not be what you should be doing. you&amp;#39;re better off sneaking into the race track a few hours before the race starts and run a good distance before the GO shots are heard. &lt;/p&gt;\n\n&lt;p&gt;:}&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7b16va", "flair_text": null, "created": 1354635031.0, "created_utc": 1354631431.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13zake", "children": [], "author": "nbtxdude", "id": "c7b5oa8", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 1, "body": "I record lectures and take notes using OneNote which will allow me to go back and listen to a particular point of a lecture if I missed something while making the notes.\n\nI take pretty poor notes in general, but I'll google something and put in additional information when I find it..", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I record lectures and take notes using OneNote which will allow me to go back and listen to a particular point of a lecture if I missed something while making the notes.&lt;/p&gt;\n\n&lt;p&gt;I take pretty poor notes in general, but I&amp;#39;ll google something and put in additional information when I find it..&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7b5oa8", "flair_text": null, "created": 1354651623.0, "created_utc": 1354648023.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13zake", "children": [], "author": "BumSkeeter", "id": "c7bgxe7", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 1, "body": "I personally like to listen to the lectures and maybe make a few mental notes of the overall feeling of whats being taught. I then go home and watch 3 or 4 youtube technical talks on the subject. I like to get the same information if various \"voices\" (different people) so that I can see the idea away from the i guess bias each person might put on it. (not exactly bias but how people say things). \n\nI go to an Ok college and feel that I get an idea of what to look up online from classes. I literally pay my professors to guide me on what to teach myself from online. Then I let the smarties at MIT blow my mind for 40min and get 100x more than my professor might tell me. And the stuff that is blown off by the MIT guy is the hardest stuff in my classes, so it makes what I'm studying in class seem easy. \n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I personally like to listen to the lectures and maybe make a few mental notes of the overall feeling of whats being taught. I then go home and watch 3 or 4 youtube technical talks on the subject. I like to get the same information if various &amp;quot;voices&amp;quot; (different people) so that I can see the idea away from the i guess bias each person might put on it. (not exactly bias but how people say things). &lt;/p&gt;\n\n&lt;p&gt;I go to an Ok college and feel that I get an idea of what to look up online from classes. I literally pay my professors to guide me on what to teach myself from online. Then I let the smarties at MIT blow my mind for 40min and get 100x more than my professor might tell me. And the stuff that is blown off by the MIT guy is the hardest stuff in my classes, so it makes what I&amp;#39;m studying in class seem easy. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bgxe7", "flair_text": null, "created": 1354689364.0, "created_utc": 1354685764.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13zake", "children": [], "author": "KptKrondog", "id": "c7cwoii", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 1, "body": "all of my teachers that used powerpoint put the slides up online...so I would bring a laptop if I could (didnt own one, so had to borrow my Mom's) and add notes to the slides.\n\nif there was no powerpoint, I just wrote it all down as best I could...or if the teacher didn't give us access to the powerpoint until after the class, I would write down the title of the slide and then take notes for slides...then to study, I'd go through the slides with my notes and read them both.\n\nreally depends on how you study. My studying was just reading my notes a few times or doing examples. I didn't have to spend hours and hours. my best way to study was to copy the parts from slides that were important to remember, the act of writing it down would help me remember it, and then before the test I would just re-read them a few times.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;all of my teachers that used powerpoint put the slides up online...so I would bring a laptop if I could (didnt own one, so had to borrow my Mom&amp;#39;s) and add notes to the slides.&lt;/p&gt;\n\n&lt;p&gt;if there was no powerpoint, I just wrote it all down as best I could...or if the teacher didn&amp;#39;t give us access to the powerpoint until after the class, I would write down the title of the slide and then take notes for slides...then to study, I&amp;#39;d go through the slides with my notes and read them both.&lt;/p&gt;\n\n&lt;p&gt;really depends on how you study. My studying was just reading my notes a few times or doing examples. I didn&amp;#39;t have to spend hours and hours. my best way to study was to copy the parts from slides that were important to remember, the act of writing it down would help me remember it, and then before the test I would just re-read them a few times.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cwoii", "flair_text": null, "created": 1354919658.0, "created_utc": 1354916058.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13zake", "children": [], "author": "phullolock", "id": "c7ew3zo", "parent_id": "t3_13zake", "score": 0, "approved_by": null, "upvotes": 1, "body": "I focused on what was said instead of what was on the slide. Grouped my notes by my professor's line of thought. Then after classes were done for the day I would look in my textbook for applicable pages/ paragraphs. If you're a fan of highlighting write the number of the page your note's topic appears on with it highlighted in a color unique to the page. So there is only a few locations marked with green on page 100 and your notes show the number 100 highlighted in green.     \n     \nFocus on concepts that a more difficult to understand for taking thorough notes. The things that make common sense in the course make a mention of, but take minimal notes. Some students in my class also used question asking to help them catch up in note taking during class.       \n         \nFor other ideas consult [Joker's pencil trick](http://www.youtube.com/watch?v=JO4s_XYh8v0&amp;t=15s)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I focused on what was said instead of what was on the slide. Grouped my notes by my professor&amp;#39;s line of thought. Then after classes were done for the day I would look in my textbook for applicable pages/ paragraphs. If you&amp;#39;re a fan of highlighting write the number of the page your note&amp;#39;s topic appears on with it highlighted in a color unique to the page. So there is only a few locations marked with green on page 100 and your notes show the number 100 highlighted in green.     &lt;/p&gt;\n\n&lt;p&gt;Focus on concepts that a more difficult to understand for taking thorough notes. The things that make common sense in the course make a mention of, but take minimal notes. Some students in my class also used question asking to help them catch up in note taking during class.       &lt;/p&gt;\n\n&lt;p&gt;For other ideas consult &lt;a href=\"http://www.youtube.com/watch?v=JO4s_XYh8v0&amp;amp;t=15s\"&gt;Joker&amp;#39;s pencil trick&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ew3zo", "flair_text": null, "created": 1355252006.0, "created_utc": 1355248406.0, "num_reports": null}], "score": 15, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 29, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13zake/any_advice_on_note_taking_in_comp_sci_courses/", "has_more_comments": false, "name": "t3_13zake", "created": 1354167526.0, "url": "http://www.reddit.com/r/compsci/comments/13zake/any_advice_on_note_taking_in_comp_sci_courses/", "author_flair_text": null, "author": "kimbra_plaza", "created_utc": 1354167526.0, "link_flair_text": null, "media": null, "num_reports": null}, "208": {"domain": "arxiv.org", "link_flair_class": null, "banned_by": null, "downvotes": 5, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13zcup", "clicked": false, "title": "Overview of deep neural networks and their connection to other machine learning techniques", "num_comments": 0, "comments": [], "score": 2, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 7, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/13zcup/overview_of_deep_neural_networks_and_their/", "has_more_comments": false, "name": "t3_13zcup", "created": 1354170180.0, "url": "http://arxiv.org/abs/1206.5538", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1354170180.0, "link_flair_text": null, "media": null, "num_reports": null}, "209": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 8, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;..does anyone know where i can find it? \n(does this post belong to r/askcomputerscience? idk..)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "..does anyone know where i can find it? \n(does this post belong to r/askcomputerscience? idk..)", "saved": false, "id": "13yboi", "clicked": false, "title": "Looking for a good (if possible easy) explanation for the BDD Synthesis..", "num_comments": 5, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13yboi", "children": [], "author": "jaargon", "id": "c78eskg", "parent_id": "t3_13yboi", "score": 0, "approved_by": null, "upvotes": 3, "body": "I'm guessing you mean this kind of BDD: http://en.wikipedia.org/wiki/Binary_decision_diagram\n\nWhat's your question?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m guessing you mean this kind of BDD: &lt;a href=\"http://en.wikipedia.org/wiki/Binary_decision_diagram\"&gt;http://en.wikipedia.org/wiki/Binary_decision_diagram&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;What&amp;#39;s your question?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78eskg", "flair_text": null, "created": 1354163462.0, "created_utc": 1354159862.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13yboi", "children": [], "author": "exploding_nun", "id": "c78fgou", "parent_id": "t3_13yboi", "score": 0, "approved_by": null, "upvotes": 2, "body": "I found the lecture notes from Henrik Reif Andersen to be helpful:  http://www.itu.dk/courses/AVA/E2005/bdd-eap.pdf", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I found the lecture notes from Henrik Reif Andersen to be helpful:  &lt;a href=\"http://www.itu.dk/courses/AVA/E2005/bdd-eap.pdf\"&gt;http://www.itu.dk/courses/AVA/E2005/bdd-eap.pdf&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78fgou", "flair_text": null, "created": 1354166958.0, "created_utc": 1354163358.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13yboi", "children": [], "author": "foot33333", "id": "c78fpn1", "parent_id": "t3_13yboi", "score": 0, "approved_by": null, "upvotes": 3, "body": "I think you need to be more specific. By synthesis do you mean logic synthesis? Are you wondering how to map a function represented by a BDD to some netlist?  There is a wealth of research dealing with different synthesis algorithms based on BDDs.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think you need to be more specific. By synthesis do you mean logic synthesis? Are you wondering how to map a function represented by a BDD to some netlist?  There is a wealth of research dealing with different synthesis algorithms based on BDDs.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78fpn1", "flair_text": null, "created": 1354168083.0, "created_utc": 1354164483.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13yboi", "children": [], "author": "derphizzl", "id": "c78hlsy", "parent_id": "t3_13yboi", "score": 0, "approved_by": null, "upvotes": 2, "body": "thx for your replies!\nI guess i wasnt specific enough. By BDD synthesis i meant simplifying a given gate via OFT and than via BDD synthesis (desicion-tree, shannon expansion) to a new gate with only AND, OR and MUX! \n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;thx for your replies!\nI guess i wasnt specific enough. By BDD synthesis i meant simplifying a given gate via OFT and than via BDD synthesis (desicion-tree, shannon expansion) to a new gate with only AND, OR and MUX! &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78hlsy", "flair_text": null, "created": 1354178358.0, "created_utc": 1354174758.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13yboi", "children": [], "author": "tboneplayer", "id": "c78c5kq", "parent_id": "t3_13yboi", "score": 0, "approved_by": null, "upvotes": 2, "body": "Is the [Wikipedia article](http://en.wikipedia.org/wiki/Behavior-driven_development) helpful?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is the &lt;a href=\"http://en.wikipedia.org/wiki/Behavior-driven_development\"&gt;Wikipedia article&lt;/a&gt; helpful?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78c5kq", "flair_text": null, "created": 1354151804.0, "created_utc": 1354148204.0, "num_reports": null}], "score": 6, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 14, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13yboi/looking_for_a_good_if_possible_easy_explanation/", "has_more_comments": false, "name": "t3_13yboi", "created": 1354135912.0, "url": "http://www.reddit.com/r/compsci/comments/13yboi/looking_for_a_good_if_possible_easy_explanation/", "author_flair_text": null, "author": "derphizzl", "created_utc": 1354135912.0, "link_flair_text": null, "media": null, "num_reports": null}, "210": {"domain": "uhaweb.hartford.edu", "link_flair_class": null, "banned_by": null, "downvotes": 25, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13w07l", "clicked": false, "title": "For anyone interested in Artificial Neural Networks; here's an informative introductory paper written by my AI Professor.[PDF]", "num_comments": 6, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_13w07l", "children": [], "author": "holigen", "id": "c77s2dx", "parent_id": "t3_13w07l", "score": 0, "approved_by": null, "upvotes": 14, "body": "LaTeX &gt; Word", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;LaTeX &amp;gt; Word&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c77s2dx", "flair_text": null, "created": 1354063433.0, "created_utc": 1354059833.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 6, "link_id": "t3_13w07l", "children": [], "author": "cypherx", "id": "c77r2xe", "parent_id": "t3_13w07l", "score": 0, "approved_by": null, "upvotes": 20, "body": "This is an outdated presentation of neural networks-- I would recommend anyone interested in the field to check out the recent Coursera class or lecture slides from Geoff Hinton's intro classes. \n\nedit: apparently I use hyphens too much, also thanks to abyzmic for the links. ", "edited": 1354121002.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is an outdated presentation of neural networks-- I would recommend anyone interested in the field to check out the recent Coursera class or lecture slides from Geoff Hinton&amp;#39;s intro classes. &lt;/p&gt;\n\n&lt;p&gt;edit: apparently I use hyphens too much, also thanks to abyzmic for the links. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c77r2xe", "flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "created": 1354059997.0, "created_utc": 1354056397.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13w07l", "children": [], "author": "rogelius", "id": "c783p5h", "parent_id": "t3_13w07l", "score": 0, "approved_by": null, "upvotes": 1, "body": "Despite the \"out-dated\" representation, I felt it was useful to start with.  Thanks for sharing. :)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Despite the &amp;quot;out-dated&amp;quot; representation, I felt it was useful to start with.  Thanks for sharing. :)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c783p5h", "flair_text": null, "created": 1354124086.0, "created_utc": 1354120486.0, "num_reports": null}], "score": 97, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 122, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/13w07l/for_anyone_interested_in_artificial_neural/", "has_more_comments": false, "name": "t3_13w07l", "created": 1354045296.0, "url": "http://uhaweb.hartford.edu/compsci/nnintro.pdf", "author_flair_text": null, "author": "deusofnull", "created_utc": 1354045296.0, "link_flair_text": null, "media": null, "num_reports": null}, "211": {"domain": "reddit.com", "link_flair_class": null, "banned_by": null, "downvotes": 13, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13wfgc", "clicked": false, "title": "Cross-post from programming: CS in HS: Support CS education in high school!", "num_comments": 0, "comments": [], "score": 2, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 15, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/13wfgc/crosspost_from_programming_cs_in_hs_support_cs/", "has_more_comments": false, "name": "t3_13wfgc", "created": 1354058108.0, "url": "http://www.reddit.com/r/programming/comments/13w5dt/cs_in_hs_support_cs_education_in_high_school/", "author_flair_text": null, "author": "say_whattt_now", "created_utc": 1354058108.0, "link_flair_text": null, "media": null, "num_reports": null}, "212": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 7, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I found some videos a few months ago that had a free online book and video lectures that taught computer architecture. I believe it was an Israeli university. Does anyone know the website? I believe they build the whole computer from the ground up. The ALU, CPU, Registers etc... and teach assembly.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I found some videos a few months ago that had a free online book and video lectures that taught computer architecture. I believe it was an Israeli university. Does anyone know the website? I believe they build the whole computer from the ground up. The ALU, CPU, Registers etc... and teach assembly.", "saved": false, "id": "13ut2d", "clicked": false, "title": "Looking for computer architecture videos", "num_comments": 10, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13ut2d", "children": [], "author": "pnutzh4x0r", "id": "c77cv5o", "parent_id": "t3_13ut2d", "score": 0, "approved_by": null, "upvotes": 22, "body": "You are probably looking for: http://www.nand2tetris.org/", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You are probably looking for: &lt;a href=\"http://www.nand2tetris.org/\"&gt;http://www.nand2tetris.org/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c77cv5o", "flair_text": null, "created": 1353994038.0, "created_utc": 1353990438.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_13ut2d", "children": [], "author": "qwerty_nor", "id": "c77h56t", "parent_id": "t3_13ut2d", "score": 0, "approved_by": null, "upvotes": 4, "body": "I would suggest Coursera's [Computer Architecture course](https://www.coursera.org/course/comparch). ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I would suggest Coursera&amp;#39;s &lt;a href=\"https://www.coursera.org/course/comparch\"&gt;Computer Architecture course&lt;/a&gt;. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c77h56t", "flair_text": null, "created": 1354021474.0, "created_utc": 1354017874.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_13ut2d", "children": [], "author": "puddingpimp", "id": "c77gh1h", "parent_id": "t3_13ut2d", "score": 0, "approved_by": null, "upvotes": 5, "body": "Videos aren't the best way.\n\nThere is a lot to learn about computer architectures, and videos are a very slow way to absorb information. Fun and easy to concentrate on, but much slower than picking up a book and reading it.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Videos aren&amp;#39;t the best way.&lt;/p&gt;\n\n&lt;p&gt;There is a lot to learn about computer architectures, and videos are a very slow way to absorb information. Fun and easy to concentrate on, but much slower than picking up a book and reading it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c77gh1h", "flair_text": null, "created": 1354014958.0, "created_utc": 1354011358.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13ut2d", "children": [], "author": "ballinlikewat", "id": "c77j995", "parent_id": "t3_13ut2d", "score": 0, "approved_by": null, "upvotes": 1, "body": "You should use Andrew Tannebaum's MIC-1 architecture..   http://en.wikipedia.org/wiki/Andrew_S._Tanenbaum\n\nComputer Architecture at Purdue sucks...\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You should use Andrew Tannebaum&amp;#39;s MIC-1 architecture..   &lt;a href=\"http://en.wikipedia.org/wiki/Andrew_S._Tanenbaum\"&gt;http://en.wikipedia.org/wiki/Andrew_S._Tanenbaum&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Computer Architecture at Purdue sucks...&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c77j995", "flair_text": null, "created": 1354033563.0, "created_utc": 1354029963.0, "num_reports": null}], "score": 44, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 51, "hidden": false, "thumbnail": "", "edited": 1353990044.0, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13ut2d/looking_for_computer_architecture_videos/", "has_more_comments": false, "name": "t3_13ut2d", "created": 1353989489.0, "url": "http://www.reddit.com/r/compsci/comments/13ut2d/looking_for_computer_architecture_videos/", "author_flair_text": null, "author": "nlke182", "created_utc": 1353989489.0, "link_flair_text": null, "media": null, "num_reports": null}, "213": {"domain": "dynamicaspects.org", "link_flair_class": null, "banned_by": null, "downvotes": 2, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13vyvs", "clicked": false, "title": "Changing the past in open systems", "num_comments": 0, "comments": [], "score": 2, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 4, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/13vyvs/changing_the_past_in_open_systems/", "has_more_comments": false, "name": "t3_13vyvs", "created": 1354044145.0, "url": "http://dynamicaspects.org/blog/2012/08/15/changing-the-past-in-open-systems/", "author_flair_text": null, "author": "andreasw", "created_utc": 1354044145.0, "link_flair_text": null, "media": null, "num_reports": null}, "214": {"domain": "deixismagazine.org", "link_flair_class": null, "banned_by": null, "downvotes": 3, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13vqjf", "clicked": false, "title": "Dealing with the data deluge: embedded analytics help researchers understand results as they come in. crossposted to /r/computing", "num_comments": 0, "comments": [], "score": 1, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 4, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/13vqjf/dealing_with_the_data_deluge_embedded_analytics/", "has_more_comments": false, "name": "t3_13vqjf", "created": 1354036546.0, "url": "http://www.deixismagazine.org/2012/11/filling-in-the-blanks/", "author_flair_text": null, "author": "greenprius", "created_utc": 1354036546.0, "link_flair_text": null, "media": null, "num_reports": null}, "215": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 18, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello everyone, I just created &lt;a href=\"http://www.reddit.com/r/EDMit/\"&gt;EDMit&lt;/a&gt;, a subreddit dedicated to the application of computer science to the education domain.&lt;/p&gt;\n\n&lt;p&gt;Please subscribe and post if you are interested!&lt;/p&gt;\n\n&lt;p&gt;If you are particularly passionate about this idea, send me a PM and I will add you as a mod :) &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hello everyone, I just created [EDMit](http://www.reddit.com/r/EDMit/), a subreddit dedicated to the application of computer science to the education domain.\n\nPlease subscribe and post if you are interested!\n\nIf you are particularly passionate about this idea, send me a PM and I will add you as a mod :) ", "saved": false, "id": "13rous", "clicked": false, "title": "A new subreddit for educational data mining.", "num_comments": 6, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13rous", "children": [], "author": "JPSE", "id": "c76up9h", "parent_id": "t3_13rous", "score": 0, "approved_by": null, "upvotes": 4, "body": "That's awesome, I'm writing my undergraduate thesis (in Psychology) on something along the lines of human-computer interaction, I hope to learn and share with you guys there soon!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s awesome, I&amp;#39;m writing my undergraduate thesis (in Psychology) on something along the lines of human-computer interaction, I hope to learn and share with you guys there soon!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76up9h", "flair_text": null, "created": 1353913170.0, "created_utc": 1353909570.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 39, "link_id": "t3_13rous", "children": [], "author": "[deleted]", "id": "c76nu8l", "parent_id": "t3_13rous", "score": 0, "approved_by": null, "upvotes": 5, "body": "[deleted]", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76nu8l", "flair_text": null, "created": 1353886867.0, "created_utc": 1353883267.0, "num_reports": null}], "score": 44, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 62, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13rous/a_new_subreddit_for_educational_data_mining/", "has_more_comments": false, "name": "t3_13rous", "created": 1353869337.0, "url": "http://www.reddit.com/r/compsci/comments/13rous/a_new_subreddit_for_educational_data_mining/", "author_flair_text": null, "author": "virtuous_d", "created_utc": 1353869337.0, "link_flair_text": null, "media": null, "num_reports": null}, "216": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 13, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;As a hobby I&amp;#39;m considering building a program to simulate Monopoly games to test strategies. I know that there are many models out there that simply calculate the likelihood of landing on a particular space. My goal would be to build something a bit more detailed to gather some more interesting data about the game. I&amp;#39;d like to incorporate agent based learning into the model to test and develop strategies for playing. I&amp;#39;m wondering if anyone has seen a similar project done in the past. I spent about an hour searching on google and I found a couple of things:&lt;/p&gt;\n\n&lt;p&gt;*Monopoly Nerd&amp;#39;s blog:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://monopolynerd.wordpress.com/\"&gt;http://monopolynerd.wordpress.com/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This guy built a web-based simulator to produce winning percentages based on starting conditions.&lt;/p&gt;\n\n&lt;p&gt;*ESTIMATING THE PROBABILITY THAT THE GAME OF MONOPOLY NEVER ENDS&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.informs-sim.org/wsc09papers/036.pdf\"&gt;http://www.informs-sim.org/wsc09papers/036.pdf&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This is a paper that a couple of guys from Cornell wrote about their analysis on the game and determining the likelihood of having a game that &amp;quot;never ends&amp;quot;. The model they used had some severe limitations (only two players, limited to no trading, etc).&lt;/p&gt;\n\n&lt;p&gt;*Agent Based Simulation, Negotiation, and Strategy Optimization of Monopoly&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.tjhsst.edu/%7Erlatimer/techlab08/LoffredoPaperQ2-08.pdf\"&gt;http://www.tjhsst.edu/~rlatimer/techlab08/LoffredoPaperQ2-08.pdf&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;This is the only thing that comes close to what I want to do, but the paper is extremely vague as it doesn&amp;#39;t include any results so I don&amp;#39;t know if the project was even completed. There is no institution or organization listed but the author&amp;#39;s name is there.&lt;/p&gt;\n\n&lt;p&gt;Let me know if any of you have stumbled across something related to Monopoly simulations on the internet. I know it&amp;#39;s probably not likely but it&amp;#39;s worth a shot. Thanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "As a hobby I'm considering building a program to simulate Monopoly games to test strategies. I know that there are many models out there that simply calculate the likelihood of landing on a particular space. My goal would be to build something a bit more detailed to gather some more interesting data about the game. I'd like to incorporate agent based learning into the model to test and develop strategies for playing. I'm wondering if anyone has seen a similar project done in the past. I spent about an hour searching on google and I found a couple of things:\n\n*Monopoly Nerd's blog:\n\nhttp://monopolynerd.wordpress.com/\n\nThis guy built a web-based simulator to produce winning percentages based on starting conditions.\n\n*ESTIMATING THE PROBABILITY THAT THE GAME OF MONOPOLY NEVER ENDS\n\nhttp://www.informs-sim.org/wsc09papers/036.pdf\n\nThis is a paper that a couple of guys from Cornell wrote about their analysis on the game and determining the likelihood of having a game that \"never ends\". The model they used had some severe limitations (only two players, limited to no trading, etc).\n\n*Agent Based Simulation, Negotiation, and Strategy Optimization of Monopoly\n\nhttp://www.tjhsst.edu/~rlatimer/techlab08/LoffredoPaperQ2-08.pdf\n\nThis is the only thing that comes close to what I want to do, but the paper is extremely vague as it doesn't include any results so I don't know if the project was even completed. There is no institution or organization listed but the author's name is there.\n\nLet me know if any of you have stumbled across something related to Monopoly simulations on the internet. I know it's probably not likely but it's worth a shot. Thanks", "saved": false, "id": "13rmj6", "clicked": false, "title": "I'm interested in building a robust Monopoly board game simulator, anyone familiar with previous work done in this area, or if something similar already exists?", "num_comments": 19, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 9, "link_id": "t3_13rmj6", "children": [], "author": "bigstumpy", "id": "c76lbu8", "parent_id": "t3_13rmj6", "score": 0, "approved_by": null, "upvotes": 43, "body": "Don't forget to factor in the banker stealing from the bank", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Don&amp;#39;t forget to factor in the banker stealing from the bank&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76lbu8", "flair_text": null, "created": 1353877824.0, "created_utc": 1353874224.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_13rmj6", "children": [], "author": "krusta80", "id": "c76sgam", "parent_id": "t3_13rmj6", "score": 0, "approved_by": null, "upvotes": 21, "body": "I'd like to introduce myself to everyone on here.  My name is John Gruska, and I am the creator of the Monopoly Nerd blog over at Wordpress.\n\nThe Monopoly simulator that I have developed (and still am developing) was a direct result of my recent efforts to better quantify and map out a strategy that takes into account the situational nature of the game.  Like poker, Monopoly is a unique blend of chance and decision making.\n\nWhen researching the strategy and known mathematical models behind the game earlier this year, I found that beyond a relatively basic Markov Chain based approach to estimating long-term landing probability for each space, little had been done to take the intricacies of the game into account.\n\nThe most complex part of Monopoly lies within the various trading opportunities throughout the course of a game.  In my opinion, today's \"best\" Monopoly AI's pale in comparison to human players.  There is much room for improvement.\n\nDeveloping a relatively sophisticated Monopoly AI has been and continues to be a goal of mine, and I'd love to work and/or collaborate with anyone else interested.", "edited": 1353900698.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d like to introduce myself to everyone on here.  My name is John Gruska, and I am the creator of the Monopoly Nerd blog over at Wordpress.&lt;/p&gt;\n\n&lt;p&gt;The Monopoly simulator that I have developed (and still am developing) was a direct result of my recent efforts to better quantify and map out a strategy that takes into account the situational nature of the game.  Like poker, Monopoly is a unique blend of chance and decision making.&lt;/p&gt;\n\n&lt;p&gt;When researching the strategy and known mathematical models behind the game earlier this year, I found that beyond a relatively basic Markov Chain based approach to estimating long-term landing probability for each space, little had been done to take the intricacies of the game into account.&lt;/p&gt;\n\n&lt;p&gt;The most complex part of Monopoly lies within the various trading opportunities throughout the course of a game.  In my opinion, today&amp;#39;s &amp;quot;best&amp;quot; Monopoly AI&amp;#39;s pale in comparison to human players.  There is much room for improvement.&lt;/p&gt;\n\n&lt;p&gt;Developing a relatively sophisticated Monopoly AI has been and continues to be a goal of mine, and I&amp;#39;d love to work and/or collaborate with anyone else interested.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76sgam", "flair_text": null, "created": 1353904085.0, "created_utc": 1353900485.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_13rmj6", "children": [], "author": "Amndeep7", "id": "c76npjy", "parent_id": "t3_13rmj6", "score": 0, "approved_by": null, "upvotes": 5, "body": "Concerning your last link, TJHSST is a science and tech high school in Virginia.  What you're looking at is the paper created by a senior (of the class of 08 if I'm parsing the link right) after around 2 quarters of research.  ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Concerning your last link, TJHSST is a science and tech high school in Virginia.  What you&amp;#39;re looking at is the paper created by a senior (of the class of 08 if I&amp;#39;m parsing the link right) after around 2 quarters of research.  &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76npjy", "flair_text": null, "created": 1353886369.0, "created_utc": 1353882769.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13rmj6", "children": [], "author": "9us", "id": "c76rt0k", "parent_id": "t3_13rmj6", "score": 0, "approved_by": null, "upvotes": 3, "body": "This isn't really about Monopoly.  Try searching for board game strategy in general.\n\nMaybe this: http://www.amazon.com/Artificial-Intelligence-Games-Second-Edition/dp/0123747317/ref=sr_1_1?ie=UTF8&amp;qid=1353897720&amp;sr=8-1&amp;keywords=artificial+intelligence+for+games\n\nSpecifically, Chapter 8.\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This isn&amp;#39;t really about Monopoly.  Try searching for board game strategy in general.&lt;/p&gt;\n\n&lt;p&gt;Maybe this: &lt;a href=\"http://www.amazon.com/Artificial-Intelligence-Games-Second-Edition/dp/0123747317/ref=sr_1_1?ie=UTF8&amp;amp;qid=1353897720&amp;amp;sr=8-1&amp;amp;keywords=artificial+intelligence+for+games\"&gt;http://www.amazon.com/Artificial-Intelligence-Games-Second-Edition/dp/0123747317/ref=sr_1_1?ie=UTF8&amp;amp;qid=1353897720&amp;amp;sr=8-1&amp;amp;keywords=artificial+intelligence+for+games&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Specifically, Chapter 8.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76rt0k", "flair_text": null, "created": 1353901711.0, "created_utc": 1353898111.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13rmj6", "children": [], "author": "zombase", "id": "c76jo1o", "parent_id": "t3_13rmj6", "score": 0, "approved_by": null, "upvotes": 3, "body": "Hopefully this is the right subreddit to post this to.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hopefully this is the right subreddit to post this to.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76jo1o", "flair_text": null, "created": 1353871795.0, "created_utc": 1353868195.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13rmj6", "children": [], "author": "Geohump", "id": "c7711de", "parent_id": "t3_13rmj6", "score": 0, "approved_by": null, "upvotes": 1, "body": "Um, if you are trying to answer the question of if a monopoly game can go on forever, a simulator will not help you answer the question.  A simulator can provide you with lots of examples of games ending, but will never provide you wit h an example of a game that never ends.\n\nYou will have to resort to a proof to claim that its possible for a Monopoly game to never end. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Um, if you are trying to answer the question of if a monopoly game can go on forever, a simulator will not help you answer the question.  A simulator can provide you with lots of examples of games ending, but will never provide you wit h an example of a game that never ends.&lt;/p&gt;\n\n&lt;p&gt;You will have to resort to a proof to claim that its possible for a Monopoly game to never end. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7711de", "flair_text": null, "created": 1353953667.0, "created_utc": 1353950067.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_13rmj6", "children": [], "author": "shameen", "id": "c76nxk7", "parent_id": "t3_13rmj6", "score": 0, "approved_by": null, "upvotes": 2, "body": "Dont forget the various official PC games, there are quite a few", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Dont forget the various official PC games, there are quite a few&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76nxk7", "flair_text": null, "created": 1353887210.0, "created_utc": 1353883610.0, "num_reports": null}], "score": 45, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 58, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13rmj6/im_interested_in_building_a_robust_monopoly_board/", "has_more_comments": false, "name": "t3_13rmj6", "created": 1353866829.0, "url": "http://www.reddit.com/r/compsci/comments/13rmj6/im_interested_in_building_a_robust_monopoly_board/", "author_flair_text": null, "author": "zombase", "created_utc": 1353866829.0, "link_flair_text": null, "media": null, "num_reports": null}, "217": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 16, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I remember reading a post in a computer science subreddit that outlined some areas in computer science that will have more relevance and importance in the future, such as parallel computing for processing large amounts of data and such. I couldn&amp;#39;t find it, so I&amp;#39;m asking you guys. Which field in computer science do you think will be important to know in the future?&lt;/p&gt;\n\n&lt;p&gt;EDIT: Yeah, I&amp;#39;m getting a LOT of various fields... it would be nice if you could explain why you think it&amp;#39;s important&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I remember reading a post in a computer science subreddit that outlined some areas in computer science that will have more relevance and importance in the future, such as parallel computing for processing large amounts of data and such. I couldn't find it, so I'm asking you guys. Which field in computer science do you think will be important to know in the future?\n\nEDIT: Yeah, I'm getting a LOT of various fields... it would be nice if you could explain why you think it's important", "saved": false, "id": "13rs9u", "clicked": false, "title": "Which specific areas in computer science do you think will become more important in the future?", "num_comments": 62, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_13rs9u", "children": [], "author": "blu3jack", "id": "c76oi29", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 14, "body": "Might want to add that people should add justification if possible", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Might want to add that people should add justification if possible&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76oi29", "flair_text": null, "created": 1353889366.0, "created_utc": 1353885766.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13rs9u", "children": [], "author": "paithanq", "id": "c76p9gv", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 10, "body": "Which areas aren't going to be important?  I'm having a hard time coming up with something reasonable.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Which areas aren&amp;#39;t going to be important?  I&amp;#39;m having a hard time coming up with something reasonable.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76p9gv", "flair_text": null, "created": 1353892224.0, "created_utc": 1353888624.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13rs9u", "children": [], "author": "stackered", "id": "c76pilb", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 10, "body": "Comp biology specifically genomics and proteomics", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Comp biology specifically genomics and proteomics&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76pilb", "flair_text": null, "created": 1353893166.0, "created_utc": 1353889566.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13rs9u", "children": [], "author": "ncg09", "id": "c76ob4j", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 6, "body": "quantum information theory", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;quantum information theory&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76ob4j", "flair_text": null, "created": 1353888627.0, "created_utc": 1353885027.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_13rs9u", "children": [], "author": "Fuco1337", "id": "c76lzqf", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 23, "body": "Paralellism and verification.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Paralellism and verification.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76lzqf", "flair_text": null, "created": 1353880172.0, "created_utc": 1353876572.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_13rs9u", "children": [], "author": "MrMandelbrot", "id": "c76mipc", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 13, "body": "Machine learning and data analysis.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Machine learning and data analysis.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76mipc", "flair_text": null, "created": 1353882039.0, "created_utc": 1353878439.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_13rs9u", "children": [], "author": "liquiddandruff", "id": "c76njow", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 13, "body": "Cryptography", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Cryptography&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76njow", "flair_text": null, "created": 1353885778.0, "created_utc": 1353882178.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 6, "link_id": "t3_13rs9u", "children": [], "author": "inaneInTheMembrane", "id": "c76oiwx", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 15, "body": "My own field dammit!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My own field dammit!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76oiwx", "flair_text": null, "created": 1353889461.0, "created_utc": 1353885861.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13rs9u", "children": [], "author": "roadkill_connoisseur", "id": "c76skfe", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 2, "body": "We will see a more widespread use of expert systems in medical diagnostics and other various fields as computing speeds and knowledge databases continue to grow. That being said no one but us will have any idea what an expert system is. It will be everywhere but not many people will know that it is everywhere.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;We will see a more widespread use of expert systems in medical diagnostics and other various fields as computing speeds and knowledge databases continue to grow. That being said no one but us will have any idea what an expert system is. It will be everywhere but not many people will know that it is everywhere.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76skfe", "flair_text": null, "created": 1353904509.0, "created_utc": 1353900909.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13rs9u", "children": [], "author": "Zatchery", "id": "c77ylzk", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 1, "body": "I saw Cryptography but I just wanted to add Computer Security in general will always be relevant as long as there are secrets to keep.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I saw Cryptography but I just wanted to add Computer Security in general will always be relevant as long as there are secrets to keep.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c77ylzk", "flair_text": null, "created": 1354089916.0, "created_utc": 1354086316.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_13rs9u", "children": [], "author": "stansbuj", "id": "c76oakc", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 7, "body": "Robotics and computer vision\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Robotics and computer vision&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76oakc", "flair_text": null, "created": 1353888569.0, "created_utc": 1353884969.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 9, "link_id": "t3_13rs9u", "children": [], "author": "niGhTm4r3", "id": "c76oiuj", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 15, "body": "Robot porn, obviously.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Robot porn, obviously.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76oiuj", "flair_text": null, "created": 1353889454.0, "created_utc": 1353885854.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_13rs9u", "children": [], "author": "Buckwheat469", "id": "c76vy7m", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 3, "body": "- Faster and denser hard drives. SSDs with terabytes of storage space, holographic disks? The permanent decline of DVDs and CDs.\n\n- Artificial intelligence for human-computer relationships such as Siri as a personal assistant.\n\n- Artificial intelligence for self-programming of applications. You tell the programs what they should do and they should be smart enough to create or modify themselves to do what you want.\n\n- Encrypted private mesh networks to overcome government firewalls.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Faster and denser hard drives. SSDs with terabytes of storage space, holographic disks? The permanent decline of DVDs and CDs.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Artificial intelligence for human-computer relationships such as Siri as a personal assistant.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Artificial intelligence for self-programming of applications. You tell the programs what they should do and they should be smart enough to create or modify themselves to do what you want.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Encrypted private mesh networks to overcome government firewalls.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76vy7m", "flair_text": null, "created": 1353920155.0, "created_utc": 1353916555.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13rs9u", "children": [], "author": "norski_lab", "id": "c76qqyw", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 2, "body": "Nano technology", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nano technology&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76qqyw", "flair_text": null, "created": 1353897818.0, "created_utc": 1353894218.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13rs9u", "children": [], "author": "svsvsvs", "id": "c76z7w8", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 1, "body": "Communication complexity data structure lower bounds circuit complexity", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Communication complexity data structure lower bounds circuit complexity&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76z7w8", "flair_text": null, "created": 1353946321.0, "created_utc": 1353942721.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13rs9u", "children": [], "author": "gasche", "id": "c76zc4b", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 2, "body": "The growing intersection of user interfaces and programming experience.\n\nWhen most aspects of our live will be supported by digital technology, people will interact with machines all the time -- partly as users, partly as programmers. From the specialist trying to maintain and improve hyper-complex code bases to the end-user giving requests to an fairly independent and context-sensitive system, the more power we have the better we need to *express* it.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The growing intersection of user interfaces and programming experience.&lt;/p&gt;\n\n&lt;p&gt;When most aspects of our live will be supported by digital technology, people will interact with machines all the time -- partly as users, partly as programmers. From the specialist trying to maintain and improve hyper-complex code bases to the end-user giving requests to an fairly independent and context-sensitive system, the more power we have the better we need to &lt;em&gt;express&lt;/em&gt; it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76zc4b", "flair_text": null, "created": 1353946871.0, "created_utc": 1353943271.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13rs9u", "children": [], "author": "ebix", "id": "c772bmj", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 1, "body": "Honestly this is like trying to predict the exact daily weather forecast, several years from now. We have neither the necessary amount of data, computational power, or expertise to make any reasonable long term predictions about such a general question. \n\nJust look at predictions about the future of AI, 20 years ago, or hardware 30 year ago. They are hilarious.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Honestly this is like trying to predict the exact daily weather forecast, several years from now. We have neither the necessary amount of data, computational power, or expertise to make any reasonable long term predictions about such a general question. &lt;/p&gt;\n\n&lt;p&gt;Just look at predictions about the future of AI, 20 years ago, or hardware 30 year ago. They are hilarious.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c772bmj", "flair_text": null, "created": 1353958183.0, "created_utc": 1353954583.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13rs9u", "children": [], "author": "destinys_parent", "id": "c772ovm", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 2, "body": "Literally every area of Computer Science.. Information Security, Parallel Computing, On demand computing (via cloud services), etc.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Literally every area of Computer Science.. Information Security, Parallel Computing, On demand computing (via cloud services), etc.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c772ovm", "flair_text": null, "created": 1353959417.0, "created_utc": 1353955817.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 6, "link_id": "t3_13rs9u", "children": [], "author": "ckennington", "id": "c76vjjs", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 5, "body": "Web development. \nNative apps will always have a place, but the browser is becoming the OS. Google apps, mobile sites, e-commerce, social networking, cloud computing, etc. all happen in the browser. Good web developers will be vital as the migration continues. We're not talking your nephew writing a static HTML page in his basement, or a crotchety C programmer who only writes printer drivers. We need developers who have a firm grasp on the HTTP protocol and understand how many technologies fit together to create a web app. These will be needed in the near and far future.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Web development. \nNative apps will always have a place, but the browser is becoming the OS. Google apps, mobile sites, e-commerce, social networking, cloud computing, etc. all happen in the browser. Good web developers will be vital as the migration continues. We&amp;#39;re not talking your nephew writing a static HTML page in his basement, or a crotchety C programmer who only writes printer drivers. We need developers who have a firm grasp on the HTTP protocol and understand how many technologies fit together to create a web app. These will be needed in the near and far future.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76vjjs", "flair_text": null, "created": 1353917523.0, "created_utc": 1353913923.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_13rs9u", "children": [], "author": "thebigbradwolf", "id": "c76qrqb", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 4, "body": "Computer Vision.  Real-time programming.  Swarm death robots.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Computer Vision.  Real-time programming.  Swarm death robots.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76qrqb", "flair_text": null, "created": 1353897896.0, "created_utc": 1353894296.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13rs9u", "children": [], "author": "orium_", "id": "c76x90n", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 2, "body": "From a more pratical prespective I think distribuited systems and concurrency (and concurrency models / support from programming languages, correctness verification, etc) are now more relevant than ever with multi-core systems everywhere and \"cloud\" services. I think these areas will be very active and are of major importance in the next decade, at least.\n\nOf course these are areas are not \"more important\" than others, but now these is a huge motivation for investing in them, but programming languages, algorithmics, complexity theory, artificial inteligence, will always be important", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;From a more pratical prespective I think distribuited systems and concurrency (and concurrency models / support from programming languages, correctness verification, etc) are now more relevant than ever with multi-core systems everywhere and &amp;quot;cloud&amp;quot; services. I think these areas will be very active and are of major importance in the next decade, at least.&lt;/p&gt;\n\n&lt;p&gt;Of course these are areas are not &amp;quot;more important&amp;quot; than others, but now these is a huge motivation for investing in them, but programming languages, algorithmics, complexity theory, artificial inteligence, will always be important&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76x90n", "flair_text": null, "created": 1353932293.0, "created_utc": 1353928693.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_13rs9u", "children": [], "author": "Xalem", "id": "c770533", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 2, "body": "Deep Knowledge and AI", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Deep Knowledge and AI&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c770533", "flair_text": null, "created": 1353950268.0, "created_utc": 1353946668.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_13rs9u", "children": [], "author": "deadowl", "id": "c76qvuv", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 2, "body": "Probably something in regard to variable address spaces and radio waves.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Probably something in regard to variable address spaces and radio waves.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76qvuv", "flair_text": null, "created": 1353898310.0, "created_utc": 1353894710.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_13rs9u", "children": [], "author": "boober_noober", "id": "c76rgpk", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 2, "body": "Most important to humanity as a whole? Or most likely to give you a career opportunity? Or most likely to help you with your future career?\n\nI assume you mean the third one there, in which case it all depends on what you're interested in. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Most important to humanity as a whole? Or most likely to give you a career opportunity? Or most likely to help you with your future career?&lt;/p&gt;\n\n&lt;p&gt;I assume you mean the third one there, in which case it all depends on what you&amp;#39;re interested in. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76rgpk", "flair_text": null, "created": 1353900449.0, "created_utc": 1353896849.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13rs9u", "children": [], "author": "Baileus", "id": "c7h79z7", "parent_id": "t3_13rs9u", "score": 0, "approved_by": null, "upvotes": 1, "body": "I'm gonna say privacy and security in general.\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m gonna say privacy and security in general.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7h79z7", "flair_text": null, "created": 1355621771.0, "created_utc": 1355618171.0, "num_reports": null}], "score": 19, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 35, "hidden": false, "thumbnail": "", "edited": 1353886689.0, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13rs9u/which_specific_areas_in_computer_science_do_you/", "has_more_comments": false, "name": "t3_13rs9u", "created": 1353872790.0, "url": "http://www.reddit.com/r/compsci/comments/13rs9u/which_specific_areas_in_computer_science_do_you/", "author_flair_text": null, "author": "iamtheasiansensation", "created_utc": 1353872790.0, "link_flair_text": null, "media": null, "num_reports": null}, "218": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 29, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I recently read about the halting problem and several other related problems. I initially thought that there would be some sort of mathematical axiom or something that lead to such results. On closer inspection, I couldn&amp;#39;t find any axiom dependance of the halting problem (and those problems that are reduced from it). None at all. Is this just because I might have missed something (i.e., would the answer be different in a different mahematical universe)? Or is the solution of the halting problem truly universal, fundamental and independent of axioms?  &lt;/p&gt;\n\n&lt;p&gt;Edit: I hope the following is a better explanation of my question.  &lt;/p&gt;\n\n&lt;p&gt;I see the connection between CS results and mathematical theorems, but most CS results (the ones I&amp;#39;ve seen) rely on the undecidability of the halting problem (which to me didn&amp;#39;t seem to depend on an axiom), whereas mathematical theorems rely on set axioms, as a result of which, I didn&amp;#39;t consider them universal truths. Please do note that I&amp;#39;m only a beginner and my definition of &amp;#39;universal&amp;#39; might greatly differ from yours. I don&amp;#39;t consider mathematical theorems universal because their axioms can always be altered, leading to other truths (stuff like hyperbolic geometry, for example). CS results seemed universal to me because they were derived from the undecidability of the halting problem, which I felt was not quite modifiable.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I recently read about the halting problem and several other related problems. I initially thought that there would be some sort of mathematical axiom or something that lead to such results. On closer inspection, I couldn't find any axiom dependance of the halting problem (and those problems that are reduced from it). None at all. Is this just because I might have missed something (i.e., would the answer be different in a different mahematical universe)? Or is the solution of the halting problem truly universal, fundamental and independent of axioms?  \n\nEdit: I hope the following is a better explanation of my question.  \n\nI see the connection between CS results and mathematical theorems, but most CS results (the ones I've seen) rely on the undecidability of the halting problem (which to me didn't seem to depend on an axiom), whereas mathematical theorems rely on set axioms, as a result of which, I didn't consider them universal truths. Please do note that I'm only a beginner and my definition of 'universal' might greatly differ from yours. I don't consider mathematical theorems universal because their axioms can always be altered, leading to other truths (stuff like hyperbolic geometry, for example). CS results seemed universal to me because they were derived from the undecidability of the halting problem, which I felt was not quite modifiable.", "saved": false, "id": "13rccg", "clicked": false, "title": "Are the results of theoretical computer science truly fundamental to the universe?", "num_comments": 51, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13rccg", "children": [], "author": "baddox", "id": "c76hzw8", "parent_id": "t3_13rccg", "score": 0, "approved_by": null, "upvotes": 13, "body": "Check this paper out. It is fairly technical, but if you have a CS background I think you'll really enjoy it. The author makes some cool point, like that tractability is crucial to what constitutes \"knowledge.\"\n\n[Why Philosophers Should Care About Computational Complexity](http://arxiv.org/abs/1108.1791)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Check this paper out. It is fairly technical, but if you have a CS background I think you&amp;#39;ll really enjoy it. The author makes some cool point, like that tractability is crucial to what constitutes &amp;quot;knowledge.&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://arxiv.org/abs/1108.1791\"&gt;Why Philosophers Should Care About Computational Complexity&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76hzw8", "flair_text": null, "created": 1353864789.0, "created_utc": 1353861189.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 9, "link_id": "t3_13rccg", "children": [], "author": "trestechno", "id": "c76gqwg", "parent_id": "t3_13rccg", "score": 0, "approved_by": null, "upvotes": 30, "body": "The axiom you're looking for is called the [Church-Turing Conjecture](http://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis). It basically states that anything that can be computed using some algorithm, or computing device, or substrate can also be computed using a Turing machine (or lambda-calculus, or recursion, all three of which can compute the same set). \n\nWe can then prove the impossibility of solving the halting problem for a turing machine, and then extend that proof to all types of computing machines using the conjecture.\n\nNow, people treat the CTC like some sort of theorem, but it is vague enough that it cannot be proved (or at least, not to my knowledge). There is a non-zero chance that it is incorrect, I suppose, and there exists some machine that somehow can solve the halting problem for the general case of Turing machines*, but this is widely accepted as not the case.\n\n\n\\* People have studied an extension of Turing machines which have a \"halting oracle\", a device which solves the halting problem for any Turing machine *without* such an oracle. And then, of course, people have studied machines with an oracle that can solve the halting problem for machines with the first type of oracle. And again for the next level, etc.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The axiom you&amp;#39;re looking for is called the &lt;a href=\"http://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis\"&gt;Church-Turing Conjecture&lt;/a&gt;. It basically states that anything that can be computed using some algorithm, or computing device, or substrate can also be computed using a Turing machine (or lambda-calculus, or recursion, all three of which can compute the same set). &lt;/p&gt;\n\n&lt;p&gt;We can then prove the impossibility of solving the halting problem for a turing machine, and then extend that proof to all types of computing machines using the conjecture.&lt;/p&gt;\n\n&lt;p&gt;Now, people treat the CTC like some sort of theorem, but it is vague enough that it cannot be proved (or at least, not to my knowledge). There is a non-zero chance that it is incorrect, I suppose, and there exists some machine that somehow can solve the halting problem for the general case of Turing machines*, but this is widely accepted as not the case.&lt;/p&gt;\n\n&lt;p&gt;* People have studied an extension of Turing machines which have a &amp;quot;halting oracle&amp;quot;, a device which solves the halting problem for any Turing machine &lt;em&gt;without&lt;/em&gt; such an oracle. And then, of course, people have studied machines with an oracle that can solve the halting problem for machines with the first type of oracle. And again for the next level, etc.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76gqwg", "flair_text": null, "created": 1353857239.0, "created_utc": 1353853639.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13rccg", "children": [], "author": "ncg09", "id": "c76gvfz", "parent_id": "t3_13rccg", "score": 0, "approved_by": null, "upvotes": 6, "body": "http://www.scottaaronson.com/blog/?p=152", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.scottaaronson.com/blog/?p=152\"&gt;http://www.scottaaronson.com/blog/?p=152&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76gvfz", "flair_text": null, "created": 1353858179.0, "created_utc": 1353854579.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13rccg", "children": [], "author": "spacelibby", "id": "c76s0xe", "parent_id": "t3_13rccg", "score": 0, "approved_by": null, "upvotes": 6, "body": "Well lets try looking at this from an entirely mathematical point of view.  First we need to know what an axiom is, and to get a good understanding of that we need to talk about the structure of math.  This structure is usually called a mathematical universe, since in that subject we can only talk about things inside this structure.\n\nThere are really three main things in a universe definitions, axioms, and theorems.  Definitions are easy, they define something, and do nothing else.  Axioms limit what we can say about a universe.  It's been said here that you can't really say anything interesting without axioms.  I'd disagree with that.  The real problem is that you can say EVERYTHING interesting without axioms.  2+2=fish?  sure why not?  We haven't said this is a problem yet.  Finally theorems are statements about the universe that can be proved from definitions and axioms.\n\nOk, so let's give a little context here.  We'll start with set theory.  Axiom 1: A set is a collection of elements.  What's an element?  No clue, but they seem to like hanging out in sets.  What's a set?  I just told you, a collection of elements.  Can I say anything more?  Well, sure, but given what I have, it wouldn't be a very rich universe if we left it there.  Right now we only have one axiom, so our universe is pretty wide open.\n\nGeometry is another good example.  There's an axiom in geometry that 2 points determine a line.  What's a line? No clue, but it's got two points.  What are points?  Well they could be pretty much anything, chickens, numbers, half of your face. (oh yeah, well your face determines a line!  See? it works.)  We don't know what any of these things are, but any system satisfying our axiom is valid.  Good axioms are ones that seem reasonable, and that limit the universe in meaningful ways.\n\nNow that we know what an axiom is, let's look at the halting problem from a math perspective.  This is difficult right now, since the halting problem really doesn't have anything to do with math.  So let's restate this as a theorem.\n\nTheorem: Given an arbitrary Turing Machine, determining if that machine will eventually halt is undecidable.\n\nSo, let's break this down.  We have a few terms to deal with.  Turing Machine, halt, and undecidable all need to be defined.  These are all well defined mathematically, and I don't want to try defining them here, since I'll probably screw something up, but there's something important here.  These machines are in their own mathematical universe.  we have basic definitions, like state transition function, alphabet, tape, and decidable.  We have some simple axioms like a TM is in one state at a time, rules for halting, and rules for decidability.  Furthermore Turing Machines are defined using sets, so all of the axioms of set theory apply to Turing Machines.\n\nSo the short answer is that yes, there are axioms that underlie theoretical computer science.  We know this because there are thing that aren't true in this field.  It looks like the theory doesn't have any, but this is simply because the axioms are built into the definitions of the various machines.\n\nI hope this helps, or makes sense.  I'm off to go invent the mathematical theory of face geometry.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well lets try looking at this from an entirely mathematical point of view.  First we need to know what an axiom is, and to get a good understanding of that we need to talk about the structure of math.  This structure is usually called a mathematical universe, since in that subject we can only talk about things inside this structure.&lt;/p&gt;\n\n&lt;p&gt;There are really three main things in a universe definitions, axioms, and theorems.  Definitions are easy, they define something, and do nothing else.  Axioms limit what we can say about a universe.  It&amp;#39;s been said here that you can&amp;#39;t really say anything interesting without axioms.  I&amp;#39;d disagree with that.  The real problem is that you can say EVERYTHING interesting without axioms.  2+2=fish?  sure why not?  We haven&amp;#39;t said this is a problem yet.  Finally theorems are statements about the universe that can be proved from definitions and axioms.&lt;/p&gt;\n\n&lt;p&gt;Ok, so let&amp;#39;s give a little context here.  We&amp;#39;ll start with set theory.  Axiom 1: A set is a collection of elements.  What&amp;#39;s an element?  No clue, but they seem to like hanging out in sets.  What&amp;#39;s a set?  I just told you, a collection of elements.  Can I say anything more?  Well, sure, but given what I have, it wouldn&amp;#39;t be a very rich universe if we left it there.  Right now we only have one axiom, so our universe is pretty wide open.&lt;/p&gt;\n\n&lt;p&gt;Geometry is another good example.  There&amp;#39;s an axiom in geometry that 2 points determine a line.  What&amp;#39;s a line? No clue, but it&amp;#39;s got two points.  What are points?  Well they could be pretty much anything, chickens, numbers, half of your face. (oh yeah, well your face determines a line!  See? it works.)  We don&amp;#39;t know what any of these things are, but any system satisfying our axiom is valid.  Good axioms are ones that seem reasonable, and that limit the universe in meaningful ways.&lt;/p&gt;\n\n&lt;p&gt;Now that we know what an axiom is, let&amp;#39;s look at the halting problem from a math perspective.  This is difficult right now, since the halting problem really doesn&amp;#39;t have anything to do with math.  So let&amp;#39;s restate this as a theorem.&lt;/p&gt;\n\n&lt;p&gt;Theorem: Given an arbitrary Turing Machine, determining if that machine will eventually halt is undecidable.&lt;/p&gt;\n\n&lt;p&gt;So, let&amp;#39;s break this down.  We have a few terms to deal with.  Turing Machine, halt, and undecidable all need to be defined.  These are all well defined mathematically, and I don&amp;#39;t want to try defining them here, since I&amp;#39;ll probably screw something up, but there&amp;#39;s something important here.  These machines are in their own mathematical universe.  we have basic definitions, like state transition function, alphabet, tape, and decidable.  We have some simple axioms like a TM is in one state at a time, rules for halting, and rules for decidability.  Furthermore Turing Machines are defined using sets, so all of the axioms of set theory apply to Turing Machines.&lt;/p&gt;\n\n&lt;p&gt;So the short answer is that yes, there are axioms that underlie theoretical computer science.  We know this because there are thing that aren&amp;#39;t true in this field.  It looks like the theory doesn&amp;#39;t have any, but this is simply because the axioms are built into the definitions of the various machines.&lt;/p&gt;\n\n&lt;p&gt;I hope this helps, or makes sense.  I&amp;#39;m off to go invent the mathematical theory of face geometry.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76s0xe", "flair_text": null, "created": 1353902514.0, "created_utc": 1353898914.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_13rccg", "children": [], "author": "zeppelin4491", "id": "c76jjiw", "parent_id": "t3_13rccg", "score": 0, "approved_by": null, "upvotes": 16, "body": "If you have ever done any philosophy, you might have come across the concepts of necessary and contingent truths. Necessary truths are those that are true in all possible worlds, and contingent truths are those that are true in our world but could be falsified in another possible world. It is very widely held that all mathematical truths are necessary. Since computer science is a subset of mathematics, then all truths of computer science are necessarily true, which is what I think you mean by \"fundamental to the universe\". No universe could exist in which these truths are not true.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you have ever done any philosophy, you might have come across the concepts of necessary and contingent truths. Necessary truths are those that are true in all possible worlds, and contingent truths are those that are true in our world but could be falsified in another possible world. It is very widely held that all mathematical truths are necessary. Since computer science is a subset of mathematics, then all truths of computer science are necessarily true, which is what I think you mean by &amp;quot;fundamental to the universe&amp;quot;. No universe could exist in which these truths are not true.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76jjiw", "flair_text": null, "created": 1353871326.0, "created_utc": 1353867726.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_13rccg", "children": [], "author": "Faggot_Fredrikson", "id": "c76hqqp", "parent_id": "t3_13rccg", "score": 0, "approved_by": null, "upvotes": 9, "body": "This dude goes trough a lengthy list of examples that support the idea that \uff30\u2260\uff2e\uff30 is not only a pure math thing, but also a fundamental principle of physics:\nhttp://www.youtube.com/watch?v=8bLXHvH9s1A\n\nAmazing talk!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This dude goes trough a lengthy list of examples that support the idea that \uff30\u2260\uff2e\uff30 is not only a pure math thing, but also a fundamental principle of physics:\n&lt;a href=\"http://www.youtube.com/watch?v=8bLXHvH9s1A\"&gt;http://www.youtube.com/watch?v=8bLXHvH9s1A&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Amazing talk!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76hqqp", "flair_text": null, "created": 1353863492.0, "created_utc": 1353859892.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_13rccg", "children": [], "author": "bo1024", "id": "c76go9l", "parent_id": "t3_13rccg", "score": 0, "approved_by": null, "upvotes": 10, "body": "The Church-Turing thesis basically says yes; it says that any possible method of computation will be bound by the same fundamental limitations as Turing Machines.\n\nBut it isn't (can't be?) proven....", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The Church-Turing thesis basically says yes; it says that any possible method of computation will be bound by the same fundamental limitations as Turing Machines.&lt;/p&gt;\n\n&lt;p&gt;But it isn&amp;#39;t (can&amp;#39;t be?) proven....&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76go9l", "flair_text": null, "created": 1353856667.0, "created_utc": 1353853067.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_13rccg", "children": [], "author": "jacolantern", "id": "c76kdbh", "parent_id": "t3_13rccg", "score": 0, "approved_by": null, "upvotes": 6, "body": "Just thought I would throw my two cents in.\n\nI think you will get a lot of mileage out of the idea that a set of mathematical axioms *defines* a universe.  In the universe defined by a set of axioms, all theorems derived from the axioms are universally true.\n\nYou can always construct a universe where something that is false in \"our\" universe is true in the universe you are constructing, and see what happens.  This is basically how a proof by contradiction works.  You consider a universe where a thing is true, and then you fiddle with it a bit, and a contradiction falls out.  Because you assume that \"our\" universe contains no contradictions, you \"throw out\" the universe you were considering as being a bad model of our universe.\n\nNow, I'm not sure what you mean by universal, but I suspect that the concept you are thinking about doesn't really exist.  There is no \"universal\" set of axioms, although it is often a good idea to privilege the axioms which give rise to models which approximate the phenomena we observe.\n\nLike I said, just my two cents.\n\nEdit: grammar, spelling, accidently a word", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just thought I would throw my two cents in.&lt;/p&gt;\n\n&lt;p&gt;I think you will get a lot of mileage out of the idea that a set of mathematical axioms &lt;em&gt;defines&lt;/em&gt; a universe.  In the universe defined by a set of axioms, all theorems derived from the axioms are universally true.&lt;/p&gt;\n\n&lt;p&gt;You can always construct a universe where something that is false in &amp;quot;our&amp;quot; universe is true in the universe you are constructing, and see what happens.  This is basically how a proof by contradiction works.  You consider a universe where a thing is true, and then you fiddle with it a bit, and a contradiction falls out.  Because you assume that &amp;quot;our&amp;quot; universe contains no contradictions, you &amp;quot;throw out&amp;quot; the universe you were considering as being a bad model of our universe.&lt;/p&gt;\n\n&lt;p&gt;Now, I&amp;#39;m not sure what you mean by universal, but I suspect that the concept you are thinking about doesn&amp;#39;t really exist.  There is no &amp;quot;universal&amp;quot; set of axioms, although it is often a good idea to privilege the axioms which give rise to models which approximate the phenomena we observe.&lt;/p&gt;\n\n&lt;p&gt;Like I said, just my two cents.&lt;/p&gt;\n\n&lt;p&gt;Edit: grammar, spelling, accidently a word&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76kdbh", "flair_text": null, "created": 1353874386.0, "created_utc": 1353870786.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13rccg", "children": [], "author": "jdjayded", "id": "c76kqnv", "parent_id": "t3_13rccg", "score": 0, "approved_by": null, "upvotes": 5, "body": "I think the distinction you are trying to make is a false one. I do not think that there is a true distinction between CS and math.\n\nThe axioms used depends on the theorem proven. You have all the axioms of mathematics to play with. You might want to start with a problem.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think the distinction you are trying to make is a false one. I do not think that there is a true distinction between CS and math.&lt;/p&gt;\n\n&lt;p&gt;The axioms used depends on the theorem proven. You have all the axioms of mathematics to play with. You might want to start with a problem.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76kqnv", "flair_text": null, "created": 1353875753.0, "created_utc": 1353872153.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13rccg", "children": [], "author": "drobilla", "id": "c76perw", "parent_id": "t3_13rccg", "score": 0, "approved_by": null, "upvotes": 4, "body": "Is it even possible to have a \"truth\" without depending on *some* axiom or another?  If you keep digging down you have to eventually hit some sort of axiom, or all you have is meaningless.\n\nThe reason many people consider mathematics *more* universal than just about anything else is that it has very precisely defined axioms, much more precise than \"well, stuff in the universe seems to work this way most of the time when we look\".", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is it even possible to have a &amp;quot;truth&amp;quot; without depending on &lt;em&gt;some&lt;/em&gt; axiom or another?  If you keep digging down you have to eventually hit some sort of axiom, or all you have is meaningless.&lt;/p&gt;\n\n&lt;p&gt;The reason many people consider mathematics &lt;em&gt;more&lt;/em&gt; universal than just about anything else is that it has very precisely defined axioms, much more precise than &amp;quot;well, stuff in the universe seems to work this way most of the time when we look&amp;quot;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76perw", "flair_text": null, "created": 1353892772.0, "created_utc": 1353889172.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13rccg", "children": [], "author": "Snootwaller", "id": "c76nif1", "parent_id": "t3_13rccg", "score": 0, "approved_by": null, "upvotes": 3, "body": "There is a minority opinion that the universe may contain \"black boxes\" which violate the Church-Turing conjecture. (E.g. Roger Penrose) While it may seem a fanciful notion, the discovery of such a black-box would neither violate our understanding of physics nor computer science.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There is a minority opinion that the universe may contain &amp;quot;black boxes&amp;quot; which violate the Church-Turing conjecture. (E.g. Roger Penrose) While it may seem a fanciful notion, the discovery of such a black-box would neither violate our understanding of physics nor computer science.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76nif1", "flair_text": null, "created": 1353885656.0, "created_utc": 1353882056.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 17, "link_id": "t3_13rccg", "children": [], "author": "Zerocool947", "id": "c76gp0o", "parent_id": "t3_13rccg", "score": 0, "approved_by": null, "upvotes": 8, "body": "Well, this is nothing but speculative navel gazing, but I'm of the opinion that we simply haven't created a computer complex enough to solve NP complete-type problems *of non trivial size*. And I don't mean \"not enough power, needs more RAM.\" I mean the architecture and design of current computers is too simple; something radically different has to happen.\n\n*Edit*: I'm an idiot and misspoke., you guys are right. My point was that were still at the horse and buggy phase of computing, in my opinion. It's not just better parts, its whole new designs that we need. ", "edited": 1353855514.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well, this is nothing but speculative navel gazing, but I&amp;#39;m of the opinion that we simply haven&amp;#39;t created a computer complex enough to solve NP complete-type problems &lt;em&gt;of non trivial size&lt;/em&gt;. And I don&amp;#39;t mean &amp;quot;not enough power, needs more RAM.&amp;quot; I mean the architecture and design of current computers is too simple; something radically different has to happen.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Edit&lt;/em&gt;: I&amp;#39;m an idiot and misspoke., you guys are right. My point was that were still at the horse and buggy phase of computing, in my opinion. It&amp;#39;s not just better parts, its whole new designs that we need. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76gp0o", "flair_text": null, "created": 1353856830.0, "created_utc": 1353853230.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 8, "link_id": "t3_13rccg", "children": [], "author": "svsvsvs", "id": "c76s92n", "parent_id": "t3_13rccg", "score": 0, "approved_by": null, "upvotes": 1, "body": "[dumb question](http://en.wikipedia.org/wiki/Mathematical_proof)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Mathematical_proof\"&gt;dumb question&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76s92n", "flair_text": null, "created": 1353903349.0, "created_utc": 1353899749.0, "num_reports": null}], "score": 51, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 80, "hidden": false, "thumbnail": "", "edited": 1353869013.0, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13rccg/are_the_results_of_theoretical_computer_science/", "has_more_comments": false, "name": "t3_13rccg", "created": 1353851707.0, "url": "http://www.reddit.com/r/compsci/comments/13rccg/are_the_results_of_theoretical_computer_science/", "author_flair_text": null, "author": "Alpha_Q", "created_utc": 1353851707.0, "link_flair_text": null, "media": null, "num_reports": null}, "219": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 13, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am a freshman at the Georgia Institute of Technology, which I chose last year over the University of Maryland (College Park) for Computer Science. However, not only did I find that I don&amp;#39;t like the south or the university, but now, Maryland has proven to be an even better computer science school than its ranking (14 to GT&amp;#39;s 10) suggests by winning the ACM NorthEast finals. &lt;/p&gt;\n\n&lt;p&gt;I am really interested in theory, which I think (because of UMD&amp;#39;s strong  Math program) should be just as good at Maryland. I was also newly considering double-majoring in Math, which is tremendously easy at UMD and nigh- impossible here at Tech. To top it off, I&amp;#39;m also dreadfully homesick and I miss the north, where I plan to live when I&amp;#39;m older. However, I&amp;#39;m scared that I&amp;#39;d regret losing the &amp;quot;name&amp;quot; and the superior funding and tight- knit CS community that is here at Georgia Tech.&lt;/p&gt;\n\n&lt;p&gt;People have said it&amp;#39;s come down to where my heart is, and in the end, it will come down to that, when I figure out what it is that I want. Until then, could you please give me a view on the academic side of things? Much obliged.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I am a freshman at the Georgia Institute of Technology, which I chose last year over the University of Maryland (College Park) for Computer Science. However, not only did I find that I don't like the south or the university, but now, Maryland has proven to be an even better computer science school than its ranking (14 to GT's 10) suggests by winning the ACM NorthEast finals. \n\nI am really interested in theory, which I think (because of UMD's strong  Math program) should be just as good at Maryland. I was also newly considering double-majoring in Math, which is tremendously easy at UMD and nigh- impossible here at Tech. To top it off, I'm also dreadfully homesick and I miss the north, where I plan to live when I'm older. However, I'm scared that I'd regret losing the \"name\" and the superior funding and tight- knit CS community that is here at Georgia Tech.\n\nPeople have said it's come down to where my heart is, and in the end, it will come down to that, when I figure out what it is that I want. Until then, could you please give me a view on the academic side of things? Much obliged.", "saved": false, "id": "13sudk", "clicked": false, "title": "Your opinion on transferring colleges for Computer Science and Math.", "num_comments": 10, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13sudk", "children": [], "author": "heidhrun", "id": "c76vqkh", "parent_id": "t3_13sudk", "score": 0, "approved_by": null, "upvotes": 4, "body": "You will be in college for four (or more) years of your life, so you should go somewhere you enjoy being.  It's not just a means to an end.  But maybe you will like Georgia Tech more once you get more comfortable.  The first semester can be rough.  \n\nI transferred from a \"brand name\" school to a state university close to home and I was much happier there.  I think in the long run, feeling comfortable and having nerdy friends was better for my academic career. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You will be in college for four (or more) years of your life, so you should go somewhere you enjoy being.  It&amp;#39;s not just a means to an end.  But maybe you will like Georgia Tech more once you get more comfortable.  The first semester can be rough.  &lt;/p&gt;\n\n&lt;p&gt;I transferred from a &amp;quot;brand name&amp;quot; school to a state university close to home and I was much happier there.  I think in the long run, feeling comfortable and having nerdy friends was better for my academic career. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76vqkh", "flair_text": null, "created": 1353918733.0, "created_utc": 1353915133.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13sudk", "children": [], "author": "zzing", "id": "c76wgpb", "parent_id": "t3_13sudk", "score": 0, "approved_by": null, "upvotes": 4, "body": "I doubt ACM results mean anything. The success of a team is much more dependant on the dynamics of the team and how it trains than the school it is at.\n\nLook towards the program, not some number like that.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I doubt ACM results mean anything. The success of a team is much more dependant on the dynamics of the team and how it trains than the school it is at.&lt;/p&gt;\n\n&lt;p&gt;Look towards the program, not some number like that.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76wgpb", "flair_text": null, "created": 1353924255.0, "created_utc": 1353920655.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13sudk", "children": [], "author": "eaturbrainz", "id": "c76wo33", "parent_id": "t3_13sudk", "score": 0, "approved_by": null, "upvotes": 1, "body": "The issue with Georgia Tech is what field of CS you want to study.  They've had more than a few \"genocides\".", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The issue with Georgia Tech is what field of CS you want to study.  They&amp;#39;ve had more than a few &amp;quot;genocides&amp;quot;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76wo33", "flair_text": null, "created": 1353926126.0, "created_utc": 1353922526.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13sudk", "children": [], "author": "wfb0002", "id": "c77muvr", "parent_id": "t3_13sudk", "score": 0, "approved_by": null, "upvotes": 1, "body": "when choosing what school I wanted to go to, GT was kinda the thing to do. I tried my absolute hardest to avoid going there if I could, but for the money (free for me as a GA resident) it was the best school around. Luckily I got a scholarship to an out of state engineering school that tends to be seen as lesser in value than GT, but I am extremely happy here.\n\nI have friends at GT but I know that most of them are nowhere near as happy as I am. I have a good working relationship with many of the professors in my department due to smaller classes and a better focus on undergraduate teaching rather than graduate teaching. From what I understand, this tends to go on a lot at Tech. Also, I have found that I don't really compete with any grad students to do research where I am now. I know the same is not quite as true at tech. \n\nI do plan on getting my masters at tech, but I just dont see it as that great of an undergraduate school.\n\nTLDR: Go to tech for grad school, not undergrad.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;when choosing what school I wanted to go to, GT was kinda the thing to do. I tried my absolute hardest to avoid going there if I could, but for the money (free for me as a GA resident) it was the best school around. Luckily I got a scholarship to an out of state engineering school that tends to be seen as lesser in value than GT, but I am extremely happy here.&lt;/p&gt;\n\n&lt;p&gt;I have friends at GT but I know that most of them are nowhere near as happy as I am. I have a good working relationship with many of the professors in my department due to smaller classes and a better focus on undergraduate teaching rather than graduate teaching. From what I understand, this tends to go on a lot at Tech. Also, I have found that I don&amp;#39;t really compete with any grad students to do research where I am now. I know the same is not quite as true at tech. &lt;/p&gt;\n\n&lt;p&gt;I do plan on getting my masters at tech, but I just dont see it as that great of an undergraduate school.&lt;/p&gt;\n\n&lt;p&gt;TLDR: Go to tech for grad school, not undergrad.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c77muvr", "flair_text": null, "created": 1354046236.0, "created_utc": 1354042636.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13sudk", "children": [], "author": "nomad42184", "id": "c7dzhnh", "parent_id": "t3_13sudk", "score": 0, "approved_by": null, "upvotes": 1, "body": "Those ranking difference's aren't really meaningful.  GTech and UMD are in roughly the same group, and both have great programs. If your reason for transferring is to move back north, and you think you can swing it, why not try for the best schools you can (e.g. MIT, CMU, and if you're really sure about being into theory, Princeton).  My advisor did his Ph.D at Princeton and loved it, they're highly ranked in CS in general, but their math and CS theory are top notch.  However, if Maryland is home, you'll certainty not lose much (if anything at all) in terms of reputation or graduate school marketability by transferring to UMD.  It's a great CS school, and if you get some research under your belt, you'll be well prepared when applying to grad school.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Those ranking difference&amp;#39;s aren&amp;#39;t really meaningful.  GTech and UMD are in roughly the same group, and both have great programs. If your reason for transferring is to move back north, and you think you can swing it, why not try for the best schools you can (e.g. MIT, CMU, and if you&amp;#39;re really sure about being into theory, Princeton).  My advisor did his Ph.D at Princeton and loved it, they&amp;#39;re highly ranked in CS in general, but their math and CS theory are top notch.  However, if Maryland is home, you&amp;#39;ll certainty not lose much (if anything at all) in terms of reputation or graduate school marketability by transferring to UMD.  It&amp;#39;s a great CS school, and if you get some research under your belt, you&amp;#39;ll be well prepared when applying to grad school.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7dzhnh", "flair_text": null, "created": 1355108072.0, "created_utc": 1355104472.0, "num_reports": null}], "score": 0, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 9, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13sudk/your_opinion_on_transferring_colleges_for/", "has_more_comments": false, "name": "t3_13sudk", "created": 1353910815.0, "url": "http://www.reddit.com/r/compsci/comments/13sudk/your_opinion_on_transferring_colleges_for/", "author_flair_text": null, "author": "sirgerbil", "created_utc": 1353910815.0, "link_flair_text": null, "media": null, "num_reports": null}, "220": {"domain": "izbicki.me", "link_flair_class": null, "banned_by": null, "downvotes": 0, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13rojf", "clicked": false, "title": "Gaussian Distributions form Monoids", "num_comments": 0, "comments": [], "score": 4, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 4, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/13rojf/gaussian_distributions_form_monoids/", "has_more_comments": false, "name": "t3_13rojf", "created": 1353868990.0, "url": "http://izbicki.me/blog/gausian-distributions-are-monoids", "author_flair_text": null, "author": "mepcotterell", "created_utc": 1353868990.0, "link_flair_text": null, "media": null, "num_reports": null}, "221": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 3, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I hope this is alright to ask here. This was posed as extra credit for my algorithms class, with any and all resources allowed, including the internet.&lt;/p&gt;\n\n&lt;p&gt;The assignment is to give an example of a case where the First Fit Decreasing solution to the 1-dimensional bin packing problem is exactly 71/42 OPT. Some additional information was given to us. First, this is an undergrad algorithms class, and nobody in the graduate class was able to solve it, so there must be some required techniques that we have not covered in class. Second, we were given a hint: in the TA&amp;#39;s office posted on the door, there is a photo of the door itself with two Eyes of Horus. Third, the TA proved this a few years ago, but it was never published.&lt;/p&gt;\n\n&lt;p&gt;Can anyone lead me in the right direction?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I hope this is alright to ask here. This was posed as extra credit for my algorithms class, with any and all resources allowed, including the internet.\n\nThe assignment is to give an example of a case where the First Fit Decreasing solution to the 1-dimensional bin packing problem is exactly 71/42 OPT. Some additional information was given to us. First, this is an undergrad algorithms class, and nobody in the graduate class was able to solve it, so there must be some required techniques that we have not covered in class. Second, we were given a hint: in the TA's office posted on the door, there is a photo of the door itself with two Eyes of Horus. Third, the TA proved this a few years ago, but it was never published.\n\nCan anyone lead me in the right direction?", "saved": false, "id": "13rkr0", "clicked": false, "title": "1-dimensional bin packing: FFD vs Optimal", "num_comments": 6, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13rkr0", "children": [], "author": "craiig", "id": "c76kct1", "parent_id": "t3_13rkr0", "score": 0, "approved_by": null, "upvotes": 1, "body": "Go to [wikipedia's article on bin packing](http://en.wikipedia.org/wiki/Bin_packing_problem#Analysis_of_approximate_algorithms) and follow the citations in the analysis section. Look and see what the cited papers do for analysis (i.e. how did they show that their bounds were correct?) and see if you can apply a similar technique to your problem.\n\nNot a lot of help, I know, but it's a start.", "edited": 1353871012.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Go to &lt;a href=\"http://en.wikipedia.org/wiki/Bin_packing_problem#Analysis_of_approximate_algorithms\"&gt;wikipedia&amp;#39;s article on bin packing&lt;/a&gt; and follow the citations in the analysis section. Look and see what the cited papers do for analysis (i.e. how did they show that their bounds were correct?) and see if you can apply a similar technique to your problem.&lt;/p&gt;\n\n&lt;p&gt;Not a lot of help, I know, but it&amp;#39;s a start.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76kct1", "flair_text": null, "created": 1353874335.0, "created_utc": 1353870735.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13rkr0", "children": [], "author": "imMAW", "id": "c78fay2", "parent_id": "t3_13rkr0", "score": 0, "approved_by": null, "upvotes": 1, "body": "I'm probably misunderstanding something about your question, or maybe I don't know what FFD is, because this example is pretty easy to come up with:\n\n1 bin of size 71.\n3 objects of size 42, 36, 35.\nFFD will put in the object of size 42, while the optimal solution is 36+35.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m probably misunderstanding something about your question, or maybe I don&amp;#39;t know what FFD is, because this example is pretty easy to come up with:&lt;/p&gt;\n\n&lt;p&gt;1 bin of size 71.\n3 objects of size 42, 36, 35.\nFFD will put in the object of size 42, while the optimal solution is 36+35.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c78fay2", "flair_text": null, "created": 1354166210.0, "created_utc": 1354162610.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13rkr0", "children": [], "author": "jacktheripper153", "id": "c7b9ujy", "parent_id": "t3_13rkr0", "score": 0, "approved_by": null, "upvotes": 1, "body": "How is this going? Any results?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;How is this going? Any results?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7b9ujy", "flair_text": null, "created": 1354664240.0, "created_utc": 1354660640.0, "num_reports": null}], "score": 1, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 4, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13rkr0/1dimensional_bin_packing_ffd_vs_optimal/", "has_more_comments": false, "name": "t3_13rkr0", "created": 1353864822.0, "url": "http://www.reddit.com/r/compsci/comments/13rkr0/1dimensional_bin_packing_ffd_vs_optimal/", "author_flair_text": null, "author": "no_detection", "created_utc": 1353864822.0, "link_flair_text": null, "media": null, "num_reports": null}, "222": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 16, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;(If you know of a better subreddit for me to ask this, let me know)&lt;/p&gt;\n\n&lt;p&gt;Let&amp;#39;s say two threads T1 and T2 are running on the same CPU and therefore of course share the same L1 cache. If T1 brings in 0xbeef, and then T1 gets switched out for T2 and T2 also needs 0xbeef, does T2 get to access this data directly, or is the L1 swapped out and T2 re-requests it from again from L2?&lt;/p&gt;\n\n&lt;p&gt;I would assume the former, but this picture gets muddier when then considering what happens with transactional memory. Same situation, but T1 speculatively modifies 0xbeef, and then T2 gets swapped in before T1 commits. Wouldn&amp;#39;t T2 (incorrectly) see the uncommitted value, assuming the previous case? This is what led me to believe that T1 and T2 must see different state for 0xbeef in the L1. Either that or on a context switch L1 cache gets swapped out, but I have a hard time believing this to be the case.&lt;/p&gt;\n\n&lt;p&gt;Perhaps processors that support transactional memory just keep extra state for each cache line in the L1 to say that the line only belongs to certain threads? But then doesn&amp;#39;t this imply that a thread ID is stored with the speculatively changed cache line? Seems like a lot of overhead.&lt;/p&gt;\n\n&lt;p&gt;Thanks for any insight here.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "(If you know of a better subreddit for me to ask this, let me know)\n\nLet's say two threads T1 and T2 are running on the same CPU and therefore of course share the same L1 cache. If T1 brings in 0xbeef, and then T1 gets switched out for T2 and T2 also needs 0xbeef, does T2 get to access this data directly, or is the L1 swapped out and T2 re-requests it from again from L2?\n\nI would assume the former, but this picture gets muddier when then considering what happens with transactional memory. Same situation, but T1 speculatively modifies 0xbeef, and then T2 gets swapped in before T1 commits. Wouldn't T2 (incorrectly) see the uncommitted value, assuming the previous case? This is what led me to believe that T1 and T2 must see different state for 0xbeef in the L1. Either that or on a context switch L1 cache gets swapped out, but I have a hard time believing this to be the case.\n\nPerhaps processors that support transactional memory just keep extra state for each cache line in the L1 to say that the line only belongs to certain threads? But then doesn't this imply that a thread ID is stored with the speculatively changed cache line? Seems like a lot of overhead.\n\nThanks for any insight here.", "saved": false, "id": "13okv1", "clicked": false, "title": "Question on the behavior of L1 cache given transactional memory...", "num_comments": 15, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_13okv1", "children": [], "author": "grundee", "id": "c75r7wz", "parent_id": "t3_13okv1", "score": 0, "approved_by": null, "upvotes": 13, "body": "In the non-transactional case you describe, if T1 writes the data to the L1 cache and then T2 reads that value, it will get the value from the L1 cache (since the data is stored there it will hit on a cache read).\n\nThe transactional case is more complicated for a number of reasons. The biggest is: what do you mean by swapping threads here? If T1 does not commit by the time a timer interrupt or something occurs, the behavior of hardware transactional memory is implementation specific. Some implementations would abort the transaction, rolling back T1 to before the transaction began, before executing T2. So the new value is discarded and T2 will read the old value. [This paper](https://agora.cs.illinois.edu/download/attachments/6848874/16_sosp2007-fp56-rossbach.pdf) proposes a way to integrate handling transactional memory into the operating system by pushing transaction state onto a transaction stack of sorts; I imagine that in this case T2 would still read the old value since T1 did not commit.\n\nIn any case, it is implementation specific what will happen on thread switches on a single processor. The answer is clear that T2 will read the pre-transaction state if it is running on a separate processor. I think the paper I linked to before and [this paper](http://www.cs.brown.edu/~mph/HerlihyM93/herlihy93transactional.pdf) linked to from the Wikipedia article can explain some of these cases.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In the non-transactional case you describe, if T1 writes the data to the L1 cache and then T2 reads that value, it will get the value from the L1 cache (since the data is stored there it will hit on a cache read).&lt;/p&gt;\n\n&lt;p&gt;The transactional case is more complicated for a number of reasons. The biggest is: what do you mean by swapping threads here? If T1 does not commit by the time a timer interrupt or something occurs, the behavior of hardware transactional memory is implementation specific. Some implementations would abort the transaction, rolling back T1 to before the transaction began, before executing T2. So the new value is discarded and T2 will read the old value. &lt;a href=\"https://agora.cs.illinois.edu/download/attachments/6848874/16_sosp2007-fp56-rossbach.pdf\"&gt;This paper&lt;/a&gt; proposes a way to integrate handling transactional memory into the operating system by pushing transaction state onto a transaction stack of sorts; I imagine that in this case T2 would still read the old value since T1 did not commit.&lt;/p&gt;\n\n&lt;p&gt;In any case, it is implementation specific what will happen on thread switches on a single processor. The answer is clear that T2 will read the pre-transaction state if it is running on a separate processor. I think the paper I linked to before and &lt;a href=\"http://www.cs.brown.edu/%7Emph/HerlihyM93/herlihy93transactional.pdf\"&gt;this paper&lt;/a&gt; linked to from the Wikipedia article can explain some of these cases.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75r7wz", "flair_text": null, "created": 1353711137.0, "created_utc": 1353707537.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13okv1", "children": [], "author": "cfallin", "id": "c75rlge", "parent_id": "t3_13okv1", "score": 0, "approved_by": null, "upvotes": 7, "body": "First, to clarify your questions about the baseline -- in an SMT processor, threads run *at the same time* (because the pipeline is superscalar and can execute multiple instructions per cycle), and don't get swapped out. If you're asking about software-level (OS-initiated) context switching instead, that's something very different from the hardware point of view.\n\nSecond, L1 cache -- no, it doesn't get swapped out for different threads; it just sees a continuous stream of requests from the currently running thread, or threads, and updates its contents as appropriate. When a thread runs for long enough it will eventually replace the L1's contents with its own working set.\n\nNow, onto the question: in the case you describe, T2 cannot read T1's modified value; doing so would be a violation of the principle that a transaction's uncommitted state is invisible (from other threads) until atomically committed. The processor would have to be designed to enforce this somehow if it supported multithreading and shared the L1 between threads. For example, it could support multiple versions of a given cache block; or the core could keep speculative state in the store queue somehow until a transaction commits, and not modify the L1; or (the cheapest option) the processor could simply abort a thread if it tries to read modified state by another thread in a transaction on the same core. Then this just a performance / forward progress issue, not a correctness issue.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;First, to clarify your questions about the baseline -- in an SMT processor, threads run &lt;em&gt;at the same time&lt;/em&gt; (because the pipeline is superscalar and can execute multiple instructions per cycle), and don&amp;#39;t get swapped out. If you&amp;#39;re asking about software-level (OS-initiated) context switching instead, that&amp;#39;s something very different from the hardware point of view.&lt;/p&gt;\n\n&lt;p&gt;Second, L1 cache -- no, it doesn&amp;#39;t get swapped out for different threads; it just sees a continuous stream of requests from the currently running thread, or threads, and updates its contents as appropriate. When a thread runs for long enough it will eventually replace the L1&amp;#39;s contents with its own working set.&lt;/p&gt;\n\n&lt;p&gt;Now, onto the question: in the case you describe, T2 cannot read T1&amp;#39;s modified value; doing so would be a violation of the principle that a transaction&amp;#39;s uncommitted state is invisible (from other threads) until atomically committed. The processor would have to be designed to enforce this somehow if it supported multithreading and shared the L1 between threads. For example, it could support multiple versions of a given cache block; or the core could keep speculative state in the store queue somehow until a transaction commits, and not modify the L1; or (the cheapest option) the processor could simply abort a thread if it tries to read modified state by another thread in a transaction on the same core. Then this just a performance / forward progress issue, not a correctness issue.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75rlge", "flair_text": null, "created": 1353712883.0, "created_utc": 1353709283.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13okv1", "children": [], "author": "glenlivet", "id": "c75qudt", "parent_id": "t3_13okv1", "score": 0, "approved_by": null, "upvotes": 5, "body": "I'm no expert on transactional hardware memory but I'm pretty sure that the design should prevent situation like the one you described. \n\nFor transactional hardware memory it is not sufficient to adapt the memory...processor, bus and cache coherence protocoll should be able to prevent a thread from being preempted while in a transaction. It is perhaps possible to keep two versions, but as you mentioned the overhead is quite extensive. So its better to not swap it out while the transaction is not commited.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m no expert on transactional hardware memory but I&amp;#39;m pretty sure that the design should prevent situation like the one you described. &lt;/p&gt;\n\n&lt;p&gt;For transactional hardware memory it is not sufficient to adapt the memory...processor, bus and cache coherence protocoll should be able to prevent a thread from being preempted while in a transaction. It is perhaps possible to keep two versions, but as you mentioned the overhead is quite extensive. So its better to not swap it out while the transaction is not commited.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75qudt", "flair_text": null, "created": 1353709404.0, "created_utc": 1353705804.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13okv1", "children": [], "author": "jij", "id": "c75qylt", "parent_id": "t3_13okv1", "score": 0, "approved_by": null, "upvotes": 1, "body": "From what I just looked at, consumer hardware doesn't support it, it's implemented in software... so either the OS or code engine like the java vm would implement memory in a way to basically accomplish this.  \n\nhttp://en.wikipedia.org/wiki/Transactional_memory", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;From what I just looked at, consumer hardware doesn&amp;#39;t support it, it&amp;#39;s implemented in software... so either the OS or code engine like the java vm would implement memory in a way to basically accomplish this.  &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Transactional_memory\"&gt;http://en.wikipedia.org/wiki/Transactional_memory&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75qylt", "flair_text": null, "created": 1353709962.0, "created_utc": 1353706362.0, "num_reports": null}], "score": 23, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 39, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13okv1/question_on_the_behavior_of_l1_cache_given/", "has_more_comments": false, "name": "t3_13okv1", "created": 1353703658.0, "url": "http://www.reddit.com/r/compsci/comments/13okv1/question_on_the_behavior_of_l1_cache_given/", "author_flair_text": null, "author": "cudtastic", "created_utc": 1353703658.0, "link_flair_text": null, "media": null, "num_reports": null}, "223": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 27, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m the maintainer of the computer science &lt;a href=\"http://jeffhuang.com/best_paper_awards.html\"&gt;best paper awards page&lt;/a&gt; that occasionally pops up on this subreddit, e.g. &lt;a href=\"http://www.reddit.com/r/compsci/comments/ngx06/best_papers_in_computer_science_research_from_the/\"&gt;here&lt;/a&gt; and &lt;a href=\"http://www.reddit.com/r/compsci/comments/ethtg/every_best_paper_award_from_top_computer_science/\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;I think there could be tremendous value to the community in building a new resource: a spreadsheet/wiki of computer science faculty, and information about them. For example, &lt;a href=\"http://sdrv.ms/WmYZgW\"&gt;I did the one for University of Washington&lt;/a&gt; and their subfield, hiring year, title, and schools they went to earn their prior degrees.&lt;/p&gt;\n\n&lt;p&gt;Why is this useful?&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Graduate applications: Students who want to apply to grad schools in Networking can immediately look up the active faculty in that area and their seniority (untenured vs tenured). It&amp;#39;s also easy to see which universities have a presence in less-ubiquitous subfields like HCI or Information Retrieval.&lt;/li&gt;\n&lt;li&gt;We can find out academic hiring trends for different subfields in computer science: which subfields have top computer science departments hired in the past 5 years? How was academic hiring affected by the economy?&lt;/li&gt;\n&lt;li&gt;Department rankings: When DepartmentA hires a faculty from DepartmentB, it indicates that DepartmentA recognizes the quality of this student from DepartmentB. We can compute the PageRank for CS departments treating DepartmentA-&amp;gt;DepartmentB as a link, giving us an objective ranking of CS departments. The current gold standard, US News, is &lt;a href=\"http://en.wikipedia.org/wiki/Criticism_of_college_and_university_rankings_(North_America)\"&gt;controversial&lt;/a&gt; because of it&amp;#39;s based on subjective department chair surveys with poor response rates; this could be a USNews Killer, and include universities outside the United States.&lt;/li&gt;\n&lt;li&gt;Tons of other stuff on CS trends, correlation findings like: &amp;quot;on average phd students will get a faculty job at a department 10 ranks below their phd department, but doing a postdoc will bump that up by 15 ranks.&amp;quot;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;If we had complete listings for the top 100 computer science departments, this would be amazingly useful already. I imagine it takes an hour or two to fill out the information for each department (which have 10-50 professors). The information is already out there on department websites, on faculty personal homepages, or in faculty CVs and bios. This means if a couple dozen people contributed a few departments each, we&amp;#39;d have a complete listing by the end of the year.&lt;/p&gt;\n\n&lt;p&gt;Is this something people in this subreddit would be willing to contribute some time for? This could be a useful resource for the community, but I need your help.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; This is going to happen! So far I&amp;#39;ve recruited half a dozen people, and sent PMs to those who commented. Reply back with your email so I can share the document with you.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm the maintainer of the computer science [best paper awards page](http://jeffhuang.com/best_paper_awards.html) that occasionally pops up on this subreddit, e.g. [here](http://www.reddit.com/r/compsci/comments/ngx06/best_papers_in_computer_science_research_from_the/) and [here](http://www.reddit.com/r/compsci/comments/ethtg/every_best_paper_award_from_top_computer_science/).\n\nI think there could be tremendous value to the community in building a new resource: a spreadsheet/wiki of computer science faculty, and information about them. For example, [I did the one for University of Washington](http://sdrv.ms/WmYZgW) and their subfield, hiring year, title, and schools they went to earn their prior degrees.\n\nWhy is this useful?\n\n* Graduate applications: Students who want to apply to grad schools in Networking can immediately look up the active faculty in that area and their seniority (untenured vs tenured). It's also easy to see which universities have a presence in less-ubiquitous subfields like HCI or Information Retrieval.\n* We can find out academic hiring trends for different subfields in computer science: which subfields have top computer science departments hired in the past 5 years? How was academic hiring affected by the economy?\n* Department rankings: When DepartmentA hires a faculty from DepartmentB, it indicates that DepartmentA recognizes the quality of this student from DepartmentB. We can compute the PageRank for CS departments treating DepartmentA-&gt;DepartmentB as a link, giving us an objective ranking of CS departments. The current gold standard, US News, is [controversial](http://en.wikipedia.org/wiki/Criticism_of_college_and_university_rankings_(North_America\\)) because of it's based on subjective department chair surveys with poor response rates; this could be a USNews Killer, and include universities outside the United States.\n* Tons of other stuff on CS trends, correlation findings like: \"on average phd students will get a faculty job at a department 10 ranks below their phd department, but doing a postdoc will bump that up by 15 ranks.\"\n\nIf we had complete listings for the top 100 computer science departments, this would be amazingly useful already. I imagine it takes an hour or two to fill out the information for each department (which have 10-50 professors). The information is already out there on department websites, on faculty personal homepages, or in faculty CVs and bios. This means if a couple dozen people contributed a few departments each, we'd have a complete listing by the end of the year.\n\nIs this something people in this subreddit would be willing to contribute some time for? This could be a useful resource for the community, but I need your help.\n\n**Update:** This is going to happen! So far I've recruited half a dozen people, and sent PMs to those who commented. Reply back with your email so I can share the document with you.", "saved": false, "id": "13ntq4", "clicked": false, "title": "Could we work together to compile a listing of computer science professors, their subfield, affiliation, and past degrees?", "num_comments": 27, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13ntq4", "children": [], "author": "kennylasalzo", "id": "c75k2oy", "parent_id": "t3_13ntq4", "score": 0, "approved_by": null, "upvotes": 8, "body": "I would have found something like this really useful when I applied for Phd programs a few years back. The application form asked which professors I was interested in working with and I kind of blew that off, which I think hurt my application. I also didn't know much about universities since I went to a small liberal arts college and none of my friends were continuing on to grad school. Although I wonder if the spreadsheet will show that SLAC undergraduates don't have much of a chance getting into Ivy League Phd programs.\n\nAnyways, I registered a Reddit account just to help out! I'll check back on this thread in a few days.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I would have found something like this really useful when I applied for Phd programs a few years back. The application form asked which professors I was interested in working with and I kind of blew that off, which I think hurt my application. I also didn&amp;#39;t know much about universities since I went to a small liberal arts college and none of my friends were continuing on to grad school. Although I wonder if the spreadsheet will show that SLAC undergraduates don&amp;#39;t have much of a chance getting into Ivy League Phd programs.&lt;/p&gt;\n\n&lt;p&gt;Anyways, I registered a Reddit account just to help out! I&amp;#39;ll check back on this thread in a few days.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75k2oy", "flair_text": null, "created": 1353668079.0, "created_utc": 1353664479.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13ntq4", "children": [], "author": "logi", "id": "c75k602", "parent_id": "t3_13ntq4", "score": 0, "approved_by": null, "upvotes": 6, "body": "Maybe link to their thesis supervisor as well and you have a family tree.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Maybe link to their thesis supervisor as well and you have a family tree.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75k602", "flair_text": null, "created": 1353669060.0, "created_utc": 1353665460.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13ntq4", "children": [], "author": "qxnt", "id": "c75nbq6", "parent_id": "t3_13ntq4", "score": 0, "approved_by": null, "upvotes": 6, "body": "This sounds like a job for Mechanical Turk.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This sounds like a job for Mechanical Turk.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75nbq6", "flair_text": null, "created": 1353693449.0, "created_utc": 1353689849.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13ntq4", "children": [], "author": "AustinCorgiBart", "id": "c75ng5y", "parent_id": "t3_13ntq4", "score": 0, "approved_by": null, "upvotes": 3, "body": "Having just gotten to graduate school, this is something I would have loved dearly. I'm busy finishing my first semester now, but over winter break I'd like to get involved in this project. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Having just gotten to graduate school, this is something I would have loved dearly. I&amp;#39;m busy finishing my first semester now, but over winter break I&amp;#39;d like to get involved in this project. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75ng5y", "flair_text": null, "created": 1353694013.0, "created_utc": 1353690413.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13ntq4", "children": [], "author": "TUR_", "id": "c75jy1f", "parent_id": "t3_13ntq4", "score": 0, "approved_by": null, "upvotes": 2, "body": "Well here's the uc berkeley cs department site: http://www.cs.berkeley.edu/ \nMaybe you should start an edit with a TLDR and links to departments? I got you covered for a few entries if you want, just PM me.", "edited": 1353663592.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well here&amp;#39;s the uc berkeley cs department site: &lt;a href=\"http://www.cs.berkeley.edu/\"&gt;http://www.cs.berkeley.edu/&lt;/a&gt; \nMaybe you should start an edit with a TLDR and links to departments? I got you covered for a few entries if you want, just PM me.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75jy1f", "flair_text": null, "created": 1353666780.0, "created_utc": 1353663180.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13ntq4", "children": [], "author": "leondz", "id": "c75kqej", "parent_id": "t3_13ntq4", "score": 0, "approved_by": null, "upvotes": 2, "body": "Thanks for your page! I hop back to it every once in a while, especially when working with CS researchers in a new (to me) discipline. It's helpful.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thanks for your page! I hop back to it every once in a while, especially when working with CS researchers in a new (to me) discipline. It&amp;#39;s helpful.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75kqej", "flair_text": null, "created": 1353675760.0, "created_utc": 1353672160.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13ntq4", "children": [], "author": "metaobject", "id": "c75mdrk", "parent_id": "t3_13ntq4", "score": 0, "approved_by": null, "upvotes": 2, "body": "This sounds like it could be an interesting web mining project.  This would allow for easier updating (tracking new hires, retires, transfers, etc), and perhaps some ML techniques could be used to discover trends,", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This sounds like it could be an interesting web mining project.  This would allow for easier updating (tracking new hires, retires, transfers, etc), and perhaps some ML techniques could be used to discover trends,&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75mdrk", "flair_text": null, "created": 1353688814.0, "created_utc": 1353685214.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13ntq4", "children": [], "author": "dodgej", "id": "c75qan2", "parent_id": "t3_13ntq4", "score": 0, "approved_by": null, "upvotes": 1, "body": "To make this as useful as possible, I think we should have a limited set of fields that people can write in. This would be a problem if, for example, one person were to write that a professor worked on \"machine learning\" and another were to write \"statistical machine learning\", they would technically be in different categories and wouldn't be next to each other if one were to sort by research area.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;To make this as useful as possible, I think we should have a limited set of fields that people can write in. This would be a problem if, for example, one person were to write that a professor worked on &amp;quot;machine learning&amp;quot; and another were to write &amp;quot;statistical machine learning&amp;quot;, they would technically be in different categories and wouldn&amp;#39;t be next to each other if one were to sort by research area.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75qan2", "flair_text": null, "created": 1353706810.0, "created_utc": 1353703210.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13ntq4", "children": [], "author": "ferromagnificent", "id": "c75uz8d", "parent_id": "t3_13ntq4", "score": 0, "approved_by": null, "upvotes": 2, "body": "Jeff, how come your list doesn't have any of the computer architecture conferences (ISCA, MICRO, HPCA, ASPLOS)? ISCA is probably the most competitive of the top-tier architecture conferences.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Jeff, how come your list doesn&amp;#39;t have any of the computer architecture conferences (ISCA, MICRO, HPCA, ASPLOS)? ISCA is probably the most competitive of the top-tier architecture conferences.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75uz8d", "flair_text": null, "created": 1353729067.0, "created_utc": 1353725467.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13ntq4", "children": [], "author": "delarhi", "id": "c75y1sq", "parent_id": "t3_13ntq4", "score": 0, "approved_by": null, "upvotes": 2, "body": "As an early MS student at UCLA with intentions of entering a PhD program, this would be a terribly useful list to simply compile for myself. I'll be happy to work on a UCLA list. Perhaps a Google Form will keep things in format?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As an early MS student at UCLA with intentions of entering a PhD program, this would be a terribly useful list to simply compile for myself. I&amp;#39;ll be happy to work on a UCLA list. Perhaps a Google Form will keep things in format?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75y1sq", "flair_text": null, "created": 1353744140.0, "created_utc": 1353740540.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13ntq4", "children": [], "author": "meatbeezzz", "id": "c76cbig", "parent_id": "t3_13ntq4", "score": 0, "approved_by": null, "upvotes": 1, "body": "This sounds like the making of a great resource.  I would recommend making the subfields more flexible, perhaps keeping a set of keywords instead of a single identifier.  Otherwise interdisciplinary research and inconsistent naming could muck things up.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This sounds like the making of a great resource.  I would recommend making the subfields more flexible, perhaps keeping a set of keywords instead of a single identifier.  Otherwise interdisciplinary research and inconsistent naming could muck things up.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76cbig", "flair_text": null, "created": 1353823646.0, "created_utc": 1353820046.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13ntq4", "children": [], "author": "sfvisser", "id": "c76irzx", "parent_id": "t3_13ntq4", "score": 0, "approved_by": null, "upvotes": 1, "body": "Interesting idea! \n\nYou might want to consider creating a Silk site for this. Silk is a (free) online hosted semantic wiki, allowing to create wiki-like sites with a focus on structured content. By tagging part of your content with facts you can build up a semantic database that can be queried instantly.\n\nFor an example check out this simple demo site: http://solarsystem.silkapp.com/\n\ndisclaimer: I'm one of the developers at Silk. But, as a former computer science student with the long term ambition of doing a PhD somewhere in the future I really like this idea. Silk might be a good fit for your idea, drop me a line if you want to know more.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Interesting idea! &lt;/p&gt;\n\n&lt;p&gt;You might want to consider creating a Silk site for this. Silk is a (free) online hosted semantic wiki, allowing to create wiki-like sites with a focus on structured content. By tagging part of your content with facts you can build up a semantic database that can be queried instantly.&lt;/p&gt;\n\n&lt;p&gt;For an example check out this simple demo site: &lt;a href=\"http://solarsystem.silkapp.com/\"&gt;http://solarsystem.silkapp.com/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;disclaimer: I&amp;#39;m one of the developers at Silk. But, as a former computer science student with the long term ambition of doing a PhD somewhere in the future I really like this idea. Silk might be a good fit for your idea, drop me a line if you want to know more.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76irzx", "flair_text": null, "created": 1353868302.0, "created_utc": 1353864702.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13ntq4", "children": [], "author": "JustPlainRude", "id": "c76jcoi", "parent_id": "t3_13ntq4", "score": 0, "approved_by": null, "upvotes": 1, "body": "Most of these people will already be on linkedin - any way to mine the info from there?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Most of these people will already be on linkedin - any way to mine the info from there?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76jcoi", "flair_text": null, "created": 1353870594.0, "created_utc": 1353866994.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13ntq4", "children": [], "author": "oridb", "id": "c77maph", "parent_id": "t3_13ntq4", "score": 0, "approved_by": null, "upvotes": 2, "body": "Microsoft seems to have done this already:\n\nhttp://academic.research.microsoft.com/RankList?entitytype=2&amp;topDomainID=2&amp;subDomainID=0", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Microsoft seems to have done this already:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://academic.research.microsoft.com/RankList?entitytype=2&amp;amp;topDomainID=2&amp;amp;subDomainID=0\"&gt;http://academic.research.microsoft.com/RankList?entitytype=2&amp;amp;topDomainID=2&amp;amp;subDomainID=0&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c77maph", "flair_text": null, "created": 1354044298.0, "created_utc": 1354040698.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13ntq4", "children": [], "author": "kidnappster", "id": "c77usrw", "parent_id": "t3_13ntq4", "score": 0, "approved_by": null, "upvotes": 1, "body": "I'm willing to do the data entry for Baylor. PM me once you get it all figured out!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m willing to do the data entry for Baylor. PM me once you get it all figured out!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c77usrw", "flair_text": null, "created": 1354073667.0, "created_utc": 1354070067.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13ntq4", "children": [], "author": "sirgerbil", "id": "c77wvsq", "parent_id": "t3_13ntq4", "score": 0, "approved_by": null, "upvotes": 2, "body": "I got Georgia Tech computer science covered if you want to PM me. I could give you information about any computer science professor I know (or could look up.) This sounds like an awesome project that I would love to partake in.\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I got Georgia Tech computer science covered if you want to PM me. I could give you information about any computer science professor I know (or could look up.) This sounds like an awesome project that I would love to partake in.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c77wvsq", "flair_text": null, "created": 1354081622.0, "created_utc": 1354078022.0, "num_reports": null}], "score": 39, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 66, "hidden": false, "thumbnail": "", "edited": 1354923552.0, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13ntq4/could_we_work_together_to_compile_a_listing_of/", "has_more_comments": false, "name": "t3_13ntq4", "created": 1353662507.0, "url": "http://www.reddit.com/r/compsci/comments/13ntq4/could_we_work_together_to_compile_a_listing_of/", "author_flair_text": null, "author": "seattlejeff", "created_utc": 1353662507.0, "link_flair_text": null, "media": null, "num_reports": null}, "224": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 12, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Wouldn&amp;#39;t r/compsci and math related subreddits benefit from &lt;a href=\"http://www.mathjax.org/\"&gt;MathJax&lt;/a&gt; support? I would love to be able to do something like $x^2$ etc. and have it render correctly.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Wouldn't r/compsci and math related subreddits benefit from [MathJax](http://www.mathjax.org/) support? I would love to be able to do something like $x\\^2$ etc. and have it render correctly.", "saved": false, "id": "13n2sg", "clicked": false, "title": "MathJax for reddit?", "num_comments": 4, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13n2sg", "children": [], "author": "fuckyounicks", "id": "c75dgf6", "parent_id": "t3_13n2sg", "score": 0, "approved_by": null, "upvotes": 9, "body": "**From /r/math:**\n\n\nUsing LaTeX\n\n[Greasemonkey plugin](http://userscripts.org/scripts/show/92758)\n\n[This plugin](https://chrome.google.com/webstore/detail/mbfninnbhfepghkkcgdnmfmhhbjmhggn) works better on Chrome.\n\nPlugin based on TeX The World and modified by wsdenker.\n[; e^{\\pi i}+1=0 ; ]\n\nPost the equation above like this:\n`[; e^{\\pi i}+1=0 ; ]`\nYou may need to add four spaces before or put backticks around math fragments.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;From &lt;a href=\"/r/math\"&gt;/r/math&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Using LaTeX&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://userscripts.org/scripts/show/92758\"&gt;Greasemonkey plugin&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://chrome.google.com/webstore/detail/mbfninnbhfepghkkcgdnmfmhhbjmhggn\"&gt;This plugin&lt;/a&gt; works better on Chrome.&lt;/p&gt;\n\n&lt;p&gt;Plugin based on TeX The World and modified by wsdenker.\n[; e&lt;sup&gt;{\\pi&lt;/sup&gt; i}+1=0 ; ]&lt;/p&gt;\n\n&lt;p&gt;Post the equation above like this:\n&lt;code&gt;[; e^{\\pi i}+1=0 ; ]&lt;/code&gt;\nYou may need to add four spaces before or put backticks around math fragments.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75dgf6", "flair_text": null, "created": 1353631427.0, "created_utc": 1353627827.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13n2sg", "children": [], "author": "liloboy", "id": "c75kj3c", "parent_id": "t3_13n2sg", "score": 0, "approved_by": null, "upvotes": 3, "body": "This is a great idea. To have math display correctly without installing scripts or plugins.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is a great idea. To have math display correctly without installing scripts or plugins.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75kj3c", "flair_text": null, "created": 1353673339.0, "created_utc": 1353669739.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13n2sg", "children": [], "author": "abusque", "id": "c75dgqu", "parent_id": "t3_13n2sg", "score": 0, "approved_by": null, "upvotes": 1, "body": "I know /r/math uses a greasemonkey script and a similar extension on other browsers to render LaTeX, provided it is between the following delimiters: [; ;]\n\nWorks pretty well.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I know &lt;a href=\"/r/math\"&gt;/r/math&lt;/a&gt; uses a greasemonkey script and a similar extension on other browsers to render LaTeX, provided it is between the following delimiters: [; ;]&lt;/p&gt;\n\n&lt;p&gt;Works pretty well.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75dgqu", "flair_text": null, "created": 1353631473.0, "created_utc": 1353627873.0, "num_reports": null}], "score": 28, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 40, "hidden": false, "thumbnail": "", "edited": false, "modhash": "op55bdffwn7b2fe548ed92a49b6d2f17b251fcdb2b9df02641", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13n2sg/mathjax_for_reddit/", "has_more_comments": false, "name": "t3_13n2sg", "created": 1353625121.0, "url": "http://www.reddit.com/r/compsci/comments/13n2sg/mathjax_for_reddit/", "author_flair_text": null, "author": "realz-slaw", "created_utc": 1353625121.0, "link_flair_text": null, "media": null, "num_reports": null}, "225": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 6, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am looking for breakdown and statistics of the types of assembly instructions that occur running certain popular programs/benchmarks, e.g. &lt;/p&gt;\n\n&lt;p&gt;Program: Angry Birds (lol I don&amp;#39;t know); CPU usage:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;ADD/MUL/SUB/LOGICAL - 50%&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;LOAD - 10%&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;STORE - 10%&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;FLOATING POINT - 5%&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;CONDITIONAL JUMP - 15%&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;UNCONDITIONAL JUMP - 10%&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Given that these may or may not be available for various software, what are some techniques and tools I can use to run a program, save what instructions were executed, and then analyze it myself after? &lt;/p&gt;\n\n&lt;p&gt;In terms of platforms, I&amp;#39;m mainly interested in ARM and other RISC architectures, but x86 microcode would be cool as well and might be easier to obtain I think. &lt;/p&gt;\n\n&lt;p&gt;Thanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I am looking for breakdown and statistics of the types of assembly instructions that occur running certain popular programs/benchmarks, e.g. \n\nProgram: Angry Birds (lol I don't know); CPU usage:\n\n* ADD/MUL/SUB/LOGICAL - 50%\n\n* LOAD - 10%\n\n* STORE - 10%\n\n* FLOATING POINT - 5%\n\n* CONDITIONAL JUMP - 15%\n\n* UNCONDITIONAL JUMP - 10%\n\n\nGiven that these may or may not be available for various software, what are some techniques and tools I can use to run a program, save what instructions were executed, and then analyze it myself after? \n\nIn terms of platforms, I'm mainly interested in ARM and other RISC architectures, but x86 microcode would be cool as well and might be easier to obtain I think. \n\nThanks", "saved": false, "id": "13n3kh", "clicked": false, "title": "Looking for statistics on assembly instruction breakdown per benchmark programs; or methods to do so", "num_comments": 14, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_13n3kh", "children": [], "author": "grundee", "id": "c75fnn1", "parent_id": "t3_13n3kh", "score": 0, "approved_by": null, "upvotes": 3, "body": "If you are looking for the frequency for a typical program run, you might want to take a look at an instrumentation tool like [Pin](http://www.pintool.org/). That tool can be used to instrument programs for architecture research (like simulating new caches, branch predictors, or even getting instruction frequencies like you want).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you are looking for the frequency for a typical program run, you might want to take a look at an instrumentation tool like &lt;a href=\"http://www.pintool.org/\"&gt;Pin&lt;/a&gt;. That tool can be used to instrument programs for architecture research (like simulating new caches, branch predictors, or even getting instruction frequencies like you want).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75fnn1", "flair_text": null, "created": 1353642478.0, "created_utc": 1353638878.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13n3kh", "children": [], "author": "Mr_P", "id": "c75er91", "parent_id": "t3_13n3kh", "score": 0, "approved_by": null, "upvotes": 1, "body": "You can use [objdump](http://en.wikipedia.org/wiki/Objdump) and basic text processing to do this.  For example, \n\n$ objdump -d executable | grep mov | wc\n\nwill output the number of mov instructions in the executable file.\n\nKeep in mind that this will output *all* instances of the instructions as they exist statically.  If you wish to get an actual count of the frequency of instructions executed with particular input, I suggest you look into using gdb or valgrind.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can use &lt;a href=\"http://en.wikipedia.org/wiki/Objdump\"&gt;objdump&lt;/a&gt; and basic text processing to do this.  For example, &lt;/p&gt;\n\n&lt;p&gt;$ objdump -d executable | grep mov | wc&lt;/p&gt;\n\n&lt;p&gt;will output the number of mov instructions in the executable file.&lt;/p&gt;\n\n&lt;p&gt;Keep in mind that this will output &lt;em&gt;all&lt;/em&gt; instances of the instructions as they exist statically.  If you wish to get an actual count of the frequency of instructions executed with particular input, I suggest you look into using gdb or valgrind.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75er91", "flair_text": null, "created": 1353638244.0, "created_utc": 1353634644.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13n3kh", "children": [], "author": "lucygucy", "id": "c75fopr", "parent_id": "t3_13n3kh", "score": 0, "approved_by": null, "upvotes": 2, "body": "There are performance counters available in virtually all modern microprocessors that can give this sort of breakdown, you might have to do multiple runs etc., to get all the bits of data you want eg., one run for floating point, one for jumps etc., (or there's counter multiplexing and statistical approximations). There is also variance in precisely what you can get out.\n\nOne of the standard pieces of software in this area seems to be the PAPI library and tools (most vaguely decent performance utilities should provide this data though!)\n\nUnlike objdump and friends, this will give you the instruction types that actually occur, rather than the instructions that occur in the program; there could be major differences in say:\n\n    void mul(double array[], double factor, size_t length) {\n       for(i=0;i&lt;length;++i) \n           array[i]*= factor;\n    }\n\nOne thing to watch out for is that there are differences in how things are called. Some platforms might not have unconditional jumps, others might just use conditional jumps unconditionally because it's more efficient. (Also, especially, with operations like multiply-accumulates, some architectures will count this as one operation, others will count two; a multiply and an accumulate)\n\nIf you want loads of detail about the exact instructions you might have to get into writing a plugin for valgrind or similar.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There are performance counters available in virtually all modern microprocessors that can give this sort of breakdown, you might have to do multiple runs etc., to get all the bits of data you want eg., one run for floating point, one for jumps etc., (or there&amp;#39;s counter multiplexing and statistical approximations). There is also variance in precisely what you can get out.&lt;/p&gt;\n\n&lt;p&gt;One of the standard pieces of software in this area seems to be the PAPI library and tools (most vaguely decent performance utilities should provide this data though!)&lt;/p&gt;\n\n&lt;p&gt;Unlike objdump and friends, this will give you the instruction types that actually occur, rather than the instructions that occur in the program; there could be major differences in say:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;void mul(double array[], double factor, size_t length) {\n   for(i=0;i&amp;lt;length;++i) \n       array[i]*= factor;\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;One thing to watch out for is that there are differences in how things are called. Some platforms might not have unconditional jumps, others might just use conditional jumps unconditionally because it&amp;#39;s more efficient. (Also, especially, with operations like multiply-accumulates, some architectures will count this as one operation, others will count two; a multiply and an accumulate)&lt;/p&gt;\n\n&lt;p&gt;If you want loads of detail about the exact instructions you might have to get into writing a plugin for valgrind or similar.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75fopr", "flair_text": null, "created": 1353642616.0, "created_utc": 1353639016.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13n3kh", "children": [], "author": "SkwisgarIsAmsDick", "id": "c75kdoq", "parent_id": "t3_13n3kh", "score": 0, "approved_by": null, "upvotes": 1, "body": "You could use an assembly interpreter. I wrote one for an architecture class. It provides stats on instruction types.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You could use an assembly interpreter. I wrote one for an architecture class. It provides stats on instruction types.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75kdoq", "flair_text": null, "created": 1353671535.0, "created_utc": 1353667935.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13n3kh", "children": [], "author": "Gnufreetard", "id": "c7ac9bl", "parent_id": "t3_13n3kh", "score": 0, "approved_by": null, "upvotes": 1, "body": "If you are using linux a specific program you can use is perf.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you are using linux a specific program you can use is perf.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ac9bl", "flair_text": null, "created": 1354516000.0, "created_utc": 1354512400.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 9, "link_id": "t3_13n3kh", "children": [], "author": "[deleted]", "id": "c75de9q", "parent_id": "t3_13n3kh", "score": 0, "approved_by": null, "upvotes": 4, "body": "[deleted]", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75de9q", "flair_text": null, "created": 1353631112.0, "created_utc": 1353627512.0, "num_reports": null}], "score": 5, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 11, "hidden": false, "thumbnail": "", "edited": 1353626790.0, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13n3kh/looking_for_statistics_on_assembly_instruction/", "has_more_comments": false, "name": "t3_13n3kh", "created": 1353626198.0, "url": "http://www.reddit.com/r/compsci/comments/13n3kh/looking_for_statistics_on_assembly_instruction/", "author_flair_text": null, "author": "vcxzzxcv", "created_utc": 1353626198.0, "link_flair_text": null, "media": null, "num_reports": null}, "226": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 18, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13lo53", "clicked": false, "title": "What's the most exciting paper or project you've recently seen?", "num_comments": 21, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_13lo53", "children": [], "author": "zorkmids", "id": "c752mlr", "parent_id": "t3_13lo53", "score": 0, "approved_by": null, "upvotes": 30, "body": "[Halide](http://people.csail.mit.edu/jrk/halide12/) is a cool domain-specific language for image processing applications.  (From SIGGRAPH 2012)\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://people.csail.mit.edu/jrk/halide12/\"&gt;Halide&lt;/a&gt; is a cool domain-specific language for image processing applications.  (From SIGGRAPH 2012)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c752mlr", "flair_text": null, "created": 1353564253.0, "created_utc": 1353560653.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 6, "link_id": "t3_13lo53", "children": [], "author": "veaviticus", "id": "c75252m", "parent_id": "t3_13lo53", "score": 0, "approved_by": null, "upvotes": 16, "body": "If you're into computer graphics \n\nReal time raytracing in game simulations\n\n[Paper](http://igad.nhtv.nl/~bikker/files/thesis_jbikker.pdf)\n\n[Demo] (http://igad.nhtv.nl/~bikker/)\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you&amp;#39;re into computer graphics &lt;/p&gt;\n\n&lt;p&gt;Real time raytracing in game simulations&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://igad.nhtv.nl/%7Ebikker/files/thesis_jbikker.pdf\"&gt;Paper&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://igad.nhtv.nl/%7Ebikker/\"&gt;Demo&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75252m", "flair_text": null, "created": 1353561907.0, "created_utc": 1353558307.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13lo53", "children": [], "author": "matthewfl", "id": "c754msh", "parent_id": "t3_13lo53", "score": 0, "approved_by": null, "upvotes": 8, "body": "I think google's new spanner database with the idea of representing time as a range as well as using GPS timing is quite interesting.\n[Spanner](http://research.google.com/archive/spanner.html)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think google&amp;#39;s new spanner database with the idea of representing time as a range as well as using GPS timing is quite interesting.\n&lt;a href=\"http://research.google.com/archive/spanner.html\"&gt;Spanner&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c754msh", "flair_text": null, "created": 1353575879.0, "created_utc": 1353572279.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13lo53", "children": [], "author": "realz-slaw", "id": "c7524ar", "parent_id": "t3_13lo53", "score": 0, "approved_by": null, "upvotes": 8, "body": "Dunno if it is the most exciting, but very interesting: https://hcrypt.com/shape-cpu/, https://hcrypt.com/scarab-library/, https://hcrypt.com/sfe/", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Dunno if it is the most exciting, but very interesting: &lt;a href=\"https://hcrypt.com/shape-cpu/\"&gt;https://hcrypt.com/shape-cpu/&lt;/a&gt;, &lt;a href=\"https://hcrypt.com/scarab-library/\"&gt;https://hcrypt.com/scarab-library/&lt;/a&gt;, &lt;a href=\"https://hcrypt.com/sfe/\"&gt;https://hcrypt.com/sfe/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7524ar", "flair_text": null, "created": 1353561805.0, "created_utc": 1353558205.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13lo53", "children": [], "author": "glenlivet", "id": "c755kd3", "parent_id": "t3_13lo53", "score": 0, "approved_by": null, "upvotes": 5, "body": "[Scalaris](https://code.google.com/p/scalaris/) - An transactional, distributed, replicated key value store with strong consistency implemented in Erlang.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://code.google.com/p/scalaris/\"&gt;Scalaris&lt;/a&gt; - An transactional, distributed, replicated key value store with strong consistency implemented in Erlang.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c755kd3", "flair_text": null, "created": 1353584865.0, "created_utc": 1353581265.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_13lo53", "children": [], "author": "Woflox", "id": "c75841y", "parent_id": "t3_13lo53", "score": 0, "approved_by": null, "upvotes": 8, "body": "[Smoothlife](http://arxiv.org/pdf/1111.1567v2.pdf) is a generalization of Conway's \"Game of Life\" to a\ncontinuous domain.\n\n[Youtube playlist](http://www.youtube.com/playlist?list=PL69EDA11384365494)\n\n[Some of the 3D ones are really cool](http://www.youtube.com/watch?v=zA857JdUn9o&amp;list=PL69EDA11384365494&amp;index=46&amp;feature=plpp_video)", "edited": 1353618717.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://arxiv.org/pdf/1111.1567v2.pdf\"&gt;Smoothlife&lt;/a&gt; is a generalization of Conway&amp;#39;s &amp;quot;Game of Life&amp;quot; to a\ncontinuous domain.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.youtube.com/playlist?list=PL69EDA11384365494\"&gt;Youtube playlist&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.youtube.com/watch?v=zA857JdUn9o&amp;amp;list=PL69EDA11384365494&amp;amp;index=46&amp;amp;feature=plpp_video\"&gt;Some of the 3D ones are really cool&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75841y", "flair_text": null, "created": 1353605647.0, "created_utc": 1353602047.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13lo53", "children": [], "author": "mikethepwnstar", "id": "c754ubp", "parent_id": "t3_13lo53", "score": 0, "approved_by": null, "upvotes": 3, "body": "This probably fits more to engineering, but I was at the Southern California Conference for Undergraduate Research (SCCUR) last weekend and saw someone who was looking into how the brain reacts when you move. He is looking to find a way to make prosthetic limbs be more workable like a real human one.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This probably fits more to engineering, but I was at the Southern California Conference for Undergraduate Research (SCCUR) last weekend and saw someone who was looking into how the brain reacts when you move. He is looking to find a way to make prosthetic limbs be more workable like a real human one.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c754ubp", "flair_text": null, "created": 1353577536.0, "created_utc": 1353573936.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13lo53", "children": [], "author": "tigers2004", "id": "c75a1fw", "parent_id": "t3_13lo53", "score": 0, "approved_by": null, "upvotes": 4, "body": "More Software Engineering than CompSci, but I still like it: \n[Causal Relationships between Improvements in Software Development Processes and Final Software Product Quality](http://www.ejise.com/issue/download.html?idArticle=575)\n\nBasically, it's the beginnings of some evidence for us process nerds to be able to empirically tell you cowboy coders that by doing X, your product quality will improve by Y.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;More Software Engineering than CompSci, but I still like it: \n&lt;a href=\"http://www.ejise.com/issue/download.html?idArticle=575\"&gt;Causal Relationships between Improvements in Software Development Processes and Final Software Product Quality&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Basically, it&amp;#39;s the beginnings of some evidence for us process nerds to be able to empirically tell you cowboy coders that by doing X, your product quality will improve by Y.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c75a1fw", "flair_text": null, "created": 1353614611.0, "created_utc": 1353611011.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13lo53", "children": [], "author": "Ais3", "id": "c755sz7", "parent_id": "t3_13lo53", "score": 0, "approved_by": null, "upvotes": 3, "body": "http://www.cs.cmu.edu/~sandholm/lossyStochasticGameAbstractionWBounds.ec12.pdf\n\nReally interesting stuff.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.cs.cmu.edu/%7Esandholm/lossyStochasticGameAbstractionWBounds.ec12.pdf\"&gt;http://www.cs.cmu.edu/~sandholm/lossyStochasticGameAbstractionWBounds.ec12.pdf&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Really interesting stuff.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c755sz7", "flair_text": null, "created": 1353587798.0, "created_utc": 1353584198.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 17, "link_id": "t3_13lo53", "children": [], "author": "[deleted]", "id": "c753iq9", "parent_id": "t3_13lo53", "score": 0, "approved_by": null, "upvotes": 6, "body": "[deleted]", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c753iq9", "flair_text": null, "created": 1353568844.0, "created_utc": 1353565244.0, "num_reports": null}], "score": 50, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 68, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13lo53/whats_the_most_exciting_paper_or_project_youve/", "has_more_comments": false, "name": "t3_13lo53", "created": 1353553038.0, "url": "http://www.reddit.com/r/compsci/comments/13lo53/whats_the_most_exciting_paper_or_project_youve/", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1353553038.0, "link_flair_text": null, "media": null, "num_reports": null}, "227": {"domain": "en.wikipedia.org", "link_flair_class": null, "banned_by": null, "downvotes": 19, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13l8mr", "clicked": false, "title": "Today we remember Jacques de Vaucanson, one of the first automaton inventors", "num_comments": 1, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 6, "link_id": "t3_13l8mr", "children": [], "author": "chisoph", "id": "c752mn0", "parent_id": "t3_13l8mr", "score": 0, "approved_by": null, "upvotes": 3, "body": "Really? I don't remember him.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Really? I don&amp;#39;t remember him.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c752mn0", "flair_text": null, "created": 1353564256.0, "created_utc": 1353560656.0, "num_reports": null}], "score": 48, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 67, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/13l8mr/today_we_remember_jacques_de_vaucanson_one_of_the/", "has_more_comments": false, "name": "t3_13l8mr", "created": 1353536540.0, "url": "http://en.wikipedia.org/wiki/Jacques_de_Vaucanson", "author_flair_text": null, "author": "ieeaaauuuuooooo", "created_utc": 1353536540.0, "link_flair_text": null, "media": null, "num_reports": null}, "228": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 6, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;What sort of keywords would I research regarding treating everything in a three dimensional world as connected particles, rather than conventional primitives?&lt;/p&gt;\n\n&lt;p&gt;I am thinking toward persistent destructable environments and sprites. I assume that each particle would be an object with its own attributes... But that seems overly resource intensive...&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;After some initial reading, voxel raycasting seems very similar to what I&amp;#39;m imagining. I need to research some more, but allow me to bounce some thoughts off of the community for a moment:&lt;/p&gt;\n\n&lt;p&gt;My musings treat the entire environment as connected voxels, each one with attributes that define how it interacts with its neighbors. Essentially, I consider what I&amp;#39;m attempting to describe analogous to atoms, albeit on a larger scale. This approach is entirely separate from the rendering of the world. I&amp;#39;m merely describing how things exist in order to allow exciting, dynamic gameplay. Then, to render this world to a players display, I would refer to the raycasting. Vectors would be calculated from the point of viewing and terminate at objects bearing visual data...&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;What if, using voxel octrees, you increase the resolution of an object anytime there is a physical imperative? For example, a tree would have its resolution increased when there is an axe chopping into it.&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;hr/&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;TL;DR - I&amp;#39;m interested in a completely destructible game environment and want to find out what&amp;#39;s going on in the field in regards to such an end.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "What sort of keywords would I research regarding treating everything in a three dimensional world as connected particles, rather than conventional primitives?\n\nI am thinking toward persistent destructable environments and sprites. I assume that each particle would be an object with its own attributes... But that seems overly resource intensive...\n\n------------------------------\nAfter some initial reading, voxel raycasting seems very similar to what I'm imagining. I need to research some more, but allow me to bounce some thoughts off of the community for a moment:\n\nMy musings treat the entire environment as connected voxels, each one with attributes that define how it interacts with its neighbors. Essentially, I consider what I'm attempting to describe analogous to atoms, albeit on a larger scale. This approach is entirely separate from the rendering of the world. I'm merely describing how things exist in order to allow exciting, dynamic gameplay. Then, to render this world to a players display, I would refer to the raycasting. Vectors would be calculated from the point of viewing and terminate at objects bearing visual data...\n\n------------------------------\nWhat if, using voxel octrees, you increase the resolution of an object anytime there is a physical imperative? For example, a tree would have its resolution increased when there is an axe chopping into it.\n\n------------\n------------\n------------\n\nTL;DR - I'm interested in a completely destructible game environment and want to find out what's going on in the field in regards to such an end.", "saved": false, "id": "13l066", "clicked": false, "title": "Particle Object Programming", "num_comments": 8, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13l066", "children": [], "author": "dazzford", "id": "c74vjes", "parent_id": "t3_13l066", "score": 0, "approved_by": null, "upvotes": 6, "body": "You are effectively looking at voxels (like in minecraft) or particle/point clouds.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You are effectively looking at voxels (like in minecraft) or particle/point clouds.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c74vjes", "flair_text": null, "created": 1353533537.0, "created_utc": 1353529937.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13l066", "children": [], "author": "Anth741", "id": "c74vc2m", "parent_id": "t3_13l066", "score": 0, "approved_by": null, "upvotes": 3, "body": "Incredibly interesting. I believe I was shown a video of this group who is doing some sort of polygonless modeling. I wish I could remember more about it, but it is being done. Please respond if you find anything out.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Incredibly interesting. I believe I was shown a video of this group who is doing some sort of polygonless modeling. I wish I could remember more about it, but it is being done. Please respond if you find anything out.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c74vc2m", "flair_text": null, "created": 1353532781.0, "created_utc": 1353529181.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13l066", "children": [], "author": "gavinb", "id": "c76bqm5", "parent_id": "t3_13l066", "score": 0, "approved_by": null, "upvotes": 1, "body": "There's a few games that try to achieve something like this.  Red Faction has a destructible environment which is pretty cool.  Not sure what techniques they use though.\n\nThere's a few research papers on this too.  If you're using polygons, implementing decimation, tearing, exploding and subdivisions is kinda tricky, though LOD can help there too.\n\nVoxels are awesome but still quite expensive to work with and render. Voxel rendering is expensive and converting voxels to meshes is expensive.\n\nI've often thought of this myself, as it is a very interesting problem.  Let us know what you find!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There&amp;#39;s a few games that try to achieve something like this.  Red Faction has a destructible environment which is pretty cool.  Not sure what techniques they use though.&lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s a few research papers on this too.  If you&amp;#39;re using polygons, implementing decimation, tearing, exploding and subdivisions is kinda tricky, though LOD can help there too.&lt;/p&gt;\n\n&lt;p&gt;Voxels are awesome but still quite expensive to work with and render. Voxel rendering is expensive and converting voxels to meshes is expensive.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve often thought of this myself, as it is a very interesting problem.  Let us know what you find!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76bqm5", "flair_text": null, "created": 1353821047.0, "created_utc": 1353817447.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13l066", "children": [], "author": "reuben364", "id": "c76ww15", "parent_id": "t3_13l066", "score": 0, "approved_by": null, "upvotes": 1, "body": "I met this one person who was working on real-time dynamic terrain by actively converting it between a high map and a particle cloud as it is loaded/unloaded. Perhaps you could do the same with primitives and point clouds. I don't know much though as I'm still in school.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I met this one person who was working on real-time dynamic terrain by actively converting it between a high map and a particle cloud as it is loaded/unloaded. Perhaps you could do the same with primitives and point clouds. I don&amp;#39;t know much though as I&amp;#39;m still in school.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76ww15", "flair_text": null, "created": 1353928317.0, "created_utc": 1353924717.0, "num_reports": null}], "score": 4, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 10, "hidden": false, "thumbnail": "", "edited": 1353543387.0, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13l066/particle_object_programming/", "has_more_comments": false, "name": "t3_13l066", "created": 1353528887.0, "url": "http://www.reddit.com/r/compsci/comments/13l066/particle_object_programming/", "author_flair_text": null, "author": "JHouck8390", "created_utc": 1353528887.0, "link_flair_text": null, "media": null, "num_reports": null}, "229": {"domain": "okmij.org", "link_flair_class": null, "banned_by": null, "downvotes": 15, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13k19q", "clicked": false, "title": "Non-trivial language with a decidable halt", "num_comments": 15, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13k19q", "children": [], "author": "mcherm", "id": "c74oqbh", "parent_id": "t3_13k19q", "score": 0, "approved_by": null, "upvotes": 6, "body": "That was less interesting than I had hoped, but still somewhat interesting. They can identify, in finite time, the set of functions that ignore their arguments.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That was less interesting than I had hoped, but still somewhat interesting. They can identify, in finite time, the set of functions that ignore their arguments.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c74oqbh", "flair_text": null, "created": 1353504320.0, "created_utc": 1353500720.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13k19q", "children": [], "author": "moor-GAYZ", "id": "c74p938", "parent_id": "t3_13k19q", "score": 0, "approved_by": null, "upvotes": 5, "body": "By the way, there are two reverse problems that bother me: is there a language with an undecidable halt that is not powerful enough to solve TM-halting problem, and is there a non-trivial language with a universal function that is not Turing-complete?\n\nThe first one seems to be the Post's problem, do I understand correctly that proofs of existence are non-constructive?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;By the way, there are two reverse problems that bother me: is there a language with an undecidable halt that is not powerful enough to solve TM-halting problem, and is there a non-trivial language with a universal function that is not Turing-complete?&lt;/p&gt;\n\n&lt;p&gt;The first one seems to be the Post&amp;#39;s problem, do I understand correctly that proofs of existence are non-constructive?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c74p938", "flair_text": null, "created": 1353508551.0, "created_utc": 1353504951.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13k19q", "children": [], "author": "inaneInTheMembrane", "id": "c74vn2h", "parent_id": "t3_13k19q", "score": 0, "approved_by": null, "upvotes": 2, "body": "There are many, MANY powerful mechanisms to determine termination of rewrite systems, which in many ways are nice abstractions of Haskell programs. Much work has been done recently on *disproving* termination of such systems. In fact the software [AProVE](http://aprove.informatik.rwth-aachen.de/index.asp?subform=termination_proofs.html) is surprisingly hard to side step: almost any program easily thought of can be shown to be terminating or non terminating.\n\nThere is a \"trivial\" way to construct a language such as asked in the post: a program is accepted to be correct iff it has a definite answer using such a termination/non-termination checker.\n\nThis is the most complete such language I can think of, though it is also the most boring (and the one with the most complicated \"syntax\").", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There are many, MANY powerful mechanisms to determine termination of rewrite systems, which in many ways are nice abstractions of Haskell programs. Much work has been done recently on &lt;em&gt;disproving&lt;/em&gt; termination of such systems. In fact the software &lt;a href=\"http://aprove.informatik.rwth-aachen.de/index.asp?subform=termination_proofs.html\"&gt;AProVE&lt;/a&gt; is surprisingly hard to side step: almost any program easily thought of can be shown to be terminating or non terminating.&lt;/p&gt;\n\n&lt;p&gt;There is a &amp;quot;trivial&amp;quot; way to construct a language such as asked in the post: a program is accepted to be correct iff it has a definite answer using such a termination/non-termination checker.&lt;/p&gt;\n\n&lt;p&gt;This is the most complete such language I can think of, though it is also the most boring (and the one with the most complicated &amp;quot;syntax&amp;quot;).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c74vn2h", "flair_text": null, "created": 1353533903.0, "created_utc": 1353530303.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13k19q", "children": [], "author": "svsvsvs", "id": "c77t4y6", "parent_id": "t3_13k19q", "score": 0, "approved_by": null, "upvotes": 1, "body": "If a language has a decidable halt, it can trivially be implemented in such a way that it always halts (or outputs **Error**), so from a computability standpoint this problem is essentially asking for a square that isn't a quadrilateral. \n\nThe only time this question has any merit is when you're explicitly dealing with shitty implementations of whatever there is to be programmed, which I don't think is worth anyone's time.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If a language has a decidable halt, it can trivially be implemented in such a way that it always halts (or outputs &lt;strong&gt;Error&lt;/strong&gt;), so from a computability standpoint this problem is essentially asking for a square that isn&amp;#39;t a quadrilateral. &lt;/p&gt;\n\n&lt;p&gt;The only time this question has any merit is when you&amp;#39;re explicitly dealing with shitty implementations of whatever there is to be programmed, which I don&amp;#39;t think is worth anyone&amp;#39;s time.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c77t4y6", "flair_text": null, "created": 1354067418.0, "created_utc": 1354063818.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13k19q", "children": [], "author": "realz-slaw", "id": "c752a56", "parent_id": "t3_13k19q", "score": 0, "approved_by": null, "upvotes": 2, "body": "See [Total functional programming](http://en.wikipedia.org/wiki/Total_functional_programming), which mentions [epigram](http://en.wikipedia.org/wiki/Epigram_(programming_language), a language which is not Turing complete, but basically allows you to program anything you can prove will halt. The truth is, all our functions/programs should halt! Except maybe an outer event loop, but in general we as programmers should know that our functions halt, or exactly when they don't. Otherwise we have a bug!\n\nSo in reality, IMO, this should be the ideal. Our current class of programming languages lets us hang ourselves by giving us enough rope.\n\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;See &lt;a href=\"http://en.wikipedia.org/wiki/Total_functional_programming\"&gt;Total functional programming&lt;/a&gt;, which mentions &lt;a href=\"http://en.wikipedia.org/wiki/Epigram_(programming_language\"&gt;epigram&lt;/a&gt;, a language which is not Turing complete, but basically allows you to program anything you can prove will halt. The truth is, all our functions/programs should halt! Except maybe an outer event loop, but in general we as programmers should know that our functions halt, or exactly when they don&amp;#39;t. Otherwise we have a bug!&lt;/p&gt;\n\n&lt;p&gt;So in reality, IMO, this should be the ideal. Our current class of programming languages lets us hang ourselves by giving us enough rope.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c752a56", "flair_text": null, "created": 1353562572.0, "created_utc": 1353558972.0, "num_reports": null}], "score": 28, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 43, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/13k19q/nontrivial_language_with_a_decidable_halt/", "has_more_comments": false, "name": "t3_13k19q", "created": 1353482303.0, "url": "http://okmij.org/ftp/Computation/decidable-halt.html", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1353482303.0, "link_flair_text": null, "media": null, "num_reports": null}, "230": {"domain": "cs.stackexchange.com", "link_flair_class": null, "banned_by": null, "downvotes": 7, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13lij7", "clicked": false, "title": "Chained operations on sequences with two operators", "num_comments": 2, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_13lij7", "children": [], "author": "cypherx", "id": "c750yqf", "parent_id": "t3_13lij7", "score": 0, "approved_by": null, "upvotes": 5, "body": "The question is all over the place, I suggest narrowing it to one refined point in order to encourage more responses. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The question is all over the place, I suggest narrowing it to one refined point in order to encourage more responses. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c750yqf", "flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "created": 1353556515.0, "created_utc": 1353552915.0, "num_reports": null}], "score": 0, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 7, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/13lij7/chained_operations_on_sequences_with_two_operators/", "has_more_comments": false, "name": "t3_13lij7", "created": 1353546709.0, "url": "http://cs.stackexchange.com/q/6790/2755", "author_flair_text": null, "author": "realz-slaw", "created_utc": 1353546709.0, "link_flair_text": null, "media": null, "num_reports": null}, "231": {"domain": "metaoptimize.com", "link_flair_class": null, "banned_by": null, "downvotes": 8, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13jzs8", "clicked": false, "title": "What are the main differences between the different deep learning approaches?", "num_comments": 0, "comments": [], "score": 8, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 16, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/13jzs8/what_are_the_main_differences_between_the/", "has_more_comments": false, "name": "t3_13jzs8", "created": 1353480189.0, "url": "http://metaoptimize.com/qa/questions/11439/what-are-the-main-differences-between-the-different-deep-learning-approaches", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1353480189.0, "link_flair_text": null, "media": null, "num_reports": null}, "232": {"domain": "matt.might.net", "link_flair_class": null, "banned_by": null, "downvotes": 14, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13ifgt", "clicked": false, "title": "How to peer review scientfic work", "num_comments": 23, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_13ifgt", "children": [], "author": "-rix", "id": "c74eg5h", "parent_id": "t3_13ifgt", "score": 0, "approved_by": null, "upvotes": 10, "body": "Wow, I've spent nearly the whole evening on this guy's web site. Great resource.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wow, I&amp;#39;ve spent nearly the whole evening on this guy&amp;#39;s web site. Great resource.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c74eg5h", "flair_text": null, "created": 1353451284.0, "created_utc": 1353447684.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_13ifgt", "children": [], "author": "inaneInTheMembrane", "id": "c74ckk5", "parent_id": "t3_13ifgt", "score": 0, "approved_by": null, "upvotes": 16, "body": "&gt;I've written a few hundred peer reviews.\n&gt;There have been times when it was mathematically impossible to review only one paper per day. \n\nIt takes me about a week to make a comprehensive peer review. Just sayin...", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I&amp;#39;ve written a few hundred peer reviews.\nThere have been times when it was mathematically impossible to review only one paper per day. &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It takes me about a week to make a comprehensive peer review. Just sayin...&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c74ckk5", "flair_text": null, "created": 1353444906.0, "created_utc": 1353441306.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13ifgt", "children": [], "author": "humor_me", "id": "c74blgl", "parent_id": "t3_13ifgt", "score": 0, "approved_by": null, "upvotes": 2, "body": "So there's no blind review in CS?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;So there&amp;#39;s no blind review in CS?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c74blgl", "flair_text": null, "created": 1353441511.0, "created_utc": 1353437911.0, "num_reports": null}], "score": 71, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 85, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/13ifgt/how_to_peer_review_scientfic_work/", "has_more_comments": false, "name": "t3_13ifgt", "created": 1353425010.0, "url": "http://matt.might.net/articles/how-to-peer-review/", "author_flair_text": null, "author": "p4bl0", "created_utc": 1353425010.0, "link_flair_text": null, "media": null, "num_reports": null}, "233": {"domain": "cs.bham.ac.uk", "link_flair_class": null, "banned_by": null, "downvotes": 8, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13jzj1", "clicked": false, "title": "On Evaluation Contexts, Continuations,\nand the Rest of the Computation [pdf]", "num_comments": 0, "comments": [], "score": 2, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 10, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/13jzj1/on_evaluation_contexts_continuations_and_the_rest/", "has_more_comments": false, "name": "t3_13jzj1", "created": 1353479819.0, "url": "http://www.cs.bham.ac.uk/~hxt/cw04/danvy.pdf", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1353479819.0, "link_flair_text": null, "media": null, "num_reports": null}, "234": {"domain": "scottaaronson.com", "link_flair_class": null, "banned_by": null, "downvotes": 7, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13jzpe", "clicked": false, "title": "The Toaster-Enhanced Turing Machine", "num_comments": 1, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13jzpe", "children": [], "author": "ilikecomputahs", "id": "c74wvhr", "parent_id": "t3_13jzpe", "score": 0, "approved_by": null, "upvotes": 1, "body": "The format on this blog needs to change - the text alignment makes it a pain in the ass to read", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The format on this blog needs to change - the text alignment makes it a pain in the ass to read&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c74wvhr", "flair_text": null, "created": 1353538468.0, "created_utc": 1353534868.0, "num_reports": null}], "score": 1, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 8, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/13jzpe/the_toasterenhanced_turing_machine/", "has_more_comments": false, "name": "t3_13jzpe", "created": 1353480069.0, "url": "http://www.scottaaronson.com/blog/?p=1121", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1353480069.0, "link_flair_text": null, "media": null, "num_reports": null}, "235": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 3, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I am thinking about trying to use MPI and blender to create a &amp;quot;render farm&amp;quot; on my universities cluster system.&lt;/p&gt;\n\n&lt;p&gt;My question here is will MPI have issues with me using multiple instances of blender to render individual frames on their own processes. I&amp;#39;m afraid each process will have idle time until the first process finishes rendering, or will they all render on individual processes in parallel like they&amp;#39;re suppose to.  I&amp;#39;m obviously not well informed on MPI and I would like to try to become familiar with it. &lt;/p&gt;\n\n&lt;p&gt;Also, the only way I can figure out how to use blender to render in this way is to use a sysop call to blenders command line arguments.  Is this the proper way to do it?&lt;/p&gt;\n\n&lt;p&gt;Thanks for your help,\nRobb&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I am thinking about trying to use MPI and blender to create a \"render farm\" on my universities cluster system.\n\nMy question here is will MPI have issues with me using multiple instances of blender to render individual frames on their own processes. I'm afraid each process will have idle time until the first process finishes rendering, or will they all render on individual processes in parallel like they're suppose to.  I'm obviously not well informed on MPI and I would like to try to become familiar with it. \n\nAlso, the only way I can figure out how to use blender to render in this way is to use a sysop call to blenders command line arguments.  Is this the proper way to do it?\n\nThanks for your help,\nRobb", "saved": false, "id": "13j73g", "clicked": false, "title": "Question on using MPI and Blender for parallel rendering", "num_comments": 6, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13j73g", "children": [], "author": "electricCoder", "id": "c74r563", "parent_id": "t3_13j73g", "score": 0, "approved_by": null, "upvotes": 6, "body": "MPI is just a message passing interface. How the rendering happens is entirely up to your application.\n\nYou will need to determine a way to load balance all your nodes, and you can than use MPI to pass the data between each node. If blender is doing some form of raycasting or volume rendering all the nodes will have to render each frame in lockstep since the nodes will have to communicate between each other to determine things ray casting intersections.\n\nWork has been done on using a map reduce framework for volume rendering, and it does show promise, but it does require a more complex implementation of volume rendering since you are not projecting a point through the entire scene.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;MPI is just a message passing interface. How the rendering happens is entirely up to your application.&lt;/p&gt;\n\n&lt;p&gt;You will need to determine a way to load balance all your nodes, and you can than use MPI to pass the data between each node. If blender is doing some form of raycasting or volume rendering all the nodes will have to render each frame in lockstep since the nodes will have to communicate between each other to determine things ray casting intersections.&lt;/p&gt;\n\n&lt;p&gt;Work has been done on using a map reduce framework for volume rendering, and it does show promise, but it does require a more complex implementation of volume rendering since you are not projecting a point through the entire scene.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c74r563", "flair_text": null, "created": 1353517755.0, "created_utc": 1353514155.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13j73g", "children": [], "author": "marshallp", "id": "c74hqbe", "parent_id": "t3_13j73g", "score": 0, "approved_by": null, "upvotes": 2, "body": "Can't a simple mapreduce like system be used for that.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Can&amp;#39;t a simple mapreduce like system be used for that.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c74hqbe", "flair_text": null, "created": 1353463494.0, "created_utc": 1353459894.0, "num_reports": null}], "score": 4, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 7, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13j73g/question_on_using_mpi_and_blender_for_parallel/", "has_more_comments": false, "name": "t3_13j73g", "created": 1353450293.0, "url": "http://www.reddit.com/r/compsci/comments/13j73g/question_on_using_mpi_and_blender_for_parallel/", "author_flair_text": null, "author": "robbhimself", "created_utc": 1353450293.0, "link_flair_text": null, "media": null, "num_reports": null}, "236": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 13, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Does anyone know where I can find a visual map of the &amp;quot;tree&amp;quot; that is the fields and subfields of computer science (if one does exist)?&lt;/p&gt;\n\n&lt;p&gt;For example, &lt;a href=\"http://www-rohan.sdsu.edu/%7Egawron/fundamentals/course_core/lectures/historical/pie2.gif\"&gt;this&lt;/a&gt;, but for the different branches of computer science.&lt;/p&gt;\n\n&lt;p&gt;Or, more exactly, I&amp;#39;m looking for a more visual form of &lt;a href=\"http://en.wikipedia.org/wiki/Outline_of_computer_science\"&gt;this&lt;/a&gt;, but possibly more in-depth.&lt;/p&gt;\n\n&lt;p&gt;Any help is appreciated!&lt;/p&gt;\n\n&lt;p&gt;Edit: I found what I was looking for. The Association for Computing Machinery released &lt;a href=\"http://dl.acm.org/ccs.cfm?id=0&amp;amp;lid=0&amp;amp;CFID=205255578&amp;amp;CFTOKEN=68139105\"&gt;this&lt;/a&gt; wonderful guide. While it&amp;#39;s not as visual as I would have liked, it&amp;#39;s still well-defined.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Does anyone know where I can find a visual map of the \"tree\" that is the fields and subfields of computer science (if one does exist)?\n\nFor example, [this](http://www-rohan.sdsu.edu/~gawron/fundamentals/course_core/lectures/historical/pie2.gif), but for the different branches of computer science.\n\nOr, more exactly, I'm looking for a more visual form of [this](http://en.wikipedia.org/wiki/Outline_of_computer_science), but possibly more in-depth.\n\nAny help is appreciated!\n\n\nEdit: I found what I was looking for. The Association for Computing Machinery released [this](http://dl.acm.org/ccs.cfm?id=0&amp;lid=0&amp;CFID=205255578&amp;CFTOKEN=68139105) wonderful guide. While it's not as visual as I would have liked, it's still well-defined.", "saved": false, "id": "13hfqj", "clicked": false, "title": "Map of fields and subfields of computer science?", "num_comments": 16, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_13hfqj", "children": [], "author": "flebron", "id": "c74072a", "parent_id": "t3_13hfqj", "score": 0, "approved_by": null, "upvotes": 17, "body": "I don't know if a tree is the best way to see this, perhaps a directed graph. It's often going to be the case that one area of CS draws from more than one area, and influences more than one area.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t know if a tree is the best way to see this, perhaps a directed graph. It&amp;#39;s often going to be the case that one area of CS draws from more than one area, and influences more than one area.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c74072a", "flair_text": null, "created": 1353382476.0, "created_utc": 1353378876.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13hfqj", "children": [], "author": "atticusw", "id": "c73zcda", "parent_id": "t3_13hfqj", "score": 0, "approved_by": null, "upvotes": 2, "body": "Can't help you there, but these are the available computer science tracks at my University\n\n(See the second page for the different tracks offered and the suggested courses)\n\nhttps://www.cs.umass.edu/sites/default/files/uploads/BS-CMPSCI-tracking.pptx_.pdf", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Can&amp;#39;t help you there, but these are the available computer science tracks at my University&lt;/p&gt;\n\n&lt;p&gt;(See the second page for the different tracks offered and the suggested courses)&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.cs.umass.edu/sites/default/files/uploads/BS-CMPSCI-tracking.pptx_.pdf\"&gt;https://www.cs.umass.edu/sites/default/files/uploads/BS-CMPSCI-tracking.pptx_.pdf&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c73zcda", "flair_text": null, "created": 1353379457.0, "created_utc": 1353375857.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13hfqj", "children": [], "author": "supercargo", "id": "c746qum", "parent_id": "t3_13hfqj", "score": 0, "approved_by": null, "upvotes": 1, "body": "Not exactly what you asked, but my undergrad course catalog still has the flow chart they used when I was a student:\n\nhttp://www.wpi.edu/academics/catalogs/ugrad/flip/?page=69", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not exactly what you asked, but my undergrad course catalog still has the flow chart they used when I was a student:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.wpi.edu/academics/catalogs/ugrad/flip/?page=69\"&gt;http://www.wpi.edu/academics/catalogs/ugrad/flip/?page=69&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c746qum", "flair_text": null, "created": 1353421442.0, "created_utc": 1353417842.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13hfqj", "children": [], "author": "thefuc", "id": "c74aqja", "parent_id": "t3_13hfqj", "score": 0, "approved_by": null, "upvotes": 1, "body": "in general, trees are not possible, because the various fields of computer science don't descend from each other (unlike making trees/forests of languages)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;in general, trees are not possible, because the various fields of computer science don&amp;#39;t descend from each other (unlike making trees/forests of languages)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c74aqja", "flair_text": null, "created": 1353438396.0, "created_utc": 1353434796.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13hfqj", "children": [], "author": "achille", "id": "c742hn0", "parent_id": "t3_13hfqj", "score": 0, "approved_by": null, "upvotes": 2, "body": "Not a graph, but it will answer your question: http://en.wikipedia.org/wiki/Computer_science#Areas_of_computer_science\n\nClick each subfield to expand", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not a graph, but it will answer your question: &lt;a href=\"http://en.wikipedia.org/wiki/Computer_science#Areas_of_computer_science\"&gt;http://en.wikipedia.org/wiki/Computer_science#Areas_of_computer_science&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Click each subfield to expand&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c742hn0", "flair_text": null, "created": 1353390910.0, "created_utc": 1353387310.0, "num_reports": null}], "score": 42, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 55, "hidden": false, "thumbnail": "", "edited": 1353377230.0, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13hfqj/map_of_fields_and_subfields_of_computer_science/", "has_more_comments": false, "name": "t3_13hfqj", "created": 1353375592.0, "url": "http://www.reddit.com/r/compsci/comments/13hfqj/map_of_fields_and_subfields_of_computer_science/", "author_flair_text": null, "author": "ChaosPhoenix7", "created_utc": 1353375592.0, "link_flair_text": null, "media": null, "num_reports": null}, "237": {"domain": "homepages.inf.ed.ac.uk", "link_flair_class": null, "banned_by": null, "downvotes": 3, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13hvah", "clicked": false, "title": "Idioms are oblivious, arrows are meticulous,\nmonads are promiscuous [pdf]", "num_comments": 0, "comments": [], "score": 7, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 10, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/13hvah/idioms_are_oblivious_arrows_are_meticulous_monads/", "has_more_comments": false, "name": "t3_13hvah", "created": 1353390552.0, "url": "http://homepages.inf.ed.ac.uk/wadler/papers/arrows-and-idioms/arrows-and-idioms.pdf", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1353390552.0, "link_flair_text": null, "media": null, "num_reports": null}, "238": {"domain": "lambda-the-ultimate.org", "link_flair_class": null, "banned_by": null, "downvotes": 11, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13foo8", "clicked": false, "title": "Abstract interpretation and type systems", "num_comments": 0, "comments": [], "score": 21, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 32, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/13foo8/abstract_interpretation_and_type_systems/", "has_more_comments": false, "name": "t3_13foo8", "created": 1353300347.0, "url": "http://lambda-the-ultimate.org/node/2208", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1353300347.0, "link_flair_text": null, "media": null, "num_reports": null}, "239": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 6, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey All,&lt;/p&gt;\n\n&lt;p&gt;I am interested in learning about some broad areas of NLP (or anything else you think might help) that can point me in the right direction with a project I&amp;#39;m starting for work.&lt;/p&gt;\n\n&lt;p&gt;Essentially, we have a massive database of 1 to 5 paragraph length natural language strings that describe issues from a specific problem domain, mainly computer networks.&lt;/p&gt;\n\n&lt;p&gt;Given this huge corpus of data, we would like to be able to determine when two paragraphs are in fact describing the same thing so that we can  filter through the data and do some aggregation.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m not looking for any depth here, but if you know of any particular research projects taking place that I could investigate further, I would appreciate it.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m already looking at quite a bit of stuff, including comparing trees produced using context free grammars, LSA, stochastic methods, keyword extraction, etc, but I thought I would ask around and see if maybe someone with more experience in the area had any suggestions.&lt;/p&gt;\n\n&lt;p&gt;Thanks for any help!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hey All,\n\nI am interested in learning about some broad areas of NLP (or anything else you think might help) that can point me in the right direction with a project I'm starting for work.\n\nEssentially, we have a massive database of 1 to 5 paragraph length natural language strings that describe issues from a specific problem domain, mainly computer networks.\n\nGiven this huge corpus of data, we would like to be able to determine when two paragraphs are in fact describing the same thing so that we can  filter through the data and do some aggregation.\n\nI'm not looking for any depth here, but if you know of any particular research projects taking place that I could investigate further, I would appreciate it.\n\nI'm already looking at quite a bit of stuff, including comparing trees produced using context free grammars, LSA, stochastic methods, keyword extraction, etc, but I thought I would ask around and see if maybe someone with more experience in the area had any suggestions.\n\nThanks for any help!", "saved": false, "id": "13fh75", "clicked": false, "title": "NLP Research Suggestions Anyone?", "num_comments": 13, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13fh75", "children": [], "author": "syllogism_", "id": "c73ixpa", "parent_id": "t3_13fh75", "score": 0, "approved_by": null, "upvotes": 9, "body": "The tl;dr of NLP for practical applications goes like this:\n\nCan your problem be solved by n-gram frequency based methods?\n\n* Yes --&gt; Do that\n* No --&gt; Do nothing\n\nSo basically, I'd write a program that did TF-IDF similarity of the paragraphs, and look at its output. If it works, use it. If it's crap then throw up your hands and declare the problem too hard.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The tl;dr of NLP for practical applications goes like this:&lt;/p&gt;\n\n&lt;p&gt;Can your problem be solved by n-gram frequency based methods?&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Yes --&amp;gt; Do that&lt;/li&gt;\n&lt;li&gt;No --&amp;gt; Do nothing&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;So basically, I&amp;#39;d write a program that did TF-IDF similarity of the paragraphs, and look at its output. If it works, use it. If it&amp;#39;s crap then throw up your hands and declare the problem too hard.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c73ixpa", "flair_text": null, "created": 1353302392.0, "created_utc": 1353298792.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13fh75", "children": [], "author": "notheory", "id": "c73ih6w", "parent_id": "t3_13fh75", "score": 0, "approved_by": null, "upvotes": 1, "body": "&gt; we would like to be able to determine when two paragraphs are in fact describing the same thing\n\nThis is often the most challenging part of any AI related task.  What you ultimately care about and the way you phrase your problem dictates the space of solutions you have available to you.\n\nFor example, I find it likely that context free parsing will not be as useful to you as other means.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;we would like to be able to determine when two paragraphs are in fact describing the same thing&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This is often the most challenging part of any AI related task.  What you ultimately care about and the way you phrase your problem dictates the space of solutions you have available to you.&lt;/p&gt;\n\n&lt;p&gt;For example, I find it likely that context free parsing will not be as useful to you as other means.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c73ih6w", "flair_text": null, "created": 1353300691.0, "created_utc": 1353297091.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13fh75", "children": [], "author": "artoonie", "id": "c73iiqx", "parent_id": "t3_13fh75", "score": 0, "approved_by": null, "upvotes": 1, "body": "n-grams are surprisingly powerful and can be coded in like 5 lines of Python.\n\nI would suggest starting with n-gram histograms, then going to more complex algorithms as necessary.\n\nPlus, that way you can get all your framework set up, get some preliminary but shitty results, and iterate til you get satisfactory results- which is more fun than doing a bunch of work, then a bunch of debugging, then getting near-final results. And if everything is modular, then replacing each chunk should be easy to implement and evaluate.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;n-grams are surprisingly powerful and can be coded in like 5 lines of Python.&lt;/p&gt;\n\n&lt;p&gt;I would suggest starting with n-gram histograms, then going to more complex algorithms as necessary.&lt;/p&gt;\n\n&lt;p&gt;Plus, that way you can get all your framework set up, get some preliminary but shitty results, and iterate til you get satisfactory results- which is more fun than doing a bunch of work, then a bunch of debugging, then getting near-final results. And if everything is modular, then replacing each chunk should be easy to implement and evaluate.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c73iiqx", "flair_text": null, "created": 1353300848.0, "created_utc": 1353297248.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13fh75", "children": [], "author": "_dexter", "id": "c73miun", "parent_id": "t3_13fh75", "score": 0, "approved_by": null, "upvotes": 2, "body": "&gt; Given this huge corpus of data, we would like to be able to determine when two paragraphs are in fact describing the same thing so that we can filter through the data and do some aggregation.\n\nYou basically want to find out if two piece of texts are **semantically** related to each other. The difficulty of this task depends on multiple factors -\n\n1) Is your text clean? By clean, I mean does it contain short forms or are they formatted clean English text.\n\n2) Are you able to detect paragraphs? Trivial but important.\n\n3) Do the words in your text fall into a vocabulary resource? By vocabulary resource I mean, do you have a dictionary for the words in your texts? This resource can be specific to your domain of computer networks. \n\nIf all the above points are true, you can look at various methods. The simplest I can think of is clustering using Point-wise Mutual Information scores between n-grams of paragraphs [0]. This should be a nice starting point. It is important to note that the more domain information resources you can include the better your technique would perform.\n\n[0] http://www.ling.uni-potsdam.de/~gerlof/docs/npmi-pfd.pdf", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Given this huge corpus of data, we would like to be able to determine when two paragraphs are in fact describing the same thing so that we can filter through the data and do some aggregation.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;You basically want to find out if two piece of texts are &lt;strong&gt;semantically&lt;/strong&gt; related to each other. The difficulty of this task depends on multiple factors -&lt;/p&gt;\n\n&lt;p&gt;1) Is your text clean? By clean, I mean does it contain short forms or are they formatted clean English text.&lt;/p&gt;\n\n&lt;p&gt;2) Are you able to detect paragraphs? Trivial but important.&lt;/p&gt;\n\n&lt;p&gt;3) Do the words in your text fall into a vocabulary resource? By vocabulary resource I mean, do you have a dictionary for the words in your texts? This resource can be specific to your domain of computer networks. &lt;/p&gt;\n\n&lt;p&gt;If all the above points are true, you can look at various methods. The simplest I can think of is clustering using Point-wise Mutual Information scores between n-grams of paragraphs [0]. This should be a nice starting point. It is important to note that the more domain information resources you can include the better your technique would perform.&lt;/p&gt;\n\n&lt;p&gt;[0] &lt;a href=\"http://www.ling.uni-potsdam.de/%7Egerlof/docs/npmi-pfd.pdf\"&gt;http://www.ling.uni-potsdam.de/~gerlof/docs/npmi-pfd.pdf&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c73miun", "flair_text": null, "created": 1353323381.0, "created_utc": 1353319781.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13fh75", "children": [], "author": "awwaiid", "id": "c76cdwi", "parent_id": "t3_13fh75", "score": 0, "approved_by": null, "upvotes": 1, "body": "I saw some people analyzing scientific paper on proteins ... trying to see if papers were talking about the same proteins, same affects, etc. IIRC they used \"link grammars\" which is kinda fun. Don't know if it helps though.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I saw some people analyzing scientific paper on proteins ... trying to see if papers were talking about the same proteins, same affects, etc. IIRC they used &amp;quot;link grammars&amp;quot; which is kinda fun. Don&amp;#39;t know if it helps though.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c76cdwi", "flair_text": null, "created": 1353823951.0, "created_utc": 1353820351.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 14, "link_id": "t3_13fh75", "children": [], "author": "Biddlub", "id": "c73i9ap", "parent_id": "t3_13fh75", "score": 0, "approved_by": null, "upvotes": 6, "body": "Hey man, I'm a big fan of NLP, but it is my understanding that this is a computer science subreddit, not psychology related.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hey man, I&amp;#39;m a big fan of NLP, but it is my understanding that this is a computer science subreddit, not psychology related.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c73i9ap", "flair_text": null, "created": 1353299936.0, "created_utc": 1353296336.0, "num_reports": null}], "score": 7, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 13, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13fh75/nlp_research_suggestions_anyone/", "has_more_comments": false, "name": "t3_13fh75", "created": 1353292933.0, "url": "http://www.reddit.com/r/compsci/comments/13fh75/nlp_research_suggestions_anyone/", "author_flair_text": null, "author": "r4mtha", "created_utc": 1353292933.0, "link_flair_text": null, "media": null, "num_reports": null}, "240": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 8, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have a question regarding the second method of Booth&amp;#39;s multiplication algorithm (at least that&amp;#39;s how it&amp;#39;s called in the script I&amp;#39;m using - I mean the one when we base our operations on analyzing single bits from the multiplier as opposed to analyzing pairs in the first method). I get it, but there is a disclaimer at the end reading:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;quot;Please note that there may be a need to add a correction (equal to multiplicand/2) to the final result. Whether we need it or not is dictated by the sign.&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Problem is, I don&amp;#39;t know which sign. Sign of the result? Of one of the factors? When do we do it - before the final shift to the left, after it? I read many examples and nowhere have I found any involving the said correction adding. Could someone please clarify?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I have a question regarding the second method of Booth's multiplication algorithm (at least that's how it's called in the script I'm using - I mean the one when we base our operations on analyzing single bits from the multiplier as opposed to analyzing pairs in the first method). I get it, but there is a disclaimer at the end reading:\n\n    \"Please note that there may be a need to add a correction (equal to multiplicand/2) to the final result. Whether we need it or not is dictated by the sign.\"\n\nProblem is, I don't know which sign. Sign of the result? Of one of the factors? When do we do it - before the final shift to the left, after it? I read many examples and nowhere have I found any involving the said correction adding. Could someone please clarify?", "saved": false, "id": "13ef5u", "clicked": false, "title": "Booth's multiplication method and the final \u201ccorrection\u201d adding", "num_comments": 2, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 12, "link_id": "t3_13ef5u", "children": [], "author": "78666CDC", "id": "c738pp4", "parent_id": "t3_13ef5u", "score": 0, "approved_by": null, "upvotes": 6, "body": "Instead of looking for a prepackaged example or waiting for someone to drop by and explain it to you, why don't you take the correct approach by working through a couple calculations on your own, seeing when the correction is necessary, and reasoning out why it was necessary based on your calculations?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Instead of looking for a prepackaged example or waiting for someone to drop by and explain it to you, why don&amp;#39;t you take the correct approach by working through a couple calculations on your own, seeing when the correction is necessary, and reasoning out why it was necessary based on your calculations?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c738pp4", "flair_text": null, "created": 1353263583.0, "created_utc": 1353259983.0, "num_reports": null}], "score": 16, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 24, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13ef5u/booths_multiplication_method_and_the_final/", "has_more_comments": false, "name": "t3_13ef5u", "created": 1353252345.0, "url": "http://www.reddit.com/r/compsci/comments/13ef5u/booths_multiplication_method_and_the_final/", "author_flair_text": null, "author": "Timpo", "created_utc": 1353252345.0, "link_flair_text": null, "media": null, "num_reports": null}, "241": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 9, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Is a Hadamard matrix&amp;#39;s rank always equal to the number of it&amp;#39;s rows?&lt;/p&gt;\n\n&lt;p&gt;If not, what about a Hadamard matrix with zeros instead of -1?&lt;/p&gt;\n\n&lt;p&gt;I couldn&amp;#39;t find good answers on google.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Is a Hadamard matrix's rank always equal to the number of it's rows?\n\nIf not, what about a Hadamard matrix with zeros instead of -1?\n\nI couldn't find good answers on google.", "saved": false, "id": "13czl4", "clicked": false, "title": "Hadamard matrix rank", "num_comments": 9, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_13czl4", "children": [], "author": "tel", "id": "c72ucg8", "parent_id": "t3_13czl4", "score": 0, "approved_by": null, "upvotes": 11, "body": "According to Mathworld, HH' = nI is a definition of the conditions for a Hadamard matrix H. Since I is full rank and rank(AB) &lt;= min(rank(A), rank(B)), then rank(H) for such a matrix must be n.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;According to Mathworld, HH&amp;#39; = nI is a definition of the conditions for a Hadamard matrix H. Since I is full rank and rank(AB) &amp;lt;= min(rank(A), rank(B)), then rank(H) for such a matrix must be n.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c72ucg8", "flair_text": null, "created": 1353181563.0, "created_utc": 1353177963.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_13czl4", "children": [], "author": "BossOfTheGame", "id": "c72xjo8", "parent_id": "t3_13czl4", "score": 0, "approved_by": null, "upvotes": 6, "body": "\"A Hadamard matrix is a square matrix whose entries are either +1 or \u22121 and whose rows are mutually orthogonal.\"\n\nBecause the rows are orthogonal that implies they will be linearly independent therefore it will always be full rank. \n\nReplacing -1's with 0's is equivalent to the following transformation: \n\nLet H be a Hadamard matrix. \n\nLet H' be the same Hadamard maxrix with 0's instead of -1's. \n\nTherefore H' = (H + 1)./2  /* *This bumps the 1's to 2's and the -1's to 0's. Then divides by 2 to change the 2's back to 1's. 0's are unaffected.* */\n\nThese operations do not effect the rank of H. \n\nTherefore rank(H') = rank(H) = rows(H) = cols(H). \\qed", "edited": 1353192437.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&amp;quot;A Hadamard matrix is a square matrix whose entries are either +1 or \u22121 and whose rows are mutually orthogonal.&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;Because the rows are orthogonal that implies they will be linearly independent therefore it will always be full rank. &lt;/p&gt;\n\n&lt;p&gt;Replacing -1&amp;#39;s with 0&amp;#39;s is equivalent to the following transformation: &lt;/p&gt;\n\n&lt;p&gt;Let H be a Hadamard matrix. &lt;/p&gt;\n\n&lt;p&gt;Let H&amp;#39; be the same Hadamard maxrix with 0&amp;#39;s instead of -1&amp;#39;s. &lt;/p&gt;\n\n&lt;p&gt;Therefore H&amp;#39; = (H + 1)./2  /* &lt;em&gt;This bumps the 1&amp;#39;s to 2&amp;#39;s and the -1&amp;#39;s to 0&amp;#39;s. Then divides by 2 to change the 2&amp;#39;s back to 1&amp;#39;s. 0&amp;#39;s are unaffected.&lt;/em&gt; */&lt;/p&gt;\n\n&lt;p&gt;These operations do not effect the rank of H. &lt;/p&gt;\n\n&lt;p&gt;Therefore rank(H&amp;#39;) = rank(H) = rows(H) = cols(H). \\qed&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c72xjo8", "flair_text": null, "created": 1353195851.0, "created_utc": 1353192251.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13czl4", "children": [], "author": "cwkid", "id": "c72x5sb", "parent_id": "t3_13czl4", "score": 0, "approved_by": null, "upvotes": 3, "body": "There are matrices that are Hadamard matrices but with 0's instead of -1's, that do not have linearly independent rows, since one of the rows is just all 0's.  I'm not sure if this is true for all Hadamard matrices however.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There are matrices that are Hadamard matrices but with 0&amp;#39;s instead of -1&amp;#39;s, that do not have linearly independent rows, since one of the rows is just all 0&amp;#39;s.  I&amp;#39;m not sure if this is true for all Hadamard matrices however.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c72x5sb", "flair_text": null, "created": 1353194110.0, "created_utc": 1353190510.0, "num_reports": null}], "score": 12, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 21, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/13czl4/hadamard_matrix_rank/", "has_more_comments": false, "name": "t3_13czl4", "created": 1353177339.0, "url": "http://www.reddit.com/r/compsci/comments/13czl4/hadamard_matrix_rank/", "author_flair_text": null, "author": "liq_weed", "created_utc": 1353177339.0, "link_flair_text": null, "media": null, "num_reports": null}, "242": {"domain": "cse.chalmers.se", "link_flair_class": null, "banned_by": null, "downvotes": 13, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13b3j8", "clicked": false, "title": "Generic monadic constructs for embedded languages [pdf]", "num_comments": 5, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_13b3j8", "children": [], "author": "josef", "id": "c72g3vi", "parent_id": "t3_13b3j8", "score": 0, "approved_by": null, "upvotes": 12, "body": "I'm one of the authors of the paper and I'm flattered to see it posted here on /r/compsci. I'd be happy to answer any question you might have on the paper.\n\nOne thing I've come to realize about the paper is that some of the types can be hard to understand. We're using the syntactic library to represent our AST and it uses a lot of type level hackery to achieve it's magic. I'd be happy to help clarify things for confused readers.\n\nI'd also like to mention that the paper won the Peter Landin prize for best paper at IFL.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m one of the authors of the paper and I&amp;#39;m flattered to see it posted here on &lt;a href=\"/r/compsci\"&gt;/r/compsci&lt;/a&gt;. I&amp;#39;d be happy to answer any question you might have on the paper.&lt;/p&gt;\n\n&lt;p&gt;One thing I&amp;#39;ve come to realize about the paper is that some of the types can be hard to understand. We&amp;#39;re using the syntactic library to represent our AST and it uses a lot of type level hackery to achieve it&amp;#39;s magic. I&amp;#39;d be happy to help clarify things for confused readers.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;d also like to mention that the paper won the Peter Landin prize for best paper at IFL.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c72g3vi", "flair_text": null, "created": 1353101258.0, "created_utc": 1353097658.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_13b3j8", "children": [], "author": "cypherx", "id": "c72e60h", "parent_id": "t3_13b3j8", "score": 0, "approved_by": null, "upvotes": 8, "body": "I came across this paper while doing a literature search and it seems pretty cool/useful. \n\ntl;dr: \n\nWhen you're building a new language, the traditional approach is to write a parser and then either interpret or compile the parsed syntax trees. An alternative is to embed your new language inside some existing language, bypassing the need for a parser and maybe even getting value representations or a type system with little effort. For example, if you embed inside Haskell you can leverage its type system to differentiate between the host system's values and the delayed/embedded values of the language you're implementing. Even further, you can use the type signatures of embedded code to statically verify that you're constructing code that's well-formed. \n\nOne potential problem, though, arises if you want to express language constructs in your embedded language that aren't directly supported by the host language (i.e. Haskell doesn't have direct support for loops with mutable accumulators). This paper shows off some useful machinery for embedding languages in Haskell, with extra attention paid to helping you express mutability. Overall, it seems like an attempt to generalize some tricks and lessons learned from the implementation of Feldspar (a number crunching DSL embedded in Haskell). \n\n", "edited": 1353096323.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I came across this paper while doing a literature search and it seems pretty cool/useful. &lt;/p&gt;\n\n&lt;p&gt;tl;dr: &lt;/p&gt;\n\n&lt;p&gt;When you&amp;#39;re building a new language, the traditional approach is to write a parser and then either interpret or compile the parsed syntax trees. An alternative is to embed your new language inside some existing language, bypassing the need for a parser and maybe even getting value representations or a type system with little effort. For example, if you embed inside Haskell you can leverage its type system to differentiate between the host system&amp;#39;s values and the delayed/embedded values of the language you&amp;#39;re implementing. Even further, you can use the type signatures of embedded code to statically verify that you&amp;#39;re constructing code that&amp;#39;s well-formed. &lt;/p&gt;\n\n&lt;p&gt;One potential problem, though, arises if you want to express language constructs in your embedded language that aren&amp;#39;t directly supported by the host language (i.e. Haskell doesn&amp;#39;t have direct support for loops with mutable accumulators). This paper shows off some useful machinery for embedding languages in Haskell, with extra attention paid to helping you express mutability. Overall, it seems like an attempt to generalize some tricks and lessons learned from the implementation of Feldspar (a number crunching DSL embedded in Haskell). &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c72e60h", "flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "created": 1353094526.0, "created_utc": 1353090926.0, "num_reports": null}], "score": 27, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 40, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/13b3j8/generic_monadic_constructs_for_embedded_languages/", "has_more_comments": false, "name": "t3_13b3j8", "created": 1353087910.0, "url": "http://www.cse.chalmers.se/~josefs/publications/paper21_cameraready.pdf", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1353087910.0, "link_flair_text": null, "media": null, "num_reports": null}, "243": {"domain": "wh.gov", "link_flair_class": null, "banned_by": null, "downvotes": 34, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "1396yz", "clicked": false, "title": "A More Interesting \"We the People\" Petition: Implement a Policy for Declassifying Aging and Unused NSA Discoveries (x-post from r/math)", "num_comments": 8, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1396yz", "children": [], "author": "Jimla", "id": "c7218x5", "parent_id": "t3_1396yz", "score": 0, "approved_by": null, "upvotes": 19, "body": "In accordance with Executive Order 13526, published January 5, 2010, documents are automatically declassified 25 years after the day they are originally classified.  \n\nSource:  Wikipedia, and me (I've classified some documents for the U.S. government in my day)\n\nI understand 25 years is a long time, and a shorter period would be nice, but I just wanted to point out that there is in fact already a \"policy for declassifying aging and unused NSA discoveries.\"", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In accordance with Executive Order 13526, published January 5, 2010, documents are automatically declassified 25 years after the day they are originally classified.  &lt;/p&gt;\n\n&lt;p&gt;Source:  Wikipedia, and me (I&amp;#39;ve classified some documents for the U.S. government in my day)&lt;/p&gt;\n\n&lt;p&gt;I understand 25 years is a long time, and a shorter period would be nice, but I just wanted to point out that there is in fact already a &amp;quot;policy for declassifying aging and unused NSA discoveries.&amp;quot;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7218x5", "flair_text": null, "created": 1353029109.0, "created_utc": 1353025509.0, "num_reports": null}], "score": 126, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 160, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/1396yz/a_more_interesting_we_the_people_petition/", "has_more_comments": false, "name": "t3_1396yz", "created": 1353008351.0, "url": "http://wh.gov/XqC8", "author_flair_text": null, "author": "3w4v", "created_utc": 1353008351.0, "link_flair_text": null, "media": null, "num_reports": null}, "244": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 19, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "139xlu", "clicked": false, "title": "Do most US cities use genetic algorithms for optimizing traffic?", "num_comments": 45, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_139xlu", "children": [], "author": "Axle", "id": "c72cj2h", "parent_id": "t3_139xlu", "score": 0, "approved_by": null, "upvotes": 27, "body": "I work on software related to this field. The short answer is no.\n\nLet me take you through what makes up our traffic light systems here in the United States. Most cities, if they can afford it, hire [traffic engineers](http://en.wikipedia.org/wiki/Traffic_engineering_(transportation\\)). These engineers don't usually use software to figure out timing plans, just mostly theorems and equations they learn in school (about modeling traffic given road width, speed limit, connectedness, etc). The field itself is not as digital as you'd like. It's getting there though. Jobs in city planning are only about as technical as being the one guy who knows how to use [ArcGIS](http://en.wikipedia.org/wiki/Arcgis) and script it, or being the guy who changes the timing plan configurations for an intersection.\n\nTraffic lights are controlled by computers known as traffic light controllers. Each light controller will typically control only one intersection, but some cities will use a controller for 2 or more intersections for cost savings or because the traffic pattern is complex enough that they need both intersections aware of the other. There are somewhere on the order of 15-20 different light controller manufacturers, each with different feature sets (wapiti, econolite, siemens, etc). Old light controllers require that a traffic engineer go to the intersection they want to change, and make their timing changes there. The newer light controllers, on the other hand, all have network interfaces, to allow them to be wired up to some centralized location. Some of these controllers are read only, i.e. if you want to change their timing, you still have to physically go to the intersection. Most of the new ones these days allow remote modification to their timing plans.\n\nTo facilitate these modifications, traffic management systems (produced by siemens, transcore, mccain, etc) were created to interface with a bunch of different kinds of light controllers to provide a centralized location to manage timing plans. If you've seen the [Italian Job](http://www.youtube.com/watch?v=r4IBPd7-LlQ&amp;feature=fvwrel), the stuff in the movie is only barely possible, and only in big cities. I've seen the systems used, and they're no where near as fancy as in the movie. The light controllers are usually on a private network that goes straight to the central location too, not much room for hacking.\n\nSo, the long answer is that while some computer systems are in place, they aren't always available, the software is pretty crappy, and the cities haven't adopted a workflow which takes the data they can get and uses it in their process (in a way that computer science could help with). Welcome to real world software :/. However, if you're interested in this sort of thing, do some research on the subject. There are some programs in academia that are trying to push forward traffic optimization. I've even heard of a professor working with a town, who have given him some 10 intersections to globally optimize, to eventually include all the controllers in the town. Can't remember the name at the moment, but there are people starting to do this out there.\n\nI'm not going to say what I work on, but I will say that if a commercial (or academic) entity that you work for is interested in receiving data about the status of traffic lights in your city, private message me.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I work on software related to this field. The short answer is no.&lt;/p&gt;\n\n&lt;p&gt;Let me take you through what makes up our traffic light systems here in the United States. Most cities, if they can afford it, hire &lt;a href=\"http://en.wikipedia.org/wiki/Traffic_engineering_(transportation)\"&gt;traffic engineers&lt;/a&gt;. These engineers don&amp;#39;t usually use software to figure out timing plans, just mostly theorems and equations they learn in school (about modeling traffic given road width, speed limit, connectedness, etc). The field itself is not as digital as you&amp;#39;d like. It&amp;#39;s getting there though. Jobs in city planning are only about as technical as being the one guy who knows how to use &lt;a href=\"http://en.wikipedia.org/wiki/Arcgis\"&gt;ArcGIS&lt;/a&gt; and script it, or being the guy who changes the timing plan configurations for an intersection.&lt;/p&gt;\n\n&lt;p&gt;Traffic lights are controlled by computers known as traffic light controllers. Each light controller will typically control only one intersection, but some cities will use a controller for 2 or more intersections for cost savings or because the traffic pattern is complex enough that they need both intersections aware of the other. There are somewhere on the order of 15-20 different light controller manufacturers, each with different feature sets (wapiti, econolite, siemens, etc). Old light controllers require that a traffic engineer go to the intersection they want to change, and make their timing changes there. The newer light controllers, on the other hand, all have network interfaces, to allow them to be wired up to some centralized location. Some of these controllers are read only, i.e. if you want to change their timing, you still have to physically go to the intersection. Most of the new ones these days allow remote modification to their timing plans.&lt;/p&gt;\n\n&lt;p&gt;To facilitate these modifications, traffic management systems (produced by siemens, transcore, mccain, etc) were created to interface with a bunch of different kinds of light controllers to provide a centralized location to manage timing plans. If you&amp;#39;ve seen the &lt;a href=\"http://www.youtube.com/watch?v=r4IBPd7-LlQ&amp;amp;feature=fvwrel\"&gt;Italian Job&lt;/a&gt;, the stuff in the movie is only barely possible, and only in big cities. I&amp;#39;ve seen the systems used, and they&amp;#39;re no where near as fancy as in the movie. The light controllers are usually on a private network that goes straight to the central location too, not much room for hacking.&lt;/p&gt;\n\n&lt;p&gt;So, the long answer is that while some computer systems are in place, they aren&amp;#39;t always available, the software is pretty crappy, and the cities haven&amp;#39;t adopted a workflow which takes the data they can get and uses it in their process (in a way that computer science could help with). Welcome to real world software :/. However, if you&amp;#39;re interested in this sort of thing, do some research on the subject. There are some programs in academia that are trying to push forward traffic optimization. I&amp;#39;ve even heard of a professor working with a town, who have given him some 10 intersections to globally optimize, to eventually include all the controllers in the town. Can&amp;#39;t remember the name at the moment, but there are people starting to do this out there.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m not going to say what I work on, but I will say that if a commercial (or academic) entity that you work for is interested in receiving data about the status of traffic lights in your city, private message me.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c72cj2h", "flair_text": null, "created": 1353088718.0, "created_utc": 1353085118.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 7, "link_id": "t3_139xlu", "children": [], "author": "open-parenthesis", "id": "c729k2z", "parent_id": "t3_139xlu", "score": 0, "approved_by": null, "upvotes": 30, "body": "There's already an optimized algorithm for traffic, it is called roundabouts. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There&amp;#39;s already an optimized algorithm for traffic, it is called roundabouts. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c729k2z", "flair_text": null, "created": 1353075456.0, "created_utc": 1353071856.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 11, "link_id": "t3_139xlu", "children": [], "author": "MrDecimal", "id": "c724dat", "parent_id": "t3_139xlu", "score": 0, "approved_by": null, "upvotes": 53, "body": "hahahaha. My city certainly doesn't. I think they have 50 or so monkeys pressing the buttons randomly.    \nFeel free to downvote me once this conversation starts.\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;hahahaha. My city certainly doesn&amp;#39;t. I think they have 50 or so monkeys pressing the buttons randomly.&lt;br/&gt;\nFeel free to downvote me once this conversation starts.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c724dat", "flair_text": null, "created": 1353040929.0, "created_utc": 1353037329.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_139xlu", "children": [], "author": "supercargo", "id": "c72ayy1", "parent_id": "t3_139xlu", "score": 0, "approved_by": null, "upvotes": 7, "body": "I don't know about _most_ but I've heard that LA uses some level of sophistication to figure these things out (doesn't mention genetic algorithms, but it sounds like they have a simulator which is a prerequisite to running a GA): http://ladot.lacity.org/tf_Traffic_Signal_Timing.htm\n\nI also have read a study (can't find the link at the moment) that basically shows that you can not locally optimize this.  That is, if you had a traffic signal with really great sensors (say it could use a camera to determine queue length at every entry to the intersection, detect grid lock, etc) and tried to make signaling decisions based on that information, it would do a bad job due to interference with nearby signal timings.  They went on to show that with a mesh like communication structure in which you only can communicate with adjacent (in the graph theoretic sense) signals you could come close to the globally optimal flow.\n\nI'm sure there are lots of commonalities between CS type problems (think computer networks) and traffic signaling, and I know that modeling and simulation play a large part in the disciplines of civil engineering concerned with things like signal timing, but I've always wished for a more \"intelligent\" system.  Around where I live it seems like they do traffic studies pretty frequently (the tube across the rode which counts all entries and exists amongst a series of major intersections), and I assume the data collected is used to adjust light timings, but that seems like a labor intensive and poorly adaptive approach.  I've always imagined the system could be much more intelligent.\n\nSuffice it to say this subject has been well studied for quite some time:\nhttp://trid.trb.org/view.aspx?id=390323", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t know about &lt;em&gt;most&lt;/em&gt; but I&amp;#39;ve heard that LA uses some level of sophistication to figure these things out (doesn&amp;#39;t mention genetic algorithms, but it sounds like they have a simulator which is a prerequisite to running a GA): &lt;a href=\"http://ladot.lacity.org/tf_Traffic_Signal_Timing.htm\"&gt;http://ladot.lacity.org/tf_Traffic_Signal_Timing.htm&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I also have read a study (can&amp;#39;t find the link at the moment) that basically shows that you can not locally optimize this.  That is, if you had a traffic signal with really great sensors (say it could use a camera to determine queue length at every entry to the intersection, detect grid lock, etc) and tried to make signaling decisions based on that information, it would do a bad job due to interference with nearby signal timings.  They went on to show that with a mesh like communication structure in which you only can communicate with adjacent (in the graph theoretic sense) signals you could come close to the globally optimal flow.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m sure there are lots of commonalities between CS type problems (think computer networks) and traffic signaling, and I know that modeling and simulation play a large part in the disciplines of civil engineering concerned with things like signal timing, but I&amp;#39;ve always wished for a more &amp;quot;intelligent&amp;quot; system.  Around where I live it seems like they do traffic studies pretty frequently (the tube across the rode which counts all entries and exists amongst a series of major intersections), and I assume the data collected is used to adjust light timings, but that seems like a labor intensive and poorly adaptive approach.  I&amp;#39;ve always imagined the system could be much more intelligent.&lt;/p&gt;\n\n&lt;p&gt;Suffice it to say this subject has been well studied for quite some time:\n&lt;a href=\"http://trid.trb.org/view.aspx?id=390323\"&gt;http://trid.trb.org/view.aspx?id=390323&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c72ayy1", "flair_text": null, "created": 1353082874.0, "created_utc": 1353079274.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_139xlu", "children": [], "author": "say_fuck_no_to_rules", "id": "c7271js", "parent_id": "t3_139xlu", "score": 0, "approved_by": null, "upvotes": 10, "body": "Shit no! That's way too fucking intelligent!\n\nSorry, kinda drunk.\n\nWould be really surprised if there was a major metropolitan area that did this. Although they are incredibly similar in the abstract, urban planning and computer science are fields that have almost zero connection in the real world. The reality is, most of us who get CS degrees get hired into the private sector doing something like app development or web development right away--not only is there huge money there, but the people who need us know where to look. Even if an urban planner or whoever programs traffic lights came up with the idea of hiring a computer scientist to use genetic programming to optimize the traffic system, where would they go?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Shit no! That&amp;#39;s way too fucking intelligent!&lt;/p&gt;\n\n&lt;p&gt;Sorry, kinda drunk.&lt;/p&gt;\n\n&lt;p&gt;Would be really surprised if there was a major metropolitan area that did this. Although they are incredibly similar in the abstract, urban planning and computer science are fields that have almost zero connection in the real world. The reality is, most of us who get CS degrees get hired into the private sector doing something like app development or web development right away--not only is there huge money there, but the people who need us know where to look. Even if an urban planner or whoever programs traffic lights came up with the idea of hiring a computer scientist to use genetic programming to optimize the traffic system, where would they go?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7271js", "flair_text": null, "created": 1353052762.0, "created_utc": 1353049162.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_139xlu", "children": [], "author": "slowbutgaining", "id": "c726327", "parent_id": "t3_139xlu", "score": 0, "approved_by": null, "upvotes": 4, "body": "There is a light in my town that on occasion gives the green light to one set of lanes while the other set of lanes still on yellow. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There is a light in my town that on occasion gives the green light to one set of lanes while the other set of lanes still on yellow. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c726327", "flair_text": null, "created": 1353047768.0, "created_utc": 1353044168.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_139xlu", "children": [], "author": "lpetrazickis", "id": "c729utd", "parent_id": "t3_139xlu", "score": 0, "approved_by": null, "upvotes": 4, "body": "Anecdote: Before Bill Gates started Microsoft, he was trying to sell traffic management software to cities.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Anecdote: Before Bill Gates started Microsoft, he was trying to sell traffic management software to cities.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c729utd", "flair_text": null, "created": 1353077396.0, "created_utc": 1353073796.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_139xlu", "children": [], "author": "EmperorOfCanada", "id": "c72a0dp", "parent_id": "t3_139xlu", "score": 0, "approved_by": null, "upvotes": 4, "body": "In Halifax they regularly have two forward lanes on one side of an intersection and one lane on the other. Drag races and horn honking. \n\nAs you approach you have two choices left or right lane. If you are not the first to the left lane you are risking the asshat turning on his left turn signal just as the light turns green. If you go into the right lane you are being an ass blocking anyone who wants to turn right on red plus if the guy in the left lane goes straight you often have parked cars ahead. \n\nYou might think I am overthinking this but these horrible creations are all over Halifax; I am not kidding there might be 30 of them in the downtown.\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In Halifax they regularly have two forward lanes on one side of an intersection and one lane on the other. Drag races and horn honking. &lt;/p&gt;\n\n&lt;p&gt;As you approach you have two choices left or right lane. If you are not the first to the left lane you are risking the asshat turning on his left turn signal just as the light turns green. If you go into the right lane you are being an ass blocking anyone who wants to turn right on red plus if the guy in the left lane goes straight you often have parked cars ahead. &lt;/p&gt;\n\n&lt;p&gt;You might think I am overthinking this but these horrible creations are all over Halifax; I am not kidding there might be 30 of them in the downtown.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c72a0dp", "flair_text": null, "created": 1353078300.0, "created_utc": 1353074700.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_139xlu", "children": [], "author": "KalimasPinky", "id": "c726603", "parent_id": "t3_139xlu", "score": 0, "approved_by": null, "upvotes": 5, "body": "You don't always find the optimum solution with a genetic algo... aka \"hill climbing\"\n\nBut probably not. Traffic simulations are a difficult (costly) thing to judge their accuracy. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You don&amp;#39;t always find the optimum solution with a genetic algo... aka &amp;quot;hill climbing&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;But probably not. Traffic simulations are a difficult (costly) thing to judge their accuracy. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c726603", "flair_text": null, "created": 1353048170.0, "created_utc": 1353044570.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_139xlu", "children": [], "author": "tackleberry61", "id": "c729jqp", "parent_id": "t3_139xlu", "score": 0, "approved_by": null, "upvotes": 2, "body": "Honestly I just wish they'd use anything other than hampster wheels and/or monkeys.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Honestly I just wish they&amp;#39;d use anything other than hampster wheels and/or monkeys.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c729jqp", "flair_text": null, "created": 1353075381.0, "created_utc": 1353071781.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_139xlu", "children": [], "author": "frankster", "id": "c72as4w", "parent_id": "t3_139xlu", "score": 0, "approved_by": null, "upvotes": 1, "body": "lol no", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;lol no&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c72as4w", "flair_text": null, "created": 1353082047.0, "created_utc": 1353078447.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_139xlu", "children": [], "author": "oantolin", "id": "c72d5ea", "parent_id": "t3_139xlu", "score": 0, "approved_by": null, "upvotes": 1, "body": "I think a better question is \"Has any city in the world ever used genetic algorithms for optimizing traffic\"? I'd love to hear examples.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think a better question is &amp;quot;Has any city in the world ever used genetic algorithms for optimizing traffic&amp;quot;? I&amp;#39;d love to hear examples.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c72d5ea", "flair_text": null, "created": 1353090918.0, "created_utc": 1353087318.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_139xlu", "children": [], "author": "wugitor", "id": "c72ly6i", "parent_id": "t3_139xlu", "score": 0, "approved_by": null, "upvotes": 1, "body": "What I find annoying is when I'm sitting at a red light at 11pm with no cars coming from the perpendicular street.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What I find annoying is when I&amp;#39;m sitting at a red light at 11pm with no cars coming from the perpendicular street.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c72ly6i", "flair_text": null, "created": 1353125284.0, "created_utc": 1353121684.0, "num_reports": null}], "score": 26, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 45, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/139xlu/do_most_us_cities_use_genetic_algorithms_for/", "has_more_comments": false, "name": "t3_139xlu", "created": 1353031880.0, "url": "http://www.reddit.com/r/compsci/comments/139xlu/do_most_us_cities_use_genetic_algorithms_for/", "author_flair_text": null, "author": "mycall", "created_utc": 1353031880.0, "link_flair_text": null, "media": null, "num_reports": null}, "245": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 36, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I read in a book that you can use a NAND gate to build all the other gates. And by testing it out, I figured out how to do that. But I&amp;#39;m just wondering, is there any way to derive it from axioms? What properties does a gate need to have to be considered universal?&lt;br/&gt;\nI don&amp;#39;t know if my question is clear, I&amp;#39;ll put it in an other way: Can you look at a nand-gate and decide that this is a universal gate, without trying to build all the other gates with it?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I read in a book that you can use a NAND gate to build all the other gates. And by testing it out, I figured out how to do that. But I'm just wondering, is there any way to derive it from axioms? What properties does a gate need to have to be considered universal?  \nI don't know if my question is clear, I'll put it in an other way: Can you look at a nand-gate and decide that this is a universal gate, without trying to build all the other gates with it?", "saved": false, "id": "138jrk", "clicked": false, "title": "How did they find out that NAND and NOR gates are universal gates?", "num_comments": 41, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 26, "link_id": "t3_138jrk", "children": [], "author": "systoll", "id": "c71r0ge", "parent_id": "t3_138jrk", "score": 0, "approved_by": null, "upvotes": 171, "body": "The property of being 'universal' is more formally known as *functional completeness*, and a *set* of operations is functionally complete iff you can express all boolean functions using only operations within that set. You can find that a set of operations is functionally complete by showing that you can create another, also functionally complete set (commonly AND, OR, NOT) out of it. But that's what you're doing already. \n\nIf you don't want to try to do that... a set of operations is functionally complete unless all of the operations within it have one of these properties:\n\n1. truth preservation. These are operations where setting all inputs to true sets the output to true. T NAND T = F,  so NAND isn't truth preserving.  \n\n2. falsity preservation, which is the reverse of the above -- setting all inputs false should set the output to false. F NAND F = T, so NAND isn't falsity preserving.\n\n3. monotonicity. If an operation is monotonic, it can't go from true to false without one of its inputs being changed from true to false. T NAND F = T, but T NAND T = F, so NAND isn't monotonic.\n\n4. affineness. These are operations which either *always ignore* an input, or *always depend* on it. IFF has this property. In Q = A iff B, setting A to true means Q=B, and setting it to false gives Q=not(B), and either way it depends on B. NAND does *not* have this property: Letting Q = A nand B, if A = True, Q = not(b), but if A=false, then Q = true, regardless of B. \n\n5. Self-duality. In these operations, flipping the value of every input will flip the value of the output. NOT is the trivial example. NAND is not an example: T NAND F = T, F NAND T = T. \n\nSince NAND has none of the properties that lead to functional incompleteness, it alone is a functionally complete set of operations. {AND, OR, NOT} is also functionally complete because although each one fits into at least one of these categories, they don't all fit into the *same* one. \n\n***\n\nThese properties were proven via [Post's Lattice](http://en.wikipedia.org/wiki/Post%27s_lattice)", "edited": 1353011827.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The property of being &amp;#39;universal&amp;#39; is more formally known as &lt;em&gt;functional completeness&lt;/em&gt;, and a &lt;em&gt;set&lt;/em&gt; of operations is functionally complete iff you can express all boolean functions using only operations within that set. You can find that a set of operations is functionally complete by showing that you can create another, also functionally complete set (commonly AND, OR, NOT) out of it. But that&amp;#39;s what you&amp;#39;re doing already. &lt;/p&gt;\n\n&lt;p&gt;If you don&amp;#39;t want to try to do that... a set of operations is functionally complete unless all of the operations within it have one of these properties:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;truth preservation. These are operations where setting all inputs to true sets the output to true. T NAND T = F,  so NAND isn&amp;#39;t truth preserving.  &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;falsity preservation, which is the reverse of the above -- setting all inputs false should set the output to false. F NAND F = T, so NAND isn&amp;#39;t falsity preserving.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;monotonicity. If an operation is monotonic, it can&amp;#39;t go from true to false without one of its inputs being changed from true to false. T NAND F = T, but T NAND T = F, so NAND isn&amp;#39;t monotonic.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;affineness. These are operations which either &lt;em&gt;always ignore&lt;/em&gt; an input, or &lt;em&gt;always depend&lt;/em&gt; on it. IFF has this property. In Q = A iff B, setting A to true means Q=B, and setting it to false gives Q=not(B), and either way it depends on B. NAND does &lt;em&gt;not&lt;/em&gt; have this property: Letting Q = A nand B, if A = True, Q = not(b), but if A=false, then Q = true, regardless of B. &lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Self-duality. In these operations, flipping the value of every input will flip the value of the output. NOT is the trivial example. NAND is not an example: T NAND F = T, F NAND T = T. &lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Since NAND has none of the properties that lead to functional incompleteness, it alone is a functionally complete set of operations. {AND, OR, NOT} is also functionally complete because although each one fits into at least one of these categories, they don&amp;#39;t all fit into the &lt;em&gt;same&lt;/em&gt; one. &lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;These properties were proven via &lt;a href=\"http://en.wikipedia.org/wiki/Post%27s_lattice\"&gt;Post&amp;#39;s Lattice&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c71r0ge", "flair_text": null, "created": 1352993310.0, "created_utc": 1352989710.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 8, "link_id": "t3_138jrk", "children": [], "author": "uint64", "id": "c71q8z9", "parent_id": "t3_138jrk", "score": 0, "approved_by": null, "upvotes": 25, "body": "Take a look at a truth table for NAND gates.\n\nA NAND can be used as a not by connecting the two inputs together. \nSo using two NANDS can become a NOT.\n\nThree NANDs can be used for OR, by using two to NOT the two imports, and the third as a standard NAND.  !(!A AND !B) = A OR B\n\nA and B are inputs, !Q is the final output. \n\n    A   B    !A   !B   (Q = !A AND !B)             !Q   \n\n    1    1    0    0        0                   1\n\n    1    0    0    1        0                   1\n\n    0    1    1    0        0                   1\n\n    0    0    1    1        1                   0\n\n\n\nTake a look at De Morgans Law, it's quite a useful thing to understand if you are working with logic gates.\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Take a look at a truth table for NAND gates.&lt;/p&gt;\n\n&lt;p&gt;A NAND can be used as a not by connecting the two inputs together. \nSo using two NANDS can become a NOT.&lt;/p&gt;\n\n&lt;p&gt;Three NANDs can be used for OR, by using two to NOT the two imports, and the third as a standard NAND.  !(!A AND !B) = A OR B&lt;/p&gt;\n\n&lt;p&gt;A and B are inputs, !Q is the final output. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;A   B    !A   !B   (Q = !A AND !B)             !Q   \n\n1    1    0    0        0                   1\n\n1    0    0    1        0                   1\n\n0    1    1    0        0                   1\n\n0    0    1    1        1                   0\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Take a look at De Morgans Law, it&amp;#39;s quite a useful thing to understand if you are working with logic gates.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c71q8z9", "flair_text": null, "created": 1352988397.0, "created_utc": 1352984797.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_138jrk", "children": [], "author": "mikeshemp", "id": "c71rk97", "parent_id": "t3_138jrk", "score": 0, "approved_by": null, "upvotes": 12, "body": "One way of looking at it is that there are only 16 possible gate types with two binary inputs and one binary output.  How do I know?  Well, look at this:\n\n| A | B | Result |\n|:--|---|----|----|-----------------|---:|\n| 1 | 1 | a | 0 |      0      | 1 |\n| 1 | 0 | b | 1 |      0      | 1 |\n| 0 | 1 | c | 0 |      0      | 1 |\n| 0 | 0 | d | 1 |      1      | 0 |\n\nEvery gate can be fully described as the values of a, b, c, and d.  For example:\n\nAND: a=1, b=0, c=0, d=0\n\nNAND: a=0, b=1, c=1, d=1\n\nOR: a=1, b=1, c=1, d=0\n\nXOR: a=0, b=1, c=1, d=0\n\nTRUE: a=1, b=1, c=1, d=1\n\nSince each result can only be 0 or 1, there are only 16 possible binary gates.\n\nSomeone, at some point, found that all 16 of the possible logic tables can be constructed with a NAND gate. We know that \"all possible\" gates can be constructed because we have a complete list of all possible gates -- there are exactly 16 of them.  \n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;One way of looking at it is that there are only 16 possible gate types with two binary inputs and one binary output.  How do I know?  Well, look at this:&lt;/p&gt;\n\n&lt;table&gt;&lt;thead&gt;\n&lt;tr&gt;\n&lt;th align=\"left\"&gt;A&lt;/th&gt;\n&lt;th&gt;B&lt;/th&gt;\n&lt;th&gt;Result&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td align=\"left\"&gt;1&lt;/td&gt;\n&lt;td&gt;1&lt;/td&gt;\n&lt;td&gt;a&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td align=\"left\"&gt;1&lt;/td&gt;\n&lt;td&gt;0&lt;/td&gt;\n&lt;td&gt;b&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td align=\"left\"&gt;0&lt;/td&gt;\n&lt;td&gt;1&lt;/td&gt;\n&lt;td&gt;c&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td align=\"left\"&gt;0&lt;/td&gt;\n&lt;td&gt;0&lt;/td&gt;\n&lt;td&gt;d&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;&lt;/table&gt;\n\n&lt;p&gt;Every gate can be fully described as the values of a, b, c, and d.  For example:&lt;/p&gt;\n\n&lt;p&gt;AND: a=1, b=0, c=0, d=0&lt;/p&gt;\n\n&lt;p&gt;NAND: a=0, b=1, c=1, d=1&lt;/p&gt;\n\n&lt;p&gt;OR: a=1, b=1, c=1, d=0&lt;/p&gt;\n\n&lt;p&gt;XOR: a=0, b=1, c=1, d=0&lt;/p&gt;\n\n&lt;p&gt;TRUE: a=1, b=1, c=1, d=1&lt;/p&gt;\n\n&lt;p&gt;Since each result can only be 0 or 1, there are only 16 possible binary gates.&lt;/p&gt;\n\n&lt;p&gt;Someone, at some point, found that all 16 of the possible logic tables can be constructed with a NAND gate. We know that &amp;quot;all possible&amp;quot; gates can be constructed because we have a complete list of all possible gates -- there are exactly 16 of them.  &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c71rk97", "flair_text": null, "created": 1352995998.0, "created_utc": 1352992398.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_138jrk", "children": [], "author": "thebighouse", "id": "c71sym3", "parent_id": "t3_138jrk", "score": 0, "approved_by": null, "upvotes": 4, "body": "It would be more straightforward and easier mathematically to simply prove that each of the 16 binary operators can be emulated with the instruction set. But I admit, systoll's take is much more elegant, fascinating and deep. I have to see the proof of that.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It would be more straightforward and easier mathematically to simply prove that each of the 16 binary operators can be emulated with the instruction set. But I admit, systoll&amp;#39;s take is much more elegant, fascinating and deep. I have to see the proof of that.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c71sym3", "flair_text": null, "created": 1353001508.0, "created_utc": 1352997908.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_138jrk", "children": [], "author": "ratazana", "id": "c71qjoq", "parent_id": "t3_138jrk", "score": 0, "approved_by": null, "upvotes": 4, "body": "I don't know exactly what kind of reading I can recommend to you, but I found [this article on functional completeness](https://en.wikipedia.org/wiki/Functional_completeness). For a given set of functions (or operators), quoting the very article, \"the set is functionally complete if every Boolean function that takes at least one variable can be expressed in terms of the functions \u0192i.\" The unitary sets of operators {NAND} and {NOR} are functionally complete.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t know exactly what kind of reading I can recommend to you, but I found &lt;a href=\"https://en.wikipedia.org/wiki/Functional_completeness\"&gt;this article on functional completeness&lt;/a&gt;. For a given set of functions (or operators), quoting the very article, &amp;quot;the set is functionally complete if every Boolean function that takes at least one variable can be expressed in terms of the functions \u0192i.&amp;quot; The unitary sets of operators {NAND} and {NOR} are functionally complete.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c71qjoq", "flair_text": null, "created": 1352990536.0, "created_utc": 1352986936.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_138jrk", "children": [], "author": "flebron", "id": "c71rdkq", "parent_id": "t3_138jrk", "score": 0, "approved_by": null, "upvotes": 3, "body": "One way to see it, is know that every boolean formula has a disjunctive normal form, and a conjunctive normal form.\n\nThat is, there is a way to express an equivalent formula, using only AND, OR, and NOT.\n\nHence, since NAND can, by itself, imitate an AND, an OR, and a NOT gate, it must be able to express any conjunctive or disjunctive normal form, and thus every boolean expression.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;One way to see it, is know that every boolean formula has a disjunctive normal form, and a conjunctive normal form.&lt;/p&gt;\n\n&lt;p&gt;That is, there is a way to express an equivalent formula, using only AND, OR, and NOT.&lt;/p&gt;\n\n&lt;p&gt;Hence, since NAND can, by itself, imitate an AND, an OR, and a NOT gate, it must be able to express any conjunctive or disjunctive normal form, and thus every boolean expression.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c71rdkq", "flair_text": null, "created": 1352995143.0, "created_utc": 1352991543.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_138jrk", "children": [], "author": "wugitor", "id": "c72lype", "parent_id": "t3_138jrk", "score": 0, "approved_by": null, "upvotes": 2, "body": "Boolean algebra.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Boolean algebra.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c72lype", "flair_text": null, "created": 1353125356.0, "created_utc": 1353121756.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_138jrk", "children": [], "author": "Lothrazar", "id": "c71s3m4", "parent_id": "t3_138jrk", "score": 0, "approved_by": null, "upvotes": 5, "body": "What do you mean by \"Find Out\".  Its a mathematical proof.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What do you mean by &amp;quot;Find Out&amp;quot;.  Its a mathematical proof.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c71s3m4", "flair_text": null, "created": 1352998282.0, "created_utc": 1352994682.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_138jrk", "children": [], "author": "Ichiro_Ino", "id": "c71r9hr", "parent_id": "t3_138jrk", "score": 0, "approved_by": null, "upvotes": 3, "body": "Why more use NAND rather than AND/OR? ELI5 please.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Why more use NAND rather than AND/OR? ELI5 please.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c71r9hr", "flair_text": null, "created": 1352994599.0, "created_utc": 1352990999.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_138jrk", "children": [], "author": "Todamont", "id": "c77cx37", "parent_id": "t3_138jrk", "score": 0, "approved_by": null, "upvotes": 1, "body": "*Logic*. Hahaha. But seriously, this is a field known as logic design. Now, tell me how Laplace came up with his \"transform\".", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;em&gt;Logic&lt;/em&gt;. Hahaha. But seriously, this is a field known as logic design. Now, tell me how Laplace came up with his &amp;quot;transform&amp;quot;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c77cx37", "flair_text": null, "created": 1353994235.0, "created_utc": 1353990635.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_138jrk", "children": [], "author": "JimH10", "id": "c71wr7o", "parent_id": "t3_138jrk", "score": 0, "approved_by": null, "upvotes": 4, "body": "Why would somebody think to do it?  Asking for a minimal set of operators is a natural question.  \n\nIt would be natural to start by wondering if you could do it with a single operator.  Here is an not-yet-filled-out truth table.  Call the operation |.\n\n    a b      a|b\n    F F &lt;position 0&gt;\n    F T &lt;position 1&gt;\n    T F  &lt;position 2&gt;\n    T T &lt;position 3&gt;\n\nI'll get you started.  Observe that if T|T gives T then you can't ever get F from all T inputs and so you cannot produce the NOT operation (which requires that from the single input T you get an output of F).  Likewise for F|F.  So now we have this.\n\n    F F T\n    F T &lt;position 1&gt;\n    T F  &lt;position 2&gt;\n    T T F\n\nSee if you can reason out the last two (or just try the four possibilities).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Why would somebody think to do it?  Asking for a minimal set of operators is a natural question.  &lt;/p&gt;\n\n&lt;p&gt;It would be natural to start by wondering if you could do it with a single operator.  Here is an not-yet-filled-out truth table.  Call the operation |.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;a b      a|b\nF F &amp;lt;position 0&amp;gt;\nF T &amp;lt;position 1&amp;gt;\nT F  &amp;lt;position 2&amp;gt;\nT T &amp;lt;position 3&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I&amp;#39;ll get you started.  Observe that if T|T gives T then you can&amp;#39;t ever get F from all T inputs and so you cannot produce the NOT operation (which requires that from the single input T you get an output of F).  Likewise for F|F.  So now we have this.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;F F T\nF T &amp;lt;position 1&amp;gt;\nT F  &amp;lt;position 2&amp;gt;\nT T F\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;See if you can reason out the last two (or just try the four possibilities).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c71wr7o", "flair_text": null, "created": 1353013759.0, "created_utc": 1353010159.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_138jrk", "children": [], "author": "Clyde_Frag", "id": "c71rc6o", "parent_id": "t3_138jrk", "score": 0, "approved_by": null, "upvotes": 4, "body": "De Morgan's law is a good place to start.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;De Morgan&amp;#39;s law is a good place to start.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c71rc6o", "flair_text": null, "created": 1352994958.0, "created_utc": 1352991358.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_138jrk", "children": [], "author": "Geohump", "id": "c71rfas", "parent_id": "t3_138jrk", "score": 0, "approved_by": null, "upvotes": 1, "body": "Just reviewed this - haven't added anything, but it was fun to think about out loud. \n\nThe properties a gate needs in order to be universal is the ability to build all of the other basic gates type using nothing but that single gate type.  But clearly you know this from the second half of your question. \n\nWhat is the complete list of basic gate types ? I'm not certain but I believe its simply AND, OR and NOT. (Please someone correct me if that is not true.)\n\nFor example to make a NOT out of a NAND gate you just take a nand gate and only pipe one input into it. ... uh..  Wait that doesn't work.  That'll always be false...\n... um hang on, I have to think about this .... :-D \n\noh, oh yeah,  to make a NOT, split the signal and input it on both inputs of the NAND - whenever the signal is true, the output is false, and vice versa. \n\n       s0   &lt;-- s zero - the input signal \n    __|___         \n    |       |\n    -------          a NOT gate from a NAND \n     NAND\n        V\n        |    &lt;-    the output signal\n\nTo make an AND just put the two inputs into a NAND gate and then split the output of that signal into the NOT circuit we just built. \n\nOR gate:  (using the NOT circuit from above) (uses a total of 3 NANDs ) \n\n    s1-----&gt;NOT----&gt;|\n                                | NAND &gt;--- \n                                |\n    s2-----&gt;NOT----&gt;|\n\nBeen 30+ years since Machine Logic course. Nice wake up exercise.   ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just reviewed this - haven&amp;#39;t added anything, but it was fun to think about out loud. &lt;/p&gt;\n\n&lt;p&gt;The properties a gate needs in order to be universal is the ability to build all of the other basic gates type using nothing but that single gate type.  But clearly you know this from the second half of your question. &lt;/p&gt;\n\n&lt;p&gt;What is the complete list of basic gate types ? I&amp;#39;m not certain but I believe its simply AND, OR and NOT. (Please someone correct me if that is not true.)&lt;/p&gt;\n\n&lt;p&gt;For example to make a NOT out of a NAND gate you just take a nand gate and only pipe one input into it. ... uh..  Wait that doesn&amp;#39;t work.  That&amp;#39;ll always be false...\n... um hang on, I have to think about this .... :-D &lt;/p&gt;\n\n&lt;p&gt;oh, oh yeah,  to make a NOT, split the signal and input it on both inputs of the NAND - whenever the signal is true, the output is false, and vice versa. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;   s0   &amp;lt;-- s zero - the input signal \n__|___         \n|       |\n-------          a NOT gate from a NAND \n NAND\n    V\n    |    &amp;lt;-    the output signal\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;To make an AND just put the two inputs into a NAND gate and then split the output of that signal into the NOT circuit we just built. &lt;/p&gt;\n\n&lt;p&gt;OR gate:  (using the NOT circuit from above) (uses a total of 3 NANDs ) &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;s1-----&amp;gt;NOT----&amp;gt;|\n                            | NAND &amp;gt;--- \n                            |\ns2-----&amp;gt;NOT----&amp;gt;|\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Been 30+ years since Machine Logic course. Nice wake up exercise.   &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c71rfas", "flair_text": null, "created": 1352995370.0, "created_utc": 1352991770.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 45, "link_id": "t3_138jrk", "children": [], "author": "svsvsvs", "id": "c71qhq8", "parent_id": "t3_138jrk", "score": 0, "approved_by": null, "upvotes": 16, "body": "By using both halves of their brain.\n\nSeriously, this is not one of the more difficult results in logic.\n\n**Edit:** And you should feel bad for even asking about it.", "edited": 1352990495.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;By using both halves of their brain.&lt;/p&gt;\n\n&lt;p&gt;Seriously, this is not one of the more difficult results in logic.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Edit:&lt;/strong&gt; And you should feel bad for even asking about it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c71qhq8", "flair_text": null, "created": 1352990174.0, "created_utc": 1352986574.0, "num_reports": null}], "score": 81, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 117, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/138jrk/how_did_they_find_out_that_nand_and_nor_gates_are/", "has_more_comments": false, "name": "t3_138jrk", "created": 1352984036.0, "url": "http://www.reddit.com/r/compsci/comments/138jrk/how_did_they_find_out_that_nand_and_nor_gates_are/", "author_flair_text": null, "author": "moebius23", "created_utc": 1352984036.0, "link_flair_text": null, "media": null, "num_reports": null}, "246": {"domain": "eecs.berkeley.edu", "link_flair_class": null, "banned_by": null, "downvotes": 18, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "137fvw", "clicked": false, "title": "Brian Harvey: Why 'Structure and Interpretation of Computer Programs' (SICP) matters", "num_comments": 12, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_137fvw", "children": [], "author": "spevak", "id": "c71h6y8", "parent_id": "t3_137fvw", "score": 0, "approved_by": null, "upvotes": 15, "body": "I took SICP with Brian Harvey and I LOVED it.  It was my first college CS class, and it definitely solidified my decision to major in CS.\nThe semester after I took it, Harvey stopped teaching it, and they switched the language to Python.  I'm really glad I got to take it with Harvey in Scheme\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I took SICP with Brian Harvey and I LOVED it.  It was my first college CS class, and it definitely solidified my decision to major in CS.\nThe semester after I took it, Harvey stopped teaching it, and they switched the language to Python.  I&amp;#39;m really glad I got to take it with Harvey in Scheme&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c71h6y8", "flair_text": null, "created": 1352939299.0, "created_utc": 1352935699.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_137fvw", "children": [], "author": "drthomaslight", "id": "c71lgff", "parent_id": "t3_137fvw", "score": 0, "approved_by": null, "upvotes": 6, "body": "Have you read your daily SICP?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Have you read your daily SICP?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c71lgff", "flair_text": null, "created": 1352955267.0, "created_utc": 1352951667.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 19, "link_id": "t3_137fvw", "children": [], "author": "dman24752", "id": "c71k07x", "parent_id": "t3_137fvw", "score": 0, "approved_by": null, "upvotes": 7, "body": "Meh, I prefer to just learn the hands-on approach then work into the theory, not the other way around.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Meh, I prefer to just learn the hands-on approach then work into the theory, not the other way around.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c71k07x", "flair_text": null, "created": 1352949875.0, "created_utc": 1352946275.0, "num_reports": null}], "score": 83, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 101, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/137fvw/brian_harvey_why_structure_and_interpretation_of/", "has_more_comments": false, "name": "t3_137fvw", "created": 1352933203.0, "url": "http://www.eecs.berkeley.edu/~bh/sicp.html", "author_flair_text": null, "author": "uhwuggawuh", "created_utc": 1352933203.0, "link_flair_text": null, "media": null, "num_reports": null}, "247": {"domain": "web.mit.edu", "link_flair_class": null, "banned_by": null, "downvotes": 6, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "137za0", "clicked": false, "title": "Speeding algorithms by shrinking data: \nA new approach to processing \u2018big data\u2019 creates succinct representations of huge data sets, so that existing algorithms can handle them efficiently\n", "num_comments": 0, "comments": [], "score": 9, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 15, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/137za0/speeding_algorithms_by_shrinking_data_a_new/", "has_more_comments": false, "name": "t3_137za0", "created": 1352951156.0, "url": "http://web.mit.edu/newsoffice/2012/compressed-gps-data-1113.html", "author_flair_text": null, "author": "kamoylan", "created_utc": 1352951156.0, "link_flair_text": null, "media": null, "num_reports": null}, "248": {"domain": "homotopytypetheory.org", "link_flair_class": null, "banned_by": null, "downvotes": 2, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "137e90", "clicked": false, "title": "Abstract Types with Isomorphic Types", "num_comments": 0, "comments": [], "score": 6, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 8, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/137e90/abstract_types_with_isomorphic_types/", "has_more_comments": false, "name": "t3_137e90", "created": 1352931716.0, "url": "http://homotopytypetheory.org/2012/11/12/abstract-types-with-isomorphic-types/", "author_flair_text": null, "author": "greenrd", "created_utc": 1352931716.0, "link_flair_text": null, "media": null, "num_reports": null}, "249": {"domain": "ascr-discovery.science.doe.gov", "link_flair_class": null, "banned_by": null, "downvotes": 8, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "13768l", "clicked": false, "title": "Pushing the power envelope: efficient exascale computers also could mean more powerful hand-helds with longer-lasting batteries", "num_comments": 2, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13768l", "children": [], "author": "WeeWooWeeWooWeeWoo", "id": "c71fwsl", "parent_id": "t3_13768l", "score": 0, "approved_by": null, "upvotes": 1, "body": "This article is vague about what FastFoward is going to do.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This article is vague about what FastFoward is going to do.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c71fwsl", "flair_text": null, "created": 1352934904.0, "created_utc": 1352931304.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_13768l", "children": [], "author": "Snootwaller", "id": "c73do1f", "parent_id": "t3_13768l", "score": 0, "approved_by": null, "upvotes": 1, "body": "This subreddit often gets into debates about what computer science is, and what it is not.  One thing I'm *certain* it is not, is the study of battery technology.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This subreddit often gets into debates about what computer science is, and what it is not.  One thing I&amp;#39;m &lt;em&gt;certain&lt;/em&gt; it is not, is the study of battery technology.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c73do1f", "flair_text": null, "created": 1353282889.0, "created_utc": 1353279289.0, "num_reports": null}], "score": 6, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 14, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ttcn458uuvfb9f621d40304bcb7cb208c07070c8a065c7eb4d", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/13768l/pushing_the_power_envelope_efficient_exascale/", "has_more_comments": false, "name": "t3_13768l", "created": 1352924889.0, "url": "http://ascr-discovery.science.doe.gov/exascale/exa_power1.shtml", "author_flair_text": null, "author": "greenprius", "created_utc": 1352924889.0, "link_flair_text": null, "media": null, "num_reports": null}}