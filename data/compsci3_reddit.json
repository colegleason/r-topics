{"150": {"domain": "cs.cmu.edu", "link_flair_class": null, "banned_by": null, "downvotes": 13, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "15bbmb", "clicked": false, "title": "\nInternally deterministic parallel algorithms can be fast [pdf]", "num_comments": 6, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_15bbmb", "children": [], "author": "finprogger", "id": "c7mbscx", "parent_id": "t3_15bbmb", "score": 0, "approved_by": null, "upvotes": 1, "body": "Is there an English translation somewhere? To someone not already familiar with this subfield this paper is totally unapproachable. In what way are existing parallel algorithms nondeterministic? \"Internally deterministic\" sounds as if the operations are deterministic within a single thread of the computation, which has always trivially been true.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is there an English translation somewhere? To someone not already familiar with this subfield this paper is totally unapproachable. In what way are existing parallel algorithms nondeterministic? &amp;quot;Internally deterministic&amp;quot; sounds as if the operations are deterministic within a single thread of the computation, which has always trivially been true.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7mbscx", "flair_text": null, "created": 1356537977.0, "created_utc": 1356534377.0, "num_reports": null}], "score": 22, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 35, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/15bbmb/internally_deterministic_parallel_algorithms_can/", "has_more_comments": false, "name": "t3_15bbmb", "created": 1356239416.0, "url": "http://www.cs.cmu.edu/~guyb/papers/BFGS12.pdf", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1356239416.0, "link_flair_text": null, "media": null, "num_reports": null}, "151": {"domain": "reddit.com", "link_flair_class": null, "banned_by": null, "downvotes": 9, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "15btus", "clicked": false, "title": "A new reddit for Capability-Based Security", "num_comments": 0, "comments": [], "score": 2, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 11, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/15btus/a_new_reddit_for_capabilitybased_security/", "has_more_comments": false, "name": "t3_15btus", "created": 1356276980.0, "url": "http://www.reddit.com/r/capabilities", "author_flair_text": null, "author": "andreasw", "created_utc": 1356276980.0, "link_flair_text": null, "media": null, "num_reports": null}, "152": {"domain": "atlas.cs.virginia.edu", "link_flair_class": null, "banned_by": null, "downvotes": 18, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "15afnn", "clicked": false, "title": "A Uni\ufb01ed Theory of Garbage Collection [pdf]", "num_comments": 6, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 9, "link_id": "t3_15afnn", "children": [], "author": "TIGGER_WARNING", "id": "c7krch2", "parent_id": "t3_15afnn", "score": 0, "approved_by": null, "upvotes": 11, "body": "&gt;We present a formulation of the two algorithms that shows that\nthey are in fact duals of each other. Intuitively, the difference is that\ntracing operates on live objects, or \u201cmatter\u201d, while reference counting\noperates on dead objects, or \u201canti-matter\u201d.\n\nUgh.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;We present a formulation of the two algorithms that shows that\nthey are in fact duals of each other. Intuitively, the difference is that\ntracing operates on live objects, or \u201cmatter\u201d, while reference counting\noperates on dead objects, or \u201canti-matter\u201d.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Ugh.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7krch2", "flair_text": null, "created": 1356220546.0, "created_utc": 1356216946.0, "num_reports": null}], "score": 69, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 87, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/15afnn/a_uni\ufb01ed_theory_of_garbage_collection_pdf/", "has_more_comments": false, "name": "t3_15afnn", "created": 1356201446.0, "url": "http://atlas.cs.virginia.edu/~weimer/2008-415/reading/bacon-garbage.pdf", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1356201446.0, "link_flair_text": null, "media": null, "num_reports": null}, "153": {"domain": "ocw.mit.edu", "link_flair_class": null, "banned_by": null, "downvotes": 9, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "15a92t", "clicked": false, "title": "Great Ideas in Theoretical Computer Science", "num_comments": 4, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_15a92t", "children": [], "author": "gasche", "id": "c7ko2kb", "parent_id": "t3_15a92t", "score": 0, "approved_by": null, "upvotes": 11, "body": "Should probably have been named \"Great idea in complexity theory\", given the specificity of the topics covered. It looks interesting, however. It should be noted that the teacher is Scott Aaronson, which has an [excellent blog](http://www.scottaaronson.com/blog/) on computer science (mostly centered on quantum computing).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Should probably have been named &amp;quot;Great idea in complexity theory&amp;quot;, given the specificity of the topics covered. It looks interesting, however. It should be noted that the teacher is Scott Aaronson, which has an &lt;a href=\"http://www.scottaaronson.com/blog/\"&gt;excellent blog&lt;/a&gt; on computer science (mostly centered on quantum computing).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ko2kb", "flair_text": null, "created": 1356206143.0, "created_utc": 1356202543.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_15a92t", "children": [], "author": "wintron", "id": "c7kui9s", "parent_id": "t3_15a92t", "score": 0, "approved_by": null, "upvotes": 6, "body": "CMU's class is called Great Theoretical Ideas in Computer Science. I wonder who took the name from whom", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;CMU&amp;#39;s class is called Great Theoretical Ideas in Computer Science. I wonder who took the name from whom&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7kui9s", "flair_text": null, "created": 1356234642.0, "created_utc": 1356231042.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_15a92t", "children": [], "author": "genunix", "id": "c7kxwyn", "parent_id": "t3_15a92t", "score": 0, "approved_by": null, "upvotes": 3, "body": "So we're spruiking online courses on here now?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;So we&amp;#39;re spruiking online courses on here now?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7kxwyn", "flair_text": null, "created": 1356250677.0, "created_utc": 1356247077.0, "num_reports": null}], "score": 30, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 39, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/15a92t/great_ideas_in_theoretical_computer_science/", "has_more_comments": false, "name": "t3_15a92t", "created": 1356194489.0, "url": "http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-080-great-ideas-in-theoretical-computer-science-spring-2008/", "author_flair_text": null, "author": "Athaba", "created_utc": 1356194489.0, "link_flair_text": null, "media": null, "num_reports": null}, "154": {"domain": "empiricalzeal.com", "link_flair_class": null, "banned_by": null, "downvotes": 19, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "159m5r", "clicked": false, "title": "What does randomness look like? [via HN]", "num_comments": 6, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_159m5r", "children": [], "author": "Coffee2theorems", "id": "c7kkrwt", "parent_id": "t3_159m5r", "score": 0, "approved_by": null, "upvotes": 11, "body": "\"What does randomness look like\" is a bit broad, when the topic is really more like \"Clustering behavior of random points\". If you take that square with points on it sliced into a grid and try to check whether the points came from a uniform distribution, there are many ways you could try to approach it, none of which is fundamentally a \"correct\" one. You could use a Kolmogorov-Smirnov test instead, for example. For classical tests, your choice of test statistic comes down to what *kinds* of deviations from uniformity you want the test to be sensitive to. In this case, it was claimed that the data is \"too clumpy\", so a test that is sensitive to clustering behavior is appropriate to test the claim.\n\nPerhaps this is clearer if you think of two generative processes: one is truly random (maybe some quantum device), and another is purely deterministic but does a good job at *looking like* random for most purposes (say, the Blum Blum Shub CSPRNG with fixed seed). Usually making the test sensitive to this difference is (fortunately!) not a goal.\n\nA model-based approach would compare for example the uniform distribution and a mixture of Gaussians, which would be appropriate if you think that most of the bombs are dropped around fixed points and what you want to know is the variance around the drop points. Of course, at the time (WWII :), there were no computational resources for doing such an analysis. Apparently someone did do an analysis using a single Gaussian, but it was criticized on grounds that a mixture would be more appropriate.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&amp;quot;What does randomness look like&amp;quot; is a bit broad, when the topic is really more like &amp;quot;Clustering behavior of random points&amp;quot;. If you take that square with points on it sliced into a grid and try to check whether the points came from a uniform distribution, there are many ways you could try to approach it, none of which is fundamentally a &amp;quot;correct&amp;quot; one. You could use a Kolmogorov-Smirnov test instead, for example. For classical tests, your choice of test statistic comes down to what &lt;em&gt;kinds&lt;/em&gt; of deviations from uniformity you want the test to be sensitive to. In this case, it was claimed that the data is &amp;quot;too clumpy&amp;quot;, so a test that is sensitive to clustering behavior is appropriate to test the claim.&lt;/p&gt;\n\n&lt;p&gt;Perhaps this is clearer if you think of two generative processes: one is truly random (maybe some quantum device), and another is purely deterministic but does a good job at &lt;em&gt;looking like&lt;/em&gt; random for most purposes (say, the Blum Blum Shub CSPRNG with fixed seed). Usually making the test sensitive to this difference is (fortunately!) not a goal.&lt;/p&gt;\n\n&lt;p&gt;A model-based approach would compare for example the uniform distribution and a mixture of Gaussians, which would be appropriate if you think that most of the bombs are dropped around fixed points and what you want to know is the variance around the drop points. Of course, at the time (WWII :), there were no computational resources for doing such an analysis. Apparently someone did do an analysis using a single Gaussian, but it was criticized on grounds that a mixture would be more appropriate.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7kkrwt", "flair_text": null, "created": 1356188186.0, "created_utc": 1356184586.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_159m5r", "children": [], "author": "delarhi", "id": "c7ki0d6", "parent_id": "t3_159m5r", "score": 0, "approved_by": null, "upvotes": 4, "body": "I was expecting to see this article cited: http://statphys.skku.ac.kr/~bjkim/Teaching/ComPhys12/Examples/numtools.pdf", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I was expecting to see this article cited: &lt;a href=\"http://statphys.skku.ac.kr/%7Ebjkim/Teaching/ComPhys12/Examples/numtools.pdf\"&gt;http://statphys.skku.ac.kr/~bjkim/Teaching/ComPhys12/Examples/numtools.pdf&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ki0d6", "flair_text": null, "created": 1356161968.0, "created_utc": 1356158368.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_159m5r", "children": [], "author": "IrregardingGrammar", "id": "c7kln9y", "parent_id": "t3_159m5r", "score": 0, "approved_by": null, "upvotes": 1, "body": "Another good article. This subs on fire the past 24 hours. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Another good article. This subs on fire the past 24 hours. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7kln9y", "flair_text": null, "created": 1356194545.0, "created_utc": 1356190945.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_159m5r", "children": [], "author": "keten", "id": "c7kmxeh", "parent_id": "t3_159m5r", "score": 0, "approved_by": null, "upvotes": 1, "body": "Seems kind of obvious. Yes, with randomness there will occasionally be clusters of unlikely events.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Seems kind of obvious. Yes, with randomness there will occasionally be clusters of unlikely events.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7kmxeh", "flair_text": null, "created": 1356201143.0, "created_utc": 1356197543.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_159m5r", "children": [], "author": "RogueCarpet", "id": "c7kxeik", "parent_id": "t3_159m5r", "score": 0, "approved_by": null, "upvotes": 1, "body": "The top comment links to an [awesome Radiolab episode](http://www.radiolab.org/2009/jun/15/) that is worth checking out if you found this article at all interesting.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The top comment links to an &lt;a href=\"http://www.radiolab.org/2009/jun/15/\"&gt;awesome Radiolab episode&lt;/a&gt; that is worth checking out if you found this article at all interesting.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7kxeik", "flair_text": null, "created": 1356247806.0, "created_utc": 1356244206.0, "num_reports": null}], "score": 101, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 120, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/159m5r/what_does_randomness_look_like_via_hn/", "has_more_comments": false, "name": "t3_159m5r", "created": 1356151386.0, "url": "http://www.empiricalzeal.com/2012/12/21/what-does-randomness-look-like/", "author_flair_text": null, "author": "zigzagp", "created_utc": 1356151386.0, "link_flair_text": null, "media": null, "num_reports": null}, "155": {"domain": "anchor.com.au", "link_flair_class": null, "banned_by": null, "downvotes": 35, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "1587ff", "clicked": false, "title": "How to explain Hash DoS to your parents by using cats", "num_comments": 15, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_1587ff", "children": [], "author": "maxbaroi", "id": "c7k74ah", "parent_id": "t3_1587ff", "score": 0, "approved_by": null, "upvotes": 21, "body": "This is fluff. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is fluff. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7k74ah", "flair_text": null, "created": 1356116783.0, "created_utc": 1356113183.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1587ff", "children": [], "author": "itsSparkky", "id": "c7k6ybz", "parent_id": "t3_1587ff", "score": 0, "approved_by": null, "upvotes": 7, "body": "This is pretty close to an ELI5", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is pretty close to an ELI5&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7k6ybz", "flair_text": null, "created": 1356116196.0, "created_utc": 1356112596.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_1587ff", "children": [], "author": "uhoreg", "id": "c7k6sov", "parent_id": "t3_1587ff", "score": 0, "approved_by": null, "upvotes": 11, "body": "Cats are evil.  Using a hash table without proper attention to collisions is evil.  Therefore cats are like Hash DoS.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Cats are evil.  Using a hash table without proper attention to collisions is evil.  Therefore cats are like Hash DoS.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7k6sov", "flair_text": null, "created": 1356115660.0, "created_utc": 1356112060.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1587ff", "children": [], "author": "moscheles", "id": "c7k98rh", "parent_id": "t3_1587ff", "score": 0, "approved_by": null, "upvotes": 2, "body": "So let's come up with a \"good\" hash function for cat names. Any ideas?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;So let&amp;#39;s come up with a &amp;quot;good&amp;quot; hash function for cat names. Any ideas?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7k98rh", "flair_text": null, "created": 1356124077.0, "created_utc": 1356120477.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1587ff", "children": [], "author": "dotchris", "id": "c7ke25h", "parent_id": "t3_1587ff", "score": 0, "approved_by": null, "upvotes": 1, "body": "I thought SHA-1 was broken, and to be avoided?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I thought SHA-1 was broken, and to be avoided?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ke25h", "flair_text": null, "created": 1356143483.0, "created_utc": 1356139883.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1587ff", "children": [], "author": "emilvikstrom", "id": "c7khv0h", "parent_id": "t3_1587ff", "score": 0, "approved_by": null, "upvotes": 1, "body": "This is fantastic. I really need a good way to explain to my family what I do.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is fantastic. I really need a good way to explain to my family what I do.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7khv0h", "flair_text": null, "created": 1356161167.0, "created_utc": 1356157567.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1587ff", "children": [], "author": "gabrielpatzer", "id": "c7knnx8", "parent_id": "t3_1587ff", "score": 0, "approved_by": null, "upvotes": 1, "body": "Cats and computers. Dat karma. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Cats and computers. Dat karma. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7knnx8", "flair_text": null, "created": 1356204394.0, "created_utc": 1356200794.0, "num_reports": null}], "score": 98, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 133, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/1587ff/how_to_explain_hash_dos_to_your_parents_by_using/", "has_more_comments": false, "name": "t3_1587ff", "created": 1356100199.0, "url": "http://www.anchor.com.au/blog/2012/12/how-to-explain-hash-dos-to-your-parents-by-using-cats/", "author_flair_text": null, "author": "barneydesmond", "created_utc": 1356100199.0, "link_flair_text": null, "media": null, "num_reports": null}, "156": {"domain": "cs.cmu.edu", "link_flair_class": null, "banned_by": null, "downvotes": 8, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "158odu", "clicked": false, "title": "Cache and I/O Efficient Functional Algorithms", "num_comments": 0, "comments": [], "score": 18, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 26, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/158odu/cache_and_io_efficient_functional_algorithms/", "has_more_comments": false, "name": "t3_158odu", "created": 1356116620.0, "url": "http://www.cs.cmu.edu/~rwh/papers/iolambda/short.pdf", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1356116620.0, "link_flair_text": null, "media": null, "num_reports": null}, "157": {"domain": "engineering.ucl.ac.uk", "link_flair_class": null, "banned_by": null, "downvotes": 6, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "1582hm", "clicked": false, "title": "Illustrating mechanical assemblies: a method to take a 3D model, identify parts, interactions and motions, and automatically produce diagrams and animations showing how it works.", "num_comments": 0, "comments": [], "score": 22, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 28, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/1582hm/illustrating_mechanical_assemblies_a_method_to/", "has_more_comments": false, "name": "t3_1582hm", "created": 1356091964.0, "url": "http://www.engineering.ucl.ac.uk/news/an-automatic-explanation-how-things-work/", "author_flair_text": null, "author": "scaryboots", "created_utc": 1356091964.0, "link_flair_text": null, "media": null, "num_reports": null}, "158": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 21, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I just submitted my applications and I was wondering if I should email some of the professors at the universities I applied to, whose work really appeals to me, and who I&amp;#39;d like to do research with.&lt;/p&gt;\n\n&lt;p&gt;Will this help my chances at all?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I just submitted my applications and I was wondering if I should email some of the professors at the universities I applied to, whose work really appeals to me, and who I'd like to do research with.\n\nWill this help my chances at all?", "saved": false, "id": "156o8n", "clicked": false, "title": "Just submitted my grad school applications. Would it help at all in getting admitted to email professors to enquire about their labs and potential openings??", "num_comments": 29, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 9, "link_id": "t3_156o8n", "children": [], "author": "dragonpaulz", "id": "c7jrn5r", "parent_id": "t3_156o8n", "score": 0, "approved_by": null, "upvotes": 29, "body": "Yes, let me explain why.\n\nWhen you submit an application to a university, you're submitting your application to the university, not the supervisor. A committee is in charge of choosing the top 'x' potential graduate students. Then, the professors looking for new students in their labs look through the top 'x' potential students and tell the committee that they want specific students.\n\nIf you had previously contacted a potential supervisor, and you've gotten their interest, then the potential supervisor will look for your name in the list of potential students. Otherwise, they might miss your application by running into another applicant who is also qualified, or just miss you when looking at 'x' applications.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes, let me explain why.&lt;/p&gt;\n\n&lt;p&gt;When you submit an application to a university, you&amp;#39;re submitting your application to the university, not the supervisor. A committee is in charge of choosing the top &amp;#39;x&amp;#39; potential graduate students. Then, the professors looking for new students in their labs look through the top &amp;#39;x&amp;#39; potential students and tell the committee that they want specific students.&lt;/p&gt;\n\n&lt;p&gt;If you had previously contacted a potential supervisor, and you&amp;#39;ve gotten their interest, then the potential supervisor will look for your name in the list of potential students. Otherwise, they might miss your application by running into another applicant who is also qualified, or just miss you when looking at &amp;#39;x&amp;#39; applications.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jrn5r", "flair_text": null, "created": 1356040823.0, "created_utc": 1356037223.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_156o8n", "children": [], "author": "jas0nh0ng", "id": "c7k54fk", "parent_id": "t3_156o8n", "score": 0, "approved_by": null, "upvotes": 9, "body": "I'm a faculty at Carnegie Mellon School of Computer Science, and all the answers saying \"yes, email the professor\" are pretty much wrong.\n\nEvery faculty member get dozens of emails from prospective students each admissions cycle, and many faculty members have put up FAQs essentially saying \"don't email me, it won't help\".\n\nAlso, many of the faculty aren't sure of their funding availability when you ask them, due to the long cycles of funding proposals. It can take often 6-9 months from submitting a proposal to getting a yes/no answer from the funders.\n\nHere are things that will help:\n\n* Having great letters of recommendation\n* Demonstrating that you can write really, really well in your statement of purpose\n* Demonstrating that you understand what research is, what interesting problems in the field are, and that you know what you're getting into\n* Having a strong GPA\n* Having done research already (a good predictor of how a student will do in a PhD program is if they have already done research, and how good that research was)\n\nIf you still do want to contact faculty, here are strategies that will work better:\n\n* Read their papers and ask interesting questions about their current work\n* Ask the grad students about their current work, to get a sense of the research directions\n* Go in person to visit and show off something really cool you've done (note that this only works if you've actually got something cool to show)\n* Meet the faculty at a conference (which demonstrates that you really do have interest in the area)\n\nAnd if you're reading this, I might as well point you to a [blog entry I wrote up for Communications of the ACM talking about what is expected of you in a PhD program](http://cacm.acm.org/blogs/blog-cacm/157012-phds-from-the-facultys-perspective/fulltext).\n\n", "edited": 1356106082.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m a faculty at Carnegie Mellon School of Computer Science, and all the answers saying &amp;quot;yes, email the professor&amp;quot; are pretty much wrong.&lt;/p&gt;\n\n&lt;p&gt;Every faculty member get dozens of emails from prospective students each admissions cycle, and many faculty members have put up FAQs essentially saying &amp;quot;don&amp;#39;t email me, it won&amp;#39;t help&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;Also, many of the faculty aren&amp;#39;t sure of their funding availability when you ask them, due to the long cycles of funding proposals. It can take often 6-9 months from submitting a proposal to getting a yes/no answer from the funders.&lt;/p&gt;\n\n&lt;p&gt;Here are things that will help:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Having great letters of recommendation&lt;/li&gt;\n&lt;li&gt;Demonstrating that you can write really, really well in your statement of purpose&lt;/li&gt;\n&lt;li&gt;Demonstrating that you understand what research is, what interesting problems in the field are, and that you know what you&amp;#39;re getting into&lt;/li&gt;\n&lt;li&gt;Having a strong GPA&lt;/li&gt;\n&lt;li&gt;Having done research already (a good predictor of how a student will do in a PhD program is if they have already done research, and how good that research was)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;If you still do want to contact faculty, here are strategies that will work better:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Read their papers and ask interesting questions about their current work&lt;/li&gt;\n&lt;li&gt;Ask the grad students about their current work, to get a sense of the research directions&lt;/li&gt;\n&lt;li&gt;Go in person to visit and show off something really cool you&amp;#39;ve done (note that this only works if you&amp;#39;ve actually got something cool to show)&lt;/li&gt;\n&lt;li&gt;Meet the faculty at a conference (which demonstrates that you really do have interest in the area)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;And if you&amp;#39;re reading this, I might as well point you to a &lt;a href=\"http://cacm.acm.org/blogs/blog-cacm/157012-phds-from-the-facultys-perspective/fulltext\"&gt;blog entry I wrote up for Communications of the ACM talking about what is expected of you in a PhD program&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7k54fk", "flair_text": null, "created": 1356109450.0, "created_utc": 1356105850.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_156o8n", "children": [], "author": "lkjhgfdsasdfghjkl", "id": "c7jza0k", "parent_id": "t3_156o8n", "score": 0, "approved_by": null, "upvotes": 9, "body": "I'm kind of surprised by everyone saying yes to this.  I got into the Ph.D. programs at several top 20 CS grad schools (currently attending one of the four #1 ranked programs) and never emailed anyone because many profs I was interested in working with had messages on their homepage to the effect of \"Prospective graduate students: please do not contact me, instead simply apply through the department website.\"\n\nThough not all of them had something like this, it was several of them from several different schools, and as a result I assumed that no contact was very much the norm, and it would just piss people off if I did try contacting the others.  I also asked my undergraduate thesis advisor what she thought, and she told me that I shouldn't send personal emails about admissions to any professors.  \n\nJust my experience though...apparently everyone else thinks I'm wrong so...do what you want I guess?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m kind of surprised by everyone saying yes to this.  I got into the Ph.D. programs at several top 20 CS grad schools (currently attending one of the four #1 ranked programs) and never emailed anyone because many profs I was interested in working with had messages on their homepage to the effect of &amp;quot;Prospective graduate students: please do not contact me, instead simply apply through the department website.&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;Though not all of them had something like this, it was several of them from several different schools, and as a result I assumed that no contact was very much the norm, and it would just piss people off if I did try contacting the others.  I also asked my undergraduate thesis advisor what she thought, and she told me that I shouldn&amp;#39;t send personal emails about admissions to any professors.  &lt;/p&gt;\n\n&lt;p&gt;Just my experience though...apparently everyone else thinks I&amp;#39;m wrong so...do what you want I guess?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jza0k", "flair_text": null, "created": 1356071025.0, "created_utc": 1356067425.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_156o8n", "children": [], "author": "sir_sri", "id": "c7jsfkt", "parent_id": "t3_156o8n", "score": 0, "approved_by": null, "upvotes": 14, "body": "&gt;I just submitted my applications and I was wondering if I should email some of the professors at the universities I applied to, whose work really appeals to me, and who I'd like to do research with.\n\nYes, actually, you've done this backwards and potentially wasted your grad school application money.  You should e-mail potential professors first, and find out if they have openings in your research interest, and if they're interested in you as an applicant.  If they say yes *then* you give them money to apply.   If you have good contacts in your undergrad you should use those professors to ask on your behalf (if they know people you're interested in).  \n\nSome professors can't (or won't) talk to you like that, so then you have to spend money on the application, but if they can't take on grad students right now applying at all is a waste of money.  \n\nThe way this happens here is the list of applicants (all of them) gets sent out to professors, and then they take the ones they want from the list.  If two profs want the same person they talk about it a bit and go from there.  \n\nYou asked somewhere else\n\n&gt;My GPA isn't too great (3.3)  ...Do you think I have a shot at places in the top 20 like UC San Diego or Cal Tech?\n\nWithout talking to a professor first and having them agree to take you and pick your name out of the list.  No, you don't have a chance.  I'm not being harsh, having someone like you and pick your name out of the list is far easier than having them guess based on your application that they'd like to take you.  We get literally hundreds of applications for about 40 spots, so professors don't read every application, even if they're looking for students.  They skim them for the ones that are interesting or that they recognize.  \n\n&gt;I just submitted my applications \n\nWhile not unheard of, applying right now for a january or february or even may start is less than ideal for a full time grad position.  Grants have either already been decided, or aren't going to be decided for some time.  In the US particularly the austerity bomb (fiscal cliff if you prefer) may pose some challenges.  I'm not in the US so I'm not 100% sure, but grant money is the sort of thing likely on the chopping block.   If you're applying for a september start then disregard this paragraph, every school has its own timings.  But if our group had grant money we would try and fill in september since that's when the funding starts.  The only reason we'd take someone part way through is if a bunch of the people we accepted went somewhere else, and now we have an unfilled opening.  It happens of course.  \n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I just submitted my applications and I was wondering if I should email some of the professors at the universities I applied to, whose work really appeals to me, and who I&amp;#39;d like to do research with.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Yes, actually, you&amp;#39;ve done this backwards and potentially wasted your grad school application money.  You should e-mail potential professors first, and find out if they have openings in your research interest, and if they&amp;#39;re interested in you as an applicant.  If they say yes &lt;em&gt;then&lt;/em&gt; you give them money to apply.   If you have good contacts in your undergrad you should use those professors to ask on your behalf (if they know people you&amp;#39;re interested in).  &lt;/p&gt;\n\n&lt;p&gt;Some professors can&amp;#39;t (or won&amp;#39;t) talk to you like that, so then you have to spend money on the application, but if they can&amp;#39;t take on grad students right now applying at all is a waste of money.  &lt;/p&gt;\n\n&lt;p&gt;The way this happens here is the list of applicants (all of them) gets sent out to professors, and then they take the ones they want from the list.  If two profs want the same person they talk about it a bit and go from there.  &lt;/p&gt;\n\n&lt;p&gt;You asked somewhere else&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;My GPA isn&amp;#39;t too great (3.3)  ...Do you think I have a shot at places in the top 20 like UC San Diego or Cal Tech?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Without talking to a professor first and having them agree to take you and pick your name out of the list.  No, you don&amp;#39;t have a chance.  I&amp;#39;m not being harsh, having someone like you and pick your name out of the list is far easier than having them guess based on your application that they&amp;#39;d like to take you.  We get literally hundreds of applications for about 40 spots, so professors don&amp;#39;t read every application, even if they&amp;#39;re looking for students.  They skim them for the ones that are interesting or that they recognize.  &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;I just submitted my applications &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;While not unheard of, applying right now for a january or february or even may start is less than ideal for a full time grad position.  Grants have either already been decided, or aren&amp;#39;t going to be decided for some time.  In the US particularly the austerity bomb (fiscal cliff if you prefer) may pose some challenges.  I&amp;#39;m not in the US so I&amp;#39;m not 100% sure, but grant money is the sort of thing likely on the chopping block.   If you&amp;#39;re applying for a september start then disregard this paragraph, every school has its own timings.  But if our group had grant money we would try and fill in september since that&amp;#39;s when the funding starts.  The only reason we&amp;#39;d take someone part way through is if a bunch of the people we accepted went somewhere else, and now we have an unfilled opening.  It happens of course.  &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jsfkt", "flair_text": null, "created": 1356043544.0, "created_utc": 1356039944.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_156o8n", "children": [], "author": "Doc_Ok", "id": "c7jrtjq", "parent_id": "t3_156o8n", "score": 0, "approved_by": null, "upvotes": 11, "body": "Yes, obviously, do you even have to ask? :)\n\nOur department gets hundreds of applications every year, and while there's no actual committee, the professors go through the list, check the candidates that appeal to them (based on stated research interests), and give the thumbs up/down based on what's in the application material. And believe me, application material is always unreadable, and almost always completely non-descript.\n\nIf you actually have some professors whose work you're actually interested in, then you contact them with precise reasons *why* you find their work interesting, ideally pointing to work you have already done in the same area. That's how you stick out of the pile.\n\nDon't bother sending in \"form letters\" with platitudes just to make a connection if you can't actually articulate why you're interested in the work and why you'd be a good candidate; we're getting hundreds of those as well, and they go to the spam folder.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes, obviously, do you even have to ask? :)&lt;/p&gt;\n\n&lt;p&gt;Our department gets hundreds of applications every year, and while there&amp;#39;s no actual committee, the professors go through the list, check the candidates that appeal to them (based on stated research interests), and give the thumbs up/down based on what&amp;#39;s in the application material. And believe me, application material is always unreadable, and almost always completely non-descript.&lt;/p&gt;\n\n&lt;p&gt;If you actually have some professors whose work you&amp;#39;re actually interested in, then you contact them with precise reasons &lt;em&gt;why&lt;/em&gt; you find their work interesting, ideally pointing to work you have already done in the same area. That&amp;#39;s how you stick out of the pile.&lt;/p&gt;\n\n&lt;p&gt;Don&amp;#39;t bother sending in &amp;quot;form letters&amp;quot; with platitudes just to make a connection if you can&amp;#39;t actually articulate why you&amp;#39;re interested in the work and why you&amp;#39;d be a good candidate; we&amp;#39;re getting hundreds of those as well, and they go to the spam folder.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jrtjq", "flair_text": null, "created": 1356041433.0, "created_utc": 1356037833.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_156o8n", "children": [], "author": "funnynoveltyaccount", "id": "c7js5tc", "parent_id": "t3_156o8n", "score": 0, "approved_by": null, "upvotes": 4, "body": "This question has been asked before. It depends on the field and the program. Check the program's website thoroughly for any messages that say not to do this. Some programs have them. If that message doesn't exist, go ahead and do it _as long as you don't say something stupid_. Common mistake: \"I want to do Y with professor X\" but professor X doesn't do Y or hasn't done Y in many years.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This question has been asked before. It depends on the field and the program. Check the program&amp;#39;s website thoroughly for any messages that say not to do this. Some programs have them. If that message doesn&amp;#39;t exist, go ahead and do it &lt;em&gt;as long as you don&amp;#39;t say something stupid&lt;/em&gt;. Common mistake: &amp;quot;I want to do Y with professor X&amp;quot; but professor X doesn&amp;#39;t do Y or hasn&amp;#39;t done Y in many years.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7js5tc", "flair_text": null, "created": 1356042615.0, "created_utc": 1356039015.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_156o8n", "children": [], "author": "shaggorama", "id": "c7jso61", "parent_id": "t3_156o8n", "score": 0, "approved_by": null, "upvotes": 1, "body": "Develop as much of a relationship with anyone who will be looking at your application as possible. If this is a nearby school, try to arrange to meet with some people in the department. Just tell them you're interested in the program and would like to talk with them about their research. They'll be stoked.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Develop as much of a relationship with anyone who will be looking at your application as possible. If this is a nearby school, try to arrange to meet with some people in the department. Just tell them you&amp;#39;re interested in the program and would like to talk with them about their research. They&amp;#39;ll be stoked.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jso61", "flair_text": null, "created": 1356044381.0, "created_utc": 1356040781.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_156o8n", "children": [], "author": "notanasshole53", "id": "c7jurnw", "parent_id": "t3_156o8n", "score": 0, "approved_by": null, "upvotes": 2, "body": "It would have helped you more to have done this *before* applying. But yes, still do it.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It would have helped you more to have done this &lt;em&gt;before&lt;/em&gt; applying. But yes, still do it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jurnw", "flair_text": null, "created": 1356052364.0, "created_utc": 1356048764.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_156o8n", "children": [], "author": "ingreenheaven", "id": "c7jv5fq", "parent_id": "t3_156o8n", "score": 0, "approved_by": null, "upvotes": 1, "body": "Yes, definitely do that. Be prepared to talk about certain specific areas or projects you may be interested in. Take a look at the recent research of the professors and see if you have any interesting project that you want to work on or if you have any ideas of your own related to those projects.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes, definitely do that. Be prepared to talk about certain specific areas or projects you may be interested in. Take a look at the recent research of the professors and see if you have any interesting project that you want to work on or if you have any ideas of your own related to those projects.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jv5fq", "flair_text": null, "created": 1356053959.0, "created_utc": 1356050359.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_156o8n", "children": [], "author": "n1c0_ds", "id": "c7jwjog", "parent_id": "t3_156o8n", "score": 0, "approved_by": null, "upvotes": 2, "body": "Just *getting your name out there* helps. People tend to pick things they are familiar with, and just having them see your name and remember you is a huge step forward.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just &lt;em&gt;getting your name out there&lt;/em&gt; helps. People tend to pick things they are familiar with, and just having them see your name and remember you is a huge step forward.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jwjog", "flair_text": null, "created": 1356059755.0, "created_utc": 1356056155.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_156o8n", "children": [], "author": "spalunk", "id": "c7lo3wi", "parent_id": "t3_156o8n", "score": 0, "approved_by": null, "upvotes": 1, "body": "I am willing to bet that all of the people saying \"yes\" have never applied to a CS graduate school. Every single CS graduate page I have looked at has at least 5 bold lines that say \"Do not email faculty for help with admissions; they have no say in who is selected.\"\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I am willing to bet that all of the people saying &amp;quot;yes&amp;quot; have never applied to a CS graduate school. Every single CS graduate page I have looked at has at least 5 bold lines that say &amp;quot;Do not email faculty for help with admissions; they have no say in who is selected.&amp;quot;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7lo3wi", "flair_text": null, "created": 1356393575.0, "created_utc": 1356389975.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_156o8n", "children": [], "author": "dorkbrains", "id": "c7jtckn", "parent_id": "t3_156o8n", "score": 0, "approved_by": null, "upvotes": 3, "body": "You post this on your cakeday? No grad school for you.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You post this on your cakeday? No grad school for you.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jtckn", "flair_text": null, "created": 1356046862.0, "created_utc": 1356043262.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 13, "link_id": "t3_156o8n", "children": [], "author": "JimH10", "id": "c7jrjf3", "parent_id": "t3_156o8n", "score": 0, "approved_by": null, "upvotes": 5, "body": "No.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jrjf3", "flair_text": null, "created": 1356040474.0, "created_utc": 1356036874.0, "num_reports": null}], "score": 28, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 49, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/156o8n/just_submitted_my_grad_school_applications_would/", "has_more_comments": false, "name": "t3_156o8n", "created": 1356035022.0, "url": "http://www.reddit.com/r/compsci/comments/156o8n/just_submitted_my_grad_school_applications_would/", "author_flair_text": null, "author": "IllmaticGOAT", "created_utc": 1356035022.0, "link_flair_text": null, "media": null, "num_reports": null}, "159": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 17, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Certain optimizations (such as Common Subexpression Elimination, Dead Code Elimination, etc...) line up well with our intuition of what it means to optimize code and can be found in pretty every kind of compiler. &lt;/p&gt;\n\n&lt;p&gt;Other optimizations aren&amp;#39;t often implemented due to their cost or complexity (i.e. loop rearrangement via polyhedral analysis) but are still at least well known. &lt;/p&gt;\n\n&lt;p&gt;Do you know of some optimizations which haven&amp;#39;t gained much publicity but you think are powerful, theoretically interesting, or at least useful for particular domains? &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Certain optimizations (such as Common Subexpression Elimination, Dead Code Elimination, etc...) line up well with our intuition of what it means to optimize code and can be found in pretty every kind of compiler. \n\nOther optimizations aren't often implemented due to their cost or complexity (i.e. loop rearrangement via polyhedral analysis) but are still at least well known. \n\nDo you know of some optimizations which haven't gained much publicity but you think are powerful, theoretically interesting, or at least useful for particular domains? ", "saved": false, "id": "155p3c", "clicked": false, "title": "Lesser known compiler optimizations?", "num_comments": 31, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_155p3c", "children": [], "author": "ezyang", "id": "c7jjsq6", "parent_id": "t3_155p3c", "score": 0, "approved_by": null, "upvotes": 23, "body": "I'm a huge fan of stream fusion, an optimization which eliminates intermediate data structures when you are doing lots of operations on streams.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m a huge fan of stream fusion, an optimization which eliminates intermediate data structures when you are doing lots of operations on streams.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jjsq6", "flair_text": null, "created": 1356003538.0, "created_utc": 1355999938.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_155p3c", "children": [], "author": "tejoka", "id": "c7jolv2", "parent_id": "t3_155p3c", "score": 0, "approved_by": null, "upvotes": 14, "body": "I think people dramatically underestimate what JITs (say, the JVM) is capable of, especially when it comes to inlining.\n\nJava code makes use of interface calls all the time, but the JVM almost never executes an actual interface call, because by the time methods gets inlined a few times, you get to a call site that nearly always has only a small number of possible targets (determined via profiling), and frequently just 1! Which, of course, allows for more inlining!\n\nOn top of this inlining feeding back on itself, it can inline across module boundaries, which is a monstrously huge benefit.  Java is infamous for its monstrous frameworks that look like they should perform like dogs, but 80% of the overhead of all that abstraction just gets annihilated by inlining. (And then everyone decides they're dogs anyway, due to memory usage, but that's a different problem... that might actually be solved somewhere in the neighborhood of Java 9... [maybe](https://blogs.oracle.com/jrose/entry/value_types_in_the_vm))", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think people dramatically underestimate what JITs (say, the JVM) is capable of, especially when it comes to inlining.&lt;/p&gt;\n\n&lt;p&gt;Java code makes use of interface calls all the time, but the JVM almost never executes an actual interface call, because by the time methods gets inlined a few times, you get to a call site that nearly always has only a small number of possible targets (determined via profiling), and frequently just 1! Which, of course, allows for more inlining!&lt;/p&gt;\n\n&lt;p&gt;On top of this inlining feeding back on itself, it can inline across module boundaries, which is a monstrously huge benefit.  Java is infamous for its monstrous frameworks that look like they should perform like dogs, but 80% of the overhead of all that abstraction just gets annihilated by inlining. (And then everyone decides they&amp;#39;re dogs anyway, due to memory usage, but that&amp;#39;s a different problem... that might actually be solved somewhere in the neighborhood of Java 9... &lt;a href=\"https://blogs.oracle.com/jrose/entry/value_types_in_the_vm\"&gt;maybe&lt;/a&gt;)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jolv2", "flair_text": null, "created": 1356030217.0, "created_utc": 1356026617.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_155p3c", "children": [], "author": "sixstringartist", "id": "c7jtfu3", "parent_id": "t3_155p3c", "score": 0, "approved_by": null, "upvotes": 10, "body": "-funswitch-loops\n\nmoves conditionals outside a loop if the condition does not depend on the state of the loop.\n\ni.e.\n    for(i=0;i &lt; end; ++i)\n    {\n        if(flag)\n          data[i] += i;\n        else\n          data[i] *= i;\n    }\n\nbecomes:\n\n    if(flag)\n        for(i=0; i &lt; end; ++i)\n            data[i] += i;\n    else\n        for(i=0; i &lt; end; ++i)\n            data[i] *= i;\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;-funswitch-loops&lt;/p&gt;\n\n&lt;p&gt;moves conditionals outside a loop if the condition does not depend on the state of the loop.&lt;/p&gt;\n\n&lt;p&gt;i.e.\n    for(i=0;i &amp;lt; end; ++i)\n    {\n        if(flag)\n          data[i] += i;\n        else\n          data[i] *= i;\n    }&lt;/p&gt;\n\n&lt;p&gt;becomes:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if(flag)\n    for(i=0; i &amp;lt; end; ++i)\n        data[i] += i;\nelse\n    for(i=0; i &amp;lt; end; ++i)\n        data[i] *= i;\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jtfu3", "flair_text": null, "created": 1356047197.0, "created_utc": 1356043597.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_155p3c", "children": [], "author": "krum", "id": "c7jm4dt", "parent_id": "t3_155p3c", "score": 0, "approved_by": null, "upvotes": 7, "body": "RVO is my personal favorite.  Mainly because it can change the behavior of your program.\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;RVO is my personal favorite.  Mainly because it can change the behavior of your program.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jm4dt", "flair_text": null, "created": 1356020460.0, "created_utc": 1356016860.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 17, "link_id": "t3_155p3c", "children": [], "author": "tskuzzy", "id": "c7jjsup", "parent_id": "t3_155p3c", "score": 0, "approved_by": null, "upvotes": 50, "body": "http://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html\n\nCtrl+F: -O3", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html\"&gt;http://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Ctrl+F: -O3&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jjsup", "flair_text": null, "created": 1356003580.0, "created_utc": 1355999980.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_155p3c", "children": [], "author": "m1ss1ontomars2k4", "id": "c7jtcfg", "parent_id": "t3_155p3c", "score": 0, "approved_by": null, "upvotes": 4, "body": "I don't know how uncommon this is, but I took a grad computer architecture class this quarter, and we learned about software pipelining. It's like hardware pipelining, but done in software (so each step of a loop works on a different subset of temporary variables). Then we learned how to provide hardware features to enable easy software pipelining. Then on the final we were more or less asked how to implement software pipelining in hardware (i.e. no changes to the compiler). It was getting a little too meta in that class.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t know how uncommon this is, but I took a grad computer architecture class this quarter, and we learned about software pipelining. It&amp;#39;s like hardware pipelining, but done in software (so each step of a loop works on a different subset of temporary variables). Then we learned how to provide hardware features to enable easy software pipelining. Then on the final we were more or less asked how to implement software pipelining in hardware (i.e. no changes to the compiler). It was getting a little too meta in that class.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jtcfg", "flair_text": null, "created": 1356046849.0, "created_utc": 1356043249.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_155p3c", "children": [], "author": "jerkimball", "id": "c7jybjh", "parent_id": "t3_155p3c", "score": 0, "approved_by": null, "upvotes": 1, "body": "Completely unrelated, but whyforcome you have that amazingly nifty fixed point combinator after your username? (It's not Y...what is that, a non standard one? )", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Completely unrelated, but whyforcome you have that amazingly nifty fixed point combinator after your username? (It&amp;#39;s not Y...what is that, a non standard one? )&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jybjh", "flair_text": null, "created": 1356067018.0, "created_utc": 1356063418.0, "num_reports": null}], "score": 45, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 62, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/155p3c/lesser_known_compiler_optimizations/", "has_more_comments": false, "name": "t3_155p3c", "created": 1355989936.0, "url": "http://www.reddit.com/r/compsci/comments/155p3c/lesser_known_compiler_optimizations/", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1355989936.0, "link_flair_text": null, "media": null, "num_reports": null}, "160": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 5, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "156ce2", "clicked": false, "title": "I'm wondering: why does encryption software ask for both random number generation and a password? Wouldn't it make decryption impossible on any system that doesn't have the same pool of entropy?", "num_comments": 5, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_156ce2", "children": [], "author": "Mr_P", "id": "c7jpe27", "parent_id": "t3_156ce2", "score": 0, "approved_by": null, "upvotes": 7, "body": "What \"encryption software\" are you talking about?\n\nIf you're referring to RSA key generation, the random number is used to generate the public/private key pair, and I believe the password is used to securely store the private key on your machine so it can't trivially be stolen.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What &amp;quot;encryption software&amp;quot; are you talking about?&lt;/p&gt;\n\n&lt;p&gt;If you&amp;#39;re referring to RSA key generation, the random number is used to generate the public/private key pair, and I believe the password is used to securely store the private key on your machine so it can&amp;#39;t trivially be stolen.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jpe27", "flair_text": null, "created": 1356033033.0, "created_utc": 1356029433.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_156ce2", "children": [], "author": "detailsguy", "id": "c7jtrce", "parent_id": "t3_156ce2", "score": 0, "approved_by": null, "upvotes": 9, "body": "Most likely the entropy is being used to generate the \"salt\" or \"initialization vector\".  All modern encryption algorithms operate on blocks of input - 8 or 16 byte blocks.  As you note, encryption algorithms must be deterministic given a key and an input block (else they would be undecryptable), which means that, if the same 8 (or 16, etc.)-byte block appears in multiple places in the input, it will encrypt to the same 8-byte block in the output.  So, for example, if you used DES to encrypt the input stream \"AAAAAAAABBBBBBBBCCCCCCCCAAAAAAAA\" using the key \"password\", will encrypt to 3c0ce178cadc949837902c748faa43d36ce50b6db33d3f653c0ce178cadc9498 (hexadecimally speaking).  Notice that, since the input started and ended with the same 8 bytes, the output also starts and ends with the same 8 bytes: 3c0ce178cadc9498.  Although this is not decryptable to an eavesdropper, it's a very useful bit of information, especially if patterns repeat in multiple places in the source stream.\n\nTo combat this, secure encryption algorithms combine blocks together so that this repetition disappears.  CBC is the simplest such combination method - it XOR's the current block with the contents of the previous block.  This way, the repetition disappears.  This creates a problem for the first block, though - how do you chain the first block with the previous block?\n\nThe answer is to pad every output with a random sequence of bytes called the initialization vector (the process is called \"salting\").  These bytes are recognized and discarded by the decryptor, but they must be passed, unencrypted, to the receiver so that it can perform the decryption correctly.\n\nSo you're correct - the decryption system DOES (in a sense) need the same pool of entropy, but the practice of attaching IV's actually provides it.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Most likely the entropy is being used to generate the &amp;quot;salt&amp;quot; or &amp;quot;initialization vector&amp;quot;.  All modern encryption algorithms operate on blocks of input - 8 or 16 byte blocks.  As you note, encryption algorithms must be deterministic given a key and an input block (else they would be undecryptable), which means that, if the same 8 (or 16, etc.)-byte block appears in multiple places in the input, it will encrypt to the same 8-byte block in the output.  So, for example, if you used DES to encrypt the input stream &amp;quot;AAAAAAAABBBBBBBBCCCCCCCCAAAAAAAA&amp;quot; using the key &amp;quot;password&amp;quot;, will encrypt to 3c0ce178cadc949837902c748faa43d36ce50b6db33d3f653c0ce178cadc9498 (hexadecimally speaking).  Notice that, since the input started and ended with the same 8 bytes, the output also starts and ends with the same 8 bytes: 3c0ce178cadc9498.  Although this is not decryptable to an eavesdropper, it&amp;#39;s a very useful bit of information, especially if patterns repeat in multiple places in the source stream.&lt;/p&gt;\n\n&lt;p&gt;To combat this, secure encryption algorithms combine blocks together so that this repetition disappears.  CBC is the simplest such combination method - it XOR&amp;#39;s the current block with the contents of the previous block.  This way, the repetition disappears.  This creates a problem for the first block, though - how do you chain the first block with the previous block?&lt;/p&gt;\n\n&lt;p&gt;The answer is to pad every output with a random sequence of bytes called the initialization vector (the process is called &amp;quot;salting&amp;quot;).  These bytes are recognized and discarded by the decryptor, but they must be passed, unencrypted, to the receiver so that it can perform the decryption correctly.&lt;/p&gt;\n\n&lt;p&gt;So you&amp;#39;re correct - the decryption system DOES (in a sense) need the same pool of entropy, but the practice of attaching IV&amp;#39;s actually provides it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jtrce", "flair_text": null, "created": 1356048427.0, "created_utc": 1356044827.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_156ce2", "children": [], "author": "frezik", "id": "c7jpeey", "parent_id": "t3_156ce2", "score": 0, "approved_by": null, "upvotes": 4, "body": "If you're talking about public key crypto, what you're seeing is the key being generated by the RNG, and then that key encrypted with a symmetric cipher with your password before writing it to disk.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you&amp;#39;re talking about public key crypto, what you&amp;#39;re seeing is the key being generated by the RNG, and then that key encrypted with a symmetric cipher with your password before writing it to disk.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jpeey", "flair_text": null, "created": 1356033068.0, "created_utc": 1356029468.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_156ce2", "children": [], "author": "detailsguy", "id": "c7jtvo1", "parent_id": "t3_156ce2", "score": 0, "approved_by": null, "upvotes": 1, "body": "Also, human-generated passwords are usually pretty terrible; being the sorts of things that humans can remember and type using the keys on their keyboard (which doesn't nearly exercise the full range of available input bytes).  As a result, most encryption programs don't actually use the user's input as keying material but instead derive keying material from it using a key derivation function like PKCS #5 (http://www.rsa.com/rsalabs/node.asp?id=2127).  This procedure involves its own IV like the one I mentioned in my previous post.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Also, human-generated passwords are usually pretty terrible; being the sorts of things that humans can remember and type using the keys on their keyboard (which doesn&amp;#39;t nearly exercise the full range of available input bytes).  As a result, most encryption programs don&amp;#39;t actually use the user&amp;#39;s input as keying material but instead derive keying material from it using a key derivation function like PKCS #5 (&lt;a href=\"http://www.rsa.com/rsalabs/node.asp?id=2127\"&gt;http://www.rsa.com/rsalabs/node.asp?id=2127&lt;/a&gt;).  This procedure involves its own IV like the one I mentioned in my previous post.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jtvo1", "flair_text": null, "created": 1356048892.0, "created_utc": 1356045292.0, "num_reports": null}], "score": 5, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 10, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/156ce2/im_wondering_why_does_encryption_software_ask_for/", "has_more_comments": false, "name": "t3_156ce2", "created": 1356024617.0, "url": "http://www.reddit.com/r/compsci/comments/156ce2/im_wondering_why_does_encryption_software_ask_for/", "author_flair_text": null, "author": "technocratofzigurrat", "created_utc": 1356024617.0, "link_flair_text": null, "media": null, "num_reports": null}, "161": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 11, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I apologise in advance if this is not the subreddit for such questions. I asked this &lt;a href=\"http://www.reddit.com/r/compsci/comments/13rccg/are_the_results_of_theoretical_computer_science/\"&gt;question&lt;/a&gt; 24 days ago here. Despite the many answers there, I just wanted to confirm if what I understood was correct. &lt;strong&gt;Does the impossibility of solving the halting problem depend on the validity of the Church-Turing thesis?&lt;/strong&gt;&lt;br/&gt;\nI initially &lt;a href=\"http://www.reddit.com/r/AskComputerScience/comments/154i61/does_the_impossibility_of_solving_the_halting/\"&gt;asked&lt;/a&gt; this over at &lt;a href=\"/r/askcomputerscience\"&gt;/r/askcomputerscience&lt;/a&gt;, but there weren&amp;#39;t any replies.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I apologise in advance if this is not the subreddit for such questions. I asked this [question](http://www.reddit.com/r/compsci/comments/13rccg/are_the_results_of_theoretical_computer_science/) 24 days ago here. Despite the many answers there, I just wanted to confirm if what I understood was correct. **Does the impossibility of solving the halting problem depend on the validity of the Church-Turing thesis?**    \nI initially [asked](http://www.reddit.com/r/AskComputerScience/comments/154i61/does_the_impossibility_of_solving_the_halting/) this over at /r/askcomputerscience, but there weren't any replies.", "saved": false, "id": "155me3", "clicked": false, "title": "Does the impossibility of solving the halting problem depend on the validity of the Church-Turing thesis?", "num_comments": 18, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_155me3", "children": [], "author": "grayvedigga", "id": "c7jij2d", "parent_id": "t3_155me3", "score": 0, "approved_by": null, "upvotes": 10, "body": "Without spending a lot of time looking into it, my immediate response is \"no\".  The Halting Problem is independent of the mechanics of the underlying computational model - it can be stated in terms of LC without reference to TMs, or vice versa (as Turing originally did, I believe).\n\ncypherx's response is also relevant:  the HP is expressed in terms of a particular computational model - it requires being able to compose machines (terms) and reason about their behaviour.  The fact that it's common to express the HP in terms of TM, then use Church-Turing to show that it can be embedded in LC, is mostly due to history.  But it seems to me that the HP can be equally stated in pure LC, Post machines, universal CA, etc without any reference to other computational models.\n\n*Edit: I said Curry-Howard when I meant Church-Turing.  Oops.*", "edited": 1355995510.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Without spending a lot of time looking into it, my immediate response is &amp;quot;no&amp;quot;.  The Halting Problem is independent of the mechanics of the underlying computational model - it can be stated in terms of LC without reference to TMs, or vice versa (as Turing originally did, I believe).&lt;/p&gt;\n\n&lt;p&gt;cypherx&amp;#39;s response is also relevant:  the HP is expressed in terms of a particular computational model - it requires being able to compose machines (terms) and reason about their behaviour.  The fact that it&amp;#39;s common to express the HP in terms of TM, then use Church-Turing to show that it can be embedded in LC, is mostly due to history.  But it seems to me that the HP can be equally stated in pure LC, Post machines, universal CA, etc without any reference to other computational models.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Edit: I said Curry-Howard when I meant Church-Turing.  Oops.&lt;/em&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jij2d", "flair_text": null, "created": 1355992958.0, "created_utc": 1355989358.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_155me3", "children": [], "author": "Chiliarchos", "id": "c7jji5j", "parent_id": "t3_155me3", "score": 0, "approved_by": null, "upvotes": 10, "body": "You are correct, Alpha_Q, the unsolvability of the Halting Problem is dependent on the truth of the Church-Turing Thesis, as follows \"Every effectively calculable function is a computable function\", where \"computable\" means computable via Turing Machine, and \"effectively calculable\" refers to the functions that can, by any method, be algorithmically (i.e. mechanically) instantiated. While Turing Machines are creatures of logic, the instantiation criterion brings the CTT within the realm of constructive mathematics, and thus of physics, because any algorithm constructed as such would have an isomorphic physical counterpart (e.g. a set of logic gates). The Physical Church-Turing Thesis makes this explicit, and strengthens the claim to \"Any physically realizable calculable function can be computed via Turing Machine (or equivalent)\". \n\nThere are, however, other logics (with, for example, transfinite-induction) that can solve the Halting Problem as formulated for Turing Machines, because they allow for the construction of oracle machines with continuous as opposed to discrete tapes (and thus the Diagonalization Argument which proves the Halting Problem incomputable fails, because the Continuous-Tape Machine has real, aleph-one precision).\n\nThis then opens an avenue to the realization of super-Turing computation in the physical world, as it is yet an open question as to whether the manipulable substrate of the Universe is discrete (quantum mechanics, chromodynamics, etc. would say so) or continuous (general relativity would oppose). By implicitly making claims of two different fields, mathematical logic and physics, the Church-Turing Thesis ascends further, into the realm of the meta-physical, and demonstrates the integrated nature underlying the foundations of, at least, these two disciplines. A definitive statement from either side would have equally manifest repercussions for the other.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You are correct, Alpha_Q, the unsolvability of the Halting Problem is dependent on the truth of the Church-Turing Thesis, as follows &amp;quot;Every effectively calculable function is a computable function&amp;quot;, where &amp;quot;computable&amp;quot; means computable via Turing Machine, and &amp;quot;effectively calculable&amp;quot; refers to the functions that can, by any method, be algorithmically (i.e. mechanically) instantiated. While Turing Machines are creatures of logic, the instantiation criterion brings the CTT within the realm of constructive mathematics, and thus of physics, because any algorithm constructed as such would have an isomorphic physical counterpart (e.g. a set of logic gates). The Physical Church-Turing Thesis makes this explicit, and strengthens the claim to &amp;quot;Any physically realizable calculable function can be computed via Turing Machine (or equivalent)&amp;quot;. &lt;/p&gt;\n\n&lt;p&gt;There are, however, other logics (with, for example, transfinite-induction) that can solve the Halting Problem as formulated for Turing Machines, because they allow for the construction of oracle machines with continuous as opposed to discrete tapes (and thus the Diagonalization Argument which proves the Halting Problem incomputable fails, because the Continuous-Tape Machine has real, aleph-one precision).&lt;/p&gt;\n\n&lt;p&gt;This then opens an avenue to the realization of super-Turing computation in the physical world, as it is yet an open question as to whether the manipulable substrate of the Universe is discrete (quantum mechanics, chromodynamics, etc. would say so) or continuous (general relativity would oppose). By implicitly making claims of two different fields, mathematical logic and physics, the Church-Turing Thesis ascends further, into the realm of the meta-physical, and demonstrates the integrated nature underlying the foundations of, at least, these two disciplines. A definitive statement from either side would have equally manifest repercussions for the other.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jji5j", "flair_text": null, "created": 1356000591.0, "created_utc": 1355996991.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_155me3", "children": [], "author": "cypherx", "id": "c7ji3iw", "parent_id": "t3_155me3", "score": 0, "approved_by": null, "upvotes": 6, "body": "Is there a general-case halting problem which we can talk about without reference to a particular computational model? When you say \"Halting Problem\" aren't you already implicitly talking about some particular variant (i.e. \"will this TM halt?\" \"will this lambda term normalize?\" etc...)? ", "edited": 1355987078.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Is there a general-case halting problem which we can talk about without reference to a particular computational model? When you say &amp;quot;Halting Problem&amp;quot; aren&amp;#39;t you already implicitly talking about some particular variant (i.e. &amp;quot;will this TM halt?&amp;quot; &amp;quot;will this lambda term normalize?&amp;quot; etc...)? &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ji3iw", "flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "created": 1355990427.0, "created_utc": 1355986827.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_155me3", "children": [], "author": "gasche", "id": "c7jkfwq", "parent_id": "t3_155me3", "score": 0, "approved_by": null, "upvotes": 7, "body": "Please define precisely what you mean by:\n\n1. \"the impossibility of solving the halting problem\"\n2. \"the Church-Turing thesis\"\n\nI think the first point is what most people argue over. With different notions of what it means, the answer is going to be either \"yes\" or \"no\".", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please define precisely what you mean by:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&amp;quot;the impossibility of solving the halting problem&amp;quot;&lt;/li&gt;\n&lt;li&gt;&amp;quot;the Church-Turing thesis&amp;quot;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;I think the first point is what most people argue over. With different notions of what it means, the answer is going to be either &amp;quot;yes&amp;quot; or &amp;quot;no&amp;quot;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jkfwq", "flair_text": null, "created": 1356009928.0, "created_utc": 1356006328.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_155me3", "children": [], "author": "JimH10", "id": "c7jkfhx", "parent_id": "t3_155me3", "score": 0, "approved_by": null, "upvotes": 1, "body": "The theorem is that HP is unsolvable on a TM.  (Corollaries of that are that HP is unsolvable on a register machine, unsolvable in lambda calculus, etc.)  So in that sense, the theorem does not depend on Church's Thesis.\n\nBut the theorem takes on great significance with the (very convincing) evidence for CT.  If CT is so then the fact that HP is not solvable on a TM means that HP is not solvable by us.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The theorem is that HP is unsolvable on a TM.  (Corollaries of that are that HP is unsolvable on a register machine, unsolvable in lambda calculus, etc.)  So in that sense, the theorem does not depend on Church&amp;#39;s Thesis.&lt;/p&gt;\n\n&lt;p&gt;But the theorem takes on great significance with the (very convincing) evidence for CT.  If CT is so then the fact that HP is not solvable on a TM means that HP is not solvable by us.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jkfhx", "flair_text": null, "created": 1356009814.0, "created_utc": 1356006214.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_155me3", "children": [], "author": "quiteamess", "id": "c7jmmpi", "parent_id": "t3_155me3", "score": 0, "approved_by": null, "upvotes": 2, "body": "The Church-Turing thesis is not a theorem that can be proven to be valid. It is just a thesis which can be accepted or rejected. The halting problem is not dependent on whether the church-turing thesis is accepted, because it depends on the mechanism which it is defined for.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The Church-Turing thesis is not a theorem that can be proven to be valid. It is just a thesis which can be accepted or rejected. The halting problem is not dependent on whether the church-turing thesis is accepted, because it depends on the mechanism which it is defined for.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jmmpi", "flair_text": null, "created": 1356022663.0, "created_utc": 1356019063.0, "num_reports": null}], "score": 15, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 26, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/155me3/does_the_impossibility_of_solving_the_halting/", "has_more_comments": false, "name": "t3_155me3", "created": 1355985627.0, "url": "http://www.reddit.com/r/compsci/comments/155me3/does_the_impossibility_of_solving_the_halting/", "author_flair_text": null, "author": "Alpha_Q", "created_utc": 1355985627.0, "link_flair_text": null, "media": null, "num_reports": null}, "162": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 9, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Think for example of the Cooley-Turkey FFT, or Merge Sort. Say we have an input size of N, with M processors/compute-units available for multithreading. &lt;/p&gt;\n\n&lt;p&gt;For a simple O(N&lt;sup&gt;2)&lt;/sup&gt; DFT, which does N dot products of vectors of length N, we can make parallel the output of every element of the vector X, where X = Wx (W is the Vandermonde matrix). So our running time can become: O(N&lt;sup&gt;2&lt;/sup&gt; / M). One of those simple &amp;quot;throw more CPUs at the problem&amp;quot;. &lt;/p&gt;\n\n&lt;p&gt;But for those more complicated divide-conquer-merge algorithms, I&amp;#39;m wondering how throwing more CPUs at the problem can help. These algorithms will have run times looking like O(NlogN), but I don&amp;#39;t see clearly that we can improve this to O(NlogN / M) like in the simpler algorithm. &lt;/p&gt;\n\n&lt;p&gt;Assuming we can&amp;#39;t parallelize, then this would suggest sticking with the NlogN algorithms until M approaches N/logN, right? ;) &lt;/p&gt;\n\n&lt;p&gt;Would love to know what you guys think, cheers.  &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Think for example of the Cooley-Turkey FFT, or Merge Sort. Say we have an input size of N, with M processors/compute-units available for multithreading. \n\nFor a simple O(N^2) DFT, which does N dot products of vectors of length N, we can make parallel the output of every element of the vector X, where X = Wx (W is the Vandermonde matrix). So our running time can become: O(N^2 / M). One of those simple \"throw more CPUs at the problem\". \n\nBut for those more complicated divide-conquer-merge algorithms, I'm wondering how throwing more CPUs at the problem can help. These algorithms will have run times looking like O(NlogN), but I don't see clearly that we can improve this to O(NlogN / M) like in the simpler algorithm. \n\nAssuming we can't parallelize, then this would suggest sticking with the NlogN algorithms until M approaches N/logN, right? ;) \n\nWould love to know what you guys think, cheers.  ", "saved": false, "id": "155jlg", "clicked": false, "title": "Can divide-and-conquer algorithms be parallelized well?", "num_comments": 8, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_155jlg", "children": [], "author": "oursland", "id": "c7jhgql", "parent_id": "t3_155jlg", "score": 0, "approved_by": null, "upvotes": 9, "body": "This really depends on the problem and solution.  You can determine how parallelizable the algorithm is by analyzing a [data dependency graph](http://en.wikipedia.org/wiki/Dependency_graph) of the algorithm.\n\nAn embarrassingly parallel example is the merge sort, but the quicksort does not have the same easily parallelizable property.\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This really depends on the problem and solution.  You can determine how parallelizable the algorithm is by analyzing a &lt;a href=\"http://en.wikipedia.org/wiki/Dependency_graph\"&gt;data dependency graph&lt;/a&gt; of the algorithm.&lt;/p&gt;\n\n&lt;p&gt;An embarrassingly parallel example is the merge sort, but the quicksort does not have the same easily parallelizable property.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jhgql", "flair_text": null, "created": 1355987165.0, "created_utc": 1355983565.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_155jlg", "children": [], "author": "cypherx", "id": "c7jhxqm", "parent_id": "t3_155jlg", "score": 0, "approved_by": null, "upvotes": 7, "body": "It's easy to parallelize a D&amp;C program if can be expressed in terms of some known parallelizable primitive such as [prefix scans](http://http.developer.nvidia.com/GPUGems3/gpugems3_ch39.html), of which reductions and maps can be seen as a special case. \n\nAt the other extreme, if you start with an arbitrary imperative implementation of a D&amp;C algorithm then you have to do a lot more [heavy lifting](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.4.9957&amp;rep=rep1&amp;type=pdf) in terms of compiler analyses and transformations and you aren't guaranteed to get anything back for your effort. \n\nAs a compromise between these two extremes you could do use an explicit high level concurrency abstraction like [Fork/Join parallelism](http://www.cs.umd.edu/class/fall2012/cmsc433/0101/lecture-notes/lec20-forkjoin.pdf): treat each recursive call as a new item of work and perform work-stealing between your cores. This is (I think) a general solution but requires some careful tuning to figure out when it's advantageous to switch from creating new tasks to just computing locally. \n\nWith regards to FFT, the FFTW folks give a [rough explanation](http://www.fftw.org/parallel/parallel-fftw.html) of how they're approaching parallelizing their FFT library. The simplest version uses fork-join parallelism via [Cilk](http://www.drdobbs.com/architecture-and-design/thread-parallelism-using-cilk-notation-f/227500107)'s *spawn* keyword.  \n\nedit: Missed the part of your post where you're suggesting toggling between parallel naive algorithms and asympotically superior sequential algorithms. This certainly seems like a reasonable thing to do, though the crossover point will depend a lot on the details of hardware, implementation, and the constant factors of the algorithms (you should probably figure it out empirically rather than analytically). However, I suspect that you'll often, if not always, be able to at least run the O(n*log(n)) algorithm per-core on coarse divisions of your input data and then globally combine the sub-parts. ", "edited": 1355989119.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s easy to parallelize a D&amp;amp;C program if can be expressed in terms of some known parallelizable primitive such as &lt;a href=\"http://http.developer.nvidia.com/GPUGems3/gpugems3_ch39.html\"&gt;prefix scans&lt;/a&gt;, of which reductions and maps can be seen as a special case. &lt;/p&gt;\n\n&lt;p&gt;At the other extreme, if you start with an arbitrary imperative implementation of a D&amp;amp;C algorithm then you have to do a lot more &lt;a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.4.9957&amp;amp;rep=rep1&amp;amp;type=pdf\"&gt;heavy lifting&lt;/a&gt; in terms of compiler analyses and transformations and you aren&amp;#39;t guaranteed to get anything back for your effort. &lt;/p&gt;\n\n&lt;p&gt;As a compromise between these two extremes you could do use an explicit high level concurrency abstraction like &lt;a href=\"http://www.cs.umd.edu/class/fall2012/cmsc433/0101/lecture-notes/lec20-forkjoin.pdf\"&gt;Fork/Join parallelism&lt;/a&gt;: treat each recursive call as a new item of work and perform work-stealing between your cores. This is (I think) a general solution but requires some careful tuning to figure out when it&amp;#39;s advantageous to switch from creating new tasks to just computing locally. &lt;/p&gt;\n\n&lt;p&gt;With regards to FFT, the FFTW folks give a &lt;a href=\"http://www.fftw.org/parallel/parallel-fftw.html\"&gt;rough explanation&lt;/a&gt; of how they&amp;#39;re approaching parallelizing their FFT library. The simplest version uses fork-join parallelism via &lt;a href=\"http://www.drdobbs.com/architecture-and-design/thread-parallelism-using-cilk-notation-f/227500107\"&gt;Cilk&lt;/a&gt;&amp;#39;s &lt;em&gt;spawn&lt;/em&gt; keyword.  &lt;/p&gt;\n\n&lt;p&gt;edit: Missed the part of your post where you&amp;#39;re suggesting toggling between parallel naive algorithms and asympotically superior sequential algorithms. This certainly seems like a reasonable thing to do, though the crossover point will depend a lot on the details of hardware, implementation, and the constant factors of the algorithms (you should probably figure it out empirically rather than analytically). However, I suspect that you&amp;#39;ll often, if not always, be able to at least run the O(n*log(n)) algorithm per-core on coarse divisions of your input data and then globally combine the sub-parts. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jhxqm", "flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "created": 1355989539.0, "created_utc": 1355985939.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_155jlg", "children": [], "author": "ImJusSaynTho", "id": "c7jhirt", "parent_id": "t3_155jlg", "score": 0, "approved_by": null, "upvotes": 3, "body": "This would be a good example of a divide and conquer algorithm that you can make parallel.. http://en.wikipedia.org/wiki/Merge_sort#Parallel_processing", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This would be a good example of a divide and conquer algorithm that you can make parallel.. &lt;a href=\"http://en.wikipedia.org/wiki/Merge_sort#Parallel_processing\"&gt;http://en.wikipedia.org/wiki/Merge_sort#Parallel_processing&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jhirt", "flair_text": null, "created": 1355987429.0, "created_utc": 1355983829.0, "num_reports": null}], "score": 13, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 22, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/155jlg/can_divideandconquer_algorithms_be_parallelized/", "has_more_comments": false, "name": "t3_155jlg", "created": 1355982122.0, "url": "http://www.reddit.com/r/compsci/comments/155jlg/can_divideandconquer_algorithms_be_parallelized/", "author_flair_text": null, "author": "vcxzzxcv", "created_utc": 1355982122.0, "link_flair_text": null, "media": null, "num_reports": null}, "163": {"domain": "some-docs.googlecode.com", "link_flair_class": null, "banned_by": null, "downvotes": 21, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "1533cl", "clicked": false, "title": "Top ten algorithms in data mining (2007) [pdf]", "num_comments": 28, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1533cl", "children": [], "author": "letseatlunch", "id": "c7j1kev", "parent_id": "t3_1533cl", "score": 0, "approved_by": null, "upvotes": 3, "body": "i thought the k-means and ada boosting were the coolest and most applicable to what i do. anyways it's a good, short read for those who havn't yet", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;i thought the k-means and ada boosting were the coolest and most applicable to what i do. anyways it&amp;#39;s a good, short read for those who havn&amp;#39;t yet&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7j1kev", "flair_text": null, "created": 1355929684.0, "created_utc": 1355926084.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1533cl", "children": [], "author": "Tairnyn", "id": "c7j2pzy", "parent_id": "t3_1533cl", "score": 0, "approved_by": null, "upvotes": 2, "body": "This is a great place to start if you are looking to gain an awareness some of the more popular data mining algorithms. There is a book of the same name that goes into further detail and provides more detailed explanations for each algorithm.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is a great place to start if you are looking to gain an awareness some of the more popular data mining algorithms. There is a book of the same name that goes into further detail and provides more detailed explanations for each algorithm.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7j2pzy", "flair_text": null, "created": 1355934860.0, "created_utc": 1355931260.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1533cl", "children": [], "author": "xelfin", "id": "c7j5kea", "parent_id": "t3_1533cl", "score": 0, "approved_by": null, "upvotes": 2, "body": "This doesn't seem like a very useful article other than for identifying the algorithm names... I only read the SVM and Naive Bayes sections to get a taste of it, but they weren't written very well and if I didn't know how they worked already I think I'd be very confused.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This doesn&amp;#39;t seem like a very useful article other than for identifying the algorithm names... I only read the SVM and Naive Bayes sections to get a taste of it, but they weren&amp;#39;t written very well and if I didn&amp;#39;t know how they worked already I think I&amp;#39;d be very confused.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7j5kea", "flair_text": null, "created": 1355944948.0, "created_utc": 1355941348.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1533cl", "children": [], "author": "gigitrix", "id": "c7jda2o", "parent_id": "t3_1533cl", "score": 0, "approved_by": null, "upvotes": 2, "body": "Didn't realise the academic world lowered itself to \"top 10 lists\". Publish or perish I guess!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Didn&amp;#39;t realise the academic world lowered itself to &amp;quot;top 10 lists&amp;quot;. Publish or perish I guess!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jda2o", "flair_text": null, "created": 1355970581.0, "created_utc": 1355966981.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 6, "link_id": "t3_1533cl", "children": [], "author": "NEVER_CLEANED_COMP", "id": "c7j8tez", "parent_id": "t3_1533cl", "score": 0, "approved_by": null, "upvotes": 6, "body": "Maybe it's just me, but I *hate* when they showcase it, with that 'math writing' (my brain just collapsed, i cant seem to recall wtf it's called.) instead of just some pseudo code! not everyone knows this stuff.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Maybe it&amp;#39;s just me, but I &lt;em&gt;hate&lt;/em&gt; when they showcase it, with that &amp;#39;math writing&amp;#39; (my brain just collapsed, i cant seem to recall wtf it&amp;#39;s called.) instead of just some pseudo code! not everyone knows this stuff.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7j8tez", "flair_text": null, "created": 1355955239.0, "created_utc": 1355951639.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_1533cl", "children": [], "author": "muffinman007", "id": "c7j1z8q", "parent_id": "t3_1533cl", "score": 0, "approved_by": null, "upvotes": 3, "body": "I have a lot to learn. it is a short read but it went straight over my head.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I have a lot to learn. it is a short read but it went straight over my head.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7j1z8q", "flair_text": null, "created": 1355931742.0, "created_utc": 1355928142.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 11, "link_id": "t3_1533cl", "children": [], "author": "tarunnurat", "id": "c7izj8s", "parent_id": "t3_1533cl", "score": 0, "approved_by": null, "upvotes": 2, "body": "Wat?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wat?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7izj8s", "flair_text": null, "created": 1355912455.0, "created_utc": 1355908855.0, "num_reports": null}], "score": 90, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 111, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/1533cl/top_ten_algorithms_in_data_mining_2007_pdf/", "has_more_comments": false, "name": "t3_1533cl", "created": 1355883045.0, "url": "http://some-docs.googlecode.com/files/Top%2010%20algorithms%20in%20data%20mining.pdf", "author_flair_text": null, "author": "WyattFerguson", "created_utc": 1355883045.0, "link_flair_text": null, "media": null, "num_reports": null}, "164": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 0, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I came across this paper: &lt;a href=\"http://www.edbt.org/Proceedings/2012-Berlin/papers/edbt/a36-zhou.pdf\"&gt;http://www.edbt.org/Proceedings/2012-Berlin/papers/edbt/a36-zhou.pdf&lt;/a&gt;\n while doing a course on SNA (Social Network Analysis). I want to detect communities using mutual friend info on fb data. I want to find out if there is a good implementation of the naive approach to finding maximal k-Edge-Connected subgraphs from a graph. Algorithm enthusiasts of Reddit, could you please point me to any?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I came across this paper: http://www.edbt.org/Proceedings/2012-Berlin/papers/edbt/a36-zhou.pdf\n while doing a course on SNA (Social Network Analysis). I want to detect communities using mutual friend info on fb data. I want to find out if there is a good implementation of the naive approach to finding maximal k-Edge-Connected subgraphs from a graph. Algorithm enthusiasts of Reddit, could you please point me to any?", "saved": false, "id": "1549d0", "clicked": false, "title": "Maximal k-Edge-Connected Subgraphs from a Graph - Implementation", "num_comments": 0, "comments": [], "score": 3, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 3, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/1549d0/maximal_kedgeconnected_subgraphs_from_a_graph/", "has_more_comments": false, "name": "t3_1549d0", "created": 1355939200.0, "url": "http://www.reddit.com/r/compsci/comments/1549d0/maximal_kedgeconnected_subgraphs_from_a_graph/", "author_flair_text": null, "author": "kripaks", "created_utc": 1355939200.0, "link_flair_text": null, "media": null, "num_reports": null}, "165": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 0, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Working with a &amp;quot;stealth&amp;quot; startup and they have an interesting math/programming challenge.  Looking for help brainstorming.&lt;/p&gt;\n\n&lt;p&gt;They are building a graph, and want each node to have a global unique ID.  However, selection of the unique id will not have a registry to check to make sure it&amp;#39;s unique.  This guid can be structured however they need, and it could be long, even up to a few kb if needed. Shorter is better, obviously.&lt;/p&gt;\n\n&lt;p&gt;The estimate of total nodes will be plus or minus one order on 1 trillion.  New nodes will be added only with connections to existing nodes, each one will have a guid already (the graph is fully connected), but new nodes will only access data/guid value from connected nodes.  At the time we need the guid, there will be ~5-20 connections with other local nodes.&lt;/p&gt;\n\n&lt;p&gt;TLDR question:&lt;/p&gt;\n\n&lt;p&gt;So the question is - can we make an algorithm thats local in the graph that makes a new id we can argue is &lt;strong&gt;provably unique&lt;/strong&gt; over the whole graph?  The inputs are the guid values of the 5-20 initial nodes the new node is connected to, the output is a guid for the new node.&lt;/p&gt;\n\n&lt;p&gt;If it cannot be done (our current efforts think this will not be provabe) is there a way to use local info that makes a &amp;quot;probably unique&amp;quot; guid choice more likely to be unique (connected) guid values?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Working with a \"stealth\" startup and they have an interesting math/programming challenge.  Looking for help brainstorming.\n\nThey are building a graph, and want each node to have a global unique ID.  However, selection of the unique id will not have a registry to check to make sure it's unique.  This guid can be structured however they need, and it could be long, even up to a few kb if needed. Shorter is better, obviously.\n\nThe estimate of total nodes will be plus or minus one order on 1 trillion.  New nodes will be added only with connections to existing nodes, each one will have a guid already (the graph is fully connected), but new nodes will only access data/guid value from connected nodes.  At the time we need the guid, there will be ~5-20 connections with other local nodes.\n\nTLDR question:\n\nSo the question is - can we make an algorithm thats local in the graph that makes a new id we can argue is **provably unique** over the whole graph?  The inputs are the guid values of the 5-20 initial nodes the new node is connected to, the output is a guid for the new node.\n\nIf it cannot be done (our current efforts think this will not be provabe) is there a way to use local info that makes a \"probably unique\" guid choice more likely to be unique (connected) guid values?", "saved": false, "id": "154erc", "clicked": false, "title": "Guaranteed node global uid (guid) with only unique connections in a graph?", "num_comments": 8, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_154erc", "children": [], "author": "ahazred8vt", "id": "c7jyoau", "parent_id": "t3_154erc", "score": 0, "approved_by": null, "upvotes": 3, "body": "A two or three part serial number would do it. CPU/core ID# + process/thread ID# + either a local counter, nonce, fine-grained timestamp, or cpucycle count. In practice, any random 128 bit GUID will be way larger than you need.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A two or three part serial number would do it. CPU/core ID# + process/thread ID# + either a local counter, nonce, fine-grained timestamp, or cpucycle count. In practice, any random 128 bit GUID will be way larger than you need.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jyoau", "flair_text": null, "created": 1356068474.0, "created_utc": 1356064874.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_154erc", "children": [], "author": "more_exercise", "id": "c7k07im", "parent_id": "t3_154erc", "score": 0, "approved_by": null, "upvotes": 1, "body": "&gt;A universally unique identifier (UUID) is an identifier standard used ...  to uniquely identify information without significant central coordination. In this context the word unique should be taken to mean \"practically unique\" rather than \"guaranteed unique\". Since the identifiers have a finite size it is possible for two differing items to share the same identifier. The identifier size and generation process need to be selected so as to make this sufficiently improbable in practice. Anyone can create a UUID and use it to identify something with reasonable confidence that the same identifier will never be unintentionally created by anyone to identify something else. Information labeled with UUIDs can therefore be later combined into a single database without needing to resolve identifier (ID) conflicts.\n\n[Implementations](http://en.wikipedia.org/wiki/Universally_unique_identifier#Implementations)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;A universally unique identifier (UUID) is an identifier standard used ...  to uniquely identify information without significant central coordination. In this context the word unique should be taken to mean &amp;quot;practically unique&amp;quot; rather than &amp;quot;guaranteed unique&amp;quot;. Since the identifiers have a finite size it is possible for two differing items to share the same identifier. The identifier size and generation process need to be selected so as to make this sufficiently improbable in practice. Anyone can create a UUID and use it to identify something with reasonable confidence that the same identifier will never be unintentionally created by anyone to identify something else. Information labeled with UUIDs can therefore be later combined into a single database without needing to resolve identifier (ID) conflicts.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Universally_unique_identifier#Implementations\"&gt;Implementations&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7k07im", "flair_text": null, "created": 1356075262.0, "created_utc": 1356071662.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_154erc", "children": [], "author": "ahazred8vt", "id": "c7lk0gi", "parent_id": "t3_154erc", "score": 0, "approved_by": null, "upvotes": 1, "body": "We're still waiting to hear from you why you can't use an existing provably unique scheme. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;We&amp;#39;re still waiting to hear from you why you can&amp;#39;t use an existing provably unique scheme. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7lk0gi", "flair_text": null, "created": 1356375857.0, "created_utc": 1356372257.0, "num_reports": null}], "score": 2, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 2, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/154erc/guaranteed_node_global_uid_guid_with_only_unique/", "has_more_comments": false, "name": "t3_154erc", "created": 1355944169.0, "url": "http://www.reddit.com/r/compsci/comments/154erc/guaranteed_node_global_uid_guid_with_only_unique/", "author_flair_text": null, "author": "jmdugan", "created_utc": 1355944169.0, "link_flair_text": null, "media": null, "num_reports": null}, "166": {"domain": "webcache.googleusercontent.com", "link_flair_class": null, "banned_by": null, "downvotes": 4, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "152rx6", "clicked": false, "title": "Bayes or chi-squared? Or does it not matter?", "num_comments": 5, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_152rx6", "children": [], "author": "shmageggy", "id": "c7ivd8s", "parent_id": "t3_152rx6", "score": 0, "approved_by": null, "upvotes": 11, "body": "I couldn't stand the mangled math, so I converted the original to a pdf [here](https://docs.google.com/open?id=0B4zQ4U4wZZhgTkFmay0xekNfdzQ), if anyone else is interested.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I couldn&amp;#39;t stand the mangled math, so I converted the original to a pdf &lt;a href=\"https://docs.google.com/open?id=0B4zQ4U4wZZhgTkFmay0xekNfdzQ\"&gt;here&lt;/a&gt;, if anyone else is interested.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ivd8s", "flair_text": null, "created": 1355891734.0, "created_utc": 1355888134.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_152rx6", "children": [], "author": "hottoddy", "id": "c7ix34s", "parent_id": "t3_152rx6", "score": 0, "approved_by": null, "upvotes": 3, "body": "The author started with the hypothesis that chi-squared is taught, preferred, and wrong (within a hypothetical population of undergrad stats students); then went seeking examples to magnify the difference.\n\nIn my experience, chi-squared is taught to undergrad stats classes as introductory bi-variate analysis - its shortcomings are widely discussed, and alternatives are taught in upper-level courses.  Bayesian analysis is taught in introductory compsci or machine learning courses, and its shortcomings are also discussed (though not so widely as in the case of chi-squared in stats classes).  \n\nThe *real* education takes place in analyzing a data set and constructing multiple hypotheses to test, even in multiple analytic frameworks - be it chi-squared, bayesian, two-tailed, fourier, or other -- you need to understand the strengths and weaknesses of the model you ultimately choose (or weight vs other models) and also understand the predilection of the data for meaningful analysis within each model.\n\n**tl,dr: DUH**", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The author started with the hypothesis that chi-squared is taught, preferred, and wrong (within a hypothetical population of undergrad stats students); then went seeking examples to magnify the difference.&lt;/p&gt;\n\n&lt;p&gt;In my experience, chi-squared is taught to undergrad stats classes as introductory bi-variate analysis - its shortcomings are widely discussed, and alternatives are taught in upper-level courses.  Bayesian analysis is taught in introductory compsci or machine learning courses, and its shortcomings are also discussed (though not so widely as in the case of chi-squared in stats classes).  &lt;/p&gt;\n\n&lt;p&gt;The &lt;em&gt;real&lt;/em&gt; education takes place in analyzing a data set and constructing multiple hypotheses to test, even in multiple analytic frameworks - be it chi-squared, bayesian, two-tailed, fourier, or other -- you need to understand the strengths and weaknesses of the model you ultimately choose (or weight vs other models) and also understand the predilection of the data for meaningful analysis within each model.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;tl,dr: DUH&lt;/strong&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ix34s", "flair_text": null, "created": 1355898339.0, "created_utc": 1355894739.0, "num_reports": null}], "score": 15, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 19, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/152rx6/bayes_or_chisquared_or_does_it_not_matter/", "has_more_comments": false, "name": "t3_152rx6", "created": 1355872341.0, "url": "http://webcache.googleusercontent.com/search?q=cache:YqpW5WJQoZkJ:www.inference.phy.cam.ac.uk/mackay/Chi2.ps+&amp;cd=1&amp;hl=en&amp;ct=clnk&amp;gl=us", "author_flair_text": null, "author": "mycall", "created_utc": 1355872341.0, "link_flair_text": null, "media": null, "num_reports": null}, "167": {"domain": "aaronschild.wordpress.com", "link_flair_class": null, "banned_by": null, "downvotes": 3, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "152u1g", "clicked": false, "title": "Limits on Approximation of NP-Complete Problems", "num_comments": 1, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_152u1g", "children": [], "author": "quattro", "id": "c7jn2i1", "parent_id": "t3_152u1g", "score": 0, "approved_by": null, "upvotes": 1, "body": "This is essentially right out of the Arora and Barak chapter on PCP.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is essentially right out of the Arora and Barak chapter on PCP.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7jn2i1", "flair_text": null, "created": 1356024407.0, "created_utc": 1356020807.0, "num_reports": null}], "score": 5, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 8, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/152u1g/limits_on_approximation_of_npcomplete_problems/", "has_more_comments": false, "name": "t3_152u1g", "created": 1355874247.0, "url": "http://aaronschild.wordpress.com/2012/12/16/hardness-of-approximating-independent-set/", "author_flair_text": null, "author": "torinmr", "created_utc": 1355874247.0, "link_flair_text": null, "media": null, "num_reports": null}, "168": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 23, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Howdy, I am a sophomore undergrad student, currently pursuing a degree in Computer Science. Ideally I would like to become a SE, or perhaps work on a startup with some business-major friends (did I mention I was a college student?). Anyway, I was wondering whether taking a course such as Intro to Logic would help me wrap my head around some higher concepts in CompSci. It seems that logic is the bridge between math and programming, and I feel this class may help. The only thing is, the class is HARD, and I am already taking a pretty heavy courseload next semester. What do you guys think, is it worth it?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Howdy, I am a sophomore undergrad student, currently pursuing a degree in Computer Science. Ideally I would like to become a SE, or perhaps work on a startup with some business-major friends (did I mention I was a college student?). Anyway, I was wondering whether taking a course such as Intro to Logic would help me wrap my head around some higher concepts in CompSci. It seems that logic is the bridge between math and programming, and I feel this class may help. The only thing is, the class is HARD, and I am already taking a pretty heavy courseload next semester. What do you guys think, is it worth it?", "saved": false, "id": "151idd", "clicked": false, "title": "Would taking an Intro to Logic course help me become a better programmer?", "num_comments": 99, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 21, "link_id": "t3_151idd", "children": [], "author": "Spire", "id": "c7ifkhg", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 179, "body": "The answer to your question is \"yes or no\", which can be simplified to \"yes\".", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The answer to your question is &amp;quot;yes or no&amp;quot;, which can be simplified to &amp;quot;yes&amp;quot;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ifkhg", "flair_text": null, "created": 1355823587.0, "created_utc": 1355819987.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_151idd", "children": [], "author": "keithb", "id": "c7iezbh", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 49, "body": "I am astonished that you have managed to get to the second year of a CS degree without being _obliged_ to learn about formal reasoning. What school are you at?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I am astonished that you have managed to get to the second year of a CS degree without being &lt;em&gt;obliged&lt;/em&gt; to learn about formal reasoning. What school are you at?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7iezbh", "flair_text": null, "created": 1355819753.0, "created_utc": 1355816153.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_151idd", "children": [], "author": "srg666", "id": "c7if0go", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 13, "body": "Short answer, yes it will help. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Short answer, yes it will help. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7if0go", "flair_text": null, "created": 1355819942.0, "created_utc": 1355816342.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_151idd", "children": [], "author": "tikhonjelvis", "id": "c7ieti0", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 20, "body": "I think a basic logic class would be great. At the very least, it'll help with reasoning about code. If you decide to use functional programming (and you should--it's awesome), a good base in formal logic will be even more useful. As an illustration, both type theory and the lambda calculus started in logic; languages based on these concepts (Haskell, OCaml) remain closely related to logic. I find using languages like this, coupled with a basic understanding of the theory, makes you far more productive and makes your code far more maintainable. These are particularly important qualities for a startup--you'll be able to prototype faster and convert your prototype code to more stable code far more easily.\n\nBesides, part of the fun of college is biting off more than you can chew :P.\n\nIn the future, I'd also consider taking a class on set theory. it's pretty central to essentially all math and comes up quite a bit in any mathematically oriented branch of CS. It's also a good introduction to mathematical reasoning and will make you more adapt at thinking abstractly.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think a basic logic class would be great. At the very least, it&amp;#39;ll help with reasoning about code. If you decide to use functional programming (and you should--it&amp;#39;s awesome), a good base in formal logic will be even more useful. As an illustration, both type theory and the lambda calculus started in logic; languages based on these concepts (Haskell, OCaml) remain closely related to logic. I find using languages like this, coupled with a basic understanding of the theory, makes you far more productive and makes your code far more maintainable. These are particularly important qualities for a startup--you&amp;#39;ll be able to prototype faster and convert your prototype code to more stable code far more easily.&lt;/p&gt;\n\n&lt;p&gt;Besides, part of the fun of college is biting off more than you can chew :P.&lt;/p&gt;\n\n&lt;p&gt;In the future, I&amp;#39;d also consider taking a class on set theory. it&amp;#39;s pretty central to essentially all math and comes up quite a bit in any mathematically oriented branch of CS. It&amp;#39;s also a good introduction to mathematical reasoning and will make you more adapt at thinking abstractly.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ieti0", "flair_text": null, "created": 1355818858.0, "created_utc": 1355815258.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_151idd", "children": [], "author": "day_cq", "id": "c7ihosd", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 4, "body": "to be a better programmer, you need to program a lot. taking courses help, too. but in the end, you need to practice craft of programming, collaborate with others, make something.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;to be a better programmer, you need to program a lot. taking courses help, too. but in the end, you need to practice craft of programming, collaborate with others, make something.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ihosd", "flair_text": null, "created": 1355842062.0, "created_utc": 1355838462.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_151idd", "children": [], "author": "artificialidiot", "id": "c7iivsx", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 5, "body": "Why not? At the minimum you won't shit your pants while writing sql joins because you've learned clause unification.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Why not? At the minimum you won&amp;#39;t shit your pants while writing sql joins because you&amp;#39;ve learned clause unification.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7iivsx", "flair_text": null, "created": 1355848266.0, "created_utc": 1355844666.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_151idd", "children": [], "author": "Require_More_Mineral", "id": "c7ijf8h", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 4, "body": "In my honest opinion, it's not necessary.  Someone mentioned writing more code to become a better programmer, and I agree.  Having said that, logic is a good thing to learn regardless of whether you'll need it or not, and understanding the rules of logic may help you with understanding/writing proofs in your upper level courses or math courses.  I would recommend you take it if you can fulfill some requirement with it.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In my honest opinion, it&amp;#39;s not necessary.  Someone mentioned writing more code to become a better programmer, and I agree.  Having said that, logic is a good thing to learn regardless of whether you&amp;#39;ll need it or not, and understanding the rules of logic may help you with understanding/writing proofs in your upper level courses or math courses.  I would recommend you take it if you can fulfill some requirement with it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ijf8h", "flair_text": null, "created": 1355850539.0, "created_utc": 1355846939.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "Hoelt", "id": "c7ietec", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 2, "body": "I don't know what field intro to logic is in (philosophy? math?)\n\nI know a kid who is a senior econ major at my school (who has also taken some compsci), who took an intro to logic philosophy course and loved it because it taught him a lot about just thinking. I'm sure that's why he also loved his compsci classes.\n\nI think you're probably talking about a more mathematical class. I think that type of formal logical thinking is definitely useful for allowing you to practice logical skills, it is definitely something that has the potential to carry over into your programming abilities, logic is a transferrable skills, just like writing cleary in a history class is also a transferrable skill.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t know what field intro to logic is in (philosophy? math?)&lt;/p&gt;\n\n&lt;p&gt;I know a kid who is a senior econ major at my school (who has also taken some compsci), who took an intro to logic philosophy course and loved it because it taught him a lot about just thinking. I&amp;#39;m sure that&amp;#39;s why he also loved his compsci classes.&lt;/p&gt;\n\n&lt;p&gt;I think you&amp;#39;re probably talking about a more mathematical class. I think that type of formal logical thinking is definitely useful for allowing you to practice logical skills, it is definitely something that has the potential to carry over into your programming abilities, logic is a transferrable skills, just like writing cleary in a history class is also a transferrable skill.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ietec", "flair_text": null, "created": 1355818844.0, "created_utc": 1355815244.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_151idd", "children": [], "author": "moofins", "id": "c7igmwi", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 5, "body": "More math never hurts. Math trains a certain precision of thought that will help out in just about anything.\n\nBut I don't think it'll necessarily make you a better programmer. Programming, for better or worse, is much more about complexity management than it is about formal logic. \n\nNow, as far as usefulness from a *computer science* (which I am differentiating from programming) perspective, formal logic is invaluable. So invaluable that\nI'm certain one or more of your required classes will incorporate it in some shape or form, since you kind of need it to read and reason about proofs.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;More math never hurts. Math trains a certain precision of thought that will help out in just about anything.&lt;/p&gt;\n\n&lt;p&gt;But I don&amp;#39;t think it&amp;#39;ll necessarily make you a better programmer. Programming, for better or worse, is much more about complexity management than it is about formal logic. &lt;/p&gt;\n\n&lt;p&gt;Now, as far as usefulness from a &lt;em&gt;computer science&lt;/em&gt; (which I am differentiating from programming) perspective, formal logic is invaluable. So invaluable that\nI&amp;#39;m certain one or more of your required classes will incorporate it in some shape or form, since you kind of need it to read and reason about proofs.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7igmwi", "flair_text": null, "created": 1355833405.0, "created_utc": 1355829805.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "Crynth", "id": "c7iubr0", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 3, "body": "I'm Computer Science major, minoring in philosophy. My answer is no. Everything you learn in an Intro to Logic course you could teach yourself in a matter of hours. I took it as a bird course and was bored to tears, showed up for a total of 3 classes I think.\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m Computer Science major, minoring in philosophy. My answer is no. Everything you learn in an Intro to Logic course you could teach yourself in a matter of hours. I took it as a bird course and was bored to tears, showed up for a total of 3 classes I think.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7iubr0", "flair_text": null, "created": 1355887934.0, "created_utc": 1355884334.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_151idd", "children": [], "author": "markgraydk", "id": "c7ifrly", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "I only had logic as part of an intro discrete math course and would love to be able to do a bit more. However, my school is a bit light on those kind of topics :(. That course was great though since I do feel a lot more confident in reading CS papers now.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I only had logic as part of an intro discrete math course and would love to be able to do a bit more. However, my school is a bit light on those kind of topics :(. That course was great though since I do feel a lot more confident in reading CS papers now.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ifrly", "flair_text": null, "created": 1355825116.0, "created_utc": 1355821516.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_151idd", "children": [], "author": "Ruscour", "id": "c7ig6xu", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 3, "body": "I took a formal logic course (from the philosophy department) and while I don't think it's really helped my programming specifically, it definitely gets you in a good mindset and if you enjoy compsci then you'll absolutely love the course.  Worst case scenario you don't get anything out of it.\n\nI found logic a walk in the park, even though others struggled.  Managed to get 105% on a test because everyone else failed and it was scaled up.  If you like logic where you use it currently, just take it.  You'll very likely not regret it.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I took a formal logic course (from the philosophy department) and while I don&amp;#39;t think it&amp;#39;s really helped my programming specifically, it definitely gets you in a good mindset and if you enjoy compsci then you&amp;#39;ll absolutely love the course.  Worst case scenario you don&amp;#39;t get anything out of it.&lt;/p&gt;\n\n&lt;p&gt;I found logic a walk in the park, even though others struggled.  Managed to get 105% on a test because everyone else failed and it was scaled up.  If you like logic where you use it currently, just take it.  You&amp;#39;ll very likely not regret it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ig6xu", "flair_text": null, "created": 1355828910.0, "created_utc": 1355825310.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "btdn", "id": "c7ih80m", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 2, "body": "I majored in computer science and have a minor in philosophy. I took logic, required for the philosophy minor, the same semester I took a CS course in discrete mathematics, where we covered almost everything in the logic course in three days. All that was left for the logic course was informal fallacies.\n\nI would check with a CS professor first to see if this would be covered in the CS curriculum.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I majored in computer science and have a minor in philosophy. I took logic, required for the philosophy minor, the same semester I took a CS course in discrete mathematics, where we covered almost everything in the logic course in three days. All that was left for the logic course was informal fallacies.&lt;/p&gt;\n\n&lt;p&gt;I would check with a CS professor first to see if this would be covered in the CS curriculum.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ih80m", "flair_text": null, "created": 1355838738.0, "created_utc": 1355835138.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "Cutty_Sark", "id": "c7ihlnq", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 2, "body": "PhD in computational logic here.\n\nYou can skip the course and never feel the need for it in your life if you want to be a SE or make a startup.\n\nThis said, that doesn't mean I'm suggesting you to skip it. Logic is at the heart of so many things, it will change the way you live. You'll never be able to hear a politician talk without wondering how many of his statements are formally correct. \nAlso, never underestimate what happens during your studies. I started studying CS with the idea of becoming a programmer or a SE, but then I fell in love with Artificial Intelligence and it changed everything. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;PhD in computational logic here.&lt;/p&gt;\n\n&lt;p&gt;You can skip the course and never feel the need for it in your life if you want to be a SE or make a startup.&lt;/p&gt;\n\n&lt;p&gt;This said, that doesn&amp;#39;t mean I&amp;#39;m suggesting you to skip it. Logic is at the heart of so many things, it will change the way you live. You&amp;#39;ll never be able to hear a politician talk without wondering how many of his statements are formally correct. \nAlso, never underestimate what happens during your studies. I started studying CS with the idea of becoming a programmer or a SE, but then I fell in love with Artificial Intelligence and it changed everything. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ihlnq", "flair_text": null, "created": 1355841513.0, "created_utc": 1355837913.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "nonconvergent", "id": "c7ihq3u", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 2, "body": "Propositional logic is good to know.\n\nKnowledge of logical fallacies will make you a better person only if you can avoid pedantic applications in an argument (by which I don't mean a formal discourse of contrasting claims, I mean the other kind that we're more intimately familiar with).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Propositional logic is good to know.&lt;/p&gt;\n\n&lt;p&gt;Knowledge of logical fallacies will make you a better person only if you can avoid pedantic applications in an argument (by which I don&amp;#39;t mean a formal discourse of contrasting claims, I mean the other kind that we&amp;#39;re more intimately familiar with).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ihq3u", "flair_text": null, "created": 1355842292.0, "created_utc": 1355838692.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "jptman", "id": "c7ihtk2", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "I think all the logic you would need for programming would be taught in an intro to computer science class. Logic classes are good at formally defining certain things that are used too loosely in English. For example the word OR doesn't mean the same thing in colloquial English as it does in programming/logic. If x then Y doesn't mean if Y then X and certainly doesn't mean Y if and only if X. These things are apparent to people with programming knowledge, but not so apparent to people who haven't spent time thinking about this stuff.\n\nSo, if you spend time programming, you'll pick up all the necessary logic along the way.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think all the logic you would need for programming would be taught in an intro to computer science class. Logic classes are good at formally defining certain things that are used too loosely in English. For example the word OR doesn&amp;#39;t mean the same thing in colloquial English as it does in programming/logic. If x then Y doesn&amp;#39;t mean if Y then X and certainly doesn&amp;#39;t mean Y if and only if X. These things are apparent to people with programming knowledge, but not so apparent to people who haven&amp;#39;t spent time thinking about this stuff.&lt;/p&gt;\n\n&lt;p&gt;So, if you spend time programming, you&amp;#39;ll pick up all the necessary logic along the way.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ihtk2", "flair_text": null, "created": 1355842868.0, "created_utc": 1355839268.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_151idd", "children": [], "author": "xiipaoc", "id": "c7ihtkh", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 2, "body": "It depends on your logic course.  Why is the class HARD?  Is it hard because it's math-heavy or because the problems themselves are difficult to solve?  If the latter, you should probably take it, or at least find a comparably difficult math class that's based on rigorous proof.  Rigorous proofs are, in a sense, what good programming is about, since you need to write programs that do what you want them to do and don't leave room for corner cases that don't.  But I'm not sure formal logic, specifically, is that useful.  Then again, I was a math major and have not taken a formal logic course because it really didn't seem interesting compared to, say, algebraic number theory.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It depends on your logic course.  Why is the class HARD?  Is it hard because it&amp;#39;s math-heavy or because the problems themselves are difficult to solve?  If the latter, you should probably take it, or at least find a comparably difficult math class that&amp;#39;s based on rigorous proof.  Rigorous proofs are, in a sense, what good programming is about, since you need to write programs that do what you want them to do and don&amp;#39;t leave room for corner cases that don&amp;#39;t.  But I&amp;#39;m not sure formal logic, specifically, is that useful.  Then again, I was a math major and have not taken a formal logic course because it really didn&amp;#39;t seem interesting compared to, say, algebraic number theory.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ihtkh", "flair_text": null, "created": 1355842870.0, "created_utc": 1355839270.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "sculler", "id": "c7ihuu4", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "We had to take a philosophy course on logic in university.  ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;We had to take a philosophy course on logic in university.  &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ihuu4", "flair_text": null, "created": 1355843079.0, "created_utc": 1355839479.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "KillerCodeMonky", "id": "c7ii1pm", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "I took a logic class, but it was disguised under the name \"Application of Discrete Structures\" at my school. (Was a requirement for the major.) Make sure you look at the descriptions of all the classes required for the major before you sign yourself up for something!\n\nEDIT: It seems courses 205 and 206 -- Introduction to Discrete Structures I and II -- are logic courses at Rutgers. (Mostly 205; 206 is more into set theory it seems.) And these are requirements for both the BS and BA degrees.\n\nhttp://www.cs.rutgers.edu/undergraduate/courses/205/\n\nhttp://www.cs.rutgers.edu/undergraduate/courses/206/\n\nConclusion: You are already required to take a logic class. You can either try to take 205 early, or just chill out until you get there.", "edited": 1355840892.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I took a logic class, but it was disguised under the name &amp;quot;Application of Discrete Structures&amp;quot; at my school. (Was a requirement for the major.) Make sure you look at the descriptions of all the classes required for the major before you sign yourself up for something!&lt;/p&gt;\n\n&lt;p&gt;EDIT: It seems courses 205 and 206 -- Introduction to Discrete Structures I and II -- are logic courses at Rutgers. (Mostly 205; 206 is more into set theory it seems.) And these are requirements for both the BS and BA degrees.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.cs.rutgers.edu/undergraduate/courses/205/\"&gt;http://www.cs.rutgers.edu/undergraduate/courses/205/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.cs.rutgers.edu/undergraduate/courses/206/\"&gt;http://www.cs.rutgers.edu/undergraduate/courses/206/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Conclusion: You are already required to take a logic class. You can either try to take 205 early, or just chill out until you get there.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ii1pm", "flair_text": null, "created": 1355844167.0, "created_utc": 1355840567.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "Xethos", "id": "c7ii7b7", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "Do they not teach logic anymore in Middle/High school?  I made a ~p than q  reference and my lil bro had no idea what I was talking about.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Do they not teach logic anymore in Middle/High school?  I made a ~p than q  reference and my lil bro had no idea what I was talking about.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ii7b7", "flair_text": null, "created": 1355844988.0, "created_utc": 1355841388.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "henboffman", "id": "c7ii87i", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "Definitely take it. I took it because I wanted to, not because of requirements, and to date it is the most useful class I've taken. It was split into two parts, but ymmv. The fallacies part of the class was cool, but not very applicable to programming", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Definitely take it. I took it because I wanted to, not because of requirements, and to date it is the most useful class I&amp;#39;ve taken. It was split into two parts, but ymmv. The fallacies part of the class was cool, but not very applicable to programming&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ii87i", "flair_text": null, "created": 1355845113.0, "created_utc": 1355841513.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "9us", "id": "c7iiafe", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "I took one in the Philosophy department, long before I ever took Comp Sci classes.  I found it enormously useful once I started learning Computer Science.\n\nIf you take one, make sure it is formal logic (symbolic logic) and not a class on \"thinking logically\".  The latter would hardly help at all in Comp Sci.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I took one in the Philosophy department, long before I ever took Comp Sci classes.  I found it enormously useful once I started learning Computer Science.&lt;/p&gt;\n\n&lt;p&gt;If you take one, make sure it is formal logic (symbolic logic) and not a class on &amp;quot;thinking logically&amp;quot;.  The latter would hardly help at all in Comp Sci.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7iiafe", "flair_text": null, "created": 1355845425.0, "created_utc": 1355841825.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "itchyouch", "id": "c7iidsw", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "If you want to be a better programmer, then become obsessive about programming and write as much code as you can.  But don't just write code, because anyone can write jibberish all day long.  Get your code critiqued and if you can't do that, look towards the great coders and read their code.  Learn to obsess over the details of what makes good code work and bad code not.  Learn that there is truth everywhere, even in the bad and that there are things to learn everywhere.\n\nFocus on the fundamentals.  Learn to write the code from memory and not via a great copy paste library.  Do this in every waking moment and you will one day find yourself sharper and stronger than you ever imagined.\n\nEnough of the high-level abstractions.  As far as intro to logic is concerned, it's one aspect of coding.  The experience of constant practice and battle testing your code will open your eyes over time to see patterns and their gotchas without much thought.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you want to be a better programmer, then become obsessive about programming and write as much code as you can.  But don&amp;#39;t just write code, because anyone can write jibberish all day long.  Get your code critiqued and if you can&amp;#39;t do that, look towards the great coders and read their code.  Learn to obsess over the details of what makes good code work and bad code not.  Learn that there is truth everywhere, even in the bad and that there are things to learn everywhere.&lt;/p&gt;\n\n&lt;p&gt;Focus on the fundamentals.  Learn to write the code from memory and not via a great copy paste library.  Do this in every waking moment and you will one day find yourself sharper and stronger than you ever imagined.&lt;/p&gt;\n\n&lt;p&gt;Enough of the high-level abstractions.  As far as intro to logic is concerned, it&amp;#39;s one aspect of coding.  The experience of constant practice and battle testing your code will open your eyes over time to see patterns and their gotchas without much thought.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7iidsw", "flair_text": null, "created": 1355845896.0, "created_utc": 1355842296.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "galipan", "id": "c7iie4a", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "Absolutely. It's the foundation for a lot of problem solving skills you'll need in CS", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Absolutely. It&amp;#39;s the foundation for a lot of problem solving skills you&amp;#39;ll need in CS&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7iie4a", "flair_text": null, "created": 1355845939.0, "created_utc": 1355842339.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_151idd", "children": [], "author": "wickedfapper", "id": "c7iijz0", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "Was it honestly necessary to ask if it is worth it? If it is offered, it is worth it. Every class is \"worth it\". Its logic, of course it is worth it. It should be necessary IMO.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Was it honestly necessary to ask if it is worth it? If it is offered, it is worth it. Every class is &amp;quot;worth it&amp;quot;. Its logic, of course it is worth it. It should be necessary IMO.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7iijz0", "flair_text": null, "created": 1355846730.0, "created_utc": 1355843130.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "IrishPrime", "id": "c7ij1qc", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "If you think this course is hard, you absolutely need to take it and put in the effort to fully understand it.\n\nI took an Into to Logic course relatively early on in my CS undergraduate career and I thought it was the easiest class I'd ever had thanks to my math and programming background. If formal logic is not a strong suit of yours, you should make it one. This class seems like a good opportunity to do so.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you think this course is hard, you absolutely need to take it and put in the effort to fully understand it.&lt;/p&gt;\n\n&lt;p&gt;I took an Into to Logic course relatively early on in my CS undergraduate career and I thought it was the easiest class I&amp;#39;d ever had thanks to my math and programming background. If formal logic is not a strong suit of yours, you should make it one. This class seems like a good opportunity to do so.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ij1qc", "flair_text": null, "created": 1355848977.0, "created_utc": 1355845377.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "xandel434", "id": "c7ij7lw", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "I will be going to Rutgers in January. I took Logic in my 3rd semester and It's done wonders for my programming. Either way you'll take discreet mathematics.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I will be going to Rutgers in January. I took Logic in my 3rd semester and It&amp;#39;s done wonders for my programming. Either way you&amp;#39;ll take discreet mathematics.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ij7lw", "flair_text": null, "created": 1355849683.0, "created_utc": 1355846083.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "IrregardingGrammar", "id": "c7ij8bu", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "If you're taking CS then logic is probably mandatory under a discrete mathematics or a discrete structures course.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you&amp;#39;re taking CS then logic is probably mandatory under a discrete mathematics or a discrete structures course.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ij8bu", "flair_text": null, "created": 1355849762.0, "created_utc": 1355846162.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "dMurdZ", "id": "c7ik302", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 2, "body": "Prior to being a CS major I was a philosophy major and had taken Intro to Logic. Boolean logic was introduced both in my Discrete Math class and my Computer Architecture class. I definitely felt like I had an advantage over my classmates that had never seen the material before. That being said, I wouldn't say it's difficult enough material to warrant taking a whole course to prepare yourself. Granted if you have the time, need the credits, or are just generally interested, go for it, but it's definitely not necessary.\n\nIntro to logic is not THAT hard, it just takes a lot of practice. The proofs they'll have you do in logic go far beyond the scope of logic you'll need for Computer Architecture and Discrete", "edited": 1356452200.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Prior to being a CS major I was a philosophy major and had taken Intro to Logic. Boolean logic was introduced both in my Discrete Math class and my Computer Architecture class. I definitely felt like I had an advantage over my classmates that had never seen the material before. That being said, I wouldn&amp;#39;t say it&amp;#39;s difficult enough material to warrant taking a whole course to prepare yourself. Granted if you have the time, need the credits, or are just generally interested, go for it, but it&amp;#39;s definitely not necessary.&lt;/p&gt;\n\n&lt;p&gt;Intro to logic is not THAT hard, it just takes a lot of practice. The proofs they&amp;#39;ll have you do in logic go far beyond the scope of logic you&amp;#39;ll need for Computer Architecture and Discrete&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ik302", "flair_text": null, "created": 1355853027.0, "created_utc": 1355849427.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "smithandjohnson", "id": "c7ilef4", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "&gt; The only thing is, the class is HARD.\n\nHow do you know this?\n\nAnd, as others have mentioned, that's all the more reason why you need to take it.\n\nCollege is the big leagues, friend.  The point is not the breeze through it.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;The only thing is, the class is HARD.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;How do you know this?&lt;/p&gt;\n\n&lt;p&gt;And, as others have mentioned, that&amp;#39;s all the more reason why you need to take it.&lt;/p&gt;\n\n&lt;p&gt;College is the big leagues, friend.  The point is not the breeze through it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ilef4", "flair_text": null, "created": 1355857477.0, "created_utc": 1355853877.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "tactile_neck", "id": "c7ilufz", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "It definitely has the potential to make you a smarter programmer. We covered logic in discrete math classes in the CS curriculum, but I didn't really have a deep understanding of it until I took an upper division class in mathematical reasoning class as an elective. It covered logic and proof writing in much more depth and turned out to be one of my favorite classes.\n\nThe key word here, however, is that it will make you a *smarter* programmer. It will probably help in your computational theory or algorithms classes, but that doesn't necessarily mean it will make you better at slinging code for a startup. Your time might be more effectively spent taking a course in software engineering, object oriented design, or in something more specific to what the startup will be doing (web programming, android programming, etc.).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It definitely has the potential to make you a smarter programmer. We covered logic in discrete math classes in the CS curriculum, but I didn&amp;#39;t really have a deep understanding of it until I took an upper division class in mathematical reasoning class as an elective. It covered logic and proof writing in much more depth and turned out to be one of my favorite classes.&lt;/p&gt;\n\n&lt;p&gt;The key word here, however, is that it will make you a &lt;em&gt;smarter&lt;/em&gt; programmer. It will probably help in your computational theory or algorithms classes, but that doesn&amp;#39;t necessarily mean it will make you better at slinging code for a startup. Your time might be more effectively spent taking a course in software engineering, object oriented design, or in something more specific to what the startup will be doing (web programming, android programming, etc.).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ilufz", "flair_text": null, "created": 1355858917.0, "created_utc": 1355855317.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "Shell3Helgak", "id": "c7imoa8", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "No idea if you mean the Logic I had to take for my degree or not.\n\nFor me, half of Phil-Logic was covered in Discrete Math (truth tables and the like) and the other half was learning about logical fallacies people use in arguments. I enjoyed both, and while the latter isn't really useful from a pure code sense, recognizing argument fallacies are a good life skill.\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No idea if you mean the Logic I had to take for my degree or not.&lt;/p&gt;\n\n&lt;p&gt;For me, half of Phil-Logic was covered in Discrete Math (truth tables and the like) and the other half was learning about logical fallacies people use in arguments. I enjoyed both, and while the latter isn&amp;#39;t really useful from a pure code sense, recognizing argument fallacies are a good life skill.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7imoa8", "flair_text": null, "created": 1355861527.0, "created_utc": 1355857927.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "cratylus", "id": "c7in683", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "Do it.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Do it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7in683", "flair_text": null, "created": 1355863071.0, "created_utc": 1355859471.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "GaProgMan", "id": "c7io3bu", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 2, "body": "Brit here: When I studied my CS degree, I sailed through the logic class (having done Electronic Engineering at college) and that those who didn't have a mathematical background struggled with both it and the programming classes.\n\nI do feel as though it will help with structured programming, as opposed to 'hacking' away. Also, I've always found that a background in logic helps to break a problem space down into steps and individual algorithms.\n\ntl;dr - why not? If anything, it might make problem solving easier.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Brit here: When I studied my CS degree, I sailed through the logic class (having done Electronic Engineering at college) and that those who didn&amp;#39;t have a mathematical background struggled with both it and the programming classes.&lt;/p&gt;\n\n&lt;p&gt;I do feel as though it will help with structured programming, as opposed to &amp;#39;hacking&amp;#39; away. Also, I&amp;#39;ve always found that a background in logic helps to break a problem space down into steps and individual algorithms.&lt;/p&gt;\n\n&lt;p&gt;tl;dr - why not? If anything, it might make problem solving easier.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7io3bu", "flair_text": null, "created": 1355865947.0, "created_utc": 1355862347.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "TheSwitchBlade", "id": "c7io9oq", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "This is certainly something you can begin learning about on your own. You will never take a single science or math course that does not depend entirely on logic, so you have already been introduced to it.\n\nEveryone should know logic backward and forward. However, for software engineering in particular, the most important thing you need to know is [Boolean Algebra](http://en.wikipedia.org/wiki/Boolean_algebra_(logic\\)).", "edited": 1358787094.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is certainly something you can begin learning about on your own. You will never take a single science or math course that does not depend entirely on logic, so you have already been introduced to it.&lt;/p&gt;\n\n&lt;p&gt;Everyone should know logic backward and forward. However, for software engineering in particular, the most important thing you need to know is &lt;a href=\"http://en.wikipedia.org/wiki/Boolean_algebra_(logic)\"&gt;Boolean Algebra&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7io9oq", "flair_text": null, "created": 1355866491.0, "created_utc": 1355862891.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "mhweaver", "id": "c7iotrv", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "I think it's worth it, not because it directly helps programming skills, but because it provides a good framework for understanding the connections between different fields (notably math, CS, philosophy, and language), which making learning/understanding stuff easier and indirectly helps with programming. Following that up with a digital logic class is even better (and often required). Logic classes also helped me get a much stronger grasp on functional equivalence, which has helped me a lot (I understood pretty well before, but applying the concept to formal logic has really helped hammer in a much more intuitive understanding).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think it&amp;#39;s worth it, not because it directly helps programming skills, but because it provides a good framework for understanding the connections between different fields (notably math, CS, philosophy, and language), which making learning/understanding stuff easier and indirectly helps with programming. Following that up with a digital logic class is even better (and often required). Logic classes also helped me get a much stronger grasp on functional equivalence, which has helped me a lot (I understood pretty well before, but applying the concept to formal logic has really helped hammer in a much more intuitive understanding).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7iotrv", "flair_text": null, "created": 1355868290.0, "created_utc": 1355864690.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "oxslashxo", "id": "c7iqayb", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 2, "body": "If a course is hard and it's relevant, then it's best you take it. It may be difficult, but you're guaranteed to learn more. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If a course is hard and it&amp;#39;s relevant, then it&amp;#39;s best you take it. It may be difficult, but you&amp;#39;re guaranteed to learn more. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7iqayb", "flair_text": null, "created": 1355873412.0, "created_utc": 1355869812.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "[deleted]", "id": "c7irhny", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "Although I have not learned any programming languages yet, I am taking a six credit (two semester) Critical Thinking and Logic course at my university now . It's part of my Philosophy minor.\n\nIt is essentially the basis of all computer programming. It's why calculus was invented and it's why early philosophers and scientists invented computation devices. \n\nI am actually considering staying at my University an extra year now to take a minor in computer science because of this course.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Although I have not learned any programming languages yet, I am taking a six credit (two semester) Critical Thinking and Logic course at my university now . It&amp;#39;s part of my Philosophy minor.&lt;/p&gt;\n\n&lt;p&gt;It is essentially the basis of all computer programming. It&amp;#39;s why calculus was invented and it&amp;#39;s why early philosophers and scientists invented computation devices. &lt;/p&gt;\n\n&lt;p&gt;I am actually considering staying at my University an extra year now to take a minor in computer science because of this course.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7irhny", "flair_text": null, "created": 1355877428.0, "created_utc": 1355873828.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "deadowl", "id": "c7isoh6", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "I was going to say absolutely, but the yes or no Spire beat me.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I was going to say absolutely, but the yes or no Spire beat me.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7isoh6", "flair_text": null, "created": 1355881802.0, "created_utc": 1355878202.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "assassin4359", "id": "c7itjxd", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "protip go into cs50x its a programming intro course which is free", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;protip go into cs50x its a programming intro course which is free&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7itjxd", "flair_text": null, "created": 1355885087.0, "created_utc": 1355881487.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "fuzzynyanko", "id": "c7iuowk", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "The concepts I needed were wrapped into another class. It'll help you with if statements, but that's not where most of the harder work go.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The concepts I needed were wrapped into another class. It&amp;#39;ll help you with if statements, but that&amp;#39;s not where most of the harder work go.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7iuowk", "flair_text": null, "created": 1355889275.0, "created_utc": 1355885675.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "Mylifetogive", "id": "c7ixak3", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "It will help BUT you honestly won't necessarily NEED it to be a good programmer. I know programmers who don't know jack shit about logic gates or much math for that matter.\n\nI've found that by taking Discreet math it's helped me understand programming on a deeper level.\n\nMath is important for CS degrees though, calculating run times for programs is a big part of what we do. Efficiency my friend.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It will help BUT you honestly won&amp;#39;t necessarily NEED it to be a good programmer. I know programmers who don&amp;#39;t know jack shit about logic gates or much math for that matter.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve found that by taking Discreet math it&amp;#39;s helped me understand programming on a deeper level.&lt;/p&gt;\n\n&lt;p&gt;Math is important for CS degrees though, calculating run times for programs is a big part of what we do. Efficiency my friend.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ixak3", "flair_text": null, "created": 1355899228.0, "created_utc": 1355895628.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_151idd", "children": [], "author": "svsvsvs", "id": "c7j69mj", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 1, "body": "No. if you don't yet know everything taught in that course, you should stick with thee humanities", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No. if you don&amp;#39;t yet know everything taught in that course, you should stick with thee humanities&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7j69mj", "flair_text": null, "created": 1355947224.0, "created_utc": 1355943624.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_151idd", "children": [], "author": "investingnews", "id": "c7iev3t", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 3, "body": "Logic for me was basically learning a new programming language in a different syntax. [An example](http://www.math.duke.edu/~wka/math187/ex.pdf)\n\nIt's more for debate type stuff and arguing in verbal form with people, and I really don't think it will help much with understanding computer science stuff. To understand computer science stuff I think you should spend that free time trying to implement concepts in the real world. Read through code, run it in a debugger, and step through it trying to visualize the concepts. Logic is a great class, and will give you an extra edge, but I see it only worth while if you grasp the basics really good, which seems to be what you're having trouble with.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Logic for me was basically learning a new programming language in a different syntax. &lt;a href=\"http://www.math.duke.edu/%7Ewka/math187/ex.pdf\"&gt;An example&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s more for debate type stuff and arguing in verbal form with people, and I really don&amp;#39;t think it will help much with understanding computer science stuff. To understand computer science stuff I think you should spend that free time trying to implement concepts in the real world. Read through code, run it in a debugger, and step through it trying to visualize the concepts. Logic is a great class, and will give you an extra edge, but I see it only worth while if you grasp the basics really good, which seems to be what you&amp;#39;re having trouble with.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7iev3t", "flair_text": null, "created": 1355819102.0, "created_utc": 1355815502.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_151idd", "children": [], "author": "TKAAZ", "id": "c7ii949", "parent_id": "t3_151idd", "score": 0, "approved_by": null, "upvotes": 2, "body": "I doubt it will make you much of a better programmer, but you will be able to formally reason about (and understand) a lot of the concepts that form the basis of a lot of principles that pertain to programming (and about your program semantics). Personally, taking a logic course really wired my brain for reasoning in mathematics. So in some sense, yes.", "edited": 1355842419.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I doubt it will make you much of a better programmer, but you will be able to formally reason about (and understand) a lot of the concepts that form the basis of a lot of principles that pertain to programming (and about your program semantics). Personally, taking a logic course really wired my brain for reasoning in mathematics. So in some sense, yes.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ii949", "flair_text": null, "created": 1355845240.0, "created_utc": 1355841640.0, "num_reports": null}], "score": 54, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 77, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/151idd/would_taking_an_intro_to_logic_course_help_me/", "has_more_comments": false, "name": "t3_151idd", "created": 1355814358.0, "url": "http://www.reddit.com/r/compsci/comments/151idd/would_taking_an_intro_to_logic_course_help_me/", "author_flair_text": null, "author": "pavle3k", "created_utc": 1355814358.0, "link_flair_text": null, "media": null, "num_reports": null}, "169": {"domain": "jkff.info", "link_flair_class": null, "banned_by": null, "downvotes": 4, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "1527la", "clicked": false, "title": "Incremental regular expressions [article and library, xpost /r/programming]", "num_comments": 0, "comments": [], "score": 3, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 7, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/1527la/incremental_regular_expressions_article_and/", "has_more_comments": false, "name": "t3_1527la", "created": 1355853385.0, "url": "http://jkff.info/articles/ire", "author_flair_text": null, "author": "jkff", "created_utc": 1355853385.0, "link_flair_text": null, "media": null, "num_reports": null}, "170": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 27, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I definitely want to make career out of something computer science related. I don&amp;#39;t know a lot about quantum computing , so i my question is, how fundamentally different are they from traditional binary computers? and when they become widely used or if they replace the old, will I have to relearn everything i know about how computers work?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I definitely want to make career out of something computer science related. I don't know a lot about quantum computing , so i my question is, how fundamentally different are they from traditional binary computers? and when they become widely used or if they replace the old, will I have to relearn everything i know about how computers work?", "saved": false, "id": "14z04r", "clicked": false, "title": "Question about quantum computers?", "num_comments": 44, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 9, "link_id": "t3_14z04r", "children": [], "author": "UncleMeat", "id": "c7hqoi9", "parent_id": "t3_14z04r", "score": 0, "approved_by": null, "upvotes": 94, "body": "Quantum computers are fundamentally different than classical computers in some ways but not in others.\n\nThe set of computable functions is the same for both classical computers. We know this because we can fully simulate a quantum computer on a classical computer and vice versa. In some sense, this means that quantum computers are not \"more powerful\" than classical computers because there is literally nothing that a quantum computer could do that a classical computer could not do if given enough time.\n\nHowever, there are problems that quantum computers can solve fundamentally faster than classical computers. The best example of this is unsorted list search. In this problem you are given an unsorted list and must determine if some item is in the list. On a classical machine you must read every element in the list in the worst case (if the item is not there). This algorithm (read everything in the list) grows linearly with the size of the list. If you double the size of the list, the algorithm takes twice as long to complete (simplification, but don't worry). A quantum algorithm for this problem, called [Grover's Algorithm](http://en.wikipedia.org/wiki/Grover's_algorithm) solves this problem in N^(1/2) time. This means that if you increase the size of the list by a factor of X, the algorithm takes X^(1/2) times as long to complete. This is *fundamentally* faster than a classical computer. There is provably no classical algorithm that could solve this particular problem in N^(1/2) time. \n\nWhat is really interesting is that we don't actually know how much faster quantum machines are than classical machines. We know they offer at least a polynomial speedup but what we *really* want is an exponential speedup. If we had that then all of a sudden a huge number of relevant problems become feasible to solve. Currently, the fastest known classical algorithm for factoring integers takes exponential time to complete but we have a polynomial quantum algorithm for integer factorization (Shor's Algorithm). If we could prove that classical integer factorization *must* take exponential time then we would be able to say that quantum machines can give an exponential speedup. Unfortunately, this proof is at least as hard as P!=NP (since it would imply P!=NP). \n\nIt is not widely believed that quantum computers will completely replace classical computers. They are extremely difficult to program and wouldn't provide much benefit to the kinds of things people do on their PCs. That said, it is very hard to predict the future of computation. Nobody thought that computers would be used for anything other than massive calculations in the 50s, for example. \n\nEven if quantum computers completely replaced classical computers, the lessons learned in CS are not going anywhere. Things will be different, but the field wont be replaced with something completely new. Cryptography changes dramatically, for example, but most the principles would survive the transition. A field like software verification doesn't change must unless we find some fast quantum SAT solver or something. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Quantum computers are fundamentally different than classical computers in some ways but not in others.&lt;/p&gt;\n\n&lt;p&gt;The set of computable functions is the same for both classical computers. We know this because we can fully simulate a quantum computer on a classical computer and vice versa. In some sense, this means that quantum computers are not &amp;quot;more powerful&amp;quot; than classical computers because there is literally nothing that a quantum computer could do that a classical computer could not do if given enough time.&lt;/p&gt;\n\n&lt;p&gt;However, there are problems that quantum computers can solve fundamentally faster than classical computers. The best example of this is unsorted list search. In this problem you are given an unsorted list and must determine if some item is in the list. On a classical machine you must read every element in the list in the worst case (if the item is not there). This algorithm (read everything in the list) grows linearly with the size of the list. If you double the size of the list, the algorithm takes twice as long to complete (simplification, but don&amp;#39;t worry). A quantum algorithm for this problem, called &lt;a href=\"http://en.wikipedia.org/wiki/Grover&amp;#x27;s_algorithm\"&gt;Grover&amp;#39;s Algorithm&lt;/a&gt; solves this problem in N&lt;sup&gt;1/2&lt;/sup&gt; time. This means that if you increase the size of the list by a factor of X, the algorithm takes X&lt;sup&gt;1/2&lt;/sup&gt; times as long to complete. This is &lt;em&gt;fundamentally&lt;/em&gt; faster than a classical computer. There is provably no classical algorithm that could solve this particular problem in N&lt;sup&gt;1/2&lt;/sup&gt; time. &lt;/p&gt;\n\n&lt;p&gt;What is really interesting is that we don&amp;#39;t actually know how much faster quantum machines are than classical machines. We know they offer at least a polynomial speedup but what we &lt;em&gt;really&lt;/em&gt; want is an exponential speedup. If we had that then all of a sudden a huge number of relevant problems become feasible to solve. Currently, the fastest known classical algorithm for factoring integers takes exponential time to complete but we have a polynomial quantum algorithm for integer factorization (Shor&amp;#39;s Algorithm). If we could prove that classical integer factorization &lt;em&gt;must&lt;/em&gt; take exponential time then we would be able to say that quantum machines can give an exponential speedup. Unfortunately, this proof is at least as hard as P!=NP (since it would imply P!=NP). &lt;/p&gt;\n\n&lt;p&gt;It is not widely believed that quantum computers will completely replace classical computers. They are extremely difficult to program and wouldn&amp;#39;t provide much benefit to the kinds of things people do on their PCs. That said, it is very hard to predict the future of computation. Nobody thought that computers would be used for anything other than massive calculations in the 50s, for example. &lt;/p&gt;\n\n&lt;p&gt;Even if quantum computers completely replaced classical computers, the lessons learned in CS are not going anywhere. Things will be different, but the field wont be replaced with something completely new. Cryptography changes dramatically, for example, but most the principles would survive the transition. A field like software verification doesn&amp;#39;t change must unless we find some fast quantum SAT solver or something. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7hqoi9", "flair_text": null, "created": 1355716386.0, "created_utc": 1355712786.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14z04r", "children": [], "author": "AquaFox", "id": "c7hs2oz", "parent_id": "t3_14z04r", "score": 0, "approved_by": null, "upvotes": 14, "body": "Okay. Since a lot of people explain what Quantum Computing is here but mentioned nothing about it as a career, here's my insight. As a computer science major, a career with Quantum Computers is null, I really don't think it exists. Quantum Computers are still in the early stages (as in there's one somewhere in Yale). In order to get a career in Quantum Computing, a CS degree is nice, but what you really need is a PhD in Physics. This is a field for physicists because we're still discovering a lot about the quantum world and it really hasn't spawned its own field yet (like quantum computer science). I guess if Quantum Computers were mass produced then there would be a CS degree for QM computers. But I don't think that will be for at least 10 years (I might be understating).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Okay. Since a lot of people explain what Quantum Computing is here but mentioned nothing about it as a career, here&amp;#39;s my insight. As a computer science major, a career with Quantum Computers is null, I really don&amp;#39;t think it exists. Quantum Computers are still in the early stages (as in there&amp;#39;s one somewhere in Yale). In order to get a career in Quantum Computing, a CS degree is nice, but what you really need is a PhD in Physics. This is a field for physicists because we&amp;#39;re still discovering a lot about the quantum world and it really hasn&amp;#39;t spawned its own field yet (like quantum computer science). I guess if Quantum Computers were mass produced then there would be a CS degree for QM computers. But I don&amp;#39;t think that will be for at least 10 years (I might be understating).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7hs2oz", "flair_text": null, "created": 1355720868.0, "created_utc": 1355717268.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_14z04r", "children": [], "author": "hiimgameboy", "id": "c7hrdhr", "parent_id": "t3_14z04r", "score": 0, "approved_by": null, "upvotes": 6, "body": "in some sense they're as fundamentally different as possible. \nhere's the main difference:\nin classical computing, your data is discrete bits and your operations are any boolean functions (AND, OR, etc.)\nin quantum computing, your data is 2 dimensional complex unit vectors (qubits!) and your operations are any unitary matrix, plus projection operators. \n\nnaturally, having a more elaborate set of operations leads to certain problems being solvable much faster!\n\nEDIT:\nto address \"will i have to relearn everything?\" - i expect that the first impact QC will have on the average user is a \"quantum chip\" of sorts that we can take advantage of to do certain operations faster. sort of like having separate hardware for floating point operations. as such there would probably be primitives provided for interacting with the QC, such that you would never have to really worry about the underlying implementation. (abstraction is how we do things, after all). \n\nif you wanted to actually code something on it though, then yes, you'd have to relearn everything. as mentioned, you're manipulating a fundamentally different type of data. a quantum algorithm is really a different type of thing. ", "edited": 1355719131.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;in some sense they&amp;#39;re as fundamentally different as possible. \nhere&amp;#39;s the main difference:\nin classical computing, your data is discrete bits and your operations are any boolean functions (AND, OR, etc.)\nin quantum computing, your data is 2 dimensional complex unit vectors (qubits!) and your operations are any unitary matrix, plus projection operators. &lt;/p&gt;\n\n&lt;p&gt;naturally, having a more elaborate set of operations leads to certain problems being solvable much faster!&lt;/p&gt;\n\n&lt;p&gt;EDIT:\nto address &amp;quot;will i have to relearn everything?&amp;quot; - i expect that the first impact QC will have on the average user is a &amp;quot;quantum chip&amp;quot; of sorts that we can take advantage of to do certain operations faster. sort of like having separate hardware for floating point operations. as such there would probably be primitives provided for interacting with the QC, such that you would never have to really worry about the underlying implementation. (abstraction is how we do things, after all). &lt;/p&gt;\n\n&lt;p&gt;if you wanted to actually code something on it though, then yes, you&amp;#39;d have to relearn everything. as mentioned, you&amp;#39;re manipulating a fundamentally different type of data. a quantum algorithm is really a different type of thing. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7hrdhr", "flair_text": null, "created": 1355718660.0, "created_utc": 1355715060.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14z04r", "children": [], "author": "BrainInAJar", "id": "c7hsxir", "parent_id": "t3_14z04r", "score": 0, "approved_by": null, "upvotes": 4, "body": "&gt; and when they become widely used or if they replace the old\n\nThis seems unlikely. The set of problems in BQP that are not in P are vanishingly small &amp; have few practical applications. If you're interested in comput*ability* and want to explore it that's great, but if you want to be a practitioner ( ie, computer programmer ) you can safely ignore quantum computation for the forseeable future.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;and when they become widely used or if they replace the old&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This seems unlikely. The set of problems in BQP that are not in P are vanishingly small &amp;amp; have few practical applications. If you&amp;#39;re interested in comput&lt;em&gt;ability&lt;/em&gt; and want to explore it that&amp;#39;s great, but if you want to be a practitioner ( ie, computer programmer ) you can safely ignore quantum computation for the forseeable future.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7hsxir", "flair_text": null, "created": 1355723699.0, "created_utc": 1355720099.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14z04r", "children": [], "author": "grumbel", "id": "c7hue53", "parent_id": "t3_14z04r", "score": 0, "approved_by": null, "upvotes": 2, "body": "&gt; will I have to relearn everything i know about how computers work?\n\nNot all, but a lot. But that's no different then any other change in computing. You program massively parallel systems other then the old sequential ones, your graphic card has to be handled differently then your CPU, you can't program a neural networks the same as your daily GUI app and so on. Quantum computing is just a another tool in your toolbox and it will be great for some problems and useless for others.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;will I have to relearn everything i know about how computers work?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Not all, but a lot. But that&amp;#39;s no different then any other change in computing. You program massively parallel systems other then the old sequential ones, your graphic card has to be handled differently then your CPU, you can&amp;#39;t program a neural networks the same as your daily GUI app and so on. Quantum computing is just a another tool in your toolbox and it will be great for some problems and useless for others.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7hue53", "flair_text": null, "created": 1355729611.0, "created_utc": 1355726011.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14z04r", "children": [], "author": "Firetaffer", "id": "c7hw5lv", "parent_id": "t3_14z04r", "score": 0, "approved_by": null, "upvotes": 1, "body": "This will sound like a silly questions but have quantum computers actually done anything yet? Or is this all theoretical?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This will sound like a silly questions but have quantum computers actually done anything yet? Or is this all theoretical?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7hw5lv", "flair_text": null, "created": 1355741051.0, "created_utc": 1355737451.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 16, "link_id": "t3_14z04r", "children": [], "author": "[deleted]", "id": "c7hqobx", "parent_id": "t3_14z04r", "score": 0, "approved_by": null, "upvotes": 7, "body": "[deleted]", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7hqobx", "flair_text": null, "created": 1355716371.0, "created_utc": 1355712771.0, "num_reports": null}], "score": 39, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 66, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/14z04r/question_about_quantum_computers/", "has_more_comments": false, "name": "t3_14z04r", "created": 1355711522.0, "url": "http://www.reddit.com/r/compsci/comments/14z04r/question_about_quantum_computers/", "author_flair_text": null, "author": "maximo66", "created_utc": 1355711522.0, "link_flair_text": null, "media": null, "num_reports": null}, "171": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 9, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello everyone, I&amp;#39;m a loooong time lurker and I&amp;#39;m happy to say my first post is to compsci! &lt;/p&gt;\n\n&lt;p&gt;Anyway, I&amp;#39;m entering into my junior year if my C.S. track and have was given the opportunity to take graduate class which is basically an introduction to Artificial Intelligence. Additionally, the professor asked me if there is anything I would like to research on the side related to AI and he would give me one-on-one advice as I take on my first research project. &lt;/p&gt;\n\n&lt;p&gt;Needless to say I was pretty excited and I&amp;#39;ve started taking Udacity&amp;#39;s newly reopened AI class as a preparatory step.&lt;/p&gt;\n\n&lt;p&gt;Now, prior to starting to school I spent several years in the military as a network/satellite engineer and as a result have strong background in networking theory and security protocols. I enjoy math, recognizing patterns, and designing things.&lt;/p&gt;\n\n&lt;p&gt;Alas, I&amp;#39;m not really sure what to research. From everything I&amp;#39;ve read on here, the biggest thing I&amp;#39;ve come to understand is &lt;em&gt;don&amp;#39;t study something you won&amp;#39;t be interested in for a long time&lt;/em&gt;.  &lt;/p&gt;\n\n&lt;p&gt;Keeping in mind that my project must relate to AI do you all have any ideas to help jump start my brain? The sooner I can get a solid idea, the sooner I can get started working!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hello everyone, I'm a loooong time lurker and I'm happy to say my first post is to compsci! \n\nAnyway, I'm entering into my junior year if my C.S. track and have was given the opportunity to take graduate class which is basically an introduction to Artificial Intelligence. Additionally, the professor asked me if there is anything I would like to research on the side related to AI and he would give me one-on-one advice as I take on my first research project. \n\nNeedless to say I was pretty excited and I've started taking Udacity's newly reopened AI class as a preparatory step.\n\nNow, prior to starting to school I spent several years in the military as a network/satellite engineer and as a result have strong background in networking theory and security protocols. I enjoy math, recognizing patterns, and designing things.\n\nAlas, I'm not really sure what to research. From everything I've read on here, the biggest thing I've come to understand is _don't study something you won't be interested in for a long time_.  \n\nKeeping in mind that my project must relate to AI do you all have any ideas to help jump start my brain? The sooner I can get a solid idea, the sooner I can get started working!", "saved": false, "id": "14y02f", "clicked": false, "title": "My first research opportunity; lend me your insights o great ones!", "num_comments": 11, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14y02f", "children": [], "author": "el9335", "id": "c7hhcxi", "parent_id": "t3_14y02f", "score": 0, "approved_by": null, "upvotes": 6, "body": "Hello!  \n\nI think that one of the most exciting parts of research is looking for the problem that you will address.  I can advise looking for open problems in Artificial Intelligence to get a general idea of the research area, and then maybe look for articles, papers, etc to narrow it down to a fun or useful project.  Have you looked into AI with computer vision or robotics?\n\nI don't know your level of experience, work ethic, or available time during the semester.  I think that it will be useful to come up with ideas\nof varying difficulty and intensity and then presenting them all to your professor.  He will have a good idea of what can be accomplished in the amount of time that you have available.\n\nIt's great that you are taking advantage of the opportunity, good luck!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hello!  &lt;/p&gt;\n\n&lt;p&gt;I think that one of the most exciting parts of research is looking for the problem that you will address.  I can advise looking for open problems in Artificial Intelligence to get a general idea of the research area, and then maybe look for articles, papers, etc to narrow it down to a fun or useful project.  Have you looked into AI with computer vision or robotics?&lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t know your level of experience, work ethic, or available time during the semester.  I think that it will be useful to come up with ideas\nof varying difficulty and intensity and then presenting them all to your professor.  He will have a good idea of what can be accomplished in the amount of time that you have available.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s great that you are taking advantage of the opportunity, good luck!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7hhcxi", "flair_text": null, "created": 1355682956.0, "created_utc": 1355679356.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14y02f", "children": [], "author": "jeffus", "id": "c7hlkdk", "parent_id": "t3_14y02f", "score": 0, "approved_by": null, "upvotes": 3, "body": "If you're interested in predicting/recognizing something about the structure of science itself--citation patterns, for instance--message me. I have a project that you could easily carve out a piece of if those sorts of things interest you. The project is open source, and whatever you write can be an open source library/module that fits into it, so we can maximize the value on your CV/resume in a variety of ways.", "edited": 1355713289.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you&amp;#39;re interested in predicting/recognizing something about the structure of science itself--citation patterns, for instance--message me. I have a project that you could easily carve out a piece of if those sorts of things interest you. The project is open source, and whatever you write can be an open source library/module that fits into it, so we can maximize the value on your CV/resume in a variety of ways.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7hlkdk", "flair_text": null, "created": 1355698188.0, "created_utc": 1355694588.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14y02f", "children": [], "author": "kacxdak", "id": "c7hlgc1", "parent_id": "t3_14y02f", "score": 0, "approved_by": null, "upvotes": 2, "body": "I've partaken in a few undergraduate research positions in compsci as well (I'm in my 3rd lab) and it's a great opportunity, especially since your professor seems so willing to provide guidance! Just some general tips on research, it can get super exciting at times but also super boring. Just be cautious not to let your grades drop! \n\nAs far as AI goes, perhaps you may want to look into Sutton's book, Reinforcement Learning. It was really helpful for getting me interesting and breaking down a lot of the stuff for me, but I was self taught so you may not need it since you took classes. \n\nFor coming up with a project, I think the most important thing is picking a topic that is interesting to you. Perhaps you really enjoy video games and you want to work on studying how a bot's evolution could take place. If you enjoy card games, maybe you want to find optimal poker simulators. Then if you look into automated control, such as the works of Peter Stone. Other wise if you still cannot decide, then I would suggest looking up your professor and seeing what kind of papers he publishes and just picking a topic in that field!\n\nGood luck and Cheers!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve partaken in a few undergraduate research positions in compsci as well (I&amp;#39;m in my 3rd lab) and it&amp;#39;s a great opportunity, especially since your professor seems so willing to provide guidance! Just some general tips on research, it can get super exciting at times but also super boring. Just be cautious not to let your grades drop! &lt;/p&gt;\n\n&lt;p&gt;As far as AI goes, perhaps you may want to look into Sutton&amp;#39;s book, Reinforcement Learning. It was really helpful for getting me interesting and breaking down a lot of the stuff for me, but I was self taught so you may not need it since you took classes. &lt;/p&gt;\n\n&lt;p&gt;For coming up with a project, I think the most important thing is picking a topic that is interesting to you. Perhaps you really enjoy video games and you want to work on studying how a bot&amp;#39;s evolution could take place. If you enjoy card games, maybe you want to find optimal poker simulators. Then if you look into automated control, such as the works of Peter Stone. Other wise if you still cannot decide, then I would suggest looking up your professor and seeing what kind of papers he publishes and just picking a topic in that field!&lt;/p&gt;\n\n&lt;p&gt;Good luck and Cheers!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7hlgc1", "flair_text": null, "created": 1355697788.0, "created_utc": 1355694188.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14y02f", "children": [], "author": "jhinka", "id": "c7hlmma", "parent_id": "t3_14y02f", "score": 0, "approved_by": null, "upvotes": 2, "body": "Looking back, I feel that sometimes to invent/discover new things I should have learnt to do the textbook (albeit obscure ones) stuff as projects. For example, it would be super cool to implement a Hidden Markov Model from scratch. It would teach you a lot about Markov Random Fields. This will be a sizeable research project but you wouldn't revolutionize the world. Once you understand the workings well, you can easily apply it to a new problem set or work on theory to improve things. As others have pointed out, it boils down to what you and your advisor want to do I'd recommend taking a hard statistical model and implementing it.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Looking back, I feel that sometimes to invent/discover new things I should have learnt to do the textbook (albeit obscure ones) stuff as projects. For example, it would be super cool to implement a Hidden Markov Model from scratch. It would teach you a lot about Markov Random Fields. This will be a sizeable research project but you wouldn&amp;#39;t revolutionize the world. Once you understand the workings well, you can easily apply it to a new problem set or work on theory to improve things. As others have pointed out, it boils down to what you and your advisor want to do I&amp;#39;d recommend taking a hard statistical model and implementing it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7hlmma", "flair_text": null, "created": 1355698412.0, "created_utc": 1355694812.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14y02f", "children": [], "author": "flaran", "id": "c7hm3v2", "parent_id": "t3_14y02f", "score": 0, "approved_by": null, "upvotes": 2, "body": "One way of doing this is to talk to AI professors in your department and ask them what they're working on.  Many times they will have a research project in progress that could use some assistance.  This way you don't have to start out the project without being sure what has and hasn't been done because usually the professor has a lot of knowledge about the state-of-the-art.  Just one approach -- YMMV -- good luck!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;One way of doing this is to talk to AI professors in your department and ask them what they&amp;#39;re working on.  Many times they will have a research project in progress that could use some assistance.  This way you don&amp;#39;t have to start out the project without being sure what has and hasn&amp;#39;t been done because usually the professor has a lot of knowledge about the state-of-the-art.  Just one approach -- YMMV -- good luck!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7hm3v2", "flair_text": null, "created": 1355700082.0, "created_utc": 1355696482.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14y02f", "children": [], "author": "Derpscientist", "id": "c7hphao", "parent_id": "t3_14y02f", "score": 0, "approved_by": null, "upvotes": 1, "body": "Intrusion detection on networks by outlier detection on time-series graphical data?\n\nYou could cast the problem as a one-class structured SVM with a filter weighting newer samples according to some monotonic function and possibly smoothing. You could solve the margin with stochastic gradient descent then use that set of parameters as your starting point for n+1. Making the problem, hopefully, quickly converge. I'm not sure if that's a good idea, but it might be.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Intrusion detection on networks by outlier detection on time-series graphical data?&lt;/p&gt;\n\n&lt;p&gt;You could cast the problem as a one-class structured SVM with a filter weighting newer samples according to some monotonic function and possibly smoothing. You could solve the margin with stochastic gradient descent then use that set of parameters as your starting point for n+1. Making the problem, hopefully, quickly converge. I&amp;#39;m not sure if that&amp;#39;s a good idea, but it might be.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7hphao", "flair_text": null, "created": 1355712440.0, "created_utc": 1355708840.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14y02f", "children": [], "author": "hairycode", "id": "c7hyjn6", "parent_id": "t3_14y02f", "score": 0, "approved_by": null, "upvotes": 1, "body": "Wow, when I woke up this morning I didn't expect to see so many responses! Thank you all for you valuable inputs. I'll start going through some of these articles and place an order on Sutton's book. Again, thank you all for the encouragement and and advice. When I have something solid (or more specific questions) I'll throw up another post to let you all know!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wow, when I woke up this morning I didn&amp;#39;t expect to see so many responses! Thank you all for you valuable inputs. I&amp;#39;ll start going through some of these articles and place an order on Sutton&amp;#39;s book. Again, thank you all for the encouragement and and advice. When I have something solid (or more specific questions) I&amp;#39;ll throw up another post to let you all know!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7hyjn6", "flair_text": null, "created": 1355760326.0, "created_utc": 1355756726.0, "num_reports": null}], "score": 19, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 28, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/14y02f/my_first_research_opportunity_lend_me_your/", "has_more_comments": false, "name": "t3_14y02f", "created": 1355673398.0, "url": "http://www.reddit.com/r/compsci/comments/14y02f/my_first_research_opportunity_lend_me_your/", "author_flair_text": null, "author": "hairycode", "created_utc": 1355673398.0, "link_flair_text": null, "media": null, "num_reports": null}, "172": {"domain": "johndcook.com", "link_flair_class": null, "banned_by": null, "downvotes": 14, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "14xixv", "clicked": false, "title": "Sleeper theorems.", "num_comments": 2, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_14xixv", "children": [], "author": "PartyButton", "id": "c7hhpm9", "parent_id": "t3_14xixv", "score": 0, "approved_by": null, "upvotes": 4, "body": "pretty basic, but the intermediate and mean value theorems always seemed to be useful in more places than i expected them to be", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;pretty basic, but the intermediate and mean value theorems always seemed to be useful in more places than i expected them to be&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7hhpm9", "flair_text": null, "created": 1355684426.0, "created_utc": 1355680826.0, "num_reports": null}], "score": 56, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 70, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/14xixv/sleeper_theorems/", "has_more_comments": false, "name": "t3_14xixv", "created": 1355637293.0, "url": "http://www.johndcook.com/blog/2012/12/10/sleeper-theorems/", "author_flair_text": null, "author": "qkdhfjdjdhd", "created_utc": 1355637293.0, "link_flair_text": null, "media": null, "num_reports": null}, "173": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 15, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I graduated in May of this year and got a job in one of the big web companies a couple months later. I went in knowing almost nothing about web development and learned more than I ever imagined in that small time frame. &lt;/p&gt;\n\n&lt;p&gt;However, I think my interest is starting to wane. I blame my disinterest as being the cause for wanted change because everyone I work with is incredibly intelligent, the company is one of the best, and I&amp;#39;ve worked through several different projects on multiple platforms.&lt;/p&gt;\n\n&lt;p&gt;My favorite classes in college were the ones that involved a lot of math and theory. I would love to actually get to use and work with some of that stuff, but it seems like a graduate degree is required for most of these positions. I don&amp;#39;t mind the idea of returning to school, but I still don&amp;#39;t exactly know what I would want to research (machine learning, bioinformatics, and computational theory all sound good). &lt;/p&gt;\n\n&lt;p&gt;Another route that I thought might be cool is applying computer science to another field like programming for chemistry, biology, or physics research or something. This may require extra schooling as well, but I think it would be faster to get into and maybe even more interesting. I&amp;#39;ve been reading a lot of physics books lately, which has kind of sparked in an interest in that area.&lt;/p&gt;\n\n&lt;p&gt;Basically, I&amp;#39;m looking for some insight from someone who has been in this position or done something like this.&lt;/p&gt;\n\n&lt;p&gt;edit: I just looked at the sidebar and saw this is probably better suited for &lt;a href=\"/r/cscareerquestions\"&gt;/r/cscareerquestions&lt;/a&gt;. Apologies.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I graduated in May of this year and got a job in one of the big web companies a couple months later. I went in knowing almost nothing about web development and learned more than I ever imagined in that small time frame. \n\nHowever, I think my interest is starting to wane. I blame my disinterest as being the cause for wanted change because everyone I work with is incredibly intelligent, the company is one of the best, and I've worked through several different projects on multiple platforms.\n\nMy favorite classes in college were the ones that involved a lot of math and theory. I would love to actually get to use and work with some of that stuff, but it seems like a graduate degree is required for most of these positions. I don't mind the idea of returning to school, but I still don't exactly know what I would want to research (machine learning, bioinformatics, and computational theory all sound good). \n\nAnother route that I thought might be cool is applying computer science to another field like programming for chemistry, biology, or physics research or something. This may require extra schooling as well, but I think it would be faster to get into and maybe even more interesting. I've been reading a lot of physics books lately, which has kind of sparked in an interest in that area.\n\nBasically, I'm looking for some insight from someone who has been in this position or done something like this.\n\nedit: I just looked at the sidebar and saw this is probably better suited for /r/cscareerquestions. Apologies.", "saved": false, "id": "14wxxq", "clicked": false, "title": "Apply computer science in another field or go to graduate school?", "num_comments": 62, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 6, "link_id": "t3_14wxxq", "children": [], "author": "GuyOnTheInterweb", "id": "c7h88ov", "parent_id": "t3_14wxxq", "score": 0, "approved_by": null, "upvotes": 18, "body": "I've been involved with doing CS for scientists in other fields. It is very inspiring and I highly recommend checking out such interdisciplinary approaches (in Europe often called e-Science). I learn something new everyday, about the exotic problems that people struggle with in physics, chemistry, biology, astronomy, etc. As a CS graduate O would be able to see \"Ah. That problem you have with sensor data collection is almost like what we do with distributed database transactions, let me get you in touch with professor X\". There are of course other aspects, like \"my god, you don't have version control? You store multidimensional data in CSV files?? You call that.. Perl?\"", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been involved with doing CS for scientists in other fields. It is very inspiring and I highly recommend checking out such interdisciplinary approaches (in Europe often called e-Science). I learn something new everyday, about the exotic problems that people struggle with in physics, chemistry, biology, astronomy, etc. As a CS graduate O would be able to see &amp;quot;Ah. That problem you have with sensor data collection is almost like what we do with distributed database transactions, let me get you in touch with professor X&amp;quot;. There are of course other aspects, like &amp;quot;my god, you don&amp;#39;t have version control? You store multidimensional data in CSV files?? You call that.. Perl?&amp;quot;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7h88ov", "flair_text": null, "created": 1355626268.0, "created_utc": 1355622668.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14wxxq", "children": [], "author": "anonymike", "id": "c7hdzna", "parent_id": "t3_14wxxq", "score": 0, "approved_by": null, "upvotes": 5, "body": "I do bioinformatic research at an Ivy League medical school and have both an undergrad and masters in compsci.  I don't really recommend bioinformatics type work unless you have a strong background in biology and statistics.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I do bioinformatic research at an Ivy League medical school and have both an undergrad and masters in compsci.  I don&amp;#39;t really recommend bioinformatics type work unless you have a strong background in biology and statistics.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7hdzna", "flair_text": null, "created": 1355658491.0, "created_utc": 1355654891.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14wxxq", "children": [], "author": "paco758", "id": "c7hfsmf", "parent_id": "t3_14wxxq", "score": 0, "approved_by": null, "upvotes": 3, "body": "Look at getting a graduate degree in information science, like an MSIS or MLIS. Information and library science programs need more people with CS degrees and ILS people with CS backgrounds are in high demand. If you want to stay academic after that, you can get a PhD in IS. I came to IS from a background in the humanities. Now I study computational humanities and technological pedagogy. There is a lot of room in this field for you to focus your interests AND still be employable. At the highest level, it is a pretty small field, so it is also pretty easy to distinguish yourself. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Look at getting a graduate degree in information science, like an MSIS or MLIS. Information and library science programs need more people with CS degrees and ILS people with CS backgrounds are in high demand. If you want to stay academic after that, you can get a PhD in IS. I came to IS from a background in the humanities. Now I study computational humanities and technological pedagogy. There is a lot of room in this field for you to focus your interests AND still be employable. At the highest level, it is a pretty small field, so it is also pretty easy to distinguish yourself. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7hfsmf", "flair_text": null, "created": 1355675092.0, "created_utc": 1355671492.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14wxxq", "children": [], "author": "somnophobiac", "id": "c7xrqy8", "parent_id": "t3_14wxxq", "score": 0, "approved_by": null, "upvotes": 1, "body": "Digital Physics. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Digital Physics. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7xrqy8", "flair_text": null, "created": 1358319096.0, "created_utc": 1358315496.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_14wxxq", "children": [], "author": "fucommant", "id": "c7ha1p0", "parent_id": "t3_14wxxq", "score": 0, "approved_by": null, "upvotes": 4, "body": "Cognitive Science \n\nthank me later.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Cognitive Science &lt;/p&gt;\n\n&lt;p&gt;thank me later.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ha1p0", "flair_text": null, "created": 1355634723.0, "created_utc": 1355631123.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 25, "link_id": "t3_14wxxq", "children": [], "author": "shamanicspacebum", "id": "c7h9c0s", "parent_id": "t3_14wxxq", "score": 0, "approved_by": null, "upvotes": 16, "body": "Who cares? Whatever you do stay in school because working for other people just sucks. It sucks.. Every fucking day of it sucks.", "edited": 1355629114.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Who cares? Whatever you do stay in school because working for other people just sucks. It sucks.. Every fucking day of it sucks.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7h9c0s", "flair_text": null, "created": 1355631411.0, "created_utc": 1355627811.0, "num_reports": null}], "score": 38, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 53, "hidden": false, "thumbnail": "", "edited": 1355625856.0, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/14wxxq/apply_computer_science_in_another_field_or_go_to/", "has_more_comments": false, "name": "t3_14wxxq", "created": 1355612410.0, "url": "http://www.reddit.com/r/compsci/comments/14wxxq/apply_computer_science_in_another_field_or_go_to/", "author_flair_text": null, "author": "forcenuggets", "created_utc": 1355608810.0, "link_flair_text": null, "media": null, "num_reports": null}, "174": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 20, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I would like to get a book or other resource that focuses on an introductory level of these topics with a focus on (formal) proofs for them (without skipping steps).&lt;/p&gt;\n\n&lt;p&gt;I have some courseware that is fairly decent from a class I expect to be taking again. I would like to have some better materials. &lt;/p&gt;\n\n&lt;p&gt;Most of the materials I can find about this type of topic that have proofs are very casual in their nature written in plain language. While this can be okay for initial intuition, it is not ideal when I need to know a more step by step approach with justifications.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "\nI would like to get a book or other resource that focuses on an introductory level of these topics with a focus on (formal) proofs for them (without skipping steps).\n\nI have some courseware that is fairly decent from a class I expect to be taking again. I would like to have some better materials. \n\nMost of the materials I can find about this type of topic that have proofs are very casual in their nature written in plain language. While this can be okay for initial intuition, it is not ideal when I need to know a more step by step approach with justifications.", "saved": false, "id": "14waic", "clicked": false, "title": "What books on logic, set theory, graph theory, etc. are recommended for Computer Science students?", "num_comments": 19, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_14waic", "children": [], "author": "cloudaday", "id": "c7h0chx", "parent_id": "t3_14waic", "score": 0, "approved_by": null, "upvotes": 12, "body": "Perhaps try /r/csbooks?\n\nOtherwise, [here's an overall discrete mathematics text that I just finished using and focuses on puzzles, it's pretty good](http://www.amazon.com/Discrete-Mathematics-Mathematical-Reasoning-Patterns/dp/0471476021/ref=pd_sim_b_1/192-0980967-4442829), [the very first game theory book, by the guy who invented the damn field](http://www.amazon.com/Economic-Behavior-Commemorative-Princeton-Editions/dp/0691130612), [here's a nice list of graph theory things](http://mathoverflow.net/questions/12161/what-are-some-good-beginner-graph-theory-texts).\n\nIf you want anything else on proofs, I have an old trig book around (ahem... I may have forgotten to give it back to my high school eight years ago) that really showed me how to prove things mathematically for the first time. What kind of proofs are you talking about here? Proof by induction, mathematical proof through example, what?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Perhaps try &lt;a href=\"/r/csbooks\"&gt;/r/csbooks&lt;/a&gt;?&lt;/p&gt;\n\n&lt;p&gt;Otherwise, &lt;a href=\"http://www.amazon.com/Discrete-Mathematics-Mathematical-Reasoning-Patterns/dp/0471476021/ref=pd_sim_b_1/192-0980967-4442829\"&gt;here&amp;#39;s an overall discrete mathematics text that I just finished using and focuses on puzzles, it&amp;#39;s pretty good&lt;/a&gt;, &lt;a href=\"http://www.amazon.com/Economic-Behavior-Commemorative-Princeton-Editions/dp/0691130612\"&gt;the very first game theory book, by the guy who invented the damn field&lt;/a&gt;, &lt;a href=\"http://mathoverflow.net/questions/12161/what-are-some-good-beginner-graph-theory-texts\"&gt;here&amp;#39;s a nice list of graph theory things&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;If you want anything else on proofs, I have an old trig book around (ahem... I may have forgotten to give it back to my high school eight years ago) that really showed me how to prove things mathematically for the first time. What kind of proofs are you talking about here? Proof by induction, mathematical proof through example, what?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7h0chx", "flair_text": null, "created": 1355590641.0, "created_utc": 1355587041.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14waic", "children": [], "author": "n3hima", "id": "c7h2fac", "parent_id": "t3_14waic", "score": 0, "approved_by": null, "upvotes": 9, "body": "Sipser's \"Introduction to the Theory of Computation\"", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sipser&amp;#39;s &amp;quot;Introduction to the Theory of Computation&amp;quot;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7h2fac", "flair_text": null, "created": 1355600482.0, "created_utc": 1355596882.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_14waic", "children": [], "author": "flebron", "id": "c7h0ioa", "parent_id": "t3_14waic", "score": 0, "approved_by": null, "upvotes": 4, "body": "I don't know if it's part of your \"etc\", but for algorithms, I liked [Introduction to Algorithms](http://www.amazon.com/Introduction-Algorithms-Thomas-H-Cormen/dp/0262033844) (also known as \"CLRS\", the authors' last name). It doesn't skimp on formal or algorithmic proofs, even in cases where other authors just gloss over (say, the probabilistic asymptotics of a randomized quicksort, or actual proofs of the inverse Ackermann time bounds on the disjoint sets forests data structure). I've heard that Knuth's [The Art of Computer Programming](http://www.amazon.com/Computer-Programming-Volumes-1-4A-Boxed/dp/0321751043/) is similar in this respect of formality, but I haven't bought this series.\n\nMy only complaint of CLRS is sometimes the algorithms themselves are, in the interest of efficiency or succinctness perhaps, a bit too terse. As an example, I stopped trying to understand their red black tree deletion procedure :) This doesn't happen often, however.\n\nFor graph theory, I found Diestel's [Graph Theory GTM](http://www.amazon.com/Graph-Theory-Graduate-Texts-Mathematics/dp/3540261834/) to be a bit advanced for a beginner. I found Bondy &amp; Murty's [Graph Theory GTM](http://www.amazon.com/Graph-Theory-Graduate-Texts-Mathematics/dp/1849966907) to be more accessible. From Harary I usually take exercises for midterms, but I haven't used it as a study source. Don't let the \"GTM\" name scare you, they were definitely readable by this lowly undergrad.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t know if it&amp;#39;s part of your &amp;quot;etc&amp;quot;, but for algorithms, I liked &lt;a href=\"http://www.amazon.com/Introduction-Algorithms-Thomas-H-Cormen/dp/0262033844\"&gt;Introduction to Algorithms&lt;/a&gt; (also known as &amp;quot;CLRS&amp;quot;, the authors&amp;#39; last name). It doesn&amp;#39;t skimp on formal or algorithmic proofs, even in cases where other authors just gloss over (say, the probabilistic asymptotics of a randomized quicksort, or actual proofs of the inverse Ackermann time bounds on the disjoint sets forests data structure). I&amp;#39;ve heard that Knuth&amp;#39;s &lt;a href=\"http://www.amazon.com/Computer-Programming-Volumes-1-4A-Boxed/dp/0321751043/\"&gt;The Art of Computer Programming&lt;/a&gt; is similar in this respect of formality, but I haven&amp;#39;t bought this series.&lt;/p&gt;\n\n&lt;p&gt;My only complaint of CLRS is sometimes the algorithms themselves are, in the interest of efficiency or succinctness perhaps, a bit too terse. As an example, I stopped trying to understand their red black tree deletion procedure :) This doesn&amp;#39;t happen often, however.&lt;/p&gt;\n\n&lt;p&gt;For graph theory, I found Diestel&amp;#39;s &lt;a href=\"http://www.amazon.com/Graph-Theory-Graduate-Texts-Mathematics/dp/3540261834/\"&gt;Graph Theory GTM&lt;/a&gt; to be a bit advanced for a beginner. I found Bondy &amp;amp; Murty&amp;#39;s &lt;a href=\"http://www.amazon.com/Graph-Theory-Graduate-Texts-Mathematics/dp/1849966907\"&gt;Graph Theory GTM&lt;/a&gt; to be more accessible. From Harary I usually take exercises for midterms, but I haven&amp;#39;t used it as a study source. Don&amp;#39;t let the &amp;quot;GTM&amp;quot; name scare you, they were definitely readable by this lowly undergrad.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7h0ioa", "flair_text": null, "created": 1355591500.0, "created_utc": 1355587900.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14waic", "children": [], "author": "thebeanz", "id": "c7h12iz", "parent_id": "t3_14waic", "score": 0, "approved_by": null, "upvotes": 3, "body": "This is great:\nhttp://courses.csail.mit.edu/6.042/fall11/mcs-Fall11.pdf", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is great:\n&lt;a href=\"http://courses.csail.mit.edu/6.042/fall11/mcs-Fall11.pdf\"&gt;http://courses.csail.mit.edu/6.042/fall11/mcs-Fall11.pdf&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7h12iz", "flair_text": null, "created": 1355594187.0, "created_utc": 1355590587.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14waic", "children": [], "author": "dolficious", "id": "c7h172z", "parent_id": "t3_14waic", "score": 0, "approved_by": null, "upvotes": 3, "body": "For graph theory, I'd suggest D.B. West's [Introduction to Graph Theory](http://www.amazon.com/Introduction-Graph-Theory-2nd-Edition/dp/0130144002). The material is proof-based and it comes with a good amount of examples and exercises.", "edited": 1355591784.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;For graph theory, I&amp;#39;d suggest D.B. West&amp;#39;s &lt;a href=\"http://www.amazon.com/Introduction-Graph-Theory-2nd-Edition/dp/0130144002\"&gt;Introduction to Graph Theory&lt;/a&gt;. The material is proof-based and it comes with a good amount of examples and exercises.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7h172z", "flair_text": null, "created": 1355594782.0, "created_utc": 1355591182.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14waic", "children": [], "author": "rplacd", "id": "c7h18ys", "parent_id": "t3_14waic", "score": 0, "approved_by": null, "upvotes": 2, "body": "Knuth's (and Graham's and Patashnik's) [Concrete Mathematics](http://www.amazon.com/Concrete-Mathematics-Foundation-Computer-Science/dp/0201558025) is an odd pick'n'mix of mathematical topics that the authors have found useful in CS - despite the odd premise, I've heard wonders about its exposition *and* (also oddly enough) its exercise sets.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Knuth&amp;#39;s (and Graham&amp;#39;s and Patashnik&amp;#39;s) &lt;a href=\"http://www.amazon.com/Concrete-Mathematics-Foundation-Computer-Science/dp/0201558025\"&gt;Concrete Mathematics&lt;/a&gt; is an odd pick&amp;#39;n&amp;#39;mix of mathematical topics that the authors have found useful in CS - despite the odd premise, I&amp;#39;ve heard wonders about its exposition &lt;em&gt;and&lt;/em&gt; (also oddly enough) its exercise sets.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7h18ys", "flair_text": null, "created": 1355595031.0, "created_utc": 1355591431.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14waic", "children": [], "author": "vdevos", "id": "c7h1pyw", "parent_id": "t3_14waic", "score": 0, "approved_by": null, "upvotes": 1, "body": "At my technical university we have a mandatory course \"Logic and Set theory\" and we used this book:\nhttp://www.amazon.com/gp/aw/d/095430067X\n\nI loved the course and found it very instructive, also I found the book very clear and well explained. The only disadvantage is that there are no answers to the exercises in the back of the book (we discussed them during instructions).\n\nIt discusses formal and informal proofs and forms of induction and strong induction", "edited": 1355859865.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;At my technical university we have a mandatory course &amp;quot;Logic and Set theory&amp;quot; and we used this book:\n&lt;a href=\"http://www.amazon.com/gp/aw/d/095430067X\"&gt;http://www.amazon.com/gp/aw/d/095430067X&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I loved the course and found it very instructive, also I found the book very clear and well explained. The only disadvantage is that there are no answers to the exercises in the back of the book (we discussed them during instructions).&lt;/p&gt;\n\n&lt;p&gt;It discusses formal and informal proofs and forms of induction and strong induction&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7h1pyw", "flair_text": null, "created": 1355597250.0, "created_utc": 1355593650.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14waic", "children": [], "author": "lovelydayfora", "id": "c7h379j", "parent_id": "t3_14waic", "score": 0, "approved_by": null, "upvotes": 1, "body": "I learned formal logic from Mendelson as an undergrad. Recommend.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I learned formal logic from Mendelson as an undergrad. Recommend.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7h379j", "flair_text": null, "created": 1355603889.0, "created_utc": 1355600289.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14waic", "children": [], "author": "PsychRabbit", "id": "c7h3zx7", "parent_id": "t3_14waic", "score": 0, "approved_by": null, "upvotes": 1, "body": "[Computability and Logic](http://www.cambridge.org/gb/knowledge/isbn/item1164301/?site_locale=en_GB) by Boolos, Burgess, and Jeffrey, is great for logic, set theory, and computability. Not so great for graph theory.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.cambridge.org/gb/knowledge/isbn/item1164301/?site_locale=en_GB\"&gt;Computability and Logic&lt;/a&gt; by Boolos, Burgess, and Jeffrey, is great for logic, set theory, and computability. Not so great for graph theory.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7h3zx7", "flair_text": null, "created": 1355607425.0, "created_utc": 1355603825.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14waic", "children": [], "author": "timlmul", "id": "c7h4b5n", "parent_id": "t3_14waic", "score": 0, "approved_by": null, "upvotes": 1, "body": "my college's discrete math course used [rosen](http://www.amazon.com/Discrete-Mathematics-Applications-Kenneth-Rosen/dp/0072899050) which includes the focus on formal proofs but also the sampling of materials (logic, set theory, graph theory, induction, probability, combinatorics) that you were mentioning. some of the other books here seem much more monolithic: sipser is pretty strictly computability, clrs is just algorithms, the books titled \"intro to graph theory\", well... naturally these books go into much more detail and are arguably more beautiful books (a cs student's library would be inadequate without clrs or sipser) but don't seem to be what you're asking for.\n\ngood luck!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;my college&amp;#39;s discrete math course used &lt;a href=\"http://www.amazon.com/Discrete-Mathematics-Applications-Kenneth-Rosen/dp/0072899050\"&gt;rosen&lt;/a&gt; which includes the focus on formal proofs but also the sampling of materials (logic, set theory, graph theory, induction, probability, combinatorics) that you were mentioning. some of the other books here seem much more monolithic: sipser is pretty strictly computability, clrs is just algorithms, the books titled &amp;quot;intro to graph theory&amp;quot;, well... naturally these books go into much more detail and are arguably more beautiful books (a cs student&amp;#39;s library would be inadequate without clrs or sipser) but don&amp;#39;t seem to be what you&amp;#39;re asking for.&lt;/p&gt;\n\n&lt;p&gt;good luck!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7h4b5n", "flair_text": null, "created": 1355608805.0, "created_utc": 1355605205.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14waic", "children": [], "author": "johntdowney", "id": "c7h7hpk", "parent_id": "t3_14waic", "score": 0, "approved_by": null, "upvotes": 2, "body": "Dasgupta's *algorithms* was my assigned book for this semester. Plenty of graph stuff in it.  It's free online as a PDF, just search for it.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Dasgupta&amp;#39;s &lt;em&gt;algorithms&lt;/em&gt; was my assigned book for this semester. Plenty of graph stuff in it.  It&amp;#39;s free online as a PDF, just search for it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7h7hpk", "flair_text": null, "created": 1355622761.0, "created_utc": 1355619161.0, "num_reports": null}], "score": 41, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 61, "hidden": false, "thumbnail": "", "edited": false, "modhash": "yn6i2c42y612e93f79f0910c4096ceed5541f0c6e6c4c8d307", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/14waic/what_books_on_logic_set_theory_graph_theory_etc/", "has_more_comments": false, "name": "t3_14waic", "created": 1355585815.0, "url": "http://www.reddit.com/r/compsci/comments/14waic/what_books_on_logic_set_theory_graph_theory_etc/", "author_flair_text": null, "author": "zzing", "created_utc": 1355585815.0, "link_flair_text": null, "media": null, "num_reports": null}, "175": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 4, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have the opportunity to do an independent study with my professor and I think I&amp;#39;d like to do something with image recognition for example identifying a license plate number programmatically from an image. Do any of you kind folks have any experience with this, links to tutorials or advice?&lt;/p&gt;\n\n&lt;p&gt;Edit: Looks like I&amp;#39;ll try using OpenCV - Tutorials and resources welcome &amp;amp; thank you for your help.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I have the opportunity to do an independent study with my professor and I think I'd like to do something with image recognition for example identifying a license plate number programmatically from an image. Do any of you kind folks have any experience with this, links to tutorials or advice?\n\n\nEdit: Looks like I'll try using OpenCV - Tutorials and resources welcome &amp; thank you for your help.", "saved": false, "id": "14sedx", "clicked": false, "title": "Independent Study - Looking for tutorials/suggestions on image recognition", "num_comments": 11, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14sedx", "children": [], "author": "crwcomposer", "id": "c7fz6ln", "parent_id": "t3_14sedx", "score": 0, "approved_by": null, "upvotes": 4, "body": "I took a pattern recognition course where some people did this, or similar things, for the final project.\n\nHere's a good start for license plates:\n\nhttp://en.wikipedia.org/wiki/Automatic_number_plate_recognition", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I took a pattern recognition course where some people did this, or similar things, for the final project.&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s a good start for license plates:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Automatic_number_plate_recognition\"&gt;http://en.wikipedia.org/wiki/Automatic_number_plate_recognition&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7fz6ln", "flair_text": null, "created": 1355418525.0, "created_utc": 1355414925.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14sedx", "children": [], "author": "Azulsky", "id": "c7g2mln", "parent_id": "t3_14sedx", "score": 0, "approved_by": null, "upvotes": 4, "body": "For License Plates and Document Scanning the subfield is called OCR, or Optical Character Recognition\n\nhttps://en.wikipedia.org/wiki/Optical_character_recognition\n\nHopefully that helps you google a bit better, sorry I couldnt point to any more concrete stuff.", "edited": 1355427265.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;For License Plates and Document Scanning the subfield is called OCR, or Optical Character Recognition&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://en.wikipedia.org/wiki/Optical_character_recognition\"&gt;https://en.wikipedia.org/wiki/Optical_character_recognition&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Hopefully that helps you google a bit better, sorry I couldnt point to any more concrete stuff.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7g2mln", "flair_text": null, "created": 1355430105.0, "created_utc": 1355426505.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14sedx", "children": [], "author": "Wolfspaw", "id": "c7g3xar", "parent_id": "t3_14sedx", "score": 0, "approved_by": null, "upvotes": 3, "body": "There's a book that just launched, [Mastering OpenCV with Practical Computer Vision](http://computer-vision-talks.com/2012/12/mastering-opencv-with-practical-computer-vision-projects/)\n\nI did not read this book, but judging by the table of contents it seems to be very interesting. There's a chapter for License Plates for example.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There&amp;#39;s a book that just launched, &lt;a href=\"http://computer-vision-talks.com/2012/12/mastering-opencv-with-practical-computer-vision-projects/\"&gt;Mastering OpenCV with Practical Computer Vision&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I did not read this book, but judging by the table of contents it seems to be very interesting. There&amp;#39;s a chapter for License Plates for example.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7g3xar", "flair_text": null, "created": 1355434111.0, "created_utc": 1355430511.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14sedx", "children": [], "author": "School_Story_Bro", "id": "c7g7vaq", "parent_id": "t3_14sedx", "score": 0, "approved_by": null, "upvotes": 2, "body": "A couple OpenCV resources:\nhttp://www.shervinemami.info/introToOpenCV.html\nhttp://www.pages.drexel.edu/~nk752/tutorials.html", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A couple OpenCV resources:\n&lt;a href=\"http://www.shervinemami.info/introToOpenCV.html\"&gt;http://www.shervinemami.info/introToOpenCV.html&lt;/a&gt;\n&lt;a href=\"http://www.pages.drexel.edu/%7Enk752/tutorials.html\"&gt;http://www.pages.drexel.edu/~nk752/tutorials.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7g7vaq", "flair_text": null, "created": 1355447014.0, "created_utc": 1355443414.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14sedx", "children": [], "author": "jm7296", "id": "c7g9i7x", "parent_id": "t3_14sedx", "score": 0, "approved_by": null, "upvotes": 1, "body": "I did my senior research project on license plate recognition. It uses a program called JavaANPR to recognize plates. Let me know if you want any more information.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I did my senior research project on license plate recognition. It uses a program called JavaANPR to recognize plates. Let me know if you want any more information.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7g9i7x", "flair_text": null, "created": 1355453185.0, "created_utc": 1355449585.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14sedx", "children": [], "author": "Simultanagnosia", "id": "c7ga3c8", "parent_id": "t3_14sedx", "score": 0, "approved_by": null, "upvotes": 1, "body": "[Neuroph](http://neuroph.sourceforge.net/) has functions for this built into its GUI. [Tutorial](http://neuroph.sourceforge.net/image_recognition.html)\n\nYou can also try [Joone](http://sourceforge.net/projects/joone/) or [Encog](http://www.heatonresearch.com/encog). I have never tried OpenCV but think I'll give it a whirl later. I am a hobbyist so don't know what the best tools would be just offering up suggestions.\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://neuroph.sourceforge.net/\"&gt;Neuroph&lt;/a&gt; has functions for this built into its GUI. &lt;a href=\"http://neuroph.sourceforge.net/image_recognition.html\"&gt;Tutorial&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;You can also try &lt;a href=\"http://sourceforge.net/projects/joone/\"&gt;Joone&lt;/a&gt; or &lt;a href=\"http://www.heatonresearch.com/encog\"&gt;Encog&lt;/a&gt;. I have never tried OpenCV but think I&amp;#39;ll give it a whirl later. I am a hobbyist so don&amp;#39;t know what the best tools would be just offering up suggestions.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ga3c8", "flair_text": null, "created": 1355455330.0, "created_utc": 1355451730.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14sedx", "children": [], "author": "OMouse", "id": "c7gie31", "parent_id": "t3_14sedx", "score": 0, "approved_by": null, "upvotes": 1, "body": "Try out the ACM digital library search. Should turn up quite a lot of papers", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Try out the ACM digital library search. Should turn up quite a lot of papers&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7gie31", "flair_text": null, "created": 1355503102.0, "created_utc": 1355499502.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14sedx", "children": [], "author": "severun", "id": "c7gj6m2", "parent_id": "t3_14sedx", "score": 0, "approved_by": null, "upvotes": 1, "body": "I'd recommend getting a clear goal/assignment before looking into specific solutions as there are a lot of different types of image recognition. If you want to match-recognize license plates you have to ask yourself what kind of images you will be processing.. How clear will these images be, is the license plate always in the same location etc etc. Do you want to do some sort of preprocessing or not. It all depends on the assignment and resources available :)\nI've done some image recognition work with matching logo's from compagny's on webpages. Due to the nature of webpage I knew localization wouldn't be a problem but the type of pictures/colors could be. \nSo knowing a more specific assignment would help focusing on type of research you should conduct.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d recommend getting a clear goal/assignment before looking into specific solutions as there are a lot of different types of image recognition. If you want to match-recognize license plates you have to ask yourself what kind of images you will be processing.. How clear will these images be, is the license plate always in the same location etc etc. Do you want to do some sort of preprocessing or not. It all depends on the assignment and resources available :)\nI&amp;#39;ve done some image recognition work with matching logo&amp;#39;s from compagny&amp;#39;s on webpages. Due to the nature of webpage I knew localization wouldn&amp;#39;t be a problem but the type of pictures/colors could be. \nSo knowing a more specific assignment would help focusing on type of research you should conduct.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7gj6m2", "flair_text": null, "created": 1355506118.0, "created_utc": 1355502518.0, "num_reports": null}], "score": 22, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 26, "hidden": false, "thumbnail": "", "edited": 1355446157.0, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/14sedx/independent_study_looking_for/", "has_more_comments": false, "name": "t3_14sedx", "created": 1355413230.0, "url": "http://www.reddit.com/r/compsci/comments/14sedx/independent_study_looking_for/", "author_flair_text": null, "author": "thisgameissoreal", "created_utc": 1355413230.0, "link_flair_text": null, "media": null, "num_reports": null}, "176": {"domain": "ascr-discovery.science.doe.gov", "link_flair_class": null, "banned_by": null, "downvotes": 12, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "14qgdv", "clicked": false, "title": "One possible answer to overcome inevitable frequent faults in giant exaflops systems: oblivion  ", "num_comments": 5, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_14qgdv", "children": [], "author": "otakucode", "id": "c7flf2k", "parent_id": "t3_14qgdv", "score": 0, "approved_by": null, "upvotes": 8, "body": "This certainly isn't restricted to HPC at all.  The future of computer science is full of fuck-ups.  Research into amorphous computing relies upon doing computational work across unreliable networks of meager computational nodes which might fail or disappear at any given time.  Intel has been working on accepting faulty processors for a long time, since accepting a 0.01% failure rate can provide greater than a 10x speed improvement, making duplication of work to cover the errors a good investment.\n\nWherever you look, the future is full of systems built from pieces that break all the time.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This certainly isn&amp;#39;t restricted to HPC at all.  The future of computer science is full of fuck-ups.  Research into amorphous computing relies upon doing computational work across unreliable networks of meager computational nodes which might fail or disappear at any given time.  Intel has been working on accepting faulty processors for a long time, since accepting a 0.01% failure rate can provide greater than a 10x speed improvement, making duplication of work to cover the errors a good investment.&lt;/p&gt;\n\n&lt;p&gt;Wherever you look, the future is full of systems built from pieces that break all the time.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7flf2k", "flair_text": null, "created": 1355352643.0, "created_utc": 1355349043.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14qgdv", "children": [], "author": "rbkillea", "id": "c7fin04", "parent_id": "t3_14qgdv", "score": 0, "approved_by": null, "upvotes": 3, "body": "Ok, I'm not exactly an expert in the field of HPC, but it kind of bugs me when something as problem specific as what \"failure\" means is taken out of the hands of developers. I guess what I'm meaning to say is that if failure is an issue at the exaflop scale, would HPC developers be content with an OS that performs proven techniques for a broad swath of application types, or is it really unavoidable to consider failure on a problem dependent level?\n[EDIT] btw, I upvoted this post despite my concerns. I think that exaflop scale is THE most promising direction we can take computation.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ok, I&amp;#39;m not exactly an expert in the field of HPC, but it kind of bugs me when something as problem specific as what &amp;quot;failure&amp;quot; means is taken out of the hands of developers. I guess what I&amp;#39;m meaning to say is that if failure is an issue at the exaflop scale, would HPC developers be content with an OS that performs proven techniques for a broad swath of application types, or is it really unavoidable to consider failure on a problem dependent level?\n[EDIT] btw, I upvoted this post despite my concerns. I think that exaflop scale is THE most promising direction we can take computation.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7fin04", "flair_text": null, "created": 1355343828.0, "created_utc": 1355340228.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14qgdv", "children": [], "author": "jkff", "id": "c7fwx0n", "parent_id": "t3_14qgdv", "score": 0, "approved_by": null, "upvotes": 2, "body": "To me this article was quite disappointing. Of course we can no longer ignore faults and of course task queues are a good way to partially deal with this. Almost everybody dealing with large distributed systems uses them. But I didn't see anything else nontrivial being offered in the article.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;To me this article was quite disappointing. Of course we can no longer ignore faults and of course task queues are a good way to partially deal with this. Almost everybody dealing with large distributed systems uses them. But I didn&amp;#39;t see anything else nontrivial being offered in the article.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7fwx0n", "flair_text": null, "created": 1355407299.0, "created_utc": 1355403699.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14qgdv", "children": [], "author": "terracnosaur", "id": "c7gd6hp", "parent_id": "t3_14qgdv", "score": 0, "approved_by": null, "upvotes": 1, "body": "Think of this method of architecting systems as building in fault tolerance at multiple levels. Maybe your RPC does not get a reply, what do you do? do you hammer the same server over and over again, or do you globally blacklist it, elect a new one for that service and periodically health check the dead host:port until it comes back up or is removed from the pool entirely. \n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Think of this method of architecting systems as building in fault tolerance at multiple levels. Maybe your RPC does not get a reply, what do you do? do you hammer the same server over and over again, or do you globally blacklist it, elect a new one for that service and periodically health check the dead host:port until it comes back up or is removed from the pool entirely. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7gd6hp", "flair_text": null, "created": 1355466951.0, "created_utc": 1355463351.0, "num_reports": null}], "score": 32, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 44, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/14qgdv/one_possible_answer_to_overcome_inevitable/", "has_more_comments": false, "name": "t3_14qgdv", "created": 1355334317.0, "url": "http://ascr-discovery.science.doe.gov/exascale/exa_fault1.shtml", "author_flair_text": null, "author": "greenprius", "created_utc": 1355334317.0, "link_flair_text": null, "media": null, "num_reports": null}, "177": {"domain": "youtube.com", "link_flair_class": null, "banned_by": null, "downvotes": 21, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "14ooys", "clicked": false, "title": "Public lecture on P vs NP by Michael Sipser (2006)", "num_comments": 8, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_14ooys", "children": [], "author": "zackcantwait", "id": "c7f3v78", "parent_id": "t3_14ooys", "score": 0, "approved_by": null, "upvotes": 18, "body": "Intro to the Theory of Computation is such a good textbook. I'm excited to watch this lecture.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Intro to the Theory of Computation is such a good textbook. I&amp;#39;m excited to watch this lecture.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7f3v78", "flair_text": null, "created": 1355275911.0, "created_utc": 1355272311.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_14ooys", "children": [], "author": "mrdmnd", "id": "c7f40t8", "parent_id": "t3_14ooys", "score": 0, "approved_by": null, "upvotes": 6, "body": "It's pitched towards a non-technical audience - somewhat non-rigorous, but a very good watch for people who want more background into theoretical computer science.\n\nI sent it to my dad; maybe he'll understand what I do a bit better now.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s pitched towards a non-technical audience - somewhat non-rigorous, but a very good watch for people who want more background into theoretical computer science.&lt;/p&gt;\n\n&lt;p&gt;I sent it to my dad; maybe he&amp;#39;ll understand what I do a bit better now.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7f40t8", "flair_text": null, "created": 1355276434.0, "created_utc": 1355272834.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_14ooys", "children": [], "author": "genunix", "id": "c7fbrs3", "parent_id": "t3_14ooys", "score": 0, "approved_by": null, "upvotes": 3, "body": "Great introductory seminar on P and NP, and also a brief history of the problem.  Almost no maths though (same as what I was left with at the end of my CS degree).  ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Great introductory seminar on P and NP, and also a brief history of the problem.  Almost no maths though (same as what I was left with at the end of my CS degree).  &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7fbrs3", "flair_text": null, "created": 1355309289.0, "created_utc": 1355305689.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_14ooys", "children": [], "author": "pratik_deshpande", "id": "c7ff6s2", "parent_id": "t3_14ooys", "score": 0, "approved_by": null, "upvotes": 2, "body": "Wow I just finished my Algorithms final and this was on there.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Wow I just finished my Algorithms final and this was on there.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ff6s2", "flair_text": null, "created": 1355332059.0, "created_utc": 1355328459.0, "num_reports": null}], "score": 119, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 140, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/14ooys/public_lecture_on_p_vs_np_by_michael_sipser_2006/", "has_more_comments": false, "name": "t3_14ooys", "created": 1355261046.0, "url": "http://www.youtube.com/watch?v=msp2y_Y5MLE", "author_flair_text": null, "author": "draconis", "created_utc": 1355261046.0, "link_flair_text": null, "media": null, "num_reports": null}, "178": {"domain": "cvc4.cs.nyu.edu", "link_flair_class": null, "banned_by": null, "downvotes": 12, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "14nk5r", "clicked": false, "title": "CVC4: A new, re-designed SMT (Satisfiability Modulo Theories) solver released!", "num_comments": 6, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14nk5r", "children": [], "author": "gasche", "id": "c7eraw3", "parent_id": "t3_14nk5r", "score": 0, "approved_by": null, "upvotes": 4, "body": "This webpage shows a laudable effort to communicate to the outside world by using positive marketing language. It's great that academic open-source software also gets this kind of publicity.\n\nHowever, it is also a bit meager on the technical details. I'm glad to know that \"Before using any designs from CVC3, [you] have thoroughly scrutinized, vetted, and updated them.\" and that you have taken \"advantage of recent engineering and algorithmic advances\", but could we get a bit more meat on which changes have actually been made, and which engineering and algorithmic advances have been taken advantage of? Any references to additional details, more detailed changelogs or publications would be helpful.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This webpage shows a laudable effort to communicate to the outside world by using positive marketing language. It&amp;#39;s great that academic open-source software also gets this kind of publicity.&lt;/p&gt;\n\n&lt;p&gt;However, it is also a bit meager on the technical details. I&amp;#39;m glad to know that &amp;quot;Before using any designs from CVC3, [you] have thoroughly scrutinized, vetted, and updated them.&amp;quot; and that you have taken &amp;quot;advantage of recent engineering and algorithmic advances&amp;quot;, but could we get a bit more meat on which changes have actually been made, and which engineering and algorithmic advances have been taken advantage of? Any references to additional details, more detailed changelogs or publications would be helpful.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7eraw3", "flair_text": null, "created": 1355227423.0, "created_utc": 1355223823.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14nk5r", "children": [], "author": "cypherx", "id": "c7i7md6", "parent_id": "t3_14nk5r", "score": 0, "approved_by": null, "upvotes": 2, "body": "Are there any good introductory tutorials out there which explain SMT solvers? I'm particularly curious about how you might efficiently map back to your original 'theory' (something like ranges or particular values for all the variables in a program?) from a boolean assignment. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Are there any good introductory tutorials out there which explain SMT solvers? I&amp;#39;m particularly curious about how you might efficiently map back to your original &amp;#39;theory&amp;#39; (something like ranges or particular values for all the variables in a program?) from a boolean assignment. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7i7md6", "flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "created": 1355791679.0, "created_utc": 1355788079.0, "num_reports": null}], "score": 22, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 34, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/14nk5r/cvc4_a_new_redesigned_smt_satisfiability_modulo/", "has_more_comments": false, "name": "t3_14nk5r", "created": 1355208660.0, "url": "http://cvc4.cs.nyu.edu/web/", "author_flair_text": null, "author": "Trirepetae", "created_utc": 1355208660.0, "link_flair_text": null, "media": null, "num_reports": null}, "179": {"domain": "junfukuyama.wordpress.com", "link_flair_class": null, "banned_by": null, "downvotes": 37, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "14mqqt", "clicked": false, "title": "Anyone have the math to check out this P != NP proof?", "num_comments": 58, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 7, "link_id": "t3_14mqqt", "children": [], "author": "brainminer", "id": "c7ejtqy", "parent_id": "t3_14mqqt", "score": 0, "approved_by": null, "upvotes": 46, "body": "I always default back to this article by Scott Aaronson (MIT): http://www.scottaaronson.com/blog/?p=458", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I always default back to this article by Scott Aaronson (MIT): &lt;a href=\"http://www.scottaaronson.com/blog/?p=458\"&gt;http://www.scottaaronson.com/blog/?p=458&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ejtqy", "flair_text": null, "created": 1355192445.0, "created_utc": 1355188845.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_14mqqt", "children": [], "author": "tejoka", "id": "c7elwbz", "parent_id": "t3_14mqqt", "score": 0, "approved_by": null, "upvotes": 20, "body": "Here is my 30-second debunking.\n\nDownload paper. Seems to be a circuit lower bound? CTRL-F \"[natural proof](http://en.wikipedia.org/wiki/Natural_proof)\". No results.\n\nAlmost certainly wrong.\n\nedit: I swear Scott Aaronson had a blog post where he suggested this method, but the link to his blog that brainminer posted doesn't have it.  Perhaps a different post...", "edited": 1355196283.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here is my 30-second debunking.&lt;/p&gt;\n\n&lt;p&gt;Download paper. Seems to be a circuit lower bound? CTRL-F &amp;quot;&lt;a href=\"http://en.wikipedia.org/wiki/Natural_proof\"&gt;natural proof&lt;/a&gt;&amp;quot;. No results.&lt;/p&gt;\n\n&lt;p&gt;Almost certainly wrong.&lt;/p&gt;\n\n&lt;p&gt;edit: I swear Scott Aaronson had a blog post where he suggested this method, but the link to his blog that brainminer posted doesn&amp;#39;t have it.  Perhaps a different post...&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7elwbz", "flair_text": null, "created": 1355199146.0, "created_utc": 1355195546.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14mqqt", "children": [], "author": "inaneInTheMembrane", "id": "c7ex1k8", "parent_id": "t3_14mqqt", "score": 0, "approved_by": null, "upvotes": 4, "body": "Looks like the article is [where it needs to be already](http://www.win.tue.nl/~gwoegi/P-versus-NP.htm).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Looks like the article is &lt;a href=\"http://www.win.tue.nl/%7Egwoegi/P-versus-NP.htm\"&gt;where it needs to be already&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ex1k8", "flair_text": null, "created": 1355254976.0, "created_utc": 1355251376.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 55, "link_id": "t3_14mqqt", "children": [], "author": "Cutty_Sark", "id": "c7ej0qh", "parent_id": "t3_14mqqt", "score": 0, "approved_by": null, "upvotes": 49, "body": "Proof by obfuscation. There's no way I'll spend more than 30 seconds reading something that long that is not peer reviewed. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Proof by obfuscation. There&amp;#39;s no way I&amp;#39;ll spend more than 30 seconds reading something that long that is not peer reviewed. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ej0qh", "flair_text": null, "created": 1355189721.0, "created_utc": 1355186121.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 7, "link_id": "t3_14mqqt", "children": [], "author": "Murkantilism", "id": "c7eoet8", "parent_id": "t3_14mqqt", "score": 0, "approved_by": null, "upvotes": 8, "body": "Hey crabsock, are you Mr. Fukuyama himself, or just posting on his behalf?\n\nIf you're him, and if you'd like, I can forward your proof along to some of my peers and professors to look at. I just finished my Theory of Computation class today, so I'm not advanced/learned enough to check your proof, but I know people who might.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hey crabsock, are you Mr. Fukuyama himself, or just posting on his behalf?&lt;/p&gt;\n\n&lt;p&gt;If you&amp;#39;re him, and if you&amp;#39;d like, I can forward your proof along to some of my peers and professors to look at. I just finished my Theory of Computation class today, so I&amp;#39;m not advanced/learned enough to check your proof, but I know people who might.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7eoet8", "flair_text": null, "created": 1355207718.0, "created_utc": 1355204118.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 14, "link_id": "t3_14mqqt", "children": [], "author": "HelloAnnyong", "id": "c7epyp7", "parent_id": "t3_14mqqt", "score": 0, "approved_by": null, "upvotes": 7, "body": "There are two questions:\n\nOne is the correctness of the P\u2260NP proof, which can be difficult to verify depending on how lazy and time-wasting-averse you are, and on the quality of the work.\n\nSecond is how much of a crank the author is.\n\nThe second question can be answered using some very simple heuristics. For example, the ratio of pages to citations in the proof. In this case, the most important result in computer science that will likely *ever* be proved - an answer to a question that has spawned entire subfields of computer science and mathematics - takes 59 pages and refers only to 12 papers.\n\ntl;dr: of course it's wrong.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There are two questions:&lt;/p&gt;\n\n&lt;p&gt;One is the correctness of the P\u2260NP proof, which can be difficult to verify depending on how lazy and time-wasting-averse you are, and on the quality of the work.&lt;/p&gt;\n\n&lt;p&gt;Second is how much of a crank the author is.&lt;/p&gt;\n\n&lt;p&gt;The second question can be answered using some very simple heuristics. For example, the ratio of pages to citations in the proof. In this case, the most important result in computer science that will likely &lt;em&gt;ever&lt;/em&gt; be proved - an answer to a question that has spawned entire subfields of computer science and mathematics - takes 59 pages and refers only to 12 papers.&lt;/p&gt;\n\n&lt;p&gt;tl;dr: of course it&amp;#39;s wrong.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7epyp7", "flair_text": null, "created": 1355215130.0, "created_utc": 1355211530.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_14mqqt", "children": [], "author": "peterfoxishigh", "id": "c7exbpx", "parent_id": "t3_14mqqt", "score": 0, "approved_by": null, "upvotes": 1, "body": "HTTP is too mainstream?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;HTTP is too mainstream?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7exbpx", "flair_text": null, "created": 1355255842.0, "created_utc": 1355252242.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 55, "link_id": "t3_14mqqt", "children": [], "author": "[deleted]", "id": "c7emu1n", "parent_id": "t3_14mqqt", "score": 0, "approved_by": null, "upvotes": 13, "body": "[deleted]", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7emu1n", "flair_text": null, "created": 1355202117.0, "created_utc": 1355198517.0, "num_reports": null}], "score": 36, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 73, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/14mqqt/anyone_have_the_math_to_check_out_this_p_np_proof/", "has_more_comments": false, "name": "t3_14mqqt", "created": 1355181291.0, "url": "https://junfukuyama.wordpress.com/", "author_flair_text": null, "author": "crabsock", "created_utc": 1355181291.0, "link_flair_text": null, "media": null, "num_reports": null}, "180": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 13, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m looking for a text that outlines the concepts, tradeoffs and history of modern OS mechanisms, specifically focusing on historical research and its influence on modern OS structure.  Quantitative comparisons between different approaches would be ideal. Is there anything out there that provides this sort of information?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm looking for a text that outlines the concepts, tradeoffs and history of modern OS mechanisms, specifically focusing on historical research and its influence on modern OS structure.  Quantitative comparisons between different approaches would be ideal. Is there anything out there that provides this sort of information?", "saved": false, "id": "14mrc7", "clicked": false, "title": "Is there a systems equivalent of Hennessy and Patterson?", "num_comments": 6, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14mrc7", "children": [], "author": "reiger", "id": "c7eiw68", "parent_id": "t3_14mrc7", "score": 0, "approved_by": null, "upvotes": 7, "body": "Short answer, no. \n\nHowever Operating System Concepts (Silberschatz et al) is a fantastic general OS book. I would also suggest some of the \"Design and Implementation\" OS books since they tend to include the \"why\", for example there is a BSD, BeOS, and Solaris. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Short answer, no. &lt;/p&gt;\n\n&lt;p&gt;However Operating System Concepts (Silberschatz et al) is a fantastic general OS book. I would also suggest some of the &amp;quot;Design and Implementation&amp;quot; OS books since they tend to include the &amp;quot;why&amp;quot;, for example there is a BSD, BeOS, and Solaris. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7eiw68", "flair_text": null, "created": 1355189292.0, "created_utc": 1355185692.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14mrc7", "children": [], "author": "jerkimball", "id": "c7eotp6", "parent_id": "t3_14mrc7", "score": 0, "approved_by": null, "upvotes": 8, "body": "[Patterson and Hennessey?](http://imgur.com/WUKsi)\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://imgur.com/WUKsi\"&gt;Patterson and Hennessey?&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7eotp6", "flair_text": null, "created": 1355209422.0, "created_utc": 1355205822.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14mrc7", "children": [], "author": "perry753", "id": "c7erhsi", "parent_id": "t3_14mrc7", "score": 0, "approved_by": null, "upvotes": 2, "body": "From my class's syllabus:\nRecommended: Operating Systems: Internals and Design Principles (7th Edition), William Stallings, 2011\n    Alternatively: Modern Operating Systems (Third Edition), Andrew S. Tanenbaum, Prentice Hall, 2008", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;From my class&amp;#39;s syllabus:\nRecommended: Operating Systems: Internals and Design Principles (7th Edition), William Stallings, 2011\n    Alternatively: Modern Operating Systems (Third Edition), Andrew S. Tanenbaum, Prentice Hall, 2008&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7erhsi", "flair_text": null, "created": 1355229416.0, "created_utc": 1355225816.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14mrc7", "children": [], "author": "viperlight89", "id": "c7gdsmc", "parent_id": "t3_14mrc7", "score": 0, "approved_by": null, "upvotes": 1, "body": "Computer Systems, A Programmers Perspective by Bryant and O'Halloran", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Computer Systems, A Programmers Perspective by Bryant and O&amp;#39;Halloran&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7gdsmc", "flair_text": null, "created": 1355469932.0, "created_utc": 1355466332.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14mrc7", "children": [], "author": "error_success", "id": "c7gy84k", "parent_id": "t3_14mrc7", "score": 0, "approved_by": null, "upvotes": 1, "body": "From a kernel point of view [UNIX Internals: The New Frontiers](http://www.pearsonhighered.com/educator/product/UNIX-Internals-The-New-Frontiers/9780131019089.page) by Vahalia is great.  It covers the different approaches taken by SVR3/SVR4/Solaris/4.3BSD/4.4BSD/Mach &amp; DEC UNIX.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;From a kernel point of view &lt;a href=\"http://www.pearsonhighered.com/educator/product/UNIX-Internals-The-New-Frontiers/9780131019089.page\"&gt;UNIX Internals: The New Frontiers&lt;/a&gt; by Vahalia is great.  It covers the different approaches taken by SVR3/SVR4/Solaris/4.3BSD/4.4BSD/Mach &amp;amp; DEC UNIX.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7gy84k", "flair_text": null, "created": 1355571372.0, "created_utc": 1355567772.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14mrc7", "children": [], "author": "ldpreload", "id": "c7ema5l", "parent_id": "t3_14mrc7", "score": 0, "approved_by": null, "upvotes": 3, "body": "You might want Saltzer and Kaashoek's _Principles of Computer Systems Design_, which is the textbook version of MIT's 6.033 course notes. I took it before the textbook existed in bound form, but found the course notes reasonable.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You might want Saltzer and Kaashoek&amp;#39;s &lt;em&gt;Principles of Computer Systems Design&lt;/em&gt;, which is the textbook version of MIT&amp;#39;s 6.033 course notes. I took it before the textbook existed in bound form, but found the course notes reasonable.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ema5l", "flair_text": null, "created": 1355200364.0, "created_utc": 1355196764.0, "num_reports": null}], "score": 9, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 22, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/14mrc7/is_there_a_systems_equivalent_of_hennessy_and/", "has_more_comments": false, "name": "t3_14mrc7", "created": 1355181795.0, "url": "http://www.reddit.com/r/compsci/comments/14mrc7/is_there_a_systems_equivalent_of_hennessy_and/", "author_flair_text": null, "author": "tingalingating", "created_utc": 1355181795.0, "link_flair_text": null, "media": null, "num_reports": null}, "181": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 20, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Sorry this will be a long winded post, just like to get some background in as well as my questions. TL;DR at bottom if needed! &lt;/p&gt;\n\n&lt;p&gt;Hey Reddit! I would love to go on to university to study Computer Science. I am a 16 year old male, so just got into college a couple of months ago to begin my A-Levels (I chose Maths, Physics and Chemistry - My college does not offer Further Maths), and am pretty confident I will get some good grades when I finish, hoping for A&amp;#39;s in the Physics and Maths and at least a B in Chemistry. I have always wanted to work on a technology related job, and love the idea of programming (just the idea so far). I downloaded python a couple of months ago, and while I have not had as much time to use it as I would have liked these past months, due to personal issues, they are all set aside now so I once again have tonnes of free time. I suppose my main questions are (In the TL;DR).&lt;/p&gt;\n\n&lt;p&gt;Tl;DR&lt;/p&gt;\n\n&lt;p&gt;Is Python a good program to start with? \nIf not, what is? \nWhat is the difference between the different Computer Science courses at university? \nWhat else can I do to get me ahead and give me an insight into the world of computer science?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Sorry this will be a long winded post, just like to get some background in as well as my questions. TL;DR at bottom if needed! \n\nHey Reddit! I would love to go on to university to study Computer Science. I am a 16 year old male, so just got into college a couple of months ago to begin my A-Levels (I chose Maths, Physics and Chemistry - My college does not offer Further Maths), and am pretty confident I will get some good grades when I finish, hoping for A's in the Physics and Maths and at least a B in Chemistry. I have always wanted to work on a technology related job, and love the idea of programming (just the idea so far). I downloaded python a couple of months ago, and while I have not had as much time to use it as I would have liked these past months, due to personal issues, they are all set aside now so I once again have tonnes of free time. I suppose my main questions are (In the TL;DR).\n\nTl;DR\n\nIs Python a good program to start with? \nIf not, what is? \nWhat is the difference between the different Computer Science courses at university? \nWhat else can I do to get me ahead and give me an insight into the world of computer science?\n", "saved": false, "id": "14m0j2", "clicked": false, "title": "Aspiring Computer Scientist, some questions inside.", "num_comments": 102, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 6, "link_id": "t3_14m0j2", "children": [], "author": "Fuco1337", "id": "c7eariw", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 45, "body": "Computer science is about computers as much as astronomy is about telescopes.\n\nKeep this in mind and everything will be fine :)\n\nPS: python is good *programming language*, but so is every other.\n\nAlso check the sidebar, this probably isn't the right subreddit :P", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Computer science is about computers as much as astronomy is about telescopes.&lt;/p&gt;\n\n&lt;p&gt;Keep this in mind and everything will be fine :)&lt;/p&gt;\n\n&lt;p&gt;PS: python is good &lt;em&gt;programming language&lt;/em&gt;, but so is every other.&lt;/p&gt;\n\n&lt;p&gt;Also check the sidebar, this probably isn&amp;#39;t the right subreddit :P&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7eariw", "flair_text": null, "created": 1355163624.0, "created_utc": 1355160024.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14m0j2", "children": [], "author": "Slukaj", "id": "c7eat52", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 9, "body": "I'll throw in two cents as a current CS student at Purdue University.\n\nFirst, what is computer science? \n\nWell, computer science isn't all programming. In fact, I wouldn't even say half of computer science is programming. \n\nThe first semester of any University with a good CS program will be an introduction to programming. Here at Purdue, CS students start with Java. After that class, students are on their own for learning any language that pops up during your studies. \n\nThink of programming as a shovel and CS as a gardening class. The very first thing you do is learn how to use the shovel. After you learn how to use it, everything else you do is merely something else that just happens to use that shovel. \n\nProgramming is just a tool to use. \n\nWhat can you do to get yourself ahead? \n\nHmm... To get ahead at the *beginning* of any CS track, I would advise you know a high level language front to back; or at least the standard libraries and methods for that language.\n\nA good language to choose is Java, as it seems to be what a lot of Universities are using for their students. \n\nUnderstand logic flow (conditional and loop statements), object oriented programming (classes, etc), and rudimentary data IO (reading standard input, reading files, etc). \n\nI don't have any off the cuff, but I'm sure some other Redditors will have some good intro to Java tutorials.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ll throw in two cents as a current CS student at Purdue University.&lt;/p&gt;\n\n&lt;p&gt;First, what is computer science? &lt;/p&gt;\n\n&lt;p&gt;Well, computer science isn&amp;#39;t all programming. In fact, I wouldn&amp;#39;t even say half of computer science is programming. &lt;/p&gt;\n\n&lt;p&gt;The first semester of any University with a good CS program will be an introduction to programming. Here at Purdue, CS students start with Java. After that class, students are on their own for learning any language that pops up during your studies. &lt;/p&gt;\n\n&lt;p&gt;Think of programming as a shovel and CS as a gardening class. The very first thing you do is learn how to use the shovel. After you learn how to use it, everything else you do is merely something else that just happens to use that shovel. &lt;/p&gt;\n\n&lt;p&gt;Programming is just a tool to use. &lt;/p&gt;\n\n&lt;p&gt;What can you do to get yourself ahead? &lt;/p&gt;\n\n&lt;p&gt;Hmm... To get ahead at the &lt;em&gt;beginning&lt;/em&gt; of any CS track, I would advise you know a high level language front to back; or at least the standard libraries and methods for that language.&lt;/p&gt;\n\n&lt;p&gt;A good language to choose is Java, as it seems to be what a lot of Universities are using for their students. &lt;/p&gt;\n\n&lt;p&gt;Understand logic flow (conditional and loop statements), object oriented programming (classes, etc), and rudimentary data IO (reading standard input, reading files, etc). &lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t have any off the cuff, but I&amp;#39;m sure some other Redditors will have some good intro to Java tutorials.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7eat52", "flair_text": null, "created": 1355163774.0, "created_utc": 1355160174.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14m0j2", "children": [], "author": "2pacsofgum", "id": "c7easy7", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 2, "body": "I only recently started to program in college, so I don't know if what I'm saying is completely accurate. Someone else can probably give you a better answer.\n\nAnswering your tldr:\n\nI've heard that python is a good language to start with and to learn the basics.\nI started with Java and it's going well. I'd say it's also a good start.\n\nThe difference between science courses is really what focus you want to have, whether it's networking or security or whatever. There's also the survey of computer science which gives a little of everything, including the basic knowledge of how a computer works.\n\nAs for the third thing, I can't really say. Reading, I guess.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I only recently started to program in college, so I don&amp;#39;t know if what I&amp;#39;m saying is completely accurate. Someone else can probably give you a better answer.&lt;/p&gt;\n\n&lt;p&gt;Answering your tldr:&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve heard that python is a good language to start with and to learn the basics.\nI started with Java and it&amp;#39;s going well. I&amp;#39;d say it&amp;#39;s also a good start.&lt;/p&gt;\n\n&lt;p&gt;The difference between science courses is really what focus you want to have, whether it&amp;#39;s networking or security or whatever. There&amp;#39;s also the survey of computer science which gives a little of everything, including the basic knowledge of how a computer works.&lt;/p&gt;\n\n&lt;p&gt;As for the third thing, I can&amp;#39;t really say. Reading, I guess.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7easy7", "flair_text": null, "created": 1355163756.0, "created_utc": 1355160156.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_14m0j2", "children": [], "author": "saranagati", "id": "c7earts", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 9, "body": "&gt; Is Python a good program to start with? If not, what is?\n\nI'm going to quote Joel Spolsky here as I whole heartedly agree with him  \n&gt; For various reasons too complicated to go into here, I believe that you have to start programming at a level that is as close to the machine as reasonable. I think that this book, universally known as K&amp;R, is THE book anyone who wants to be a programmer must learn first. Pick it up and work through it in detail. If you love every minute of it, you can be a programmer. If you find this old-school text programming stuff boring, or the pointer stuff drives you crazy, trust me, you're not going to like programming very much. If you need to be seduced into programming or if you don't have the patience to figure out what all those crazy asterisks mean, you're going to be happier doing something else. Really. But if you can make it through this book by yourself, you've got what it takes to be a top gun programmer, and you've got a terrific foundation for everything else you're going to learn.\n\nedit: hah, just noticed that it didn't actually say the language in the quote.  He was talking about C and the book was \"The C Programming Language\", universally known as K&amp;R.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Is Python a good program to start with? If not, what is?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I&amp;#39;m going to quote Joel Spolsky here as I whole heartedly agree with him  &lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;For various reasons too complicated to go into here, I believe that you have to start programming at a level that is as close to the machine as reasonable. I think that this book, universally known as K&amp;amp;R, is THE book anyone who wants to be a programmer must learn first. Pick it up and work through it in detail. If you love every minute of it, you can be a programmer. If you find this old-school text programming stuff boring, or the pointer stuff drives you crazy, trust me, you&amp;#39;re not going to like programming very much. If you need to be seduced into programming or if you don&amp;#39;t have the patience to figure out what all those crazy asterisks mean, you&amp;#39;re going to be happier doing something else. Really. But if you can make it through this book by yourself, you&amp;#39;ve got what it takes to be a top gun programmer, and you&amp;#39;ve got a terrific foundation for everything else you&amp;#39;re going to learn.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;edit: hah, just noticed that it didn&amp;#39;t actually say the language in the quote.  He was talking about C and the book was &amp;quot;The C Programming Language&amp;quot;, universally known as K&amp;amp;R.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7earts", "flair_text": null, "created": 1355163651.0, "created_utc": 1355160051.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14m0j2", "children": [], "author": "CyberWalrus", "id": "c7eb4f6", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 2, "body": "Note sure how helpful this would be, but as its on my mind right now, I'll post it anyway. \n\nIn the UK there is an annual competition based around solving computer science problems. It may well be way over your head, but if after reading a few past papers, even if you don't really have a clue how to go about solving them, the *idea* of solving them is of interest, then that's a good sign. If you can learn a bit of python and then try solving some, that's even better. I'll be sitting one of these papers in a week or so, but I'm a year ahead of you and have been doing programming for much longer. None of that is really important, but I think its a good idea to enjoy this kind of thing, even if you don't have the syntax/programming knowledge to do it.\n\nAnyway, everything's available at http://www.olympiad.org.uk/, possibly one of the worst websites ever. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Note sure how helpful this would be, but as its on my mind right now, I&amp;#39;ll post it anyway. &lt;/p&gt;\n\n&lt;p&gt;In the UK there is an annual competition based around solving computer science problems. It may well be way over your head, but if after reading a few past papers, even if you don&amp;#39;t really have a clue how to go about solving them, the &lt;em&gt;idea&lt;/em&gt; of solving them is of interest, then that&amp;#39;s a good sign. If you can learn a bit of python and then try solving some, that&amp;#39;s even better. I&amp;#39;ll be sitting one of these papers in a week or so, but I&amp;#39;m a year ahead of you and have been doing programming for much longer. None of that is really important, but I think its a good idea to enjoy this kind of thing, even if you don&amp;#39;t have the syntax/programming knowledge to do it.&lt;/p&gt;\n\n&lt;p&gt;Anyway, everything&amp;#39;s available at &lt;a href=\"http://www.olympiad.org.uk/\"&gt;http://www.olympiad.org.uk/&lt;/a&gt;, possibly one of the worst websites ever. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7eb4f6", "flair_text": null, "created": 1355164810.0, "created_utc": 1355161210.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14m0j2", "children": [], "author": "rehevkor5", "id": "c7eb5na", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 1, "body": "To answer your question about what the difference between the courses are... I would expect that the basic courses are all the same. You won't start having serious choices until you get into the 200 and especially 300+ levels, assuming it works the same in Britain as in the US.\n\nA more important question might be the difference between different majors that your school may offer. For example, they may have Theoretical CS, Applied CS, CS+Math, CS+Statistic, Business Information Systems, or Web Development. Each of these are different.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;To answer your question about what the difference between the courses are... I would expect that the basic courses are all the same. You won&amp;#39;t start having serious choices until you get into the 200 and especially 300+ levels, assuming it works the same in Britain as in the US.&lt;/p&gt;\n\n&lt;p&gt;A more important question might be the difference between different majors that your school may offer. For example, they may have Theoretical CS, Applied CS, CS+Math, CS+Statistic, Business Information Systems, or Web Development. Each of these are different.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7eb5na", "flair_text": null, "created": 1355164920.0, "created_utc": 1355161320.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14m0j2", "children": [], "author": "zeroopacity", "id": "c7eb7e9", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 1, "body": "1. Python is another language just like any other. It is a scripting language as opposed to a compiler language (Java, C++). To get a good taste of programming I would work with a compiler language as well. If you're concerned about being behind, they definitely started us from the ground up, at least at my university. We started with C++ to learn the basics and then moved on to Java. Having some experience with the basics can give you a great leg up. There are plenty of tutorials online for any language you're curious about.\n\n2. Again, I can only speak for my university, but here different computer sciences classes are often in different languages and focus on different topics. We start off with the basics of how to write programs (variable types, syntax, classes, structures, encapsulation), then move onto more advanced topics like data structures (lists, linked lists, hash tables, binary search trees, it also covered basic searching and sorting). Here, you then move onto classes more specific to what you want to do. For example, I'm taking software design, software engineering, game development, and algorithms. We also have sort of computer science general ed classes like computer architecture and operating systems. At my friend's college it sounds like the structure is similar, but they have less variety because the program is older, mine is VERY new. I'm American, and from your terminology it sounds like you're not, but last summer I worked with someone who was from Canada and it sounded similar.\n\n3. I'd find some tutorials online to get a good feel for it. If you can, take an intro course at a community college. It'll give you a great leg up. I took AP CS in high school so my foundation was MUCH stronger than most of my classmates. Don't be discouraged if its hard at first!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;Python is another language just like any other. It is a scripting language as opposed to a compiler language (Java, C++). To get a good taste of programming I would work with a compiler language as well. If you&amp;#39;re concerned about being behind, they definitely started us from the ground up, at least at my university. We started with C++ to learn the basics and then moved on to Java. Having some experience with the basics can give you a great leg up. There are plenty of tutorials online for any language you&amp;#39;re curious about.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;Again, I can only speak for my university, but here different computer sciences classes are often in different languages and focus on different topics. We start off with the basics of how to write programs (variable types, syntax, classes, structures, encapsulation), then move onto more advanced topics like data structures (lists, linked lists, hash tables, binary search trees, it also covered basic searching and sorting). Here, you then move onto classes more specific to what you want to do. For example, I&amp;#39;m taking software design, software engineering, game development, and algorithms. We also have sort of computer science general ed classes like computer architecture and operating systems. At my friend&amp;#39;s college it sounds like the structure is similar, but they have less variety because the program is older, mine is VERY new. I&amp;#39;m American, and from your terminology it sounds like you&amp;#39;re not, but last summer I worked with someone who was from Canada and it sounded similar.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;I&amp;#39;d find some tutorials online to get a good feel for it. If you can, take an intro course at a community college. It&amp;#39;ll give you a great leg up. I took AP CS in high school so my foundation was MUCH stronger than most of my classmates. Don&amp;#39;t be discouraged if its hard at first!&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7eb7e9", "flair_text": null, "created": 1355165080.0, "created_utc": 1355161480.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14m0j2", "children": [], "author": "[deleted]", "id": "c7eb7rr", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 2, "body": "[deleted]", "edited": 1355163431.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7eb7rr", "flair_text": null, "created": 1355165114.0, "created_utc": 1355161514.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14m0j2", "children": [], "author": "danogburn", "id": "c7ect3j", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 1, "body": "\"Is Python a good program to start with? If not, what is?\"\n\nSure, why not? C/C++/Java are cool too.\n\n\"What is the difference between the different Computer Science courses at university?\"\n\nThey cover different areas of computer science. (I guess that's what you're asking)\nusually You take some intro programming class, Algorithms, Computer architecture, O/S architecture, data communications. Then you usually can choose classes in other areas of interest like OOP, software engineering, databases, distributed computing, real-time systems. \n\nsidenote- not everyone's school system is setup the same way. (\"A-levels?\"). People shouldn't also refer to classes by their course numbers (\"300 level classes\")\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&amp;quot;Is Python a good program to start with? If not, what is?&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;Sure, why not? C/C++/Java are cool too.&lt;/p&gt;\n\n&lt;p&gt;&amp;quot;What is the difference between the different Computer Science courses at university?&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;They cover different areas of computer science. (I guess that&amp;#39;s what you&amp;#39;re asking)\nusually You take some intro programming class, Algorithms, Computer architecture, O/S architecture, data communications. Then you usually can choose classes in other areas of interest like OOP, software engineering, databases, distributed computing, real-time systems. &lt;/p&gt;\n\n&lt;p&gt;sidenote- not everyone&amp;#39;s school system is setup the same way. (&amp;quot;A-levels?&amp;quot;). People shouldn&amp;#39;t also refer to classes by their course numbers (&amp;quot;300 level classes&amp;quot;)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ect3j", "flair_text": null, "created": 1355170242.0, "created_utc": 1355166642.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14m0j2", "children": [], "author": "njhCasper", "id": "c7ecu0e", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 2, "body": "Python can be a good starter, but if you start making more complicated programs make sure you \n\n* educate yourself about mutable vs immutable objects\n\n* try not to pull your hair out when importing modules from different directories\n\n* don't ever use a mutable object (such as an array) as a default function argument value.\n\nWith respect to classes. Take discrete math and a theory course and take it seriously. These classes are often difficult, but very valuable to the aspiring computer scientist.\n\nGood luck\n\nEDIT: edited for formatting issues.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python can be a good starter, but if you start making more complicated programs make sure you &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;educate yourself about mutable vs immutable objects&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;try not to pull your hair out when importing modules from different directories&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;don&amp;#39;t ever use a mutable object (such as an array) as a default function argument value.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;With respect to classes. Take discrete math and a theory course and take it seriously. These classes are often difficult, but very valuable to the aspiring computer scientist.&lt;/p&gt;\n\n&lt;p&gt;Good luck&lt;/p&gt;\n\n&lt;p&gt;EDIT: edited for formatting issues.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ecu0e", "flair_text": null, "created": 1355170321.0, "created_utc": 1355166721.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14m0j2", "children": [], "author": "MatrixManAtYrService", "id": "c7edyql", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 2, "body": "I got a job as a software developer in my third year of college, now I write C# for a living (I've since graduated with a CS degree).  On my first day on the job I had still never written a single line of C#.  In my interview I convinced them that I knew object oriented programming principles (as I have some knowledge of C++) and that I was eager to learn new things, and they didn't care at all that I didn't know the language.\n\nThe point I'm trying to make is that for the beginner, language choice isn't that important.  You don't want to be a Python developer, you want to be a developer that knows python, and can learn whatever he needs on the fly.  What is important is that you can use that language to learn the bigger concepts (What is a data structure?  Interpreted vs compiled? How to I write scalable/maintainable code?  How do I go about chasing down a bug?).\n\nSo, with that in mind, the important thing is that you find something that you're likely to find fun and interesting, something that there's plenty of community support for, and run with it.  Python is a fine choice, but be open minded to the possibility that you may need to learn something else on the fly.\n\nI've written this like you want to be a software engineer--really you asked about studying computer science.  The thing is, if you know how to write good code (which is *not* what computer science is about)  then you will be prepared when you need to *use* your ability to write good code to study something like algorithm complexity.\n\n**tl;dr**\nStudying computer science without a familiarity with programming in general is like studying physics without a familiarity with algebra: you're gonna have a bad time.  Don't let yourself get bogged down in the \"which language is better\" debate, because it's generally not as important as it seems--pick one and get coding.\n\nCodeacademy.com is a good place to get started", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I got a job as a software developer in my third year of college, now I write C# for a living (I&amp;#39;ve since graduated with a CS degree).  On my first day on the job I had still never written a single line of C#.  In my interview I convinced them that I knew object oriented programming principles (as I have some knowledge of C++) and that I was eager to learn new things, and they didn&amp;#39;t care at all that I didn&amp;#39;t know the language.&lt;/p&gt;\n\n&lt;p&gt;The point I&amp;#39;m trying to make is that for the beginner, language choice isn&amp;#39;t that important.  You don&amp;#39;t want to be a Python developer, you want to be a developer that knows python, and can learn whatever he needs on the fly.  What is important is that you can use that language to learn the bigger concepts (What is a data structure?  Interpreted vs compiled? How to I write scalable/maintainable code?  How do I go about chasing down a bug?).&lt;/p&gt;\n\n&lt;p&gt;So, with that in mind, the important thing is that you find something that you&amp;#39;re likely to find fun and interesting, something that there&amp;#39;s plenty of community support for, and run with it.  Python is a fine choice, but be open minded to the possibility that you may need to learn something else on the fly.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve written this like you want to be a software engineer--really you asked about studying computer science.  The thing is, if you know how to write good code (which is &lt;em&gt;not&lt;/em&gt; what computer science is about)  then you will be prepared when you need to &lt;em&gt;use&lt;/em&gt; your ability to write good code to study something like algorithm complexity.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;tl;dr&lt;/strong&gt;\nStudying computer science without a familiarity with programming in general is like studying physics without a familiarity with algebra: you&amp;#39;re gonna have a bad time.  Don&amp;#39;t let yourself get bogged down in the &amp;quot;which language is better&amp;quot; debate, because it&amp;#39;s generally not as important as it seems--pick one and get coding.&lt;/p&gt;\n\n&lt;p&gt;Codeacademy.com is a good place to get started&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7edyql", "flair_text": null, "created": 1355173858.0, "created_utc": 1355170258.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14m0j2", "children": [], "author": "Galaxymac", "id": "c7eia6v", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 1, "body": "Python is a nice learning language, which is very human in structure (so to speak), but, it doesn't really matter what language you start with. There is no 'best' language to start with or use, but they each have different strengths and weaknesses. That said, what is important is the concepts behind programming itself, otherwise it is basically down to syntax. Good luck. Live long and prosper.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python is a nice learning language, which is very human in structure (so to speak), but, it doesn&amp;#39;t really matter what language you start with. There is no &amp;#39;best&amp;#39; language to start with or use, but they each have different strengths and weaknesses. That said, what is important is the concepts behind programming itself, otherwise it is basically down to syntax. Good luck. Live long and prosper.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7eia6v", "flair_text": null, "created": 1355187258.0, "created_utc": 1355183658.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14m0j2", "children": [], "author": "DoctorAgon", "id": "c7eibpc", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 2, "body": "Plenty of good insight here so i'll be brief. Python is a fine place to start. But remember, variety is the spice of life.  Try to expose yourself to as many different languages as possible.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Plenty of good insight here so i&amp;#39;ll be brief. Python is a fine place to start. But remember, variety is the spice of life.  Try to expose yourself to as many different languages as possible.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7eibpc", "flair_text": null, "created": 1355187396.0, "created_utc": 1355183796.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14m0j2", "children": [], "author": "danogburn", "id": "c7ejmji", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 1, "body": "smallBasic brah\n\nhttp://smallbasic.com/", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;smallBasic brah&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://smallbasic.com/\"&gt;http://smallbasic.com/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ejmji", "flair_text": null, "created": 1355191764.0, "created_utc": 1355188164.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14m0j2", "children": [], "author": "Lossy", "id": "c7ejxih", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 1, "body": "In all honesty the best possible thing you can do is become as interested in theoretical computer science as possible. Programming on it's own is just a useful means - the theory of programming languages is where stuff starts getting interesting (for example). My favourite area is computational complexity, you can check out \"In pursuit of the travelling salesman\" for a very basic introduction to this amazing area.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In all honesty the best possible thing you can do is become as interested in theoretical computer science as possible. Programming on it&amp;#39;s own is just a useful means - the theory of programming languages is where stuff starts getting interesting (for example). My favourite area is computational complexity, you can check out &amp;quot;In pursuit of the travelling salesman&amp;quot; for a very basic introduction to this amazing area.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ejxih", "flair_text": null, "created": 1355192799.0, "created_utc": 1355189199.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14m0j2", "children": [], "author": "pkx", "id": "c7ekcuh", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 2, "body": "hi dun,\nI'm somewhat surprised that I don't think I have seen anyone pointing out the acm's published perhaps \"guidelines\" or curriculum to what they consider a somewhat well rounded computer sci. education. see:\n\nhttp://www.acm.org//education/curricula/ComputerScience2008.pdf\n\nfurther, if I were you, I'd also do a quick review of the degree requirements of a few of the colleges that I thought were helpful and I respected. for instance, see some of the past core exams that each master's degree candidate at nyu was expected to pass:\n\nhttp://cs.nyu.edu/web/Academic/Graduate/exams/sample/coreprev.html\n\na listing of courses with links for an undergraduate program at mit is here:\n\nhttp://web.mit.edu/catalog/degre.engin.ch6.html\n\nas far as career related advice and so on, I would focus now and preparing myself for becoming whatever I was to become, rather than what I wanted to become, since I think your view of what is out there is perhaps a bit more limited. if I were you, perhaps after you finish your undergrad and in grad school perhaps then I might be thinking about what area of concentration I'd like to go deeper into. This is to say that, I think, if you really quite want to pursue computer science you are probably going to need quite a bit of university level, probably ph.d. level training, which will even then, if I understand correctly, will only be a start.\n\nfinally, regarding any particular programming language, do remember that there are many different programming paradigms, which, to some degree map to a specific model of computation or a so-called abstract machine.\n\none quote that I really love that somewhat helped me to see and understand why the c programming language has been so popular and successful for so long is from a dr. dobb's interview with alex stepanov, who did quite a bit of development work on the STL and generic programming within c++. he says:\n\nhttp://www.sgi.com/tech/stl/drdobbs-interview.html\n\n\"... C was not a quick hack. As computers evolved to handle all kinds of problems, C, being the minimal model of such a computer, became a very powerful language to solve all kinds of problems in different domains very effectively. This is the secret of C's portability: it is the best representation of an abstract computer that we have. Of course, the abstraction is done over the set of real computers, not some imaginary computational devices. Moreover, people could understand the machine model behind C. ...\"\n\nanyway, I wish you all the best luck with your endeavors. the world is very large and its exciting to be at the beginning of your journey. Again, there are so many reports from the field in terms of curriculum guidelines and research paper and so on and you can just jump in by seeing what these areas are, looking at the syllabus for the classes and so on ...\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;hi dun,\nI&amp;#39;m somewhat surprised that I don&amp;#39;t think I have seen anyone pointing out the acm&amp;#39;s published perhaps &amp;quot;guidelines&amp;quot; or curriculum to what they consider a somewhat well rounded computer sci. education. see:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.acm.org//education/curricula/ComputerScience2008.pdf\"&gt;http://www.acm.org//education/curricula/ComputerScience2008.pdf&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;further, if I were you, I&amp;#39;d also do a quick review of the degree requirements of a few of the colleges that I thought were helpful and I respected. for instance, see some of the past core exams that each master&amp;#39;s degree candidate at nyu was expected to pass:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://cs.nyu.edu/web/Academic/Graduate/exams/sample/coreprev.html\"&gt;http://cs.nyu.edu/web/Academic/Graduate/exams/sample/coreprev.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;a listing of courses with links for an undergraduate program at mit is here:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://web.mit.edu/catalog/degre.engin.ch6.html\"&gt;http://web.mit.edu/catalog/degre.engin.ch6.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;as far as career related advice and so on, I would focus now and preparing myself for becoming whatever I was to become, rather than what I wanted to become, since I think your view of what is out there is perhaps a bit more limited. if I were you, perhaps after you finish your undergrad and in grad school perhaps then I might be thinking about what area of concentration I&amp;#39;d like to go deeper into. This is to say that, I think, if you really quite want to pursue computer science you are probably going to need quite a bit of university level, probably ph.d. level training, which will even then, if I understand correctly, will only be a start.&lt;/p&gt;\n\n&lt;p&gt;finally, regarding any particular programming language, do remember that there are many different programming paradigms, which, to some degree map to a specific model of computation or a so-called abstract machine.&lt;/p&gt;\n\n&lt;p&gt;one quote that I really love that somewhat helped me to see and understand why the c programming language has been so popular and successful for so long is from a dr. dobb&amp;#39;s interview with alex stepanov, who did quite a bit of development work on the STL and generic programming within c++. he says:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.sgi.com/tech/stl/drdobbs-interview.html\"&gt;http://www.sgi.com/tech/stl/drdobbs-interview.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;quot;... C was not a quick hack. As computers evolved to handle all kinds of problems, C, being the minimal model of such a computer, became a very powerful language to solve all kinds of problems in different domains very effectively. This is the secret of C&amp;#39;s portability: it is the best representation of an abstract computer that we have. Of course, the abstraction is done over the set of real computers, not some imaginary computational devices. Moreover, people could understand the machine model behind C. ...&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;anyway, I wish you all the best luck with your endeavors. the world is very large and its exciting to be at the beginning of your journey. Again, there are so many reports from the field in terms of curriculum guidelines and research paper and so on and you can just jump in by seeing what these areas are, looking at the syllabus for the classes and so on ...&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ekcuh", "flair_text": null, "created": 1355194203.0, "created_utc": 1355190603.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14m0j2", "children": [], "author": "sakekasi", "id": "c7zlujg", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 1, "body": "Learning a programming language is a good start, but as a self taught programmer, I learnt the most from messing around with the insides of computers. What I wish I knew when I started out is that programming is great, but computer programs operate as part of a larger system, whether that system is a computer with windows or mac os or linux. Learn python, but also take the time to install linux and mess around with it. Get a good feel for the insides of your operating system and how it operates and you will have an advantage over people who are just getting introduced to these tools when you get to university.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Learning a programming language is a good start, but as a self taught programmer, I learnt the most from messing around with the insides of computers. What I wish I knew when I started out is that programming is great, but computer programs operate as part of a larger system, whether that system is a computer with windows or mac os or linux. Learn python, but also take the time to install linux and mess around with it. Get a good feel for the insides of your operating system and how it operates and you will have an advantage over people who are just getting introduced to these tools when you get to university.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7zlujg", "flair_text": null, "created": 1358575329.0, "created_utc": 1358571729.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_14m0j2", "children": [], "author": "Phaper", "id": "c7efinr", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 3, "body": "Hey there OP! I'm in my second year studying Computer Science myself. To be honest - start learning C#. Easy to learn and the skills you learn there can be used in other languages like Java. There are plenty of ways to learn C#, I believe Microsoft offers a free version of Visual Studio which lets you make C# programs.\n\nNow then, you've just started A-Levels and right now, you should focus on the subjects you are doing at the moment. Speaking from experience (when I did my A-Levels), I wasn't thinking about learning programming languages on the side! Besides, I originally wanted to study Psychology at University but I changed my mind.\n\nJust enjoy your subjects and work hard. You may find something which may interest you to change your mind. Good luck!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hey there OP! I&amp;#39;m in my second year studying Computer Science myself. To be honest - start learning C#. Easy to learn and the skills you learn there can be used in other languages like Java. There are plenty of ways to learn C#, I believe Microsoft offers a free version of Visual Studio which lets you make C# programs.&lt;/p&gt;\n\n&lt;p&gt;Now then, you&amp;#39;ve just started A-Levels and right now, you should focus on the subjects you are doing at the moment. Speaking from experience (when I did my A-Levels), I wasn&amp;#39;t thinking about learning programming languages on the side! Besides, I originally wanted to study Psychology at University but I changed my mind.&lt;/p&gt;\n\n&lt;p&gt;Just enjoy your subjects and work hard. You may find something which may interest you to change your mind. Good luck!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7efinr", "flair_text": null, "created": 1355178570.0, "created_utc": 1355174970.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_14m0j2", "children": [], "author": "rehevkor5", "id": "c7eb283", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 4, "body": "Am I the only one who sees an issue with someone going into a CS degree program without any previous programming experience?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Am I the only one who sees an issue with someone going into a CS degree program without any previous programming experience?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7eb283", "flair_text": null, "created": 1355164611.0, "created_utc": 1355161011.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14m0j2", "children": [], "author": "CChevdogg", "id": "c7echty", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 2, "body": "Python isn't a program. It's an object oriented programming language used for many different applications and programs. In my opinion, it's one of the best to start off with. Other useful languages include C++, Java, PHP, Javascript, Perl, HTML, CSS, and many others, each having their own unique purpose. Every course at University has it's own useful purpose. With a CS major, you will be focusing more on programming aspects whereas with an IT major, you will learn more about the other aspects of computing such as networking, cryptography, security etc... Something that I wish I did is just to take time and devote it to learning. Practice coding, if you don't know what something means, look it up. The world of CS is filled with endless acronyms, but as long as you know what you're looking at, you should be fine. Oh and Google = God to IT folk.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python isn&amp;#39;t a program. It&amp;#39;s an object oriented programming language used for many different applications and programs. In my opinion, it&amp;#39;s one of the best to start off with. Other useful languages include C++, Java, PHP, Javascript, Perl, HTML, CSS, and many others, each having their own unique purpose. Every course at University has it&amp;#39;s own useful purpose. With a CS major, you will be focusing more on programming aspects whereas with an IT major, you will learn more about the other aspects of computing such as networking, cryptography, security etc... Something that I wish I did is just to take time and devote it to learning. Practice coding, if you don&amp;#39;t know what something means, look it up. The world of CS is filled with endless acronyms, but as long as you know what you&amp;#39;re looking at, you should be fine. Oh and Google = God to IT folk.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7echty", "flair_text": null, "created": 1355169256.0, "created_utc": 1355165656.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14m0j2", "children": [], "author": "danogburn", "id": "c7ees8u", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 2, "body": "Learn QBASIC.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Learn QBASIC.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ees8u", "flair_text": null, "created": 1355176357.0, "created_utc": 1355172757.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14m0j2", "children": [], "author": "drobilla", "id": "c7ehiu1", "parent_id": "t3_14m0j2", "score": 0, "approved_by": null, "upvotes": 2, "body": "Python is increasing in popularity, both as a \"glue\" (or even primary) language for scientific work, and as the language used for introductory courses.\n\nThere are many opinions about the best language to start with, but Python is definitely a good choice.  There are modules for so many things it makes doing lots of high level stuff simple, and the paradigms used in Python are ones common to most popular languages.\n\nIf you like puzzles, perhaps try [The Python Challenge](http://www.pythonchallenge.com/), though not CS it's a fun way to get your programming feet wet.\n\nThat said, I am partial to the [SICP](http://mitpress.mit.edu/sicp/) way of introduction to computer science, as used until recently by MIT.  If you want to work through a book designed specifically to introduce programming to those completely unfamiliar with it, I very highly recommend this one.  Though Scheme is not nearly as widely used as Python, its extreme simplicity makes it great for learning.", "edited": 1355181737.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Python is increasing in popularity, both as a &amp;quot;glue&amp;quot; (or even primary) language for scientific work, and as the language used for introductory courses.&lt;/p&gt;\n\n&lt;p&gt;There are many opinions about the best language to start with, but Python is definitely a good choice.  There are modules for so many things it makes doing lots of high level stuff simple, and the paradigms used in Python are ones common to most popular languages.&lt;/p&gt;\n\n&lt;p&gt;If you like puzzles, perhaps try &lt;a href=\"http://www.pythonchallenge.com/\"&gt;The Python Challenge&lt;/a&gt;, though not CS it&amp;#39;s a fun way to get your programming feet wet.&lt;/p&gt;\n\n&lt;p&gt;That said, I am partial to the &lt;a href=\"http://mitpress.mit.edu/sicp/\"&gt;SICP&lt;/a&gt; way of introduction to computer science, as used until recently by MIT.  If you want to work through a book designed specifically to introduce programming to those completely unfamiliar with it, I very highly recommend this one.  Though Scheme is not nearly as widely used as Python, its extreme simplicity makes it great for learning.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ehiu1", "flair_text": null, "created": 1355184798.0, "created_utc": 1355181198.0, "num_reports": null}], "score": 14, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 34, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/14m0j2/aspiring_computer_scientist_some_questions_inside/", "has_more_comments": false, "name": "t3_14m0j2", "created": 1355158940.0, "url": "http://www.reddit.com/r/compsci/comments/14m0j2/aspiring_computer_scientist_some_questions_inside/", "author_flair_text": null, "author": "Dr_User_Name", "created_utc": 1355158940.0, "link_flair_text": null, "media": null, "num_reports": null}, "182": {"domain": "cs.stackexchange.com", "link_flair_class": null, "banned_by": null, "downvotes": 26, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "14jzhl", "clicked": false, "title": "Computer Science stackexchange, currently in beta a great resource but could use some more activity. Check it out!", "num_comments": 8, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_14jzhl", "children": [], "author": "bo1024", "id": "c7dqrb6", "parent_id": "t3_14jzhl", "score": 0, "approved_by": null, "upvotes": 12, "body": "There is also http://cstheory.stackexchange.com/ for \"research-level\" questions in Computer Science.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There is also &lt;a href=\"http://cstheory.stackexchange.com/\"&gt;http://cstheory.stackexchange.com/&lt;/a&gt; for &amp;quot;research-level&amp;quot; questions in Computer Science.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7dqrb6", "flair_text": null, "created": 1355078972.0, "created_utc": 1355075372.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 62, "link_id": "t3_14jzhl", "children": [], "author": "screwthat4u", "id": "c7dsm5e", "parent_id": "t3_14jzhl", "score": 0, "approved_by": null, "upvotes": 8, "body": "Isnt stack exchange a place were people who suck at programming go to ask for someone else to do their work for them?\n\nEdit: seems crappy programmers have fragile ego's", "edited": 1355109767.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Isnt stack exchange a place were people who suck at programming go to ask for someone else to do their work for them?&lt;/p&gt;\n\n&lt;p&gt;Edit: seems crappy programmers have fragile ego&amp;#39;s&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7dsm5e", "flair_text": null, "created": 1355085203.0, "created_utc": 1355081603.0, "num_reports": null}], "score": 109, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 135, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/14jzhl/computer_science_stackexchange_currently_in_beta/", "has_more_comments": false, "name": "t3_14jzhl", "created": 1355075335.0, "url": "http://cs.stackexchange.com/", "author_flair_text": null, "author": "bo1024", "created_utc": 1355075335.0, "link_flair_text": null, "media": null, "num_reports": null}, "183": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 4, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m currently working on a project where I&amp;#39;ll be hashing unique keys and then hashing them to be stored as values in cookies. This will be used for authenticating user information so the hashed value must be unique. I&amp;#39;ll be using sha512 and for it&amp;#39;s purpose I&amp;#39;m confident the keys should be unique. &lt;strong&gt;However it did make me think.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;What if (just for fun) I wanted to hash an entire book, from front to back? Expanding on that what if I wanted to create a hash for each book ever written?&lt;/p&gt;\n\n&lt;p&gt;Does the size of the string you input into the hash function create a greater chance of duplicate keys?&lt;/p&gt;\n\n&lt;p&gt;This is probably a stupid question, but it&amp;#39;s one that got me thinking..&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm currently working on a project where I'll be hashing unique keys and then hashing them to be stored as values in cookies. This will be used for authenticating user information so the hashed value must be unique. I'll be using sha512 and for it's purpose I'm confident the keys should be unique. **However it did make me think.**\n\nWhat if (just for fun) I wanted to hash an entire book, from front to back? Expanding on that what if I wanted to create a hash for each book ever written?\n\nDoes the size of the string you input into the hash function create a greater chance of duplicate keys?\n\nThis is probably a stupid question, but it's one that got me thinking..", "saved": false, "id": "14lbaq", "clicked": false, "title": "Question about hashing large strings of data.", "num_comments": 10, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14lbaq", "children": [], "author": "more_exercise", "id": "c7eitc2", "parent_id": "t3_14lbaq", "score": 0, "approved_by": null, "upvotes": 2, "body": "&gt;hashed value must be unique\n\nWhile there is no real worry that sha512 will ever produce unique values, it still makes me a little nervous when they *absolutely positively must* be unique.  You could still hash ~(every atom in the universe, at every second in time since the big bang) and still not have a credible chance of getting an accidental hash collision, so this is not a reasonable concern, but I still feel the need to voice it.\n\n&gt;Does the size of the string you input into the hash function create a greater chance of duplicate keys?\n\nNo, not really. (Ignoring nitpicks,) each letter you add to the input completely changes the outputted hash, and doesn't change the chances of a hash collision at all.  It's not like making your input bigger is going to lock down any of the output bits:\n\n    SHA512(\"The quick brown fox jumps over the lazy dog\")\n\n`0x07e547d9586f6a73\u200bf73fbac0435ed769\u200b51218fb7d0c8d788\u200ba309d785436bbb64\u200b2e93a252a954f239\u200b12547d1e8a3b5e\u200bd6e1bfd709782123\u200b3fa0538f3db854fee6`\n\n    SHA512(\"The quick brown fox jumps over the lazy dog.\")\n\n`0x91ea1245f20d46ae\u200b9a037a989f54f1f7\u200b90f0a47607eeb8a1\u200b4d12890cea77a1bb\u200bc6c7ed9cf205e67b\u200b7f2b8fd4c7dfd3a7\u200ba8617e45f3c463d4\u200b81c7e586c39ac1ed\u200b`", "edited": 1355185976.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;hashed value must be unique&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;While there is no real worry that sha512 will ever produce unique values, it still makes me a little nervous when they &lt;em&gt;absolutely positively must&lt;/em&gt; be unique.  You could still hash ~(every atom in the universe, at every second in time since the big bang) and still not have a credible chance of getting an accidental hash collision, so this is not a reasonable concern, but I still feel the need to voice it.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Does the size of the string you input into the hash function create a greater chance of duplicate keys?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;No, not really. (Ignoring nitpicks,) each letter you add to the input completely changes the outputted hash, and doesn&amp;#39;t change the chances of a hash collision at all.  It&amp;#39;s not like making your input bigger is going to lock down any of the output bits:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;SHA512(&amp;quot;The quick brown fox jumps over the lazy dog&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;0x07e547d9586f6a73\u200bf73fbac0435ed769\u200b51218fb7d0c8d788\u200ba309d785436bbb64\u200b2e93a252a954f239\u200b12547d1e8a3b5e\u200bd6e1bfd709782123\u200b3fa0538f3db854fee6&lt;/code&gt;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;SHA512(&amp;quot;The quick brown fox jumps over the lazy dog.&amp;quot;)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;0x91ea1245f20d46ae\u200b9a037a989f54f1f7\u200b90f0a47607eeb8a1\u200b4d12890cea77a1bb\u200bc6c7ed9cf205e67b\u200b7f2b8fd4c7dfd3a7\u200ba8617e45f3c463d4\u200b81c7e586c39ac1ed\u200b&lt;/code&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7eitc2", "flair_text": null, "created": 1355189032.0, "created_utc": 1355185432.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14lbaq", "children": [], "author": "miellaby", "id": "c7feo0r", "parent_id": "t3_14lbaq", "score": 0, "approved_by": null, "upvotes": 2, "body": "&gt; Expanding on that what if I wanted to create a hash for each book ever written?\n\nFYI, that's mainly how works synchronization suite like dropbox. Each file is hashed then \"deduped\" both server side and client side. It leads to lightspeed synchronization\n\n - what an user has uploaded once will never be reuploaded again, even if randomly renamed or moved\n\n - no other user will ever need to upload a copy of this file! The deduped instance is automagically shared across users.\n\nThat's also how work distributed version managers today.\n", "edited": 1355327024.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Expanding on that what if I wanted to create a hash for each book ever written?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;FYI, that&amp;#39;s mainly how works synchronization suite like dropbox. Each file is hashed then &amp;quot;deduped&amp;quot; both server side and client side. It leads to lightspeed synchronization&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;what an user has uploaded once will never be reuploaded again, even if randomly renamed or moved&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;no other user will ever need to upload a copy of this file! The deduped instance is automagically shared across users.&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;That&amp;#39;s also how work distributed version managers today.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7feo0r", "flair_text": null, "created": 1355330055.0, "created_utc": 1355326455.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14lbaq", "children": [], "author": "bo1024", "id": "c7hcu34", "parent_id": "t3_14lbaq", "score": 0, "approved_by": null, "upvotes": 1, "body": "If you are hashing to 512 bits, then there will be multiple 513-bit strings that hash to the same value. This is a direct application of the pigeonhole principle. There are \"more\" 513-bit strings than there are 512-bit strings, so you mathematically must have some collisions.\n\nAs others have said, this is nothing to worry about in practice. There are 2^512 bit-strings of length 512. This number is incredibly vast (think atoms in the universe squared). So we can expect these collisions to be pretty rare.\n\nThe number of collisions will certainly go up if your string length goes up. Consider hashing 1024-bit strings (that's a longish paragraph of ascii text). There are 2^1024 possible strings, and we're hashing into 2^512 outputs, so on average there are 2^512 collisions per output string. Lots and lots and lots and lots of collisions. But if you pick two 1024-bit strings at random, the chance that those two will collide is still miniscule (because there are still 2^512 possible hashes for each). Same goes if you pick a billion 1024-bit strings.\n\nWhat's important to remember is that the number of, say, pages of text that the human race has produced is a tiny, tiny fraction of all the mathematically possible; and even if we were technologically unlimited we'd still run out of atoms to make pages out of before we'd \"expect\" a collision.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you are hashing to 512 bits, then there will be multiple 513-bit strings that hash to the same value. This is a direct application of the pigeonhole principle. There are &amp;quot;more&amp;quot; 513-bit strings than there are 512-bit strings, so you mathematically must have some collisions.&lt;/p&gt;\n\n&lt;p&gt;As others have said, this is nothing to worry about in practice. There are 2&lt;sup&gt;512&lt;/sup&gt; bit-strings of length 512. This number is incredibly vast (think atoms in the universe squared). So we can expect these collisions to be pretty rare.&lt;/p&gt;\n\n&lt;p&gt;The number of collisions will certainly go up if your string length goes up. Consider hashing 1024-bit strings (that&amp;#39;s a longish paragraph of ascii text). There are 2&lt;sup&gt;1024&lt;/sup&gt; possible strings, and we&amp;#39;re hashing into 2&lt;sup&gt;512&lt;/sup&gt; outputs, so on average there are 2&lt;sup&gt;512&lt;/sup&gt; collisions per output string. Lots and lots and lots and lots of collisions. But if you pick two 1024-bit strings at random, the chance that those two will collide is still miniscule (because there are still 2&lt;sup&gt;512&lt;/sup&gt; possible hashes for each). Same goes if you pick a billion 1024-bit strings.&lt;/p&gt;\n\n&lt;p&gt;What&amp;#39;s important to remember is that the number of, say, pages of text that the human race has produced is a tiny, tiny fraction of all the mathematically possible; and even if we were technologically unlimited we&amp;#39;d still run out of atoms to make pages out of before we&amp;#39;d &amp;quot;expect&amp;quot; a collision.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7hcu34", "flair_text": null, "created": 1355648933.0, "created_utc": 1355645333.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14lbaq", "children": [], "author": "geezusfreeek", "id": "c7ihm6h", "parent_id": "t3_14lbaq", "score": 0, "approved_by": null, "upvotes": 1, "body": "The lengths of the books don't matter. The number of books does. Unless you have hundreds of powers of two books, it isn't worth worrying about.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The lengths of the books don&amp;#39;t matter. The number of books does. Unless you have hundreds of powers of two books, it isn&amp;#39;t worth worrying about.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ihm6h", "flair_text": null, "created": 1355841606.0, "created_utc": 1355838006.0, "num_reports": null}], "score": 2, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 6, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/14lbaq/question_about_hashing_large_strings_of_data/", "has_more_comments": false, "name": "t3_14lbaq", "created": 1355120021.0, "url": "http://www.reddit.com/r/compsci/comments/14lbaq/question_about_hashing_large_strings_of_data/", "author_flair_text": null, "author": "CodyOdi", "created_utc": 1355120021.0, "link_flair_text": null, "media": null, "num_reports": null}, "184": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 11, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I just discovered tail recursion and how it can bring a big performance boost. I tried some academic functions like Fibonacci and so on, but when I try to implement tail recursion in a real life scenario I kinda fail. I would like to to make the naive MSPaint  pixel fill function tail recursive&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function recfill(x, y, oldcolor, newcolor) {\n    if(getPixel(x,y) === oldcolor) {\n        setPixel(x,y,newcolor); \n\n        recfill(x-1,y, oldcolor, newcolor);\n        recfill(x+1,y, oldcolor, newcolor);\n        recfill(x,y-1, oldcolor, newcolor);\n        recfill(x,y+1, oldcolor, newcolor);\n    }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;but there is a obvious problem. Tail recursion only works when the recursive part is at the end of the function but I have not one but four recursive calls. Does it make sense to make this function tail recursive? &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I just discovered tail recursion and how it can bring a big performance boost. I tried some academic functions like Fibonacci and so on, but when I try to implement tail recursion in a real life scenario I kinda fail. I would like to to make the naive MSPaint  pixel fill function tail recursive\n\n\tfunction recfill(x, y, oldcolor, newcolor) {\n\t\tif(getPixel(x,y) === oldcolor) {\n\t\t\tsetPixel(x,y,newcolor); \n\n\t\t\trecfill(x-1,y, oldcolor, newcolor);\n\t\t\trecfill(x+1,y, oldcolor, newcolor);\n\t\t\trecfill(x,y-1, oldcolor, newcolor);\n\t\t\trecfill(x,y+1, oldcolor, newcolor);\n\t\t}\n\t}\n\n\nbut there is a obvious problem. Tail recursion only works when the recursive part is at the end of the function but I have not one but four recursive calls. Does it make sense to make this function tail recursive? ", "saved": false, "id": "14jpr4", "clicked": false, "title": "Can I make every recursive function tail recursive?", "num_comments": 48, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_14jpr4", "children": [], "author": "anvsdt", "id": "c7do8ev", "parent_id": "t3_14jpr4", "score": 0, "approved_by": null, "upvotes": 23, "body": "In theory, you can (just CPS-transform your code, then every function call is in tail position). In practice, it isn't worth the pain.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In theory, you can (just CPS-transform your code, then every function call is in tail position). In practice, it isn&amp;#39;t worth the pain.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7do8ev", "flair_text": null, "created": 1355067015.0, "created_utc": 1355063415.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_14jpr4", "children": [], "author": "naasking", "id": "c7do4hl", "parent_id": "t3_14jpr4", "score": 0, "approved_by": null, "upvotes": 29, "body": "You can make every recursive function tail recursive, but then you'd be allocating (stack) space on the heap. Some functions just require storage.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can make every recursive function tail recursive, but then you&amp;#39;d be allocating (stack) space on the heap. Some functions just require storage.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7do4hl", "flair_text": null, "created": 1355066214.0, "created_utc": 1355062614.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_14jpr4", "children": [], "author": "smog_alado", "id": "c7docnu", "parent_id": "t3_14jpr4", "score": 0, "approved_by": null, "upvotes": 13, "body": "Side note: You fell into the common trap of getting an infinite loop if `oldcolor == newcolor`.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Side note: You fell into the common trap of getting an infinite loop if &lt;code&gt;oldcolor == newcolor&lt;/code&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7docnu", "flair_text": null, "created": 1355067844.0, "created_utc": 1355064244.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14jpr4", "children": [], "author": "Lord_Naikon", "id": "c7dod9r", "parent_id": "t3_14jpr4", "score": 0, "approved_by": null, "upvotes": 4, "body": "Tail call optimization doesn't necessarily give a performance boost, but it bounds the amount of stack space used to a constant. You need TCO if you don't know if or when a tail recursive function terminates, and you cannot simply transform the recursion to a loop.\n\nYour function cannot be made \"tail recursive\" without explicitly allocating storage for x &amp; y parameters, defeating the purpose of TCO.\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Tail call optimization doesn&amp;#39;t necessarily give a performance boost, but it bounds the amount of stack space used to a constant. You need TCO if you don&amp;#39;t know if or when a tail recursive function terminates, and you cannot simply transform the recursion to a loop.&lt;/p&gt;\n\n&lt;p&gt;Your function cannot be made &amp;quot;tail recursive&amp;quot; without explicitly allocating storage for x &amp;amp; y parameters, defeating the purpose of TCO.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7dod9r", "flair_text": null, "created": 1355067960.0, "created_utc": 1355064360.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_14jpr4", "children": [], "author": "grelphy", "id": "c7do9nv", "parent_id": "t3_14jpr4", "score": 0, "approved_by": null, "upvotes": 6, "body": "No, you can't (trivially) make every recursive function tail recursive\u2014the function you've just described is an example. Tail recursion requires that the recursive call be the *last* operation in the calling function, which is of course impossible if there are multiple recursive calls.\n\nYou can make the transformation in a more complex manner by making an explicit \"call\" stack part of the function's state.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No, you can&amp;#39;t (trivially) make every recursive function tail recursive\u2014the function you&amp;#39;ve just described is an example. Tail recursion requires that the recursive call be the &lt;em&gt;last&lt;/em&gt; operation in the calling function, which is of course impossible if there are multiple recursive calls.&lt;/p&gt;\n\n&lt;p&gt;You can make the transformation in a more complex manner by making an explicit &amp;quot;call&amp;quot; stack part of the function&amp;#39;s state.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7do9nv", "flair_text": null, "created": 1355067254.0, "created_utc": 1355063654.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14jpr4", "children": [], "author": "cypherpunks", "id": "c7eg8bz", "parent_id": "t3_14jpr4", "score": 0, "approved_by": null, "upvotes": 1, "body": "Basically, no.  There are esoteric tricks for doing it (like anvsdt's suggestion of continuation-passing style), but they just amount to moving the stack frame somewhere else; you still need to store the extra context somewhere.\n\nAs an efficiency improvement, it's a loss.\n\nTail recursion is a special case of recursion.  It only applies sometimes.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Basically, no.  There are esoteric tricks for doing it (like anvsdt&amp;#39;s suggestion of continuation-passing style), but they just amount to moving the stack frame somewhere else; you still need to store the extra context somewhere.&lt;/p&gt;\n\n&lt;p&gt;As an efficiency improvement, it&amp;#39;s a loss.&lt;/p&gt;\n\n&lt;p&gt;Tail recursion is a special case of recursion.  It only applies sometimes.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7eg8bz", "flair_text": null, "created": 1355180724.0, "created_utc": 1355177124.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14jpr4", "children": [], "author": "geezusfreeek", "id": "c7f0s75", "parent_id": "t3_14jpr4", "score": 0, "approved_by": null, "upvotes": 1, "body": "You can do this mechanically by reifying the stack.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can do this mechanically by reifying the stack.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7f0s75", "flair_text": null, "created": 1355266103.0, "created_utc": 1355262503.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_14jpr4", "children": [], "author": "Zamarok", "id": "c7dqyvl", "parent_id": "t3_14jpr4", "score": 0, "approved_by": null, "upvotes": 2, "body": "This code won't even work. It will infinitely recur over the 2d plane of your rectangle, and will probably overflow the stack in milliseconds. But yes, in theory you can.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This code won&amp;#39;t even work. It will infinitely recur over the 2d plane of your rectangle, and will probably overflow the stack in milliseconds. But yes, in theory you can.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7dqyvl", "flair_text": null, "created": 1355079719.0, "created_utc": 1355076119.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_14jpr4", "children": [], "author": "adremeaux", "id": "c7dr458", "parent_id": "t3_14jpr4", "score": 0, "approved_by": null, "upvotes": 1, "body": "That method is so grossly inefficient, I don't even... after it calls at x+1, that call is going to call back to x-1, which is going to fail 100% of the time. Ditto on the y-1s. Full on half of the recursive calls are completely unneeded. You *really* shouldn't be using recursion for a method like this, it is drastically less efficient than a simple loop. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That method is so grossly inefficient, I don&amp;#39;t even... after it calls at x+1, that call is going to call back to x-1, which is going to fail 100% of the time. Ditto on the y-1s. Full on half of the recursive calls are completely unneeded. You &lt;em&gt;really&lt;/em&gt; shouldn&amp;#39;t be using recursion for a method like this, it is drastically less efficient than a simple loop. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7dr458", "flair_text": null, "created": 1355080218.0, "created_utc": 1355076618.0, "num_reports": null}], "score": 30, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 41, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/14jpr4/can_i_make_every_recursive_function_tail_recursive/", "has_more_comments": false, "name": "t3_14jpr4", "created": 1355061707.0, "url": "http://www.reddit.com/r/compsci/comments/14jpr4/can_i_make_every_recursive_function_tail_recursive/", "author_flair_text": null, "author": "Gefrierbrand", "created_utc": 1355061707.0, "link_flair_text": null, "media": null, "num_reports": null}, "185": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 3, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Could some one point me to some reference papers and texts on sliding window based localisation alogorithms&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Could some one point me to some reference papers and texts on sliding window based localisation alogorithms", "saved": false, "id": "14ji4j", "clicked": false, "title": "References to sliding window based localisation algorithms in computer vision", "num_comments": 3, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14ji4j", "children": [], "author": "DoorsofPerceptron", "id": "c7eqna9", "parent_id": "t3_14ji4j", "score": 0, "approved_by": null, "upvotes": 1, "body": "To do what? Almost every paper that does localisation or detection makes use of sliding windows.\n\nPick three random papers from any CVPR in the last 10 years, one of them will probably use sliding windows for localisation. You have to narrow  it down a bit.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;To do what? Almost every paper that does localisation or detection makes use of sliding windows.&lt;/p&gt;\n\n&lt;p&gt;Pick three random papers from any CVPR in the last 10 years, one of them will probably use sliding windows for localisation. You have to narrow  it down a bit.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7eqna9", "flair_text": null, "created": 1355219910.0, "created_utc": 1355216310.0, "num_reports": null}], "score": 6, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 9, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/14ji4j/references_to_sliding_window_based_localisation/", "has_more_comments": false, "name": "t3_14ji4j", "created": 1355042478.0, "url": "http://www.reddit.com/r/compsci/comments/14ji4j/references_to_sliding_window_based_localisation/", "author_flair_text": null, "author": "subho1990", "created_utc": 1355042478.0, "link_flair_text": null, "media": null, "num_reports": null}, "186": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 7, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;And to make positively sure I can understand the concept, can you explain the way you would to a ten year old?&lt;/p&gt;\n\n&lt;p&gt;Thanks! :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "And to make positively sure I can understand the concept, can you explain the way you would to a ten year old?\n\nThanks! :)", "saved": false, "id": "14ipbp", "clicked": false, "title": "Can you explain the Bell\u2013LaPadula model to someone who doesn't know anything about compsci or computer security?", "num_comments": 9, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 10, "link_id": "t3_14ipbp", "children": [], "author": "wickedsweetcake", "id": "c7dgjj3", "parent_id": "t3_14ipbp", "score": 0, "approved_by": null, "upvotes": 54, "body": "Think of how the government classifies documents in movies.  There's usually a \"Secret\" level that most of the government has access to, a \"Top Secret\" level that even fewer people have access to, maybe a \"Double-Z Top Secret\" level that is for the President's eyes only, and then a \"Regular\" level for documents that don't have to be classified.  Bell-LaPadula implements three rules on a classification system like this.\n\nThe first rule says that you can't read documents if you don't have a high enough classification level.  So if you have a \"Secret\" clearance, then you can read \"Secret\" and \"Regular\" documents, but you can't read \"Top Secret\" or \"Double-Z Top Secret\" documents.  Simple enough, and works exactly how you'd expect.  The simple description of this rule is \"no read-up.\"\n\nThe second rule says that you can't write documents lower than your classification level.  Interestingly, you can write documents higher than your classification level, but you still can't read them.  So again if you have a \"Secret\" classification level, you can write to \"Secret,\" \"Top Secret,\" and \"Double-Z Top Secret\", but you can't write to \"Regular\".  Why does this make sense?  Imagine you have a bunch of secrets in your head... so many secrets that you don't remember what level each of them should be classified at.  That means that if you could write to the \"Regular\" level, you might accidentally reveal a \"Secret\" level secret to a file that anyone can read.  At the same time, if you're a secret agent in the field and need to tell the President something, but make sure that no one else can read it, you'd need to have write permission to the \"Double-Z Top Secret\" level.  You still can't read the other documents that the President can, but you can certainly write to them.  The simple description of this rule is \"no write-down.\"\n\nThe third rule just adds an extra level of detail to access.  It allows for much more fine-grained access, based on who you are and what you're trying to access.  For example, a researcher with the Department of Education might have a \"Top Secret\" clearance for access to some documents, but this researcher shouldn't be allowed to access every single \"Top Secret\" document, like nuclear missile locations - only the ones relevant to education.  So the third rule allows for what's called an \"Access Control Matrix,\" so that you can look up a user row, look up a file column, find the cell in the matrix where they meet, and look up the precise access which that user should have to that file.  Can the user delete the file?  Write to the file?  Read from the file?  Is the user the owner of the file?  That's what the third rule provides.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Think of how the government classifies documents in movies.  There&amp;#39;s usually a &amp;quot;Secret&amp;quot; level that most of the government has access to, a &amp;quot;Top Secret&amp;quot; level that even fewer people have access to, maybe a &amp;quot;Double-Z Top Secret&amp;quot; level that is for the President&amp;#39;s eyes only, and then a &amp;quot;Regular&amp;quot; level for documents that don&amp;#39;t have to be classified.  Bell-LaPadula implements three rules on a classification system like this.&lt;/p&gt;\n\n&lt;p&gt;The first rule says that you can&amp;#39;t read documents if you don&amp;#39;t have a high enough classification level.  So if you have a &amp;quot;Secret&amp;quot; clearance, then you can read &amp;quot;Secret&amp;quot; and &amp;quot;Regular&amp;quot; documents, but you can&amp;#39;t read &amp;quot;Top Secret&amp;quot; or &amp;quot;Double-Z Top Secret&amp;quot; documents.  Simple enough, and works exactly how you&amp;#39;d expect.  The simple description of this rule is &amp;quot;no read-up.&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;The second rule says that you can&amp;#39;t write documents lower than your classification level.  Interestingly, you can write documents higher than your classification level, but you still can&amp;#39;t read them.  So again if you have a &amp;quot;Secret&amp;quot; classification level, you can write to &amp;quot;Secret,&amp;quot; &amp;quot;Top Secret,&amp;quot; and &amp;quot;Double-Z Top Secret&amp;quot;, but you can&amp;#39;t write to &amp;quot;Regular&amp;quot;.  Why does this make sense?  Imagine you have a bunch of secrets in your head... so many secrets that you don&amp;#39;t remember what level each of them should be classified at.  That means that if you could write to the &amp;quot;Regular&amp;quot; level, you might accidentally reveal a &amp;quot;Secret&amp;quot; level secret to a file that anyone can read.  At the same time, if you&amp;#39;re a secret agent in the field and need to tell the President something, but make sure that no one else can read it, you&amp;#39;d need to have write permission to the &amp;quot;Double-Z Top Secret&amp;quot; level.  You still can&amp;#39;t read the other documents that the President can, but you can certainly write to them.  The simple description of this rule is &amp;quot;no write-down.&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;The third rule just adds an extra level of detail to access.  It allows for much more fine-grained access, based on who you are and what you&amp;#39;re trying to access.  For example, a researcher with the Department of Education might have a &amp;quot;Top Secret&amp;quot; clearance for access to some documents, but this researcher shouldn&amp;#39;t be allowed to access every single &amp;quot;Top Secret&amp;quot; document, like nuclear missile locations - only the ones relevant to education.  So the third rule allows for what&amp;#39;s called an &amp;quot;Access Control Matrix,&amp;quot; so that you can look up a user row, look up a file column, find the cell in the matrix where they meet, and look up the precise access which that user should have to that file.  Can the user delete the file?  Write to the file?  Read from the file?  Is the user the owner of the file?  That&amp;#39;s what the third rule provides.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7dgjj3", "flair_text": null, "created": 1355021474.0, "created_utc": 1355017874.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14ipbp", "children": [], "author": "bNimblebQuick", "id": "c7dh7xt", "parent_id": "t3_14ipbp", "score": 0, "approved_by": null, "upvotes": 2, "body": "Bell Lapadula can be seen as a game with a set of rules that are all about keeping secrets with your classmates when passing notes.  The most important thing is keeping your secrets safe in this game.  To do this everybody agrees to play by the rules ahead of time (details of this agreement are outside the game, you just have to trust its true).  Everybody gets a shirt.  You give your absolute best friends shirts with a number 3, you give the people you like a shirt with a 2 and everyone else gets a 1.\n\nWhen anyone passes a note in class they wrap it in an envelope with the same numbers, 1,2,3.  There are two central rules, \n\n* anyone can open and read the contents of an envelope that has the same number or lower than their shirt\n* anyone can put a note in an envelope with a number higher than their shirt\n\nThis makes it so that people who have a 3 (your best friends) can read anybody's note but can't pass note down to 2 or 1s.  This prevents them from possibly betraying your secret notes by rewriting one and passing it down.  People with a 2 (people you like) can send you a note, but can't send a 1 a note.  People with a 1 on their shirt (everyone else) can send notes to anyone but only read replies from other 1s.\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Bell Lapadula can be seen as a game with a set of rules that are all about keeping secrets with your classmates when passing notes.  The most important thing is keeping your secrets safe in this game.  To do this everybody agrees to play by the rules ahead of time (details of this agreement are outside the game, you just have to trust its true).  Everybody gets a shirt.  You give your absolute best friends shirts with a number 3, you give the people you like a shirt with a 2 and everyone else gets a 1.&lt;/p&gt;\n\n&lt;p&gt;When anyone passes a note in class they wrap it in an envelope with the same numbers, 1,2,3.  There are two central rules, &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;anyone can open and read the contents of an envelope that has the same number or lower than their shirt&lt;/li&gt;\n&lt;li&gt;anyone can put a note in an envelope with a number higher than their shirt&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;This makes it so that people who have a 3 (your best friends) can read anybody&amp;#39;s note but can&amp;#39;t pass note down to 2 or 1s.  This prevents them from possibly betraying your secret notes by rewriting one and passing it down.  People with a 2 (people you like) can send you a note, but can&amp;#39;t send a 1 a note.  People with a 1 on their shirt (everyone else) can send notes to anyone but only read replies from other 1s.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7dh7xt", "flair_text": null, "created": 1355024245.0, "created_utc": 1355020645.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14ipbp", "children": [], "author": "whosyerparrot", "id": "c7do5es", "parent_id": "t3_14ipbp", "score": 0, "approved_by": null, "upvotes": 1, "body": "Are you in UCSB's CS 177? Good luck on you final!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Are you in UCSB&amp;#39;s CS 177? Good luck on you final!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7do5es", "flair_text": null, "created": 1355066404.0, "created_utc": 1355062804.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 7, "link_id": "t3_14ipbp", "children": [], "author": "in2thats12", "id": "c7dednu", "parent_id": "t3_14ipbp", "score": 0, "approved_by": null, "upvotes": 7, "body": "This is a decent start: http://en.wikipedia.org/wiki/Bell%E2%80%93LaPadula_model\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is a decent start: &lt;a href=\"http://en.wikipedia.org/wiki/Bell%E2%80%93LaPadula_model\"&gt;http://en.wikipedia.org/wiki/Bell%E2%80%93LaPadula_model&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7dednu", "flair_text": null, "created": 1355012524.0, "created_utc": 1355008924.0, "num_reports": null}], "score": 25, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 32, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/14ipbp/can_you_explain_the_belllapadula_model_to_someone/", "has_more_comments": false, "name": "t3_14ipbp", "created": 1355007690.0, "url": "http://www.reddit.com/r/compsci/comments/14ipbp/can_you_explain_the_belllapadula_model_to_someone/", "author_flair_text": null, "author": "jragon", "created_utc": 1355007690.0, "link_flair_text": null, "media": null, "num_reports": null}, "187": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 11, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Not 100% sure if this is in the right subreddit, but any help would be appreciated. Thanks!&lt;/p&gt;\n\n&lt;p&gt;:Edit: \nJust wanted to thank everyone for their replies, they helped a lot! Turns out I was just a little confused!&lt;/p&gt;\n\n&lt;p&gt;Seeing as we are talking about books, I would appreciate any &amp;quot;Sequential Logic&amp;quot; books? &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Not 100% sure if this is in the right subreddit, but any help would be appreciated. Thanks!\n\n:Edit: \nJust wanted to thank everyone for their replies, they helped a lot! Turns out I was just a little confused!\n\nSeeing as we are talking about books, I would appreciate any \"Sequential Logic\" books? ", "saved": false, "id": "14idsq", "clicked": false, "title": "[Q] Does anyone know any good books for learning Boolean Algebra? ", "num_comments": 17, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_14idsq", "children": [], "author": "piku17", "id": "c7ddrm2", "parent_id": "t3_14idsq", "score": 0, "approved_by": null, "upvotes": 14, "body": "A book on discrete mathematics?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A book on discrete mathematics?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ddrm2", "flair_text": null, "created": 1355009967.0, "created_utc": 1355006367.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14idsq", "children": [], "author": "Fsmv", "id": "c7df7fe", "parent_id": "t3_14idsq", "score": 0, "approved_by": null, "upvotes": 4, "body": "You're looking for a discrete mathematics book, my class last semester used [How to Prove It: A Structured Approach](http://amzn.com/0521675995). It's not a bad book, I haven't read any others on discrete though so I have nothing to compare it to. The reviews on Amazon seem good though.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You&amp;#39;re looking for a discrete mathematics book, my class last semester used &lt;a href=\"http://amzn.com/0521675995\"&gt;How to Prove It: A Structured Approach&lt;/a&gt;. It&amp;#39;s not a bad book, I haven&amp;#39;t read any others on discrete though so I have nothing to compare it to. The reviews on Amazon seem good though.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7df7fe", "flair_text": null, "created": 1355015977.0, "created_utc": 1355012377.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14idsq", "children": [], "author": "Frosticus", "id": "c7detud", "parent_id": "t3_14idsq", "score": 0, "approved_by": null, "upvotes": 3, "body": "check wikipedia.  Unless you're trying to learn more abstract algebra, more than that won't help you.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;check wikipedia.  Unless you&amp;#39;re trying to learn more abstract algebra, more than that won&amp;#39;t help you.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7detud", "flair_text": null, "created": 1355014386.0, "created_utc": 1355010786.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_14idsq", "children": [], "author": "amberoid", "id": "c7ddrq0", "parent_id": "t3_14idsq", "score": 0, "approved_by": null, "upvotes": 6, "body": "I would say that you are thinking of discrete mathematics, an example of an appropriate undergraduate compsci coursebook would be [this](http://www.amazon.co.uk/Discrete-Mathematics-Computer-Scientists-International/dp/0201360616/ref=sr_1_1?ie=UTF8&amp;qid=1355006163&amp;sr=8-1).\n\nAs always for university/college textbooks, shop around for price and remember that there are usually textbooks by different authors that offer virtually the same information.\n\nAlso [here](http://en.wikiversity.org/wiki/Introductory_Discrete_Mathematics_for_Computer_Science) is a [wikiversity](http://en.wikiversity.org) course which I think will be relevant.\n\nHope that helps :)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I would say that you are thinking of discrete mathematics, an example of an appropriate undergraduate compsci coursebook would be &lt;a href=\"http://www.amazon.co.uk/Discrete-Mathematics-Computer-Scientists-International/dp/0201360616/ref=sr_1_1?ie=UTF8&amp;amp;qid=1355006163&amp;amp;sr=8-1\"&gt;this&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;As always for university/college textbooks, shop around for price and remember that there are usually textbooks by different authors that offer virtually the same information.&lt;/p&gt;\n\n&lt;p&gt;Also &lt;a href=\"http://en.wikiversity.org/wiki/Introductory_Discrete_Mathematics_for_Computer_Science\"&gt;here&lt;/a&gt; is a &lt;a href=\"http://en.wikiversity.org\"&gt;wikiversity&lt;/a&gt; course which I think will be relevant.&lt;/p&gt;\n\n&lt;p&gt;Hope that helps :)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ddrq0", "flair_text": null, "created": 1355009981.0, "created_utc": 1355006381.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14idsq", "children": [], "author": "Greg02", "id": "c7df02a", "parent_id": "t3_14idsq", "score": 0, "approved_by": null, "upvotes": 2, "body": "Smullyan's First Order Logic.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Smullyan&amp;#39;s First Order Logic.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7df02a", "flair_text": null, "created": 1355015119.0, "created_utc": 1355011519.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14idsq", "children": [], "author": "zzing", "id": "c7dgu65", "parent_id": "t3_14idsq", "score": 0, "approved_by": null, "upvotes": 1, "body": "Electronics might be a better resource.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Electronics might be a better resource.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7dgu65", "flair_text": null, "created": 1355022678.0, "created_utc": 1355019078.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14idsq", "children": [], "author": "gotomstergo", "id": "c7dguum", "parent_id": "t3_14idsq", "score": 0, "approved_by": null, "upvotes": 1, "body": "You just gotta know NAND", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You just gotta know NAND&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7dguum", "flair_text": null, "created": 1355022751.0, "created_utc": 1355019151.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14idsq", "children": [], "author": "Kettyr", "id": "c7djmer", "parent_id": "t3_14idsq", "score": 0, "approved_by": null, "upvotes": 1, "body": "It's been said, but any good book on discrete mathematics will be great. There are also online classes (through MIT or iTunes U or Youtube, etc.) on Discrete Math.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s been said, but any good book on discrete mathematics will be great. There are also online classes (through MIT or iTunes U or Youtube, etc.) on Discrete Math.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7djmer", "flair_text": null, "created": 1355033869.0, "created_utc": 1355030269.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_14idsq", "children": [], "author": "Fuco1337", "id": "c7ddm5l", "parent_id": "t3_14idsq", "score": 0, "approved_by": null, "upvotes": 4, "body": "What do you mean by Boolean Algebra? You are probably completely misunderstanding what it is :P\n\nAnyway, pick up an book on Lattice Theory, it should be explained there.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What do you mean by Boolean Algebra? You are probably completely misunderstanding what it is :P&lt;/p&gt;\n\n&lt;p&gt;Anyway, pick up an book on Lattice Theory, it should be explained there.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ddm5l", "flair_text": null, "created": 1355009340.0, "created_utc": 1355005740.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 7, "link_id": "t3_14idsq", "children": [], "author": "BOSTONF4N", "id": "c7dgngs", "parent_id": "t3_14idsq", "score": 0, "approved_by": null, "upvotes": 2, "body": "There are 10 types of people in this world... those who understand binary and those who do not.\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There are 10 types of people in this world... those who understand binary and those who do not.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7dgngs", "flair_text": null, "created": 1355021928.0, "created_utc": 1355018328.0, "num_reports": null}], "score": 6, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 17, "hidden": false, "thumbnail": "", "edited": 1355012735.0, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/14idsq/q_does_anyone_know_any_good_books_for_learning/", "has_more_comments": false, "name": "t3_14idsq", "created": 1354996226.0, "url": "http://www.reddit.com/r/compsci/comments/14idsq/q_does_anyone_know_any_good_books_for_learning/", "author_flair_text": null, "author": "Geek2Be", "created_utc": 1354996226.0, "link_flair_text": null, "media": null, "num_reports": null}, "188": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 15, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Lots of websites I have looked at treat them as the same thing but in Wikipedia it says &amp;quot;Unlike call-by-value, applicative order evaluation reduces terms within a function body as much as possible before the function is applied.&amp;quot;. I would be really grateful if someone could explain what this means. Thanks.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Lots of websites I have looked at treat them as the same thing but in Wikipedia it says \"Unlike call-by-value, applicative order evaluation reduces terms within a function body as much as possible before the function is applied.\". I would be really grateful if someone could explain what this means. Thanks.", "saved": false, "id": "14hxyd", "clicked": false, "title": "Could someone please explain the difference between Call-by-value and Applicative order evaluation strategies?", "num_comments": 14, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14hxyd", "children": [], "author": "grayvedigga", "id": "c7d7nl3", "parent_id": "t3_14hxyd", "score": 0, "approved_by": null, "upvotes": 4, "body": "That quote you have is wrong - where is it from?  The [Wikipedia page on lambda calculus](https://en.wikipedia.org/wiki/Lambda_calculus) to distinguish applicative vs normal order and call-by-* strategies pretty clearly.\n\nShort answer: they work out to the same thing, though the two terms are usually used to highlight different features of the strategies.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That quote you have is wrong - where is it from?  The &lt;a href=\"https://en.wikipedia.org/wiki/Lambda_calculus\"&gt;Wikipedia page on lambda calculus&lt;/a&gt; to distinguish applicative vs normal order and call-by-* strategies pretty clearly.&lt;/p&gt;\n\n&lt;p&gt;Short answer: they work out to the same thing, though the two terms are usually used to highlight different features of the strategies.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7d7nl3", "flair_text": null, "created": 1354982939.0, "created_utc": 1354979339.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14hxyd", "children": [], "author": "link23", "id": "c7dav7p", "parent_id": "t3_14hxyd", "score": 0, "approved_by": null, "upvotes": 6, "body": "If I understand it correctly: Applicative order evaluation only cares what a parameter is when/if it is used; otherwise, the parameter is unevaluated. Call by value evaluation depends on all parameters being evaluated before the function can be evaluated, regardless of whether or not they are used.\n\n\nThe important difference here is that applicative order is more robust than call by value. Suppose one of the parameters to a function is x/y, where y = 0. Under call by value, this would generate an exception (or whatever the language's equivalent is). Under applicative order, if that parameter is never needed then it won't be a problem. By the [Church Rosser theorem](http://en.wikipedia.org/wiki/Church%E2%80%93Rosser_theorem), if any two evaluation schemes terminate (in a functional environment, no side effects), then they evaluate to the same value. So if both applicative order and normal order work, then they result in the same answer.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If I understand it correctly: Applicative order evaluation only cares what a parameter is when/if it is used; otherwise, the parameter is unevaluated. Call by value evaluation depends on all parameters being evaluated before the function can be evaluated, regardless of whether or not they are used.&lt;/p&gt;\n\n&lt;p&gt;The important difference here is that applicative order is more robust than call by value. Suppose one of the parameters to a function is x/y, where y = 0. Under call by value, this would generate an exception (or whatever the language&amp;#39;s equivalent is). Under applicative order, if that parameter is never needed then it won&amp;#39;t be a problem. By the &lt;a href=\"http://en.wikipedia.org/wiki/Church%E2%80%93Rosser_theorem\"&gt;Church Rosser theorem&lt;/a&gt;, if any two evaluation schemes terminate (in a functional environment, no side effects), then they evaluate to the same value. So if both applicative order and normal order work, then they result in the same answer.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7dav7p", "flair_text": null, "created": 1354997906.0, "created_utc": 1354994306.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_14hxyd", "children": [], "author": "mercurycc", "id": "c7d7ix0", "parent_id": "t3_14hxyd", "score": 0, "approved_by": null, "upvotes": 4, "body": "IIRC they are the same thing. AOE does not reduce the function, unlike what Wikipedia says.\n\nThe only thing in my mind that rewrites the function is normal order reduction, which is never used in practice, exactly because that requires reducing the function. I think whoever wrote that sentence had normal order reduction in mind.", "edited": 1354978801.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;IIRC they are the same thing. AOE does not reduce the function, unlike what Wikipedia says.&lt;/p&gt;\n\n&lt;p&gt;The only thing in my mind that rewrites the function is normal order reduction, which is never used in practice, exactly because that requires reducing the function. I think whoever wrote that sentence had normal order reduction in mind.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7d7ix0", "flair_text": null, "created": 1354982061.0, "created_utc": 1354978461.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14hxyd", "children": [], "author": "crundar", "id": "c7dnrtc", "parent_id": "t3_14hxyd", "score": 0, "approved_by": null, "upvotes": 1, "body": "Sestoft's [\"Demonstrating Lambda Calculus Reduction\"](http://www.itu.dk/people/sestoft/papers/sestoft-lamreduce.pdf) contains really lucid explanations of the above and more. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sestoft&amp;#39;s &lt;a href=\"http://www.itu.dk/people/sestoft/papers/sestoft-lamreduce.pdf\"&gt;&amp;quot;Demonstrating Lambda Calculus Reduction&amp;quot;&lt;/a&gt; contains really lucid explanations of the above and more. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7dnrtc", "flair_text": null, "created": 1355063071.0, "created_utc": 1355059471.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_14hxyd", "children": [], "author": "epiphanot", "id": "c7dicwf", "parent_id": "t3_14hxyd", "score": 0, "approved_by": null, "upvotes": 1, "body": "hyphens", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;hyphens&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7dicwf", "flair_text": null, "created": 1355028861.0, "created_utc": 1355025261.0, "num_reports": null}], "score": 15, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 30, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/14hxyd/could_someone_please_explain_the_difference/", "has_more_comments": false, "name": "t3_14hxyd", "created": 1354976730.0, "url": "http://www.reddit.com/r/compsci/comments/14hxyd/could_someone_please_explain_the_difference/", "author_flair_text": null, "author": "alandalf", "created_utc": 1354976730.0, "link_flair_text": null, "media": null, "num_reports": null}, "189": {"domain": "paulbourke.net", "link_flair_class": null, "banned_by": null, "downvotes": 14, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "14gj9x", "clicked": false, "title": "Nice overview of various interpolation methods", "num_comments": 7, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14gj9x", "children": [], "author": "sparr", "id": "c7cx6sl", "parent_id": "t3_14gj9x", "score": 0, "approved_by": null, "upvotes": 6, "body": "The sample data set used for the 2D examples isn't very good. The slope changes sign between every pair of points. There should be at least one example of continuously decreasing or increasing points in there.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The sample data set used for the 2D examples isn&amp;#39;t very good. The slope changes sign between every pair of points. There should be at least one example of continuously decreasing or increasing points in there.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cx6sl", "flair_text": null, "created": 1354921380.0, "created_utc": 1354917780.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14gj9x", "children": [], "author": "mszegedy", "id": "c7cyy6r", "parent_id": "t3_14gj9x", "score": 0, "approved_by": null, "upvotes": 3, "body": "The article was a very good read, and I've been looking for something like this for a long time, but seriously, what do they use to typeset their equations? Their product sign looks like the Berlin Wall.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The article was a very good read, and I&amp;#39;ve been looking for something like this for a long time, but seriously, what do they use to typeset their equations? Their product sign looks like the Berlin Wall.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cyy6r", "flair_text": null, "created": 1354927834.0, "created_utc": 1354924234.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14gj9x", "children": [], "author": "IanCormac", "id": "c7d3jcb", "parent_id": "t3_14gj9x", "score": 0, "approved_by": null, "upvotes": 2, "body": "It's interesting that some of the best-looking interpolation functions don't use trigonometry at all (meaning they will be much faster in this case). I wonder if that is just a byproduct of their chosen sample set. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s interesting that some of the best-looking interpolation functions don&amp;#39;t use trigonometry at all (meaning they will be much faster in this case). I wonder if that is just a byproduct of their chosen sample set. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7d3jcb", "flair_text": null, "created": 1354948252.0, "created_utc": 1354944652.0, "num_reports": null}], "score": 47, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 61, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/14gj9x/nice_overview_of_various_interpolation_methods/", "has_more_comments": false, "name": "t3_14gj9x", "created": 1354909037.0, "url": "http://paulbourke.net/miscellaneous/interpolation/", "author_flair_text": null, "author": "SupersonicSpitfire", "created_utc": 1354909037.0, "link_flair_text": null, "media": null, "num_reports": null}, "190": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 6, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey redditors I&amp;#39;m going to thank you guys ahead of time, this has been bothering me for a long time now, and with no prevail to understanding the failure function. I&amp;#39;m looking at two examples;&lt;/p&gt;\n\n&lt;p&gt;j    | 0 1 2 3 4 5\np[j]| a b a c a b\nf(j) | 0 0 1 0 1 2&lt;/p&gt;\n\n&lt;p&gt;and&lt;/p&gt;\n\n&lt;p&gt;j    | 0 1 2 3 4 5\np[j]| a b a b a c\nf(j) | 0 0 1 2 3 0&lt;/p&gt;\n\n&lt;p&gt;Now for some reason I can&amp;#39;t understand the numbers for f(j), therefore try your best please to put in the most simplest English words you can think of to teach a toddler like brain of mine.&lt;/p&gt;\n\n&lt;p&gt;Thank you for who ever responds or gives any thoughts! Much appreciated.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hey redditors I'm going to thank you guys ahead of time, this has been bothering me for a long time now, and with no prevail to understanding the failure function. I'm looking at two examples;\n\nj    | 0 1 2 3 4 5\np[j]| a b a c a b\nf(j) | 0 0 1 0 1 2\n\nand\n\nj    | 0 1 2 3 4 5\np[j]| a b a b a c\nf(j) | 0 0 1 2 3 0\n\nNow for some reason I can't understand the numbers for f(j), therefore try your best please to put in the most simplest English words you can think of to teach a toddler like brain of mine.\n\nThank you for who ever responds or gives any thoughts! Much appreciated.", "saved": false, "id": "14hkw9", "clicked": false, "title": "Knuth-Morris-Pratts failure function?", "num_comments": 1, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14hkw9", "children": [], "author": "dhruvbird", "id": "c7d4w3h", "parent_id": "t3_14hkw9", "score": 0, "approved_by": null, "upvotes": 5, "body": "f(j) is the length of the longest proper prefix of the original string and a proper suffix of the sub-string ending at index j.\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;f(j) is the length of the longest proper prefix of the original string and a proper suffix of the sub-string ending at index j.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7d4w3h", "flair_text": null, "created": 1354955993.0, "created_utc": 1354952393.0, "num_reports": null}], "score": 5, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 11, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/14hkw9/knuthmorrispratts_failure_function/", "has_more_comments": false, "name": "t3_14hkw9", "created": 1354947914.0, "url": "http://www.reddit.com/r/compsci/comments/14hkw9/knuthmorrispratts_failure_function/", "author_flair_text": null, "author": "crowsaway", "created_utc": 1354947914.0, "link_flair_text": null, "media": null, "num_reports": null}, "191": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 17, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, &lt;strong&gt;I&amp;#39;ve recently become interested in Computer Science History&lt;/strong&gt;. In particular, I am interested in &lt;em&gt;teaching&lt;/em&gt; Computer Science History. I&amp;#39;ve been doing some preliminary research, and there doesn&amp;#39;t seem to be much cohesive material on the subject. In fact, I can&amp;#39;t seem to find any Universities that offer established courses on the matter, or any online curriculums covering the entire history of CS. I can find a number of &amp;quot;brief&amp;quot; overviews of the history of CS, but I&amp;#39;m looking for something that aims to do more than just list a few key events.&lt;/p&gt;\n\n&lt;p&gt;To be clear, I don&amp;#39;t mean the history of computers, which sounds like it would focus on hardware. I mean the history of Computer Science, covering important events like Shannon&amp;#39;s formalization of Information Theory, the AI Winter, the evolution of the Linux Operating System... a very broad category of events, but all focused on the history of topics of interest to this subreddit.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m interested in resources on this subject. &lt;strong&gt;In particular, I&amp;#39;d love to see courses, whether collegiate or online, that intend to cover the history of CS&lt;/strong&gt;. I&amp;#39;d also be interested in finding good books (printed is okay, but preferably online) and articles. &lt;/p&gt;\n\n&lt;p&gt;If there is no existing curriculum, I have been considering developing one of my own. &lt;strong&gt;If you have thoughts and opinions on what a &amp;quot;History of Computer Science&amp;quot; course should look like, I&amp;#39;d be very interested in hearing them too.&lt;/strong&gt; In my mind, the curriculum should focus on historical patterns (especially motivations and consequences), the culture of Computer Science, and recent and projected trends. I&amp;#39;m not sure how interested the CS community is in this sort of subject, but it seems like there&amp;#39;d be a lot of benefit in seeing where CS came from and where it&amp;#39;s going.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi, **I've recently become interested in Computer Science History**. In particular, I am interested in *teaching* Computer Science History. I've been doing some preliminary research, and there doesn't seem to be much cohesive material on the subject. In fact, I can't seem to find any Universities that offer established courses on the matter, or any online curriculums covering the entire history of CS. I can find a number of \"brief\" overviews of the history of CS, but I'm looking for something that aims to do more than just list a few key events.\n\nTo be clear, I don't mean the history of computers, which sounds like it would focus on hardware. I mean the history of Computer Science, covering important events like Shannon's formalization of Information Theory, the AI Winter, the evolution of the Linux Operating System... a very broad category of events, but all focused on the history of topics of interest to this subreddit.\n\nI'm interested in resources on this subject. **In particular, I'd love to see courses, whether collegiate or online, that intend to cover the history of CS**. I'd also be interested in finding good books (printed is okay, but preferably online) and articles. \n\nIf there is no existing curriculum, I have been considering developing one of my own. **If you have thoughts and opinions on what a \"History of Computer Science\" course should look like, I'd be very interested in hearing them too.** In my mind, the curriculum should focus on historical patterns (especially motivations and consequences), the culture of Computer Science, and recent and projected trends. I'm not sure how interested the CS community is in this sort of subject, but it seems like there'd be a lot of benefit in seeing where CS came from and where it's going.", "saved": false, "id": "14fllv", "clicked": false, "title": "History of Computer Science", "num_comments": 47, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_14fllv", "children": [], "author": "keeferc", "id": "c7cm7jz", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 16, "body": "The Information by James Gleick", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The Information by James Gleick&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cm7jz", "flair_text": null, "created": 1354866800.0, "created_utc": 1354863200.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14fllv", "children": [], "author": "wildeye", "id": "c7cngql", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 11, "body": "The history of the academic theory side of computer science is one thing, but you also said:\n\n&gt; In my mind, the curriculum should focus on historical patterns (especially motivations and consequences), the culture of Computer Science\n\nIn these regards, definitely read \"What the Dormouse Said - How the Sixties Counterculture Shaped the Personal Computer Industry\", by [John Markoff](http://en.wikipedia.org/wiki/John_Markoff) (NY Times journalist). Edit:  [Amazon](http://www.amazon.com/What-Dormouse-Said-Counterculture-Personal/dp/0143036769), [Wikipedia](http://en.wikipedia.org/wiki/What_the_Dormouse_Said) -- rather short entry\n\nAs the description on amazon says,\n\n&gt; Very few people outside the computing scene, however, have connected the dots before Markoff's lively account. He shows how almost every feature of today's home computers, from the graphical interface to the mouse control, can be traced to two Stanford research facilities that were completely immersed in the counterculture.\n\nIt ties together threads concerning landmark topics like Doug Englebart, Xerox PARC, etc. in many ways that no other history does, and helps show patterns that are only latent in other histories.\n\nThere's also a lot of culture lurking in The New Hacker's Dictionary, especially the older material from its origins as The Jargon File at the MIT AI Lab in the 1970s. Edit: [Amazon](http://www.amazon.com/New-Hackers-Dictionary-3rd/dp/0262680920), [Wikipedia \"Jargon File\"](http://en.wikipedia.org/wiki/Jargon_File)\n\nTed Nelson (famous for proselytizing hypertext decades before the Web) wrote a book that was a strong influence on many industry pioneers, \"Computer Lib / Dream Machines\" (1st ed. 1975), that talked about a large number of interesting things people were doing with computers, like hypertext, but also computer languages designed for doing computer graphics (like Grass and Logo), CDC mainframe Plato multiuser systems with graphical games(in the 70s) and most particularly, about the interesting projects at Xerox PARC -- many, many people first heard about all that from this book, before the Macintosh made PARC technology super famous.\n\nEdit: Wikipedia entry: http://en.wikipedia.org/wiki/Computer_Lib_/_Dream_Machines\n\nI have a whole stack of computer/computer science history books, mostly non-cultural and much drier and more academic than the above, but they're not at hand this second.", "edited": 1354909743.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The history of the academic theory side of computer science is one thing, but you also said:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;In my mind, the curriculum should focus on historical patterns (especially motivations and consequences), the culture of Computer Science&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;In these regards, definitely read &amp;quot;What the Dormouse Said - How the Sixties Counterculture Shaped the Personal Computer Industry&amp;quot;, by &lt;a href=\"http://en.wikipedia.org/wiki/John_Markoff\"&gt;John Markoff&lt;/a&gt; (NY Times journalist). Edit:  &lt;a href=\"http://www.amazon.com/What-Dormouse-Said-Counterculture-Personal/dp/0143036769\"&gt;Amazon&lt;/a&gt;, &lt;a href=\"http://en.wikipedia.org/wiki/What_the_Dormouse_Said\"&gt;Wikipedia&lt;/a&gt; -- rather short entry&lt;/p&gt;\n\n&lt;p&gt;As the description on amazon says,&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Very few people outside the computing scene, however, have connected the dots before Markoff&amp;#39;s lively account. He shows how almost every feature of today&amp;#39;s home computers, from the graphical interface to the mouse control, can be traced to two Stanford research facilities that were completely immersed in the counterculture.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;It ties together threads concerning landmark topics like Doug Englebart, Xerox PARC, etc. in many ways that no other history does, and helps show patterns that are only latent in other histories.&lt;/p&gt;\n\n&lt;p&gt;There&amp;#39;s also a lot of culture lurking in The New Hacker&amp;#39;s Dictionary, especially the older material from its origins as The Jargon File at the MIT AI Lab in the 1970s. Edit: &lt;a href=\"http://www.amazon.com/New-Hackers-Dictionary-3rd/dp/0262680920\"&gt;Amazon&lt;/a&gt;, &lt;a href=\"http://en.wikipedia.org/wiki/Jargon_File\"&gt;Wikipedia &amp;quot;Jargon File&amp;quot;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Ted Nelson (famous for proselytizing hypertext decades before the Web) wrote a book that was a strong influence on many industry pioneers, &amp;quot;Computer Lib / Dream Machines&amp;quot; (1st ed. 1975), that talked about a large number of interesting things people were doing with computers, like hypertext, but also computer languages designed for doing computer graphics (like Grass and Logo), CDC mainframe Plato multiuser systems with graphical games(in the 70s) and most particularly, about the interesting projects at Xerox PARC -- many, many people first heard about all that from this book, before the Macintosh made PARC technology super famous.&lt;/p&gt;\n\n&lt;p&gt;Edit: Wikipedia entry: &lt;a href=\"http://en.wikipedia.org/wiki/Computer_Lib_/_Dream_Machines\"&gt;http://en.wikipedia.org/wiki/Computer_Lib_/_Dream_Machines&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I have a whole stack of computer/computer science history books, mostly non-cultural and much drier and more academic than the above, but they&amp;#39;re not at hand this second.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cngql", "flair_text": null, "created": 1354875520.0, "created_utc": 1354871920.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_14fllv", "children": [], "author": "bo1024", "id": "c7cmgyw", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 9, "body": "This would be amazing. Could you post the info you find?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This would be amazing. Could you post the info you find?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cmgyw", "flair_text": null, "created": 1354868281.0, "created_utc": 1354864681.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14fllv", "children": [], "author": "zorkmids", "id": "c7cn8e8", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 7, "body": "I'm not sure there's enough history to find \"historical patterns\".  The influence of individual thinkers is far more significant.  It's hard to understate the importance of individuals like Church, Turing, Von Neumann, Dijkstra, Simon, etc.\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not sure there&amp;#39;s enough history to find &amp;quot;historical patterns&amp;quot;.  The influence of individual thinkers is far more significant.  It&amp;#39;s hard to understate the importance of individuals like Church, Turing, Von Neumann, Dijkstra, Simon, etc.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cn8e8", "flair_text": null, "created": 1354873540.0, "created_utc": 1354869940.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14fllv", "children": [], "author": "kristopolous", "id": "c7csd2f", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 7, "body": "I think it's the wrong scope. History of computer languages or interfaces or algorithms or machinery would be great. History of computer \"science\" doesn't work that well.\n\nI'm well versed in interfaces and languages.  I don't know say, the predominant graph algorithms in the 50s though (lots of graph stuff happened in the 60s) and I don't know if there were anything like hash tables prior to the late 50's work on them; so algorithm history I'm weak on.  There was a lot of drama around AVL trees, I know that.\n\nAnyway, here's some big ones you should cover:\n\n * memex (as we may think)\n * engelbart (mother of all demos)\n * dynabook (keys)\n * mccarthy (lisp)\n * babbage (many)\n * turing (many)\n * hopper\n * djikstra\n * von nuemann\n * shannon \n * chomsky\n * sutherland\n * diffie/hellman\n * lucifer/des \n * boole\n\nTalk about \n\n * the shift of programmers from female to male\n * the decline of analog and rise of digital computers\n * the old att phone system and the hacking of the 70s surrounding it\n * time-share systems and the culture enshrined by them\n * the following computers: [ABC](http://en.wikipedia.org/wiki/Atanasoff%E2%80%93Berry_Computer), Z3, [Colossus](http://en.wikipedia.org/wiki/Colossus_computer), [enigma](http://en.wikipedia.org/wiki/Enigma_machine), [Difference machine](http://en.wikipedia.org/wiki/Difference_machine), 1890 census, and if you want, [SAGE](http://en.wikipedia.org/wiki/Semi-Automatic_Ground_Environment) ... make allusions to Dr. Strangelove if you want.\n\nAlso please mention how as a community, computer scientists are really accepting people; with gay and female pioneers far before it was the norm.\n\nI'm incredibly proud of my industry for that.", "edited": 1354903206.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think it&amp;#39;s the wrong scope. History of computer languages or interfaces or algorithms or machinery would be great. History of computer &amp;quot;science&amp;quot; doesn&amp;#39;t work that well.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m well versed in interfaces and languages.  I don&amp;#39;t know say, the predominant graph algorithms in the 50s though (lots of graph stuff happened in the 60s) and I don&amp;#39;t know if there were anything like hash tables prior to the late 50&amp;#39;s work on them; so algorithm history I&amp;#39;m weak on.  There was a lot of drama around AVL trees, I know that.&lt;/p&gt;\n\n&lt;p&gt;Anyway, here&amp;#39;s some big ones you should cover:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;memex (as we may think)&lt;/li&gt;\n&lt;li&gt;engelbart (mother of all demos)&lt;/li&gt;\n&lt;li&gt;dynabook (keys)&lt;/li&gt;\n&lt;li&gt;mccarthy (lisp)&lt;/li&gt;\n&lt;li&gt;babbage (many)&lt;/li&gt;\n&lt;li&gt;turing (many)&lt;/li&gt;\n&lt;li&gt;hopper&lt;/li&gt;\n&lt;li&gt;djikstra&lt;/li&gt;\n&lt;li&gt;von nuemann&lt;/li&gt;\n&lt;li&gt;shannon &lt;/li&gt;\n&lt;li&gt;chomsky&lt;/li&gt;\n&lt;li&gt;sutherland&lt;/li&gt;\n&lt;li&gt;diffie/hellman&lt;/li&gt;\n&lt;li&gt;lucifer/des &lt;/li&gt;\n&lt;li&gt;boole&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Talk about &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;the shift of programmers from female to male&lt;/li&gt;\n&lt;li&gt;the decline of analog and rise of digital computers&lt;/li&gt;\n&lt;li&gt;the old att phone system and the hacking of the 70s surrounding it&lt;/li&gt;\n&lt;li&gt;time-share systems and the culture enshrined by them&lt;/li&gt;\n&lt;li&gt;the following computers: &lt;a href=\"http://en.wikipedia.org/wiki/Atanasoff%E2%80%93Berry_Computer\"&gt;ABC&lt;/a&gt;, Z3, &lt;a href=\"http://en.wikipedia.org/wiki/Colossus_computer\"&gt;Colossus&lt;/a&gt;, &lt;a href=\"http://en.wikipedia.org/wiki/Enigma_machine\"&gt;enigma&lt;/a&gt;, &lt;a href=\"http://en.wikipedia.org/wiki/Difference_machine\"&gt;Difference machine&lt;/a&gt;, 1890 census, and if you want, &lt;a href=\"http://en.wikipedia.org/wiki/Semi-Automatic_Ground_Environment\"&gt;SAGE&lt;/a&gt; ... make allusions to Dr. Strangelove if you want.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Also please mention how as a community, computer scientists are really accepting people; with gay and female pioneers far before it was the norm.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m incredibly proud of my industry for that.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7csd2f", "flair_text": null, "created": 1354905359.0, "created_utc": 1354901759.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14fllv", "children": [], "author": "drunkencop", "id": "c7cog5d", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 7, "body": "One thing that seems to get overlooked a lot -- I've been listening to the audiobook of \"Turing's Cathedral\", which is excellent -- is the amazing work done by Konrad Zuse. \n\nThere are excellent books about Babbage -- can't leave him out.\n\nFor a fun cruise through the practical matter (sort of a gross anatomy course) I haven't seen anything better than \"Code\" by Charles Petzold....", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;One thing that seems to get overlooked a lot -- I&amp;#39;ve been listening to the audiobook of &amp;quot;Turing&amp;#39;s Cathedral&amp;quot;, which is excellent -- is the amazing work done by Konrad Zuse. &lt;/p&gt;\n\n&lt;p&gt;There are excellent books about Babbage -- can&amp;#39;t leave him out.&lt;/p&gt;\n\n&lt;p&gt;For a fun cruise through the practical matter (sort of a gross anatomy course) I haven&amp;#39;t seen anything better than &amp;quot;Code&amp;quot; by Charles Petzold....&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cog5d", "flair_text": null, "created": 1354885911.0, "created_utc": 1354882311.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14fllv", "children": [], "author": "Djatha", "id": "c7cnusv", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 4, "body": "Have a look at [SIGCIS](http://www.sigcis.org/) and be sure to browse the mailing list archive. Active computer science historians participate, many of which are/were involved in courses or the writing of books on the subject. There have been courses on the history of computer science for years, all over the world. There is a boatload of information on the topic and, lately (with 50 and 60  years of computers behind us) also an active field of historical research. Furthermore, it has also gotten some attention in popular media, museums, hobbyists (i.e. retirees who've gotten back to their first love, albeit mostly on the machines and not on computing science), organisations, and what not.\n\n", "edited": 1354876005.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Have a look at &lt;a href=\"http://www.sigcis.org/\"&gt;SIGCIS&lt;/a&gt; and be sure to browse the mailing list archive. Active computer science historians participate, many of which are/were involved in courses or the writing of books on the subject. There have been courses on the history of computer science for years, all over the world. There is a boatload of information on the topic and, lately (with 50 and 60  years of computers behind us) also an active field of historical research. Furthermore, it has also gotten some attention in popular media, museums, hobbyists (i.e. retirees who&amp;#39;ve gotten back to their first love, albeit mostly on the machines and not on computing science), organisations, and what not.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cnusv", "flair_text": null, "created": 1354879420.0, "created_utc": 1354875820.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14fllv", "children": [], "author": "wildeye", "id": "c7cumtg", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 4, "body": "One thing we really take for granted today, but which took time to develop, was the basic concept of stored programs -- nor was that simply yet another sole invention by von Neumann.\n\nSee e.g. \"Stored Program Concept - The Origin of the Stored Program Concept\",\nAllan G. Bromley, 1985. Scanned copy online: http://sydney.edu.au/engineering/it/research/tr/tr274.pdf\n\nOne important historical thread concerns Object Oriented Programming, since it was integral to the PARC effort as well as of major languages from the 1980s through today.\n\nIt's well-known that Alan Kay coined the term, and that [Simula 67](http://en.wikipedia.org/wiki/Simula) was the first OO language, and that Ivan Sutherland's phenomenal 1960 [Sketchpad](http://en.wikipedia.org/wiki/Sketchpad) pioneered OO programming and GUIs and influenced Doug Englebart, leading to [The Mother Of All Demos](http://en.wikipedia.org/wiki/The_Mother_of_All_Demos) -- all tightly interwoven history.\n\nMuch less well-known to non-specialists is that the Lisp thread of history ties directly in to that.\n\nAlan Kay introduced [messaging to Smalltalk/OO programming](http://lists.squeakfoundation.org/pipermail/squeak-dev/1998-October/017019.html) and considered it an essential part of OO that most other OO systems lack -- and in any case is an important part of Smalltalk -- Kay got this from Lisp research including the Lisp-based PLANNER language and [Carl Hewitt's](http://en.wikipedia.org/wiki/Carl_Hewitt) research on the originally Lisp-based [Actor](http://en.wikipedia.org/wiki/Actor_model) model of concurrent computation.\n\nSee http://en.wikipedia.org/wiki/History_of_the_Actor_model#Smalltalk\n\n(Messaging semantics remained in the Smalltalk language definition, but for [efficiency reasons](http://c2.com/cgi/wiki?MessagePassing) was modeled by function calls in the implementation beginning with Smalltalk 80)\n\nRelated: [Viewing Control Structures as Patterns of Passing Messages](http://www.erights.org/history/actors.html), Carl Hewitt, 1976.\n\n[\"The Early History Of Smalltalk\"](http://worrydream.com/EarlyHistoryOfSmalltalk/), Alan C. Kay is a good read for understanding the general historical context.\n\nRegarding the key point \"Kay got this from Lisp research\", I'm having trouble locating the essential quote that especially clarifies Kay's insight, even beyond what he cites in \"Early History\", about control structure implementation unification; I'll post later if/when I can find it.\n\nThat leaves this post somewhat less helpful than I'd like, but I want to save the above before my browser/computer crashes just to spite me.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;One thing we really take for granted today, but which took time to develop, was the basic concept of stored programs -- nor was that simply yet another sole invention by von Neumann.&lt;/p&gt;\n\n&lt;p&gt;See e.g. &amp;quot;Stored Program Concept - The Origin of the Stored Program Concept&amp;quot;,\nAllan G. Bromley, 1985. Scanned copy online: &lt;a href=\"http://sydney.edu.au/engineering/it/research/tr/tr274.pdf\"&gt;http://sydney.edu.au/engineering/it/research/tr/tr274.pdf&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;One important historical thread concerns Object Oriented Programming, since it was integral to the PARC effort as well as of major languages from the 1980s through today.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s well-known that Alan Kay coined the term, and that &lt;a href=\"http://en.wikipedia.org/wiki/Simula\"&gt;Simula 67&lt;/a&gt; was the first OO language, and that Ivan Sutherland&amp;#39;s phenomenal 1960 &lt;a href=\"http://en.wikipedia.org/wiki/Sketchpad\"&gt;Sketchpad&lt;/a&gt; pioneered OO programming and GUIs and influenced Doug Englebart, leading to &lt;a href=\"http://en.wikipedia.org/wiki/The_Mother_of_All_Demos\"&gt;The Mother Of All Demos&lt;/a&gt; -- all tightly interwoven history.&lt;/p&gt;\n\n&lt;p&gt;Much less well-known to non-specialists is that the Lisp thread of history ties directly in to that.&lt;/p&gt;\n\n&lt;p&gt;Alan Kay introduced &lt;a href=\"http://lists.squeakfoundation.org/pipermail/squeak-dev/1998-October/017019.html\"&gt;messaging to Smalltalk/OO programming&lt;/a&gt; and considered it an essential part of OO that most other OO systems lack -- and in any case is an important part of Smalltalk -- Kay got this from Lisp research including the Lisp-based PLANNER language and &lt;a href=\"http://en.wikipedia.org/wiki/Carl_Hewitt\"&gt;Carl Hewitt&amp;#39;s&lt;/a&gt; research on the originally Lisp-based &lt;a href=\"http://en.wikipedia.org/wiki/Actor_model\"&gt;Actor&lt;/a&gt; model of concurrent computation.&lt;/p&gt;\n\n&lt;p&gt;See &lt;a href=\"http://en.wikipedia.org/wiki/History_of_the_Actor_model#Smalltalk\"&gt;http://en.wikipedia.org/wiki/History_of_the_Actor_model#Smalltalk&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;(Messaging semantics remained in the Smalltalk language definition, but for &lt;a href=\"http://c2.com/cgi/wiki?MessagePassing\"&gt;efficiency reasons&lt;/a&gt; was modeled by function calls in the implementation beginning with Smalltalk 80)&lt;/p&gt;\n\n&lt;p&gt;Related: &lt;a href=\"http://www.erights.org/history/actors.html\"&gt;Viewing Control Structures as Patterns of Passing Messages&lt;/a&gt;, Carl Hewitt, 1976.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://worrydream.com/EarlyHistoryOfSmalltalk/\"&gt;&amp;quot;The Early History Of Smalltalk&amp;quot;&lt;/a&gt;, Alan C. Kay is a good read for understanding the general historical context.&lt;/p&gt;\n\n&lt;p&gt;Regarding the key point &amp;quot;Kay got this from Lisp research&amp;quot;, I&amp;#39;m having trouble locating the essential quote that especially clarifies Kay&amp;#39;s insight, even beyond what he cites in &amp;quot;Early History&amp;quot;, about control structure implementation unification; I&amp;#39;ll post later if/when I can find it.&lt;/p&gt;\n\n&lt;p&gt;That leaves this post somewhat less helpful than I&amp;#39;d like, but I want to save the above before my browser/computer crashes just to spite me.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cumtg", "flair_text": null, "created": 1354912896.0, "created_utc": 1354909296.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14fllv", "children": [], "author": "NiniMihaila", "id": "c7cn3cg", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 4, "body": "I too am interested in the History of Computer Science, and have done a little bit of study on this matter, so I'll help you with what I have. \n\nHowever, I'm afraid I'm going to have to ask you to be patient until tomorrow, because I'm not at home right now and I don't really have time to search on the 'net for all the resources.\n\nAlso, please don't expect anything mind-blowing, it's just a few documentaries that I've watched, articles I've read and my own thoughts on how it should be taught.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I too am interested in the History of Computer Science, and have done a little bit of study on this matter, so I&amp;#39;ll help you with what I have. &lt;/p&gt;\n\n&lt;p&gt;However, I&amp;#39;m afraid I&amp;#39;m going to have to ask you to be patient until tomorrow, because I&amp;#39;m not at home right now and I don&amp;#39;t really have time to search on the &amp;#39;net for all the resources.&lt;/p&gt;\n\n&lt;p&gt;Also, please don&amp;#39;t expect anything mind-blowing, it&amp;#39;s just a few documentaries that I&amp;#39;ve watched, articles I&amp;#39;ve read and my own thoughts on how it should be taught.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cn3cg", "flair_text": null, "created": 1354872448.0, "created_utc": 1354868848.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14fllv", "children": [], "author": "C222", "id": "c7cnf6u", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 2, "body": "If you're in the Bay Area, CA, check out the [Computer History Museum](http://www.computerhistory.org/).\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you&amp;#39;re in the Bay Area, CA, check out the &lt;a href=\"http://www.computerhistory.org/\"&gt;Computer History Museum&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cnf6u", "flair_text": null, "created": 1354875131.0, "created_utc": 1354871531.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14fllv", "children": [], "author": "vinfx", "id": "c7cnz5u", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 2, "body": "[Must include this.](http://gizmodo.com/5936933/how-the-navy-taught-its-engineers-about-them-new-fangled-computer-machines-back-in-1962)\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://gizmodo.com/5936933/how-the-navy-taught-its-engineers-about-them-new-fangled-computer-machines-back-in-1962\"&gt;Must include this.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cnz5u", "flair_text": null, "created": 1354880803.0, "created_utc": 1354877203.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14fllv", "children": [], "author": "kbrosnan", "id": "c7co3ut", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 3, "body": "What you are describing is more of a Digital Archivist or Digital Historian. There are people who do this, Jason Scott http://textfiles.com/ focus is the 1970s through the 1990s bbs/hacker/phreaker culture. You likely will want to find people like him. Looking for this info from CS departments is largely the wrong place.\n\nYou are correct that most early CS courses do a very handwavy overview of the history of CS. Sometimes Babbage, Jacquard, or Ada get a mention. Then a few more sentences about computer development in general. Next up variables. \n\nPart of the beauty of CS is that fundamental algorithms and logic matter more than the person that discovered them (most of the time). There can be some good back story about the discovery the algorithm, language creation or other breakthrough.\n\nI disagree with your abstention from hardware. If you go back to the earliest days of electronic computing just creating memory to store a value was a considerable task, same is true for a logic unit etc. Any comprehensive coverage of CS can't really avoid the discussion of hardware developments till the major components input, output, processing and storage (volatile and non-volatile) become somewhat standardized/commoditized around the 1970s.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What you are describing is more of a Digital Archivist or Digital Historian. There are people who do this, Jason Scott &lt;a href=\"http://textfiles.com/\"&gt;http://textfiles.com/&lt;/a&gt; focus is the 1970s through the 1990s bbs/hacker/phreaker culture. You likely will want to find people like him. Looking for this info from CS departments is largely the wrong place.&lt;/p&gt;\n\n&lt;p&gt;You are correct that most early CS courses do a very handwavy overview of the history of CS. Sometimes Babbage, Jacquard, or Ada get a mention. Then a few more sentences about computer development in general. Next up variables. &lt;/p&gt;\n\n&lt;p&gt;Part of the beauty of CS is that fundamental algorithms and logic matter more than the person that discovered them (most of the time). There can be some good back story about the discovery the algorithm, language creation or other breakthrough.&lt;/p&gt;\n\n&lt;p&gt;I disagree with your abstention from hardware. If you go back to the earliest days of electronic computing just creating memory to store a value was a considerable task, same is true for a logic unit etc. Any comprehensive coverage of CS can&amp;#39;t really avoid the discussion of hardware developments till the major components input, output, processing and storage (volatile and non-volatile) become somewhat standardized/commoditized around the 1970s.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7co3ut", "flair_text": null, "created": 1354882321.0, "created_utc": 1354878721.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14fllv", "children": [], "author": "rudster", "id": "c7coasm", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 2, "body": "When I got my degree there was a reading course that covered the most important C.S. research papers in history (I recall, e.g., reading Dykstra's \"The structure of the 'THE'-multiprogramming system\" in it).\n\nI wonder if there's a way to generate the top-cited 5 papers of each decade as an outline of topics to cover.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;When I got my degree there was a reading course that covered the most important C.S. research papers in history (I recall, e.g., reading Dykstra&amp;#39;s &amp;quot;The structure of the &amp;#39;THE&amp;#39;-multiprogramming system&amp;quot; in it).&lt;/p&gt;\n\n&lt;p&gt;I wonder if there&amp;#39;s a way to generate the top-cited 5 papers of each decade as an outline of topics to cover.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7coasm", "flair_text": null, "created": 1354884400.0, "created_utc": 1354880800.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14fllv", "children": [], "author": "NaeblisEcho", "id": "c7cojpv", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 2, "body": "Not the entire Computer Science, but there was a course on Coursera focusing on the history of Internet. Maybe look that up?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not the entire Computer Science, but there was a course on Coursera focusing on the history of Internet. Maybe look that up?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cojpv", "flair_text": null, "created": 1354886897.0, "created_utc": 1354883297.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14fllv", "children": [], "author": "Phaper", "id": "c7cp98b", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 2, "body": "Hey there OP, I am also interested in the history of computer science! Fortunately, I live near Bletchely Park! I absolutely recommend going to visit it as it is constantly adding new pieces of work to put on display. Recently, they finished restoring the Harwell computer (or known as WITCH). Definitely check it out!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hey there OP, I am also interested in the history of computer science! Fortunately, I live near Bletchely Park! I absolutely recommend going to visit it as it is constantly adding new pieces of work to put on display. Recently, they finished restoring the Harwell computer (or known as WITCH). Definitely check it out!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cp98b", "flair_text": null, "created": 1354892187.0, "created_utc": 1354888587.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14fllv", "children": [], "author": "this_isnt_a_thrwaway", "id": "c7cpdk9", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 2, "body": "[bit by bit] (http://www.amazon.com/Bit-Stan-Augarten/dp/0040010074/ref=sr_1_2?ie=UTF8&amp;qid=1354889289&amp;sr=8-2&amp;keywords=bit+by+bit)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.amazon.com/Bit-Stan-Augarten/dp/0040010074/ref=sr_1_2?ie=UTF8&amp;amp;qid=1354889289&amp;amp;sr=8-2&amp;amp;keywords=bit+by+bit\"&gt;bit by bit&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cpdk9", "flair_text": null, "created": 1354892909.0, "created_utc": 1354889309.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14fllv", "children": [], "author": "Bjorkbat", "id": "c7cq6qg", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 1, "body": "https://www.youtube.com/watch?v=rcR74y61xZk\n\nThe Machine that Changed the World, absolutely fantastic 5 part documentary from 1992.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://www.youtube.com/watch?v=rcR74y61xZk\"&gt;https://www.youtube.com/watch?v=rcR74y61xZk&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The Machine that Changed the World, absolutely fantastic 5 part documentary from 1992.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cq6qg", "flair_text": null, "created": 1354896972.0, "created_utc": 1354893372.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14fllv", "children": [], "author": "DavidTheWin", "id": "c7cs2k6", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 1, "body": "You might want to get in touch with my CS department at the University of Manchester. In 1948 we had the first stored-program computer and if you get a chance to visit there are displays up all around the Kilburn Building. http://www.cs.manchester.ac.uk/aboutus/history/", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You might want to get in touch with my CS department at the University of Manchester. In 1948 we had the first stored-program computer and if you get a chance to visit there are displays up all around the Kilburn Building. &lt;a href=\"http://www.cs.manchester.ac.uk/aboutus/history/\"&gt;http://www.cs.manchester.ac.uk/aboutus/history/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cs2k6", "flair_text": null, "created": 1354904379.0, "created_utc": 1354900779.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14fllv", "children": [], "author": "Barbas", "id": "c7cs6i9", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 2, "body": "Might want to take a look at [The Universal Computer](http://www.amazon.com/The-Universal-Computer-Leibniz-Turing/dp/0393047857) then, great retelling of the history of logic and the birth of CS ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Might want to take a look at &lt;a href=\"http://www.amazon.com/The-Universal-Computer-Leibniz-Turing/dp/0393047857\"&gt;The Universal Computer&lt;/a&gt; then, great retelling of the history of logic and the birth of CS &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cs6i9", "flair_text": null, "created": 1354904744.0, "created_utc": 1354901144.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14fllv", "children": [], "author": "lanzaa", "id": "c7csfus", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 1, "body": "San Jose State University recently had a History of Computing class.\n\nHere is the course website:\nhttp://www.cs.sjsu.edu/~mak/CS185C/index.html\n\nDon't forget to checkout the speaker series videos. Lots of well known computer science people:\nhttp://www.cs.sjsu.edu/~mak/SpeakerSeries/index.html\n\nI will see if I can make a mirror of the videos, so you don't have to use that stupid player.", "edited": 1354902415.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;San Jose State University recently had a History of Computing class.&lt;/p&gt;\n\n&lt;p&gt;Here is the course website:\n&lt;a href=\"http://www.cs.sjsu.edu/%7Emak/CS185C/index.html\"&gt;http://www.cs.sjsu.edu/~mak/CS185C/index.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Don&amp;#39;t forget to checkout the speaker series videos. Lots of well known computer science people:\n&lt;a href=\"http://www.cs.sjsu.edu/%7Emak/SpeakerSeries/index.html\"&gt;http://www.cs.sjsu.edu/~mak/SpeakerSeries/index.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I will see if I can make a mirror of the videos, so you don&amp;#39;t have to use that stupid player.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7csfus", "flair_text": null, "created": 1354905610.0, "created_utc": 1354902010.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14fllv", "children": [], "author": "tjgrant", "id": "c7csunr", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 1, "body": "tl;dr:\nOnce upon a time there was a computer.\n\nPeople thought it was magic.\n\nTurns out it was science... Computer Science.\n\nThe End", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;tl;dr:\nOnce upon a time there was a computer.&lt;/p&gt;\n\n&lt;p&gt;People thought it was magic.&lt;/p&gt;\n\n&lt;p&gt;Turns out it was science... Computer Science.&lt;/p&gt;\n\n&lt;p&gt;The End&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7csunr", "flair_text": null, "created": 1354906995.0, "created_utc": 1354903395.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14fllv", "children": [], "author": "Svanhildur", "id": "c7ct86q", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 2, "body": "As a former art history student who now studies CS I find this very interesting ! You should check this out : http://www.sciencedirect.com/science/article/pii/S0304397505000307  This is the description  : *This note addresses the history of process algebra as an area of research in concurrency theory, the theory of parallel and distributed systems in computer science. Origins are traced back to the early seventies of the twentieth century, and developments since that time are sketched.* ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As a former art history student who now studies CS I find this very interesting ! You should check this out : &lt;a href=\"http://www.sciencedirect.com/science/article/pii/S0304397505000307\"&gt;http://www.sciencedirect.com/science/article/pii/S0304397505000307&lt;/a&gt;  This is the description  : &lt;em&gt;This note addresses the history of process algebra as an area of research in concurrency theory, the theory of parallel and distributed systems in computer science. Origins are traced back to the early seventies of the twentieth century, and developments since that time are sketched.&lt;/em&gt; &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ct86q", "flair_text": null, "created": 1354908246.0, "created_utc": 1354904646.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14fllv", "children": [], "author": "Burgenol", "id": "c7cxcfq", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 1, "body": "https://www.coursera.org/course/insidetheinternet\n\nthis should be quite interesting, it may provide some structure to your work.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://www.coursera.org/course/insidetheinternet\"&gt;https://www.coursera.org/course/insidetheinternet&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;this should be quite interesting, it may provide some structure to your work.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7cxcfq", "flair_text": null, "created": 1354921929.0, "created_utc": 1354918329.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14fllv", "children": [], "author": "berlinbrown", "id": "c7emcf8", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 1, "body": "I wrote a blog post a while back, this was essentially it.  I would suggest focusing on Turing and his history.  I feel he is at the center of it all.  Knuth for the pure computer science algorithms.\n\nHere are some interesting dates:\n\n  *  1903 - Alonzo Church was born in Washington, D.C. (USA)\n  *  1928 - The Entscheidungsproblem decision problem was proposed by David Hilbert \n  *  1936 - Church publishes \"An Unsolvable Problem of Elementary Number Theory\", Church's Thesis [1]. It is a paper on untyped lambda calculus. American Journal of Mathematics, Volume 58, No. 2. (Apr., 1936)\n  *  1936 - Alan Turning publishes a paper on an abstract machine , On Computable Numbers, with an   *  Application to the Entscheidungsproblem' Proceedings of the London Mathematical Society, Series 2, 42 (1936-37). He proposed the concept of the stored-program. \n  *  1936 - 1938 - Alan Turing studies under Alonzo Church\n  *  1937 - John von Neumann recommends Alan Turing for Fellowship at Princeton.\n  *  1938 - Alan Turing receives Ph.D from Princeton\n  *  1946 - Alan Turing presents a paper on the stored-program computer (Automatic Computing Engine).\n  *  1937+ - John von Neumann gains knowledge from Alan Turing's papers but Turing was not directly related to the development of ENIAC.\n  *  1943 - 1946 - Creation of ENIAC (Electronic Numerical Integrator And Computer). Note: ENIAC was not a stored-program computer.\n  *  1944 - John von Neumann became involved with ENIAC \n  *  1945 - John von Neumann publishes paper on Electronic Discreet Variable Computer (EDVAC)\n  *  1948 - Manchester Mark I developed at Manchester University, first stored-program computer\n  *  1949-1960 - Early stored computers were created, some of the based on von Neumann architecture.\n  *  1938 - Donald Knuth was born\n  *  1957 - Donald Knuth had access to a computer. \"I saw my first computer in 1957, which is pretty late in the history game as far as computers are concerned. There were about 2000 programmers in the entire world\"\n  *  1963 - Donald Knuth began work on the Art of Computer Programming.\n  *  1973 - C programming language appeared.\n\nNote: I presented milestones but some of these events were not directly related.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I wrote a blog post a while back, this was essentially it.  I would suggest focusing on Turing and his history.  I feel he is at the center of it all.  Knuth for the pure computer science algorithms.&lt;/p&gt;\n\n&lt;p&gt;Here are some interesting dates:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt; 1903 - Alonzo Church was born in Washington, D.C. (USA)&lt;/li&gt;\n&lt;li&gt; 1928 - The Entscheidungsproblem decision problem was proposed by David Hilbert &lt;/li&gt;\n&lt;li&gt; 1936 - Church publishes &amp;quot;An Unsolvable Problem of Elementary Number Theory&amp;quot;, Church&amp;#39;s Thesis [1]. It is a paper on untyped lambda calculus. American Journal of Mathematics, Volume 58, No. 2. (Apr., 1936)&lt;/li&gt;\n&lt;li&gt; 1936 - Alan Turning publishes a paper on an abstract machine , On Computable Numbers, with an   *  Application to the Entscheidungsproblem&amp;#39; Proceedings of the London Mathematical Society, Series 2, 42 (1936-37). He proposed the concept of the stored-program. &lt;/li&gt;\n&lt;li&gt; 1936 - 1938 - Alan Turing studies under Alonzo Church&lt;/li&gt;\n&lt;li&gt; 1937 - John von Neumann recommends Alan Turing for Fellowship at Princeton.&lt;/li&gt;\n&lt;li&gt; 1938 - Alan Turing receives Ph.D from Princeton&lt;/li&gt;\n&lt;li&gt; 1946 - Alan Turing presents a paper on the stored-program computer (Automatic Computing Engine).&lt;/li&gt;\n&lt;li&gt; 1937+ - John von Neumann gains knowledge from Alan Turing&amp;#39;s papers but Turing was not directly related to the development of ENIAC.&lt;/li&gt;\n&lt;li&gt; 1943 - 1946 - Creation of ENIAC (Electronic Numerical Integrator And Computer). Note: ENIAC was not a stored-program computer.&lt;/li&gt;\n&lt;li&gt; 1944 - John von Neumann became involved with ENIAC &lt;/li&gt;\n&lt;li&gt; 1945 - John von Neumann publishes paper on Electronic Discreet Variable Computer (EDVAC)&lt;/li&gt;\n&lt;li&gt; 1948 - Manchester Mark I developed at Manchester University, first stored-program computer&lt;/li&gt;\n&lt;li&gt; 1949-1960 - Early stored computers were created, some of the based on von Neumann architecture.&lt;/li&gt;\n&lt;li&gt; 1938 - Donald Knuth was born&lt;/li&gt;\n&lt;li&gt; 1957 - Donald Knuth had access to a computer. &amp;quot;I saw my first computer in 1957, which is pretty late in the history game as far as computers are concerned. There were about 2000 programmers in the entire world&amp;quot;&lt;/li&gt;\n&lt;li&gt; 1963 - Donald Knuth began work on the Art of Computer Programming.&lt;/li&gt;\n&lt;li&gt; 1973 - C programming language appeared.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Note: I presented milestones but some of these events were not directly related.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7emcf8", "flair_text": null, "created": 1355200559.0, "created_utc": 1355196959.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14fllv", "children": [], "author": "nyxgeek", "id": "c7mdka9", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 1, "body": "Excellent TED Talk: George Dyson at the Birth of the Computer\n\nhttp://www.ted.com/talks/george_dyson_at_the_birth_of_the_computer.html", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Excellent TED Talk: George Dyson at the Birth of the Computer&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.ted.com/talks/george_dyson_at_the_birth_of_the_computer.html\"&gt;http://www.ted.com/talks/george_dyson_at_the_birth_of_the_computer.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7mdka9", "flair_text": null, "created": 1356546758.0, "created_utc": 1356543158.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_14fllv", "children": [], "author": "datsundere", "id": "c7d29cc", "parent_id": "t3_14fllv", "score": 0, "approved_by": null, "upvotes": 1, "body": "In chronological order. Know these men, and you understand the history of computing\n\nCharles Babbage\nNicolas Tesla\nAlan Turing\nJohn Vonn Newmann\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In chronological order. Know these men, and you understand the history of computing&lt;/p&gt;\n\n&lt;p&gt;Charles Babbage\nNicolas Tesla\nAlan Turing\nJohn Vonn Newmann&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7d29cc", "flair_text": null, "created": 1354942252.0, "created_utc": 1354938652.0, "num_reports": null}], "score": 53, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 70, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/14fllv/history_of_computer_science/", "has_more_comments": false, "name": "t3_14fllv", "created": 1354862898.0, "url": "http://www.reddit.com/r/compsci/comments/14fllv/history_of_computer_science/", "author_flair_text": null, "author": "AustinCorgiBart", "created_utc": 1354862898.0, "link_flair_text": null, "media": null, "num_reports": null}, "192": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 33, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Been having discussions with friends about a few things about Computer Science and I got tired of making guesses and assumptions and set out to collect hard data. This is a questionnaire about some simple CS concepts. I&amp;#39;ll probably take the data I get and make some kind of infographic and put it up on the internet for us to all see. I&amp;#39;m particularly interested in what kinds of fields people are interested in. &lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s the link: &lt;a href=\"https://docs.google.com/spreadsheet/viewform?formkey=dGF4MGJRSGktWkhFNC1VTU9sRTBWZ3c6MQ\"&gt;Google Docs Form&lt;/a&gt; &lt;/p&gt;\n\n&lt;p&gt;Thanks in advance!  &lt;/p&gt;\n\n&lt;p&gt;(btw, none of the information will be used for any purposes other than raw curiosity i.e. no commercial/academic interests are involved here. Also, I don&amp;#39;t see any personal information in the results so don&amp;#39;t worry about that.)  &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ll have a follow up post eventually with the results.  &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Results are in! Look below!&lt;/strong&gt; More will come tomorrow as the results of the poll keep coming in. Feel free to keep taking the poll. We&amp;#39;ve done some basic analysis. Enjoy!  &lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;More Results&lt;/strong&gt; This link contains 1071 responses in csv format. I&amp;#39;ll play around with exploring the data set tomorrow probably. I&amp;#39;ve just finished my final final of the semester and need to defragment. &lt;a href=\"http://pastelink.me/dl/e3e6ce\"&gt;Link&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;Edit: Brain is fried from studying/end of semester activities. Spelling and grammar reflects that. Made minor changes.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Been having discussions with friends about a few things about Computer Science and I got tired of making guesses and assumptions and set out to collect hard data. This is a questionnaire about some simple CS concepts. I'll probably take the data I get and make some kind of infographic and put it up on the internet for us to all see. I'm particularly interested in what kinds of fields people are interested in. \n  \nHere's the link: [Google Docs Form](https://docs.google.com/spreadsheet/viewform?formkey=dGF4MGJRSGktWkhFNC1VTU9sRTBWZ3c6MQ) \n   \nThanks in advance!  \n  \n(btw, none of the information will be used for any purposes other than raw curiosity i.e. no commercial/academic interests are involved here. Also, I don't see any personal information in the results so don't worry about that.)  \n\nI'll have a follow up post eventually with the results.  \n\n**Results are in! Look below!** More will come tomorrow as the results of the poll keep coming in. Feel free to keep taking the poll. We've done some basic analysis. Enjoy!  \n\n**More Results** This link contains 1071 responses in csv format. I'll play around with exploring the data set tomorrow probably. I've just finished my final final of the semester and need to defragment. [Link](http://pastelink.me/dl/e3e6ce)  \n \n\nEdit: Brain is fried from studying/end of semester activities. Spelling and grammar reflects that. Made minor changes.", "saved": false, "id": "14bw4g", "clicked": false, "title": "A poll for students and others involved in the Compsci world", "num_comments": 128, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14bw4g", "children": [], "author": "bossier330", "id": "c7bt1mn", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 16, "body": "For the love of God, choose more contrasting colors next time.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;For the love of God, choose more contrasting colors next time.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bt1mn", "flair_text": null, "created": 1354747311.0, "created_utc": 1354743711.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_14bw4g", "children": [], "author": "ansc", "id": "c7bny92", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 45, "body": "Dolla dolla bills y'all!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Dolla dolla bills y&amp;#39;all!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bny92", "flair_text": null, "created": 1354731963.0, "created_utc": 1354728363.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14bw4g", "children": [], "author": "bo1024", "id": "c7bp5h4", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 13, "body": "You may want to specify whether \"hardest/easiest class\" refers only to computer science or to any class.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You may want to specify whether &amp;quot;hardest/easiest class&amp;quot; refers only to computer science or to any class.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bp5h4", "flair_text": null, "created": 1354735837.0, "created_utc": 1354732237.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14bw4g", "children": [], "author": "barklesparkles", "id": "c7brrvb", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 9, "body": "Hello. Would it be ok if I x-posted this to r/girlsgonewired please? I'm sure it would be of interest to our sub and you'd get a few responses there :) ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hello. Would it be ok if I x-posted this to r/girlsgonewired please? I&amp;#39;m sure it would be of interest to our sub and you&amp;#39;d get a few responses there :) &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7brrvb", "flair_text": null, "created": 1354743834.0, "created_utc": 1354740234.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14bw4g", "children": [], "author": "minjooky", "id": "c7by4yz", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 12, "body": "Too busy tonight to process the data. I'm sure we'll get more as the night rolls on and tomorrow comes around.  \n\nIn the mean time, there are more than 600 responses which will let people get some idea of the opinions.  \n\nAs I promised, here are the results. [paste.me link](http://pastelink.me/dl/434675)  \n\nI'll be around tomorrow around 7PM EST to mess with the rest of the results.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Too busy tonight to process the data. I&amp;#39;m sure we&amp;#39;ll get more as the night rolls on and tomorrow comes around.  &lt;/p&gt;\n\n&lt;p&gt;In the mean time, there are more than 600 responses which will let people get some idea of the opinions.  &lt;/p&gt;\n\n&lt;p&gt;As I promised, here are the results. &lt;a href=\"http://pastelink.me/dl/434675\"&gt;paste.me link&lt;/a&gt;  &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ll be around tomorrow around 7PM EST to mess with the rest of the results.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7by4yz", "flair_text": null, "created": 1354763937.0, "created_utc": 1354760337.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14bw4g", "children": [], "author": "PartyButton", "id": "c7bsjpx", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 5, "body": "i have a BA in computer science though!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;i have a BA in computer science though!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bsjpx", "flair_text": null, "created": 1354745907.0, "created_utc": 1354742307.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14bw4g", "children": [], "author": "scintillatingdunce", "id": "c7brbc1", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 9, "body": "What about those of us who dropped out to work as developers full time instead?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What about those of us who dropped out to work as developers full time instead?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7brbc1", "flair_text": null, "created": 1354742458.0, "created_utc": 1354738858.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14bw4g", "children": [], "author": "[deleted]", "id": "c7bp733", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 4, "body": "Awesome survey. I did it. How far are you in your degree? ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Awesome survey. I did it. How far are you in your degree? &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bp733", "flair_text": null, "created": 1354735981.0, "created_utc": 1354732381.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14bw4g", "children": [], "author": "minjooky", "id": "c7bq5pl", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 6, "body": "Just want to add a quick note to my survey. When I ask what your favorite OS/Language is, it's just what you have the most fun with, or even just admire its qualities. I'm not trying to ask what is best, because, obviously, there is a different tool for every purpose. :)  \n\nEdit for brain fart", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just want to add a quick note to my survey. When I ask what your favorite OS/Language is, it&amp;#39;s just what you have the most fun with, or even just admire its qualities. I&amp;#39;m not trying to ask what is best, because, obviously, there is a different tool for every purpose. :)  &lt;/p&gt;\n\n&lt;p&gt;Edit for brain fart&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bq5pl", "flair_text": null, "created": 1354738938.0, "created_utc": 1354735338.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_14bw4g", "children": [], "author": "Mylifetogive", "id": "c7bos60", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 10, "body": "Upvoted for justice.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Upvoted for justice.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bos60", "flair_text": null, "created": 1354734675.0, "created_utc": 1354731075.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14bw4g", "children": [], "author": "_AdamC", "id": "c7bphem", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 3, "body": "only for US students I see.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;only for US students I see.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bphem", "flair_text": null, "created": 1354736865.0, "created_utc": 1354733265.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14bw4g", "children": [], "author": "dogcowpigaardvark", "id": "c7bqtdx", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 3, "body": "Can you/will you publish your results? I am interested in seeing what you came up with.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Can you/will you publish your results? I am interested in seeing what you came up with.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bqtdx", "flair_text": null, "created": 1354740937.0, "created_utc": 1354737337.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14bw4g", "children": [], "author": "tori_k", "id": "c7bradx", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 1, "body": "You attend UCF? Wasn't that the university that gutted its CS research program in favor of teaching only?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You attend UCF? Wasn&amp;#39;t that the university that gutted its CS research program in favor of teaching only?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bradx", "flair_text": null, "created": 1354742378.0, "created_utc": 1354738778.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14bw4g", "children": [], "author": "usea", "id": "c7bryj5", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 2, "body": "I don't want to nitpick, but I'm going to nitpick. Why is it green on black in a terrible font? It was very difficult for me to read and I had to struggle to complete the survey.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t want to nitpick, but I&amp;#39;m going to nitpick. Why is it green on black in a terrible font? It was very difficult for me to read and I had to struggle to complete the survey.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bryj5", "flair_text": null, "created": 1354744342.0, "created_utc": 1354740742.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14bw4g", "children": [], "author": "behemebash", "id": "c7bs2id", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 1, "body": "Nice survey! It will be interesting to see the results. I kind of wish you had put at least an email address field so that we could be notified when you publish.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Nice survey! It will be interesting to see the results. I kind of wish you had put at least an email address field so that we could be notified when you publish.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bs2id", "flair_text": null, "created": 1354744629.0, "created_utc": 1354741029.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14bw4g", "children": [], "author": "tyxie", "id": "c7bs89j", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 1, "body": "Hope you'll get enough data, I'm really interested in the results.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hope you&amp;#39;ll get enough data, I&amp;#39;m really interested in the results.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bs89j", "flair_text": null, "created": 1354745034.0, "created_utc": 1354741434.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14bw4g", "children": [], "author": "rakendrachen", "id": "c7budwr", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 1, "body": "i want to see those free response answers", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;i want to see those free response answers&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7budwr", "flair_text": null, "created": 1354751306.0, "created_utc": 1354747706.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14bw4g", "children": [], "author": "TheRiverStyx", "id": "c7bulvt", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 2, "body": "You might want to let the user indicate whether they are a professional returning to school or freshly graduated from HS. \n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You might want to let the user indicate whether they are a professional returning to school or freshly graduated from HS. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bulvt", "flair_text": null, "created": 1354752010.0, "created_utc": 1354748410.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14bw4g", "children": [], "author": "crazedgremlin", "id": "c7bvmns", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 2, "body": "I'm getting a BA, where's my degree option?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m getting a BA, where&amp;#39;s my degree option?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bvmns", "flair_text": null, "created": 1354755350.0, "created_utc": 1354751750.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14bw4g", "children": [], "author": "WarlordOfTheMidwest", "id": "c7bweww", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 1, "body": "Doing my second BS in CS (first was in physics). Boy howdy can I smoke the math reqs. A lot of fun making stuff too. A++ would rec to everyone.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Doing my second BS in CS (first was in physics). Boy howdy can I smoke the math reqs. A lot of fun making stuff too. A++ would rec to everyone.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bweww", "flair_text": null, "created": 1354758016.0, "created_utc": 1354754416.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14bw4g", "children": [], "author": "mochamocha", "id": "c7c37dy", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 2, "body": "Just graduated (BSc). If I had a choice I'd stay in the warm cocoon of academia forever, but alas, I can't.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just graduated (BSc). If I had a choice I&amp;#39;d stay in the warm cocoon of academia forever, but alas, I can&amp;#39;t.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7c37dy", "flair_text": null, "created": 1354784791.0, "created_utc": 1354781191.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14bw4g", "children": [], "author": "apachex", "id": "c7c7t1b", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 1, "body": "Of all the possible places that you could be attending, you're at UCF. That's awesome, me too!!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Of all the possible places that you could be attending, you&amp;#39;re at UCF. That&amp;#39;s awesome, me too!!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7c7t1b", "flair_text": null, "created": 1354815826.0, "created_utc": 1354812226.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14bw4g", "children": [], "author": "fuzzynyanko", "id": "c7bvrcc", "parent_id": "t3_14bw4g", "score": 0, "approved_by": null, "upvotes": 2, "body": "I graduated, and as soon as I got experience, the phone calls came in like crazy. Definitely consider internships/co-ops and you have a career ahead of you", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I graduated, and as soon as I got experience, the phone calls came in like crazy. Definitely consider internships/co-ops and you have a career ahead of you&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bvrcc", "flair_text": null, "created": 1354755788.0, "created_utc": 1354752188.0, "num_reports": null}], "score": 125, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 158, "hidden": false, "thumbnail": "", "edited": 1354837623.0, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/14bw4g/a_poll_for_students_and_others_involved_in_the/", "has_more_comments": false, "name": "t3_14bw4g", "created": 1354727388.0, "url": "http://www.reddit.com/r/compsci/comments/14bw4g/a_poll_for_students_and_others_involved_in_the/", "author_flair_text": null, "author": "minjooky", "created_utc": 1354727388.0, "link_flair_text": null, "media": null, "num_reports": null}, "193": {"domain": "youtube.com", "link_flair_class": null, "banned_by": null, "downvotes": 8, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "14d3v8", "clicked": false, "title": "Spin Transformations of Discrete Surfaces - Conference Presentation", "num_comments": 1, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14d3v8", "children": [], "author": "nomad42184", "id": "c7ck5qu", "parent_id": "t3_14d3v8", "score": 0, "approved_by": null, "upvotes": 2, "body": "Yea, almost all of Keenan Crane's stuff is great.  I also really enjoyed his recent Everhart lecture (http://www.youtube.com/watch?v=Mcal5Cy7r4E) and his blog for the DDG course at CalTech is also top-notch (http://brickisland.net/cs177fa12/).  His most recent paper on computing approximate geodesic distance using the heat kernel (http://arxiv.org/abs/1204.6216) also seems pretty cool.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yea, almost all of Keenan Crane&amp;#39;s stuff is great.  I also really enjoyed his recent Everhart lecture (&lt;a href=\"http://www.youtube.com/watch?v=Mcal5Cy7r4E\"&gt;http://www.youtube.com/watch?v=Mcal5Cy7r4E&lt;/a&gt;) and his blog for the DDG course at CalTech is also top-notch (&lt;a href=\"http://brickisland.net/cs177fa12/\"&gt;http://brickisland.net/cs177fa12/&lt;/a&gt;).  His most recent paper on computing approximate geodesic distance using the heat kernel (&lt;a href=\"http://arxiv.org/abs/1204.6216\"&gt;http://arxiv.org/abs/1204.6216&lt;/a&gt;) also seems pretty cool.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7ck5qu", "flair_text": null, "created": 1354858088.0, "created_utc": 1354854488.0, "num_reports": null}], "score": 9, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 17, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/14d3v8/spin_transformations_of_discrete_surfaces/", "has_more_comments": false, "name": "t3_14d3v8", "created": 1354764527.0, "url": "http://www.youtube.com/watch?v=UQC_emOPVK8", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1354764527.0, "link_flair_text": null, "media": null, "num_reports": null}, "194": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 8, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I was reading about &lt;a href=\"http://en.wikipedia.org/wiki/Kolmogorov_complexity#Incomputability_of_Kolmogorov_complexity\"&gt;the Incomputability of Kolmogorov complexity&lt;/a&gt;, but I could not understand how the proof was relevant to our world.&lt;/p&gt;\n\n&lt;p&gt;The problem I saw was that say you had a function Halts(x) that takes a program and returns true if it halts (ignoring the halting problem for now) then it becomes computable. We create this program that loops through all possible programs until if finds one that halts on the input string, then returns the size of that program.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;KolmogorovComplexity(string s)\n    for i = 1 to infinity:\n        for each Program P of size i:\n            if Halts(P):\n                if s equals P():\n                    return sizeof(P)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This would contradict the proof, since the proof states we can find a smaller program. But that&amp;#39;s impossible, we already tried all programs that are smaller. In fact we already tried running it through the contradiction proof, but since it is referring to itself it created an infinite loop and therefore doesn&amp;#39;t halt.&lt;/p&gt;\n\n&lt;p&gt;Of course, this relies on us ignoring the halting problem, but since the halting problem doesn&amp;#39;t exist for finite memory (like in our physical world) then isn&amp;#39;t it a lie to say we can&amp;#39;t make an algorithm that can find the smallest compression of a string?&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;tl;dr: shouldn&amp;#39;t it be possible to create an algorithm that returns the smallest string compression possible for a given amount of memory?&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Edit: I realized there were a crucial flaw with my thinking, &lt;a href=\"http://www.reddit.com/r/compsci/comments/14broq/isnt_the_incomputability_of_kolmogorov_complexity/c7bnghz\"&gt;kahirsch gave a good explanation of why it still isn&amp;#39;t going to be practical.&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I was reading about [the Incomputability of Kolmogorov complexity](http://en.wikipedia.org/wiki/Kolmogorov_complexity#Incomputability_of_Kolmogorov_complexity), but I could not understand how the proof was relevant to our world.\n\nThe problem I saw was that say you had a function Halts(x) that takes a program and returns true if it halts (ignoring the halting problem for now) then it becomes computable. We create this program that loops through all possible programs until if finds one that halts on the input string, then returns the size of that program.\n\n    KolmogorovComplexity(string s)\n        for i = 1 to infinity:\n            for each Program P of size i:\n                if Halts(P):\n                    if s equals P():\n                        return sizeof(P)\n\nThis would contradict the proof, since the proof states we can find a smaller program. But that's impossible, we already tried all programs that are smaller. In fact we already tried running it through the contradiction proof, but since it is referring to itself it created an infinite loop and therefore doesn't halt.\n\nOf course, this relies on us ignoring the halting problem, but since the halting problem doesn't exist for finite memory (like in our physical world) then isn't it a lie to say we can't make an algorithm that can find the smallest compression of a string?\n\n**tl;dr: shouldn't it be possible to create an algorithm that returns the smallest string compression possible for a given amount of memory?**\n\nEdit: I realized there were a crucial flaw with my thinking, [kahirsch gave a good explanation of why it still isn't going to be practical.](http://www.reddit.com/r/compsci/comments/14broq/isnt_the_incomputability_of_kolmogorov_complexity/c7bnghz)", "saved": false, "id": "14broq", "clicked": false, "title": "Isn't the incomputability of Kolmogorov complexity a non-practical theorem?", "num_comments": 16, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_14broq", "children": [], "author": "kahirsch", "id": "c7bn3wt", "parent_id": "t3_14broq", "score": 0, "approved_by": null, "upvotes": 13, "body": "Yes, if you limit the memory to a finite amount, then the computers are no longer general purpose and you can theoretically solve the halting problem.\n\nIn practice, it's no help at all since it would take billions of years to enumerate even very short programs.\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yes, if you limit the memory to a finite amount, then the computers are no longer general purpose and you can theoretically solve the halting problem.&lt;/p&gt;\n\n&lt;p&gt;In practice, it&amp;#39;s no help at all since it would take billions of years to enumerate even very short programs.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bn3wt", "flair_text": null, "created": 1354729039.0, "created_utc": 1354725439.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14broq", "children": [], "author": "flebron", "id": "c7bn24r", "parent_id": "t3_14broq", "score": 0, "approved_by": null, "upvotes": 3, "body": "You already have a function that returns true when a program halts.\nJust run the program, and when it halts, you return true. If it halts, you'll return true.\n\nThe problem isn't there, it's in returning false when it doesn't halt. That's the non computable part. \"if Halts(P)\" couldn't be evaluated, because there will be some program P, such that you cannot return false from Halt(P), even when P does not halt.\n\nIf you are assuming finite memory (i.e. finite states and finite input), sure, but there may be strings for which the shortest program that outputs it is larger than your hardcoded memory bound, and so your program will not be able to find their Kolmogorov complexity. If there is a program that fits in your memory and calculates s in the shortest way possible, and if you have a way to decide for each input if it halts or not, then sure, you will find said program.\n\nIf you're going for practicality by assuming finite memory, however, you can't go the route of \"finite memory avoids halting problem\", because that algorithm which, for each program up to a given size, tells you if it halts or not, is ridiculously impractical (and I'm not even sure if the machine of finite memory itself can compute such a table, even when you bound the input size or state size).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You already have a function that returns true when a program halts.\nJust run the program, and when it halts, you return true. If it halts, you&amp;#39;ll return true.&lt;/p&gt;\n\n&lt;p&gt;The problem isn&amp;#39;t there, it&amp;#39;s in returning false when it doesn&amp;#39;t halt. That&amp;#39;s the non computable part. &amp;quot;if Halts(P)&amp;quot; couldn&amp;#39;t be evaluated, because there will be some program P, such that you cannot return false from Halt(P), even when P does not halt.&lt;/p&gt;\n\n&lt;p&gt;If you are assuming finite memory (i.e. finite states and finite input), sure, but there may be strings for which the shortest program that outputs it is larger than your hardcoded memory bound, and so your program will not be able to find their Kolmogorov complexity. If there is a program that fits in your memory and calculates s in the shortest way possible, and if you have a way to decide for each input if it halts or not, then sure, you will find said program.&lt;/p&gt;\n\n&lt;p&gt;If you&amp;#39;re going for practicality by assuming finite memory, however, you can&amp;#39;t go the route of &amp;quot;finite memory avoids halting problem&amp;quot;, because that algorithm which, for each program up to a given size, tells you if it halts or not, is ridiculously impractical (and I&amp;#39;m not even sure if the machine of finite memory itself can compute such a table, even when you bound the input size or state size).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bn24r", "flair_text": null, "created": 1354728863.0, "created_utc": 1354725263.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14broq", "children": [], "author": "Salusa", "id": "c7bnh32", "parent_id": "t3_14broq", "score": 0, "approved_by": null, "upvotes": 3, "body": "Let's imagine this in reverse. Instead of saying \"What is the Kolmogorov complexity of input S?\" let's try to enumerate all strings I and output their complexity (and then we stop when we reach S).\n\nSo, our new program looks like this:\n\n\tKolmogorovEnumeration(string s)\n\t\tfor i = 1 to infinity:\n\t\t\tfor each Program P of size i: # Ordered listing\n\t\t\t\tif Halts(P):\n\t\t\t\t\tprint P() + \" has Kolmogorov Complexity of \" + \"i \\n\"\n\t\t\t\t\tif s equals P():\n\t\t\t\t\t\treturn\n\n\nWhat's really interesting, is we can now find the \"first\" program which has a Kolmogorov complexity of X (for any value X). We'll call this program First_x and it's output is First_x(), and by definition sizeof(First_x) == X.\n\nLet's pick a massively large X (several million) and we'll now write a program Q much shorter than X.\n\n\tQ()\n\t\tfor i = 1 to X + :\n\t\t\tfor each Program P of size i: # Ordered listing\n\t\t\t\tif P is first program of size i and i == X:\n\t\t\t\t\tprint P()\n\t\t\t\t\treturn\n\nsizeof(Q) is roughly equal to log(X). This program is thus much shorter than X, so First_x() which we had previously determined to have a complexity of X, must actually have a complexity of sizeof(Q) (~log(X)). This is a contradiction.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Let&amp;#39;s imagine this in reverse. Instead of saying &amp;quot;What is the Kolmogorov complexity of input S?&amp;quot; let&amp;#39;s try to enumerate all strings I and output their complexity (and then we stop when we reach S).&lt;/p&gt;\n\n&lt;p&gt;So, our new program looks like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;KolmogorovEnumeration(string s)\n    for i = 1 to infinity:\n        for each Program P of size i: # Ordered listing\n            if Halts(P):\n                print P() + &amp;quot; has Kolmogorov Complexity of &amp;quot; + &amp;quot;i \\n&amp;quot;\n                if s equals P():\n                    return\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What&amp;#39;s really interesting, is we can now find the &amp;quot;first&amp;quot; program which has a Kolmogorov complexity of X (for any value X). We&amp;#39;ll call this program First_x and it&amp;#39;s output is First_x(), and by definition sizeof(First_x) == X.&lt;/p&gt;\n\n&lt;p&gt;Let&amp;#39;s pick a massively large X (several million) and we&amp;#39;ll now write a program Q much shorter than X.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;Q()\n    for i = 1 to X + :\n        for each Program P of size i: # Ordered listing\n            if P is first program of size i and i == X:\n                print P()\n                return\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;sizeof(Q) is roughly equal to log(X). This program is thus much shorter than X, so First_x() which we had previously determined to have a complexity of X, must actually have a complexity of sizeof(Q) (~log(X)). This is a contradiction.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bnh32", "flair_text": null, "created": 1354730341.0, "created_utc": 1354726741.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14broq", "children": [], "author": "busy_beaver", "id": "c7bzntb", "parent_id": "t3_14broq", "score": 0, "approved_by": null, "upvotes": 2, "body": "It is \"non-practical\" in that it doesn't imply anything about the feasability of calculating Kolmogorov Complexity in a setting with limited memory (i.e. a \"realistic\" setting) - at least not obviously. Computability Theory is basically pure math. I don't think you should expect it to have many obvious practical applications.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It is &amp;quot;non-practical&amp;quot; in that it doesn&amp;#39;t imply anything about the feasability of calculating Kolmogorov Complexity in a setting with limited memory (i.e. a &amp;quot;realistic&amp;quot; setting) - at least not obviously. Computability Theory is basically pure math. I don&amp;#39;t think you should expect it to have many obvious practical applications.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bzntb", "flair_text": null, "created": 1354769106.0, "created_utc": 1354765506.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14broq", "children": [], "author": "quiteamess", "id": "c7fkvn7", "parent_id": "t3_14broq", "score": 0, "approved_by": null, "upvotes": 2, "body": "The Kolmogorov complexity can be approximated with compression algorithms like zip. This can be used to define metrics between objects. The general idea is that if there are 3 objects o_1, o_2 and o_3 the distance d(o_1, o_2) is smaller than the distance d(o_1, o_3) if compress(o_1, o_2) &lt; compress(o_1, o_3). For example, if you compress songs composed by Bach together with other songs composed by Bach this will be smaller than if you compress songs composed by Bach together with songs composed by Haydn. [This can be used for clustering](http://www.google.de/search?client=ubuntu&amp;channel=fs&amp;q=mdl+clustering&amp;ie=utf-8&amp;oe=utf-8&amp;redir_esc=&amp;ei=R_DIUOuRM43Psgb6l4CQAQ).\n\nKolmogorov complexity can be used to define [universial artificial intelligence](http://en.wikipedia.org/wiki/Marcus_Hutter#Universal_artificial_intelligence_.28AIXI.29). I still don't really understand the idea but it defines some upper bound on an optimal intelligent agent. I saw this referenced in a neuroscience talk, so researchers consider this concept in this domain. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The Kolmogorov complexity can be approximated with compression algorithms like zip. This can be used to define metrics between objects. The general idea is that if there are 3 objects o_1, o_2 and o_3 the distance d(o_1, o_2) is smaller than the distance d(o_1, o_3) if compress(o_1, o_2) &amp;lt; compress(o_1, o_3). For example, if you compress songs composed by Bach together with other songs composed by Bach this will be smaller than if you compress songs composed by Bach together with songs composed by Haydn. &lt;a href=\"http://www.google.de/search?client=ubuntu&amp;amp;channel=fs&amp;amp;q=mdl+clustering&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;redir_esc=&amp;amp;ei=R_DIUOuRM43Psgb6l4CQAQ\"&gt;This can be used for clustering&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Kolmogorov complexity can be used to define &lt;a href=\"http://en.wikipedia.org/wiki/Marcus_Hutter#Universal_artificial_intelligence_.28AIXI.29\"&gt;universial artificial intelligence&lt;/a&gt;. I still don&amp;#39;t really understand the idea but it defines some upper bound on an optimal intelligent agent. I saw this referenced in a neuroscience talk, so researchers consider this concept in this domain. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7fkvn7", "flair_text": null, "created": 1355350918.0, "created_utc": 1355347318.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_14broq", "children": [], "author": "[deleted]", "id": "c7bmqom", "parent_id": "t3_14broq", "score": 0, "approved_by": null, "upvotes": 1, "body": "Perhaps. I'm too tired to come to any conclusions right now.\n\nHowever, the number found will not be the Kolmogorov complexity.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Perhaps. I&amp;#39;m too tired to come to any conclusions right now.&lt;/p&gt;\n\n&lt;p&gt;However, the number found will not be the Kolmogorov complexity.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bmqom", "flair_text": null, "created": 1354727706.0, "created_utc": 1354724106.0, "num_reports": null}], "score": 11, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 19, "hidden": false, "thumbnail": "", "edited": 1354727785.0, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/14broq/isnt_the_incomputability_of_kolmogorov_complexity/", "has_more_comments": false, "name": "t3_14broq", "created": 1354722985.0, "url": "http://www.reddit.com/r/compsci/comments/14broq/isnt_the_incomputability_of_kolmogorov_complexity/", "author_flair_text": null, "author": "MestR", "created_utc": 1354722985.0, "link_flair_text": null, "media": null, "num_reports": null}, "195": {"domain": "ece.cmu.edu", "link_flair_class": null, "banned_by": null, "downvotes": 9, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "14azs8", "clicked": false, "title": "A tutorial on checksums and CRCs.", "num_comments": 3, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14azs8", "children": [], "author": "jzelinskie", "id": "c7blp06", "parent_id": "t3_14azs8", "score": 0, "approved_by": null, "upvotes": 1, "body": "Anybody know how they brute force CRCs? [Some anime fansubs](http://rorisubs.com/2012/11/21/why-is-the-file-locked/) like to do this, but I have no idea how.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Anybody know how they brute force CRCs? &lt;a href=\"http://rorisubs.com/2012/11/21/why-is-the-file-locked/\"&gt;Some anime fansubs&lt;/a&gt; like to do this, but I have no idea how.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7blp06", "flair_text": null, "created": 1354723402.0, "created_utc": 1354719802.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_14azs8", "children": [], "author": "mangodrunk", "id": "c7bryem", "parent_id": "t3_14azs8", "score": 0, "approved_by": null, "upvotes": 1, "body": "Very informative. The author also states in this old [blog posting in Checksum and CRC Central](http://checksumcrc.blogspot.com/2012/05/crc-and-checksum-tutorial-slides.html) that if there's enough interest, he'll do a recording to go along with the slides. I guess it never happened.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Very informative. The author also states in this old &lt;a href=\"http://checksumcrc.blogspot.com/2012/05/crc-and-checksum-tutorial-slides.html\"&gt;blog posting in Checksum and CRC Central&lt;/a&gt; that if there&amp;#39;s enough interest, he&amp;#39;ll do a recording to go along with the slides. I guess it never happened.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bryem", "flair_text": null, "created": 1354744333.0, "created_utc": 1354740733.0, "num_reports": null}], "score": 9, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 18, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/14azs8/a_tutorial_on_checksums_and_crcs/", "has_more_comments": false, "name": "t3_14azs8", "created": 1354681431.0, "url": "http://www.ece.cmu.edu/%7Ekoopman/pubs/KoopmanCRCWebinar9May2012.pdf", "author_flair_text": null, "author": "qkdhfjdjdhd", "created_utc": 1354681431.0, "link_flair_text": null, "media": null, "num_reports": null}, "196": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 15, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m writing an essay and I&amp;#39;m struggling finding decent books for research/references. The only good book I have found so far is Structure and Interpretation of Computer Programs by Abelson and Sussman. &lt;/p&gt;\n\n&lt;p&gt;If you have any recommendations I would be really grateful, thanks.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm writing an essay and I'm struggling finding decent books for research/references. The only good book I have found so far is Structure and Interpretation of Computer Programs by Abelson and Sussman. \n\nIf you have any recommendations I would be really grateful, thanks.", "saved": false, "id": "149m5b", "clicked": false, "title": "Good books on the structure/semantics of programming languages.", "num_comments": 16, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_149m5b", "children": [], "author": "MustrumRidcully", "id": "c7b3nla", "parent_id": "t3_149m5b", "score": 0, "approved_by": null, "upvotes": 18, "body": "[Types and Programing Languages](http://www.cis.upenn.edu/~bcpierce/tapl/), by Benjamin Pierce, explores programming language semantics through development of the lambda calculus.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.cis.upenn.edu/%7Ebcpierce/tapl/\"&gt;Types and Programing Languages&lt;/a&gt;, by Benjamin Pierce, explores programming language semantics through development of the lambda calculus.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7b3nla", "flair_text": null, "created": 1354645233.0, "created_utc": 1354641633.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_149m5b", "children": [], "author": "rbatra", "id": "c7b37wt", "parent_id": "t3_149m5b", "score": 0, "approved_by": null, "upvotes": 7, "body": "[Programming Language Pragmatics](http://www.amazon.com/Programming-Language-Pragmatics-Third-Edition/dp/0123745144) by Michael Scott is a good reference.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.amazon.com/Programming-Language-Pragmatics-Third-Edition/dp/0123745144\"&gt;Programming Language Pragmatics&lt;/a&gt; by Michael Scott is a good reference.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7b37wt", "flair_text": null, "created": 1354643807.0, "created_utc": 1354640207.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_149m5b", "children": [], "author": "csgordon", "id": "c7b6dxw", "parent_id": "t3_149m5b", "score": 0, "approved_by": null, "upvotes": 4, "body": "There are a few now that are freely available online now:\n\n* [Software Foundations](http://www.cis.upenn.edu/~bcpierce/sf/)\n* Programming Languages: Applications and Interpretation (PLAI), first edition (http://www.cs.brown.edu/~sk/Publications/Books/ProgLangs/), and second in progress as mentioned by dyoo (http://www.cs.brown.edu/courses/cs173/2012/book/)\n* [Practical Foundations for Programming Languages](http://www.cs.cmu.edu/~rwh/plbook/)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There are a few now that are freely available online now:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"http://www.cis.upenn.edu/%7Ebcpierce/sf/\"&gt;Software Foundations&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;Programming Languages: Applications and Interpretation (PLAI), first edition (&lt;a href=\"http://www.cs.brown.edu/%7Esk/Publications/Books/ProgLangs/\"&gt;http://www.cs.brown.edu/~sk/Publications/Books/ProgLangs/&lt;/a&gt;), and second in progress as mentioned by dyoo (&lt;a href=\"http://www.cs.brown.edu/courses/cs173/2012/book/\"&gt;http://www.cs.brown.edu/courses/cs173/2012/book/&lt;/a&gt;)&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://www.cs.cmu.edu/%7Erwh/plbook/\"&gt;Practical Foundations for Programming Languages&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7b6dxw", "flair_text": null, "created": 1354653846.0, "created_utc": 1354650246.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_149m5b", "children": [], "author": "tom808", "id": "c7b3ud9", "parent_id": "t3_149m5b", "score": 0, "approved_by": null, "upvotes": 2, "body": "[Engineering a Compiler](http://www.amazon.co.uk/Engineering-Compiler-Keith-Cooper/dp/012088478X) could also be useful to you.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.amazon.co.uk/Engineering-Compiler-Keith-Cooper/dp/012088478X\"&gt;Engineering a Compiler&lt;/a&gt; could also be useful to you.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7b3ud9", "flair_text": null, "created": 1354645828.0, "created_utc": 1354642228.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_149m5b", "children": [], "author": "battingagainstavg", "id": "c7b3vnc", "parent_id": "t3_149m5b", "score": 0, "approved_by": null, "upvotes": 1, "body": "[The 7 books of a highly effective programmer](http://blog.fogus.me/2009/03/11/seven-books/) is a nice collection of essays and blog posts on the structure and theory of programming.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://blog.fogus.me/2009/03/11/seven-books/\"&gt;The 7 books of a highly effective programmer&lt;/a&gt; is a nice collection of essays and blog posts on the structure and theory of programming.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7b3vnc", "flair_text": null, "created": 1354645942.0, "created_utc": 1354642342.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_149m5b", "children": [], "author": "dyoo", "id": "c7b3xzl", "parent_id": "t3_149m5b", "score": 0, "approved_by": null, "upvotes": 2, "body": "Two recommendations:\n\n1. Essentials of Programming Languages\n2. Programming Languages: Application and Interpretation\n\nThe second is available online: http://www.cs.brown.edu/~sk/Publications/Books/ProgLangs/ and it's currently being revised as a second edition: http://www.cs.brown.edu/courses/cs173/2012/book/", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Two recommendations:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Essentials of Programming Languages&lt;/li&gt;\n&lt;li&gt;Programming Languages: Application and Interpretation&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;The second is available online: &lt;a href=\"http://www.cs.brown.edu/%7Esk/Publications/Books/ProgLangs/\"&gt;http://www.cs.brown.edu/~sk/Publications/Books/ProgLangs/&lt;/a&gt; and it&amp;#39;s currently being revised as a second edition: &lt;a href=\"http://www.cs.brown.edu/courses/cs173/2012/book/\"&gt;http://www.cs.brown.edu/courses/cs173/2012/book/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7b3xzl", "flair_text": null, "created": 1354646147.0, "created_utc": 1354642547.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_149m5b", "children": [], "author": "kqr", "id": "c7b43sn", "parent_id": "t3_149m5b", "score": 0, "approved_by": null, "upvotes": 2, "body": "On what level do you write the essay and how much experience do you have? I once wrote [a series of comments detailing different types of programming](http://www.reddit.com/r/learnprogramming/comments/utih5/types_of_programming/c4yfztm) that might be of help for getting into the subject.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;On what level do you write the essay and how much experience do you have? I once wrote &lt;a href=\"http://www.reddit.com/r/learnprogramming/comments/utih5/types_of_programming/c4yfztm\"&gt;a series of comments detailing different types of programming&lt;/a&gt; that might be of help for getting into the subject.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7b43sn", "flair_text": null, "created": 1354646649.0, "created_utc": 1354643049.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_149m5b", "children": [], "author": "jkff", "id": "c7bixdc", "parent_id": "t3_149m5b", "score": 0, "approved_by": null, "upvotes": 2, "body": "My all-time favourite is [Design Concepts in Programming Languages](http://www.amazon.com/Design-Concepts-Programming-Languages-Franklyn/dp/0262201755) - the topmost review is mine.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My all-time favourite is &lt;a href=\"http://www.amazon.com/Design-Concepts-Programming-Languages-Franklyn/dp/0262201755\"&gt;Design Concepts in Programming Languages&lt;/a&gt; - the topmost review is mine.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bixdc", "flair_text": null, "created": 1354700651.0, "created_utc": 1354697051.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_149m5b", "children": [], "author": "anaemicpuppy", "id": "c7bjk6i", "parent_id": "t3_149m5b", "score": 0, "approved_by": null, "upvotes": 2, "body": "As I just recommended in a different thread: Glynn Winskel's [The Formal Semantics of Programming Languages](http://www.amazon.com/Formal-Semantics-Programming-Languages-Winskel/dp/0262731037) is well worth a read. It covers both operational (big-step and small-step) and denotational semantics, and does so in both an imperative and a functional setting. Furthermore, John Mitchell's [Foundations for Programming Languages](http://www.amazon.com/Foundations-Programming-Languages-Computing/dp/0262133210/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1354703047&amp;sr=1-1&amp;keywords=foundations+for+programming+languages) is an excellent and thorough reference, though it is a little harder to follow than Winskel when starting out.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As I just recommended in a different thread: Glynn Winskel&amp;#39;s &lt;a href=\"http://www.amazon.com/Formal-Semantics-Programming-Languages-Winskel/dp/0262731037\"&gt;The Formal Semantics of Programming Languages&lt;/a&gt; is well worth a read. It covers both operational (big-step and small-step) and denotational semantics, and does so in both an imperative and a functional setting. Furthermore, John Mitchell&amp;#39;s &lt;a href=\"http://www.amazon.com/Foundations-Programming-Languages-Computing/dp/0262133210/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1354703047&amp;amp;sr=1-1&amp;amp;keywords=foundations+for+programming+languages\"&gt;Foundations for Programming Languages&lt;/a&gt; is an excellent and thorough reference, though it is a little harder to follow than Winskel when starting out.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bjk6i", "flair_text": null, "created": 1354706797.0, "created_utc": 1354703197.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_149m5b", "children": [], "author": "jasonreich", "id": "c7bjubg", "parent_id": "t3_149m5b", "score": 0, "approved_by": null, "upvotes": 2, "body": "[Semantics with Applications](http://www.springer.com/computer/swe/book/978-1-84628-691-9) by Nielson &amp; Nielson is fantastic and is often free online with university Springer subscriptions.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.springer.com/computer/swe/book/978-1-84628-691-9\"&gt;Semantics with Applications&lt;/a&gt; by Nielson &amp;amp; Nielson is fantastic and is often free online with university Springer subscriptions.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7bjubg", "flair_text": null, "created": 1354710059.0, "created_utc": 1354706459.0, "num_reports": null}], "score": 30, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 45, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/149m5b/good_books_on_the_structuresemantics_of/", "has_more_comments": false, "name": "t3_149m5b", "created": 1354637895.0, "url": "http://www.reddit.com/r/compsci/comments/149m5b/good_books_on_the_structuresemantics_of/", "author_flair_text": null, "author": "alandalf", "created_utc": 1354637895.0, "link_flair_text": null, "media": null, "num_reports": null}, "197": {"domain": "research.microsoft.com", "link_flair_class": null, "banned_by": null, "downvotes": 7, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "14a5m8", "clicked": false, "title": "Uniqueness and Reference Immutability for Safe Parallelism [pdf from research.microsoft.com]", "num_comments": 0, "comments": [], "score": 2, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 9, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/14a5m8/uniqueness_and_reference_immutability_for_safe/", "has_more_comments": false, "name": "t3_14a5m8", "created": 1354655528.0, "url": "http://research.microsoft.com/pubs/170528/msr-tr-2012-79.pdf", "author_flair_text": null, "author": "flubar", "created_utc": 1354655528.0, "link_flair_text": null, "media": null, "num_reports": null}, "198": {"domain": "research.microsoft.com", "link_flair_class": null, "banned_by": null, "downvotes": 4, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "1497p5", "clicked": false, "title": "Feature Selection for Ranking", "num_comments": 0, "comments": [], "score": 7, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 11, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/1497p5/feature_selection_for_ranking/", "has_more_comments": false, "name": "t3_1497p5", "created": 1354614522.0, "url": "http://research.microsoft.com/en-us/people/tyliu/fsr.pdf", "author_flair_text": null, "author": "_dexter", "created_utc": 1354614522.0, "link_flair_text": null, "media": null, "num_reports": null}, "199": {"domain": "reddit.com", "link_flair_class": null, "banned_by": null, "downvotes": 19, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "147xwd", "clicked": false, "title": "Computational Neuroscientists from University of Waterloo AMA", "num_comments": 6, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_147xwd", "children": [], "author": "determinism89", "id": "c7areuy", "parent_id": "t3_147xwd", "score": 0, "approved_by": null, "upvotes": 8, "body": "Hey guys, the original post is a link to the AMA", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hey guys, the original post is a link to the AMA&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7areuy", "flair_text": null, "created": 1354585753.0, "created_utc": 1354582153.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_147xwd", "children": [], "author": "loganfrederick", "id": "c7apcq8", "parent_id": "t3_147xwd", "score": 0, "approved_by": null, "upvotes": 1, "body": "Do you have any recommended textbooks an outsider could read to learn more about your field?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Do you have any recommended textbooks an outsider could read to learn more about your field?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7apcq8", "flair_text": null, "created": 1354578895.0, "created_utc": 1354575295.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_147xwd", "children": [], "author": "danielwb", "id": "c7apzfb", "parent_id": "t3_147xwd", "score": 0, "approved_by": null, "upvotes": 2, "body": "What is the coolest thing about your job?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What is the coolest thing about your job?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7apzfb", "flair_text": null, "created": 1354580977.0, "created_utc": 1354577377.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_147xwd", "children": [], "author": "Raven_Rise", "id": "c7aq06b", "parent_id": "t3_147xwd", "score": 0, "approved_by": null, "upvotes": 2, "body": "what do you do at your work? (edit for typo)", "edited": 1354585203.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;what do you do at your work? (edit for typo)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7aq06b", "flair_text": null, "created": 1354581044.0, "created_utc": 1354577444.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_147xwd", "children": [], "author": "Pennyw1se", "id": "c7b19ws", "parent_id": "t3_147xwd", "score": 0, "approved_by": null, "upvotes": 1, "body": "This is not the AMA comment thread, don't post here.   Follow the topics link to it.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is not the AMA comment thread, don&amp;#39;t post here.   Follow the topics link to it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c7b19ws", "flair_text": null, "created": 1354635462.0, "created_utc": 1354631862.0, "num_reports": null}], "score": 70, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 89, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ood3op448wcc96d0c36dac6155a992fa383303d5dc88b7d5fe", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/147xwd/computational_neuroscientists_from_university_of/", "has_more_comments": false, "name": "t3_147xwd", "created": 1354568697.0, "url": "http://www.reddit.com/r/IAmA/comments/147gqm/we_are_the_computational_neuroscientists_behind/", "author_flair_text": null, "author": "Lossy", "created_utc": 1354568697.0, "link_flair_text": null, "media": null, "num_reports": null}}