{"400": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 112, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Like most internet communities, we&amp;#39;re always experiencing a slow but steady decline in quality. I&amp;#39;m sure that people who care about Computer Science will eventually leave this subreddit and migrate to &lt;a href=\"/r/TrueTrueTrueCompsci\"&gt;/r/TrueTrueTrueCompsci&lt;/a&gt;. Until that dark day arrives, I&amp;#39;m asking everyone here to (1) restrain yourselves from upvoting or discussing posts which don&amp;#39;t actually fit the sidebar criteria, and (2) if someone else posts something off-topic please politely direct them to a more appropriate subreddit. &lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Like most internet communities, we're always experiencing a slow but steady decline in quality. I'm sure that people who care about Computer Science will eventually leave this subreddit and migrate to /r/TrueTrueTrueCompsci. Until that dark day arrives, I'm asking everyone here to (1) restrain yourselves from upvoting or discussing posts which don't actually fit the sidebar criteria, and (2) if someone else posts something off-topic please politely direct them to a more appropriate subreddit. \n\nThanks!", "saved": false, "id": "109ha3", "clicked": false, "title": "Reminder: Don't vote up or respond to off-topic posts.", "num_comments": 24, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_109ha3", "children": [], "author": "UnoriginalGuy", "id": "c6bkcmk", "parent_id": "t3_109ha3", "score": 0, "approved_by": null, "upvotes": 5, "body": "Has this really been a big problem?   \n\nAlso /r/TrueTrueTrueCompsci looks like fun...   ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Has this really been a big problem?   &lt;/p&gt;\n\n&lt;p&gt;Also &lt;a href=\"/r/TrueTrueTrueCompsci\"&gt;/r/TrueTrueTrueCompsci&lt;/a&gt; looks like fun...   &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6bkcmk", "flair_text": null, "created": 1348264837.0, "created_utc": 1348261237.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 8, "link_id": "t3_109ha3", "children": [], "author": "Buckwheat469", "id": "c6bqqn9", "parent_id": "t3_109ha3", "score": 0, "approved_by": null, "upvotes": 31, "body": "Thank you for the instruction. I'm downvoting this thread to help those people who submitted compsci-related articles. You may wish to post your discussion on [/r/reportthespammers](http://www.reddit.com/r/reportthespammers).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thank you for the instruction. I&amp;#39;m downvoting this thread to help those people who submitted compsci-related articles. You may wish to post your discussion on &lt;a href=\"http://www.reddit.com/r/reportthespammers\"&gt;/r/reportthespammers&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6bqqn9", "flair_text": null, "created": 1348296974.0, "created_utc": 1348293374.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 8, "link_id": "t3_109ha3", "children": [], "author": "joeframbach", "id": "c6btaeg", "parent_id": "t3_109ha3", "score": 0, "approved_by": null, "upvotes": 27, "body": "This thread is off topic and has been downvoted accordingly.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This thread is off topic and has been downvoted accordingly.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6btaeg", "flair_text": null, "created": 1348324300.0, "created_utc": 1348320700.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_109ha3", "children": [], "author": "The_Ignorati", "id": "c6caupu", "parent_id": "t3_109ha3", "score": 0, "approved_by": null, "upvotes": 4, "body": "I applaud this post and I'm glad you are working to keep /r/compsci from turning into the cesspool that is most subreddits. You are right to keep an eye on quality.\n\nAlso: people posting the 'this is off-topic too! eheheh' joke, you're not funny, this reply is always posted to threads like this, it hasn't been funny or original for a long time.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I applaud this post and I&amp;#39;m glad you are working to keep &lt;a href=\"/r/compsci\"&gt;/r/compsci&lt;/a&gt; from turning into the cesspool that is most subreddits. You are right to keep an eye on quality.&lt;/p&gt;\n\n&lt;p&gt;Also: people posting the &amp;#39;this is off-topic too! eheheh&amp;#39; joke, you&amp;#39;re not funny, this reply is always posted to threads like this, it hasn&amp;#39;t been funny or original for a long time.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6caupu", "flair_text": null, "created": 1348428194.0, "created_utc": 1348424594.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_109ha3", "children": [], "author": "-oh_you_know-", "id": "c6i1cbs", "parent_id": "t3_109ha3", "score": 0, "approved_by": null, "upvotes": 1, "body": "Isn't this off topic?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Isn&amp;#39;t this off topic?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6i1cbs", "flair_text": null, "created": 1349452900.0, "created_utc": 1349449300.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 17, "link_id": "t3_109ha3", "children": [], "author": "baddox", "id": "c6bmzjn", "parent_id": "t3_109ha3", "score": 0, "approved_by": null, "upvotes": 13, "body": "&gt; we're always experiencing a slow but steady decline in quality\n\nI've never understood these statements. The entire point of Reddit is to let users determine what content is good, but these statements imply that there is some separate, objective way to determine what content is good.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;we&amp;#39;re always experiencing a slow but steady decline in quality&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I&amp;#39;ve never understood these statements. The entire point of Reddit is to let users determine what content is good, but these statements imply that there is some separate, objective way to determine what content is good.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6bmzjn", "flair_text": null, "created": 1348276268.0, "created_utc": 1348272668.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_109ha3", "children": [], "author": "IrregardingGrammar", "id": "c6bvf08", "parent_id": "t3_109ha3", "score": 0, "approved_by": null, "upvotes": 6, "body": "As this is an off-topic post i will downvote and request it's removal. Please leave spam like this elsewhere.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As this is an off-topic post i will downvote and request it&amp;#39;s removal. Please leave spam like this elsewhere.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6bvf08", "flair_text": null, "created": 1348337036.0, "created_utc": 1348333436.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_109ha3", "children": [], "author": "Lossy", "id": "c6bruvs", "parent_id": "t3_109ha3", "score": 0, "approved_by": null, "upvotes": 2, "body": "This has been one of the best subreddits for content for me for a while..", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This has been one of the best subreddits for content for me for a while..&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6bruvs", "flair_text": null, "created": 1348306822.0, "created_utc": 1348303222.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_109ha3", "children": [], "author": "5outh", "id": "c6c33ul", "parent_id": "t3_109ha3", "score": 0, "approved_by": null, "upvotes": 2, "body": "If people don't like the posts, they'll just downvote them and they'll get buried anyway.\n\nIf people are upvoting something someone posts, there's a reason for it, and I see no reason why we should be encouraged to not upvote something that we find particularly relevant or interesting just because it bends the rules a bit. Inform the user breaking the rules, sure, but the rest of us should be allowed to upvote what we choose to upvote.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If people don&amp;#39;t like the posts, they&amp;#39;ll just downvote them and they&amp;#39;ll get buried anyway.&lt;/p&gt;\n\n&lt;p&gt;If people are upvoting something someone posts, there&amp;#39;s a reason for it, and I see no reason why we should be encouraged to not upvote something that we find particularly relevant or interesting just because it bends the rules a bit. Inform the user breaking the rules, sure, but the rest of us should be allowed to upvote what we choose to upvote.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c33ul", "flair_text": null, "created": 1348374788.0, "created_utc": 1348371188.0, "num_reports": null}], "score": 10, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 122, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/109ha3/reminder_dont_vote_up_or_respond_to_offtopic_posts/", "has_more_comments": false, "name": "t3_109ha3", "created": 1348259283.0, "url": "http://www.reddit.com/r/compsci/comments/109ha3/reminder_dont_vote_up_or_respond_to_offtopic_posts/", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1348255683.0, "link_flair_text": null, "media": null, "num_reports": null}, "401": {"domain": "matt.might.net", "link_flair_class": null, "banned_by": null, "downvotes": 10, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "108vyq", "clicked": false, "title": "Implementing exceptions with escape continuations", "num_comments": 10, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_108vyq", "children": [], "author": "player2", "id": "c6beh0s", "parent_id": "t3_108vyq", "score": 0, "approved_by": null, "upvotes": 8, "body": "Required reading: [Oleg's essay on why `call/cc` as a language feature is a bad idea](http://okmij.org/ftp/continuations/against-callcc.html), including proof that `call/cc` by itself cannot be used to implement exceptions, and arguments that bolting on the other things necessary to make it so capable is detrimental to performance.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Required reading: &lt;a href=\"http://okmij.org/ftp/continuations/against-callcc.html\"&gt;Oleg&amp;#39;s essay on why &lt;code&gt;call/cc&lt;/code&gt; as a language feature is a bad idea&lt;/a&gt;, including proof that &lt;code&gt;call/cc&lt;/code&gt; by itself cannot be used to implement exceptions, and arguments that bolting on the other things necessary to make it so capable is detrimental to performance.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6beh0s", "flair_text": null, "created": 1348242904.0, "created_utc": 1348239304.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_108vyq", "children": [], "author": "zzing", "id": "c6bem1v", "parent_id": "t3_108vyq", "score": 0, "approved_by": null, "upvotes": 2, "body": "Monads seem to work for any exceptions I have.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Monads seem to work for any exceptions I have.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6bem1v", "flair_text": null, "created": 1348243478.0, "created_utc": 1348239878.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_108vyq", "children": [], "author": "FreeLoseThosGames", "id": "c6bi34z", "parent_id": "t3_108vyq", "score": 0, "approved_by": null, "upvotes": 5, "body": "I did exceptions without the stack in my compiler.  I used the current task record to store a linked list stack of reg value nodes.\n\nhttp://www.losethos.com/LTWeb/Compiler/StmtParser.html#l1622\n\nhttp://www.losethos.com/LTWeb/OSMain/Except.html", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I did exceptions without the stack in my compiler.  I used the current task record to store a linked list stack of reg value nodes.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.losethos.com/LTWeb/Compiler/StmtParser.html#l1622\"&gt;http://www.losethos.com/LTWeb/Compiler/StmtParser.html#l1622&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.losethos.com/LTWeb/OSMain/Except.html\"&gt;http://www.losethos.com/LTWeb/OSMain/Except.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6bi34z", "flair_text": null, "created": 1348256760.0, "created_utc": 1348253160.0, "num_reports": null}], "score": 25, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 35, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/108vyq/implementing_exceptions_with_escape_continuations/", "has_more_comments": false, "name": "t3_108vyq", "created": 1348237366.0, "url": "http://matt.might.net/articles/implementing-exceptions/", "author_flair_text": null, "author": "pozorvlak", "created_utc": 1348233766.0, "link_flair_text": null, "media": null, "num_reports": null}, "402": {"domain": "blog.aggregateknowledge.com", "link_flair_class": null, "banned_by": null, "downvotes": 10, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "105eft", "clicked": false, "title": "Sketch of the Day: K-Minimum Values", "num_comments": 0, "comments": [], "score": 19, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 29, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/105eft/sketch_of_the_day_kminimum_values/", "has_more_comments": false, "name": "t3_105eft", "created": 1348084798.0, "url": "http://blog.aggregateknowledge.com/2012/07/09/sketch-of-the-day-k-minimum-values/", "author_flair_text": null, "author": "rrenaud", "created_utc": 1348081198.0, "link_flair_text": null, "media": null, "num_reports": null}, "403": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 50, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&amp;quot;Writing the first edition of this book was a grueling task that took two and a half years and the help of many people. After the toll it took on my health and sanity, I promised that I&amp;#39;d never put myself through such an experience again. &amp;quot;&lt;/p&gt;\n\n&lt;p&gt;That poor, poor soul who wrote the O&amp;#39;reilly book &amp;quot;Mastering Regular Expressions&amp;quot; &lt;/p&gt;\n\n&lt;p&gt;Why do i read this?\nI am a sick sort of person.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "\"Writing the first edition of this book was a grueling task that took two and a half years and the help of many people. After the toll it took on my health and sanity, I promised that I'd never put myself through such an experience again. \"\n\nThat poor, poor soul who wrote the O'reilly book \"Mastering Regular Expressions\" \n\nWhy do i read this?\nI am a sick sort of person.", "saved": false, "id": "103s9t", "clicked": false, "title": "You know you are in for a good time when your book opens with this paragraph:", "num_comments": 114, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 16, "link_id": "t3_103s9t", "children": [], "author": "gigitrix", "id": "c6a61e5", "parent_id": "t3_103s9t", "score": 0, "approved_by": null, "upvotes": 107, "body": "You mean regular expressions aren't just magic strings compiled by some unknown gods that you copy and paste as needed? ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You mean regular expressions aren&amp;#39;t just magic strings compiled by some unknown gods that you copy and paste as needed? &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6a61e5", "flair_text": null, "created": 1348017019.0, "created_utc": 1348013419.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 9, "link_id": "t3_103s9t", "children": [], "author": "jpuer", "id": "c6a57w8", "parent_id": "t3_103s9t", "score": 0, "approved_by": null, "upvotes": 68, "body": "s/poor/awesome/g", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;s/poor/awesome/g&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6a57w8", "flair_text": null, "created": 1348013741.0, "created_utc": 1348010141.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 44, "link_id": "t3_103s9t", "children": [], "author": "teb311", "id": "c6a5kk0", "parent_id": "t3_103s9t", "score": 0, "approved_by": null, "upvotes": 234, "body": "\"Some people, when confronted with a problem, think \"I know, I'll use regular expressions.\" Now they have two problems.\" -Jamie Zawinski", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&amp;quot;Some people, when confronted with a problem, think &amp;quot;I know, I&amp;#39;ll use regular expressions.&amp;quot; Now they have two problems.&amp;quot; -Jamie Zawinski&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6a5kk0", "flair_text": null, "created": 1348015115.0, "created_utc": 1348011515.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_103s9t", "children": [], "author": "absrd", "id": "c6a8535", "parent_id": "t3_103s9t", "score": 0, "approved_by": null, "upvotes": 12, "body": "It's a pretty good read. Digest the first two chapters and you'll be able to cobble together say 90% of the regex patterns you'll ever need.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s a pretty good read. Digest the first two chapters and you&amp;#39;ll be able to cobble together say 90% of the regex patterns you&amp;#39;ll ever need.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6a8535", "flair_text": null, "created": 1348025352.0, "created_utc": 1348021752.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_103s9t", "children": [], "author": "theavatare", "id": "c6aav5v", "parent_id": "t3_103s9t", "score": 0, "approved_by": null, "upvotes": 11, "body": "My biggest problem with reg expressions is that i use them heavy for a month then never touch them again for a few years. In between i forget what most of the characters mean :S", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;My biggest problem with reg expressions is that i use them heavy for a month then never touch them again for a few years. In between i forget what most of the characters mean :S&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6aav5v", "flair_text": null, "created": 1348035325.0, "created_utc": 1348031725.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_103s9t", "children": [], "author": "Loafie", "id": "c6a66jk", "parent_id": "t3_103s9t", "score": 0, "approved_by": null, "upvotes": 21, "body": "and this smug little fucking lizard has no trouble with them at all:\n\nhttp://regexpal.com/", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;and this smug little fucking lizard has no trouble with them at all:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://regexpal.com/\"&gt;http://regexpal.com/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6a66jk", "flair_text": null, "created": 1348017601.0, "created_utc": 1348014001.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_103s9t", "children": [], "author": "rfgiusti", "id": "c6a6f6l", "parent_id": "t3_103s9t", "score": 0, "approved_by": null, "upvotes": 11, "body": "Hah! This is so going to be the opening paragraph of the \"acknowledgement\" section of my Ph.D. Thesis!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hah! This is so going to be the opening paragraph of the &amp;quot;acknowledgement&amp;quot; section of my Ph.D. Thesis!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6a6f6l", "flair_text": null, "created": 1348018560.0, "created_utc": 1348014960.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_103s9t", "children": [], "author": "GoodMotherfucker", "id": "c6ale7b", "parent_id": "t3_103s9t", "score": 0, "approved_by": null, "upvotes": 2, "body": "https://xkcd.com/208/", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://xkcd.com/208/\"&gt;https://xkcd.com/208/&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ale7b", "flair_text": null, "created": 1348092086.0, "created_utc": 1348088486.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_103s9t", "children": [], "author": "syzygote", "id": "c6behfs", "parent_id": "t3_103s9t", "score": 0, "approved_by": null, "upvotes": 2, "body": "You know in a way this is inspiring in that it helps reinforce to people like me that this is SUPPOSED to be hard work, and it's not just an easy breeze.  Sometimes I get discouraged with difficulty and I struggle to remember that I have to push through the difficulties, and it's not supposed to be a cakewalk the first (or probably even the second or third time)...\n\nEDIT: I'm referring here to compsci type stuff, not writing a book, even though I am sure that is also very hard work.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You know in a way this is inspiring in that it helps reinforce to people like me that this is SUPPOSED to be hard work, and it&amp;#39;s not just an easy breeze.  Sometimes I get discouraged with difficulty and I struggle to remember that I have to push through the difficulties, and it&amp;#39;s not supposed to be a cakewalk the first (or probably even the second or third time)...&lt;/p&gt;\n\n&lt;p&gt;EDIT: I&amp;#39;m referring here to compsci type stuff, not writing a book, even though I am sure that is also very hard work.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6behfs", "flair_text": null, "created": 1348242954.0, "created_utc": 1348239354.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_103s9t", "children": [], "author": "arnar", "id": "c6aargb", "parent_id": "t3_103s9t", "score": 0, "approved_by": null, "upvotes": 2, "body": "That is probably the most useful non-schoolbook I have read. [Jeffrey](http://regex.info/blog/) makes quite good LR plugins as well.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That is probably the most useful non-schoolbook I have read. &lt;a href=\"http://regex.info/blog/\"&gt;Jeffrey&lt;/a&gt; makes quite good LR plugins as well.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6aargb", "flair_text": null, "created": 1348034874.0, "created_utc": 1348031274.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_103s9t", "children": [], "author": "tashbarg", "id": "c6ac9rn", "parent_id": "t3_103s9t", "score": 0, "approved_by": null, "upvotes": 1, "body": "I've read that book. Twice. It's great, really.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve read that book. Twice. It&amp;#39;s great, really.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ac9rn", "flair_text": null, "created": 1348043543.0, "created_utc": 1348039943.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_103s9t", "children": [], "author": "Fuco1337", "id": "c6ad4j1", "parent_id": "t3_103s9t", "score": 0, "approved_by": null, "upvotes": 1, "body": "Hello brother!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hello brother!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ad4j1", "flair_text": null, "created": 1348052693.0, "created_utc": 1348049093.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_103s9t", "children": [], "author": "styluss", "id": "c6afihq", "parent_id": "t3_103s9t", "score": 0, "approved_by": null, "upvotes": 1, "body": "Hey no spoilers! It's on my to-read list.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hey no spoilers! It&amp;#39;s on my to-read list.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6afihq", "flair_text": null, "created": 1348069839.0, "created_utc": 1348066239.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_103s9t", "children": [], "author": "NPVT", "id": "c6aj884", "parent_id": "t3_103s9t", "score": 0, "approved_by": null, "upvotes": 1, "body": "Putting on my serious face, I doubt it had to do with the specific content.  If the author wrote a book on anything else it would possibly take the same toll.  Not everyone writes acceptably correct prose that can fit into a book form.  Hard work.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Putting on my serious face, I doubt it had to do with the specific content.  If the author wrote a book on anything else it would possibly take the same toll.  Not everyone writes acceptably correct prose that can fit into a book form.  Hard work.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6aj884", "flair_text": null, "created": 1348084262.0, "created_utc": 1348080662.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_103s9t", "children": [], "author": "Snootwaller", "id": "c6ajgvk", "parent_id": "t3_103s9t", "score": 0, "approved_by": null, "upvotes": 1, "body": "Friedl? My favorite O'Reilly book ever! Spoiler: \"between\" can be defined as \"in the space which separates.\"", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Friedl? My favorite O&amp;#39;Reilly book ever! Spoiler: &amp;quot;between&amp;quot; can be defined as &amp;quot;in the space which separates.&amp;quot;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ajgvk", "flair_text": null, "created": 1348085179.0, "created_utc": 1348081579.0, "num_reports": null}], "score": 251, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 301, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/103s9t/you_know_you_are_in_for_a_good_time_when_your/", "has_more_comments": false, "name": "t3_103s9t", "created": 1348012232.0, "url": "http://www.reddit.com/r/compsci/comments/103s9t/you_know_you_are_in_for_a_good_time_when_your/", "author_flair_text": null, "author": "0day1337", "created_utc": 1348008632.0, "link_flair_text": null, "media": null, "num_reports": null}, "404": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 9, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m a CS undergrad, and I want to be able to say I have seen, created, or contributed to something beautiful within my field.&lt;/p&gt;\n\n&lt;p&gt;So I was wondering what the people of r/compsci think. Is it algorithms? Raw code? The potential/possibilities? How do you explain/justify that to other (non-CS) people?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm a CS undergrad, and I want to be able to say I have seen, created, or contributed to something beautiful within my field.\n\nSo I was wondering what the people of r/compsci think. Is it algorithms? Raw code? The potential/possibilities? How do you explain/justify that to other (non-CS) people?", "saved": false, "id": "1049t0", "clicked": false, "title": "What in computer science do you find beautiful?", "num_comments": 71, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_1049t0", "children": [], "author": "anvsdt", "id": "c6ae2yq", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 14, "body": "The Curry-Howard isomorphism (proofs-as-programs/formulae-as-types), and Martin-L\u00f6f type theory and related extensions make me moist.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The Curry-Howard isomorphism (proofs-as-programs/formulae-as-types), and Martin-L\u00f6f type theory and related extensions make me moist.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ae2yq", "flair_text": null, "created": 1348062075.0, "created_utc": 1348058475.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1049t0", "children": [], "author": "charmonkie", "id": "c6aqxk6", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 12, "body": "Recursion\n\nTo me it's like pushing a toy boat into water and watching it continue to drift along by itself, unassisted, only using your initial push and buoyancy to stay afloat", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Recursion&lt;/p&gt;\n\n&lt;p&gt;To me it&amp;#39;s like pushing a toy boat into water and watching it continue to drift along by itself, unassisted, only using your initial push and buoyancy to stay afloat&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6aqxk6", "flair_text": null, "created": 1348115209.0, "created_utc": 1348111609.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_1049t0", "children": [], "author": "grayvedigga", "id": "c6ac4tn", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 32, "body": "Computability proofs.  The Church-Turing thesis.  The halting problem.  The Buse Beaver problem.  Grammars and automata.  Strongly reducible semantics.  P vs NP.  The seperability of complexity classes.  Ridiculously small yet Turing-complete computing bases.  Provably optimal algorithms.  The early history of the discipline:  the search to completely axiomatise mathematics, and how that was found to be impossible.\n\n... I see a lot of people are answering things like \"being able to code stuff\".  Sorry, but that's not CS.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Computability proofs.  The Church-Turing thesis.  The halting problem.  The Buse Beaver problem.  Grammars and automata.  Strongly reducible semantics.  P vs NP.  The seperability of complexity classes.  Ridiculously small yet Turing-complete computing bases.  Provably optimal algorithms.  The early history of the discipline:  the search to completely axiomatise mathematics, and how that was found to be impossible.&lt;/p&gt;\n\n&lt;p&gt;... I see a lot of people are answering things like &amp;quot;being able to code stuff&amp;quot;.  Sorry, but that&amp;#39;s not CS.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ac4tn", "flair_text": null, "created": 1348042546.0, "created_utc": 1348038946.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1049t0", "children": [], "author": "whats_up_doc", "id": "c6aqrph", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 8, "body": "When my programs compile and run as intended, it's so beautiful, I shed tears of joy.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;When my programs compile and run as intended, it&amp;#39;s so beautiful, I shed tears of joy.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6aqrph", "flair_text": null, "created": 1348114545.0, "created_utc": 1348110945.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1049t0", "children": [], "author": "rosulek", "id": "c6aer38", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 7, "body": "Fast fourier transform. Myhill-Nerode theorem from automata theory. Razborov-Rudich theorem on limits of natural proofs. Goldreich-Micali-Wigderson's real-ideal paradigm for security definitions for multi-party computation. Shamir secret sharing. Diagonalization.\n\nThe fact that everything is algorithms: want to that show something is computable? write an algorithm (for that thing); want to show that something is uncomputable? write an algorithm (a reduction from the halting problem)!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Fast fourier transform. Myhill-Nerode theorem from automata theory. Razborov-Rudich theorem on limits of natural proofs. Goldreich-Micali-Wigderson&amp;#39;s real-ideal paradigm for security definitions for multi-party computation. Shamir secret sharing. Diagonalization.&lt;/p&gt;\n\n&lt;p&gt;The fact that everything is algorithms: want to that show something is computable? write an algorithm (for that thing); want to show that something is uncomputable? write an algorithm (a reduction from the halting problem)!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6aer38", "flair_text": null, "created": 1348066259.0, "created_utc": 1348062659.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1049t0", "children": [], "author": "eigenheckler", "id": "c6akgn6", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 7, "body": "&gt;I'm a CS undergrad, and I want to be able to say I have seen, created, or contributed to something beautiful within my field.\n\nElegant algorithms, proofs, and code will impress different people to different degrees. Clever hacks and things that surprise or shock tend to be most memorable, even outside the field.\n\n\n\n&gt;How do you explain/justify that to other (non-CS) people?\n\nVisualizations and stories.\n\nI think that the easiest way to make the beauty of something you've worked on apparent to people outside of the field is visualizations. As an example, [corte.si's](http://corte.si/posts/code/timsort/) sorting algorithm visualizations on [sortvis.org](http://sortvis.org/) are beautiful. They also communicate what's going on at a given point in time better than any of the animated GIFs that I've seen.\n\nFailing visualizations, stories are the best way to explain and justify things to non-CS people. If they lack STEM background, they may not appreciate what you're doing on a fine-grained level. You can still relate with the nature, scope, and scale of what you've done without dworning them in detail.\n\nIf you can deliver both, people will remember that you did something awesome. Just remember to tune your story to people's level of expertise. An example of a similar story, for CS and non-CS people:\n\n**________**\n\n**Example Story For Non-CS People**\n\nOne of our computer science courses has a project of such scale that even the best students are stuck slowly chipping away at it over the course of a month. Many of the rest choke on it over the course of the entire semester, some not even completing it. A known killer: huge in scope with disgusting amounts of manual calculation with room for human error.\n\nOffensively tedious; there had to be a better way.\n\nInstead of attacking a massive problem, I set my sights on solving a smaller one, but in a general way.\n\nI solved [this problem](http://hackingoff.com/images/fsa/2012-09-19_12-34-13_-0700-dfa.svg) generally enough that I got [the answer to that massive problem (warning, massive SVG)](http://hackingoff.com/images/re2nfa/2012-04-01_00-27-49_-0700-dfa.svg) for free.\n\nThen, I open sourced the solution and put it online, to save other students the headache.\n\n**________**\n\n**Example Story For CS People**\n\nOur compilers coursework was fucking massive. Using smaller, solved test cases, I automated some hairy parts of lexer and parser generation, as writing their tables manually leaves lots of room for human error. Also, my classmates couldn't understand follow sets.\n\nIt turned out that I accidentally reinvented [Lex](http://en.wikipedia.org/wiki/Lex_\\(software\\)), but my version graphs the underlying finite automata, and has a tight feedback loop via [in-browser lexical analysis](http://hackingoff.com/compilers/scanner-generator) that makes it easy to tell whether you've fucked up or solved your compilers homework.\n\nNow, instead of gagging on JFLAP's shit UI, we can just fire up a browser and do specific work in a less agonizing environment. Even my instructor uses it.\n\nOh, and the source is on github.", "edited": 1348597238.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I&amp;#39;m a CS undergrad, and I want to be able to say I have seen, created, or contributed to something beautiful within my field.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Elegant algorithms, proofs, and code will impress different people to different degrees. Clever hacks and things that surprise or shock tend to be most memorable, even outside the field.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;How do you explain/justify that to other (non-CS) people?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Visualizations and stories.&lt;/p&gt;\n\n&lt;p&gt;I think that the easiest way to make the beauty of something you&amp;#39;ve worked on apparent to people outside of the field is visualizations. As an example, &lt;a href=\"http://corte.si/posts/code/timsort/\"&gt;corte.si&amp;#39;s&lt;/a&gt; sorting algorithm visualizations on &lt;a href=\"http://sortvis.org/\"&gt;sortvis.org&lt;/a&gt; are beautiful. They also communicate what&amp;#39;s going on at a given point in time better than any of the animated GIFs that I&amp;#39;ve seen.&lt;/p&gt;\n\n&lt;p&gt;Failing visualizations, stories are the best way to explain and justify things to non-CS people. If they lack STEM background, they may not appreciate what you&amp;#39;re doing on a fine-grained level. You can still relate with the nature, scope, and scale of what you&amp;#39;ve done without dworning them in detail.&lt;/p&gt;\n\n&lt;p&gt;If you can deliver both, people will remember that you did something awesome. Just remember to tune your story to people&amp;#39;s level of expertise. An example of a similar story, for CS and non-CS people:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;________&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Example Story For Non-CS People&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;One of our computer science courses has a project of such scale that even the best students are stuck slowly chipping away at it over the course of a month. Many of the rest choke on it over the course of the entire semester, some not even completing it. A known killer: huge in scope with disgusting amounts of manual calculation with room for human error.&lt;/p&gt;\n\n&lt;p&gt;Offensively tedious; there had to be a better way.&lt;/p&gt;\n\n&lt;p&gt;Instead of attacking a massive problem, I set my sights on solving a smaller one, but in a general way.&lt;/p&gt;\n\n&lt;p&gt;I solved &lt;a href=\"http://hackingoff.com/images/fsa/2012-09-19_12-34-13_-0700-dfa.svg\"&gt;this problem&lt;/a&gt; generally enough that I got &lt;a href=\"http://hackingoff.com/images/re2nfa/2012-04-01_00-27-49_-0700-dfa.svg\"&gt;the answer to that massive problem (warning, massive SVG)&lt;/a&gt; for free.&lt;/p&gt;\n\n&lt;p&gt;Then, I open sourced the solution and put it online, to save other students the headache.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;________&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Example Story For CS People&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Our compilers coursework was fucking massive. Using smaller, solved test cases, I automated some hairy parts of lexer and parser generation, as writing their tables manually leaves lots of room for human error. Also, my classmates couldn&amp;#39;t understand follow sets.&lt;/p&gt;\n\n&lt;p&gt;It turned out that I accidentally reinvented &lt;a href=\"http://en.wikipedia.org/wiki/Lex_(software)\"&gt;Lex&lt;/a&gt;, but my version graphs the underlying finite automata, and has a tight feedback loop via &lt;a href=\"http://hackingoff.com/compilers/scanner-generator\"&gt;in-browser lexical analysis&lt;/a&gt; that makes it easy to tell whether you&amp;#39;ve fucked up or solved your compilers homework.&lt;/p&gt;\n\n&lt;p&gt;Now, instead of gagging on JFLAP&amp;#39;s shit UI, we can just fire up a browser and do specific work in a less agonizing environment. Even my instructor uses it.&lt;/p&gt;\n\n&lt;p&gt;Oh, and the source is on github.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6akgn6", "flair_text": null, "created": 1348088741.0, "created_utc": 1348085141.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1049t0", "children": [], "author": "crwcomposer", "id": "c6aez78", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 5, "body": "Artificial neural networks. The way they learn things and approximate things is pretty much the opposite of how computers usually work.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Artificial neural networks. The way they learn things and approximate things is pretty much the opposite of how computers usually work.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6aez78", "flair_text": null, "created": 1348067400.0, "created_utc": 1348063800.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1049t0", "children": [], "author": "sipag_at_tiyaga", "id": "c6adjo6", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 6, "body": "The various problem solving paradigms, especially Dynamic Programming. That thing is magic the first time you use it, but once you get it, you'll achieve nirvana.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The various problem solving paradigms, especially Dynamic Programming. That thing is magic the first time you use it, but once you get it, you&amp;#39;ll achieve nirvana.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6adjo6", "flair_text": null, "created": 1348057553.0, "created_utc": 1348053953.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1049t0", "children": [], "author": "5outh", "id": "c6avkrx", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 4, "body": "Self-generating stuff, like the Mandelbrot set, cellular automata and Markov chains.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Self-generating stuff, like the Mandelbrot set, cellular automata and Markov chains.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6avkrx", "flair_text": null, "created": 1348149485.0, "created_utc": 1348145885.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_1049t0", "children": [], "author": "TarMil", "id": "c6adw6f", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 9, "body": "A builder who needs tools has to go to his supplier.  \nA computer scientist who needs tools can create them.\n\nThat's the beatiful thing of computer science IMO. Everything you use in your work is essentially made of the same substance as what you use it for.\n\nTake Donald Knuth, for example. He was very disappointed with the reprint of the first volume of TAOCP, because his publisher had switched to electronic printing, which at the time meant using bitmap characters. If he had been, say, a mathematician, he would have been stuck with this crappy print with ugly formulas. But he was a computer scientist (and a damn fine one), so he went on to invent vector fonts, wrote TeX and Metafont and used them to typeset TAOCP.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A builder who needs tools has to go to his supplier.&lt;br/&gt;\nA computer scientist who needs tools can create them.&lt;/p&gt;\n\n&lt;p&gt;That&amp;#39;s the beatiful thing of computer science IMO. Everything you use in your work is essentially made of the same substance as what you use it for.&lt;/p&gt;\n\n&lt;p&gt;Take Donald Knuth, for example. He was very disappointed with the reprint of the first volume of TAOCP, because his publisher had switched to electronic printing, which at the time meant using bitmap characters. If he had been, say, a mathematician, he would have been stuck with this crappy print with ugly formulas. But he was a computer scientist (and a damn fine one), so he went on to invent vector fonts, wrote TeX and Metafont and used them to typeset TAOCP.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6adw6f", "flair_text": null, "created": 1348060604.0, "created_utc": 1348057004.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_1049t0", "children": [], "author": "pkkid", "id": "c6a9xuz", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 10, "body": "I like to make things that make other things do things so you don't have to.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I like to make things that make other things do things so you don&amp;#39;t have to.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6a9xuz", "flair_text": null, "created": 1348031785.0, "created_utc": 1348028185.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1049t0", "children": [], "author": "drobilla", "id": "c6apaxg", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 4, "body": "The meta-circular interpreter in Scheme (as presented in SICP).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The meta-circular interpreter in Scheme (as presented in SICP).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6apaxg", "flair_text": null, "created": 1348107929.0, "created_utc": 1348104329.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1049t0", "children": [], "author": "schoof", "id": "c6bpyb2", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 3, "body": "Compilers", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Compilers&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6bpyb2", "flair_text": null, "created": 1348292128.0, "created_utc": 1348288528.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1049t0", "children": [], "author": "Asdayasman", "id": "c6c04o5", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 3, "body": "Compilers written in the language they compile.  It's the most beautiful and mind-bending thing I've ever come across.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Compilers written in the language they compile.  It&amp;#39;s the most beautiful and mind-bending thing I&amp;#39;ve ever come across.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c04o5", "flair_text": null, "created": 1348360347.0, "created_utc": 1348356747.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1049t0", "children": [], "author": "oniofchaos", "id": "c6dem8l", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 2, "body": "I am not sure if it has the formal name, but the result that no comparison based sorting algorithm can be better than O(nlogn). And then the fact that if you know things about the data you can indeed sort faster than that by other methods.\n\n\nPublic key encryption.\n\n\nUsing compilers to compile compilers.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I am not sure if it has the formal name, but the result that no comparison based sorting algorithm can be better than O(nlogn). And then the fact that if you know things about the data you can indeed sort faster than that by other methods.&lt;/p&gt;\n\n&lt;p&gt;Public key encryption.&lt;/p&gt;\n\n&lt;p&gt;Using compilers to compile compilers.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6dem8l", "flair_text": null, "created": 1348614533.0, "created_utc": 1348610933.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_1049t0", "children": [], "author": "kingdawgell", "id": "c6aavur", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 9, "body": "I really love scripting.  Like really basic stuff.  I love hearing my Business major friends talk about what they did all summer with their internships, working with excel, entering in data (mainly bitch work)... and knowing that I could have created something to automate everything they did.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I really love scripting.  Like really basic stuff.  I love hearing my Business major friends talk about what they did all summer with their internships, working with excel, entering in data (mainly bitch work)... and knowing that I could have created something to automate everything they did.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6aavur", "flair_text": null, "created": 1348035408.0, "created_utc": 1348031808.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1049t0", "children": [], "author": "eaturbrainz", "id": "c6ai8sm", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 3, "body": "The Scheme meta-circular evaluator.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The Scheme meta-circular evaluator.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ai8sm", "flair_text": null, "created": 1348080518.0, "created_utc": 1348076918.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1049t0", "children": [], "author": "zigzagp", "id": "c6bf4a2", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 3, "body": "Crowdsourcing. The idea of solving problems where neither a human or a computer can solve alone but both needs the help of one another to solve such tasks. ReCaptcha is one of those CS ideas.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Crowdsourcing. The idea of solving problems where neither a human or a computer can solve alone but both needs the help of one another to solve such tasks. ReCaptcha is one of those CS ideas.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6bf4a2", "flair_text": null, "created": 1348245502.0, "created_utc": 1348241902.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_1049t0", "children": [], "author": "BrainInAJar", "id": "c6aajhy", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 4, "body": "I've seen beautiful algorithms ( quicksort is gorgeous ), and beautiful code", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve seen beautiful algorithms ( quicksort is gorgeous ), and beautiful code&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6aajhy", "flair_text": null, "created": 1348033959.0, "created_utc": 1348030359.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1049t0", "children": [], "author": "geon", "id": "c6akbqh", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 1, "body": "The `amb` operator in scheme.\n\nhttp://www.ccs.neu.edu/home/dorai/t-y-scheme/t-y-scheme-Z-H-16.html#node_sec_14.4.2", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The &lt;code&gt;amb&lt;/code&gt; operator in scheme.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.ccs.neu.edu/home/dorai/t-y-scheme/t-y-scheme-Z-H-16.html#node_sec_14.4.2\"&gt;http://www.ccs.neu.edu/home/dorai/t-y-scheme/t-y-scheme-Z-H-16.html#node_sec_14.4.2&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6akbqh", "flair_text": null, "created": 1348088250.0, "created_utc": 1348084650.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1049t0", "children": [], "author": "gracenotes", "id": "c6bmc9k", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 1, "body": "Many great topics have been brought up already, but I love the [FLP impossibility](http://en.wikipedia.org/wiki/Consensus_%28computer_science%29#Solvability_results_for_some_agreement_problems) result. For a nonconstructive proof of computational impossibility, it's pretty elegant.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Many great topics have been brought up already, but I love the &lt;a href=\"http://en.wikipedia.org/wiki/Consensus_%28computer_science%29#Solvability_results_for_some_agreement_problems\"&gt;FLP impossibility&lt;/a&gt; result. For a nonconstructive proof of computational impossibility, it&amp;#39;s pretty elegant.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6bmc9k", "flair_text": null, "created": 1348273091.0, "created_utc": 1348269491.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1049t0", "children": [], "author": "cslmdt", "id": "c6cck69", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 1, "body": "hash maps", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;hash maps&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cck69", "flair_text": null, "created": 1348435023.0, "created_utc": 1348431423.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1049t0", "children": [], "author": "[deleted]", "id": "c6ckq1m", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 1, "body": "apart from almost everything known to be done step by step turned in to run in a computer or server farms, the beauty of it is that computers are very close to those manual pattern sewing machines used in the past(do they still use em?)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;apart from almost everything known to be done step by step turned in to run in a computer or server farms, the beauty of it is that computers are very close to those manual pattern sewing machines used in the past(do they still use em?)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ckq1m", "flair_text": null, "created": 1348467954.0, "created_utc": 1348464354.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1049t0", "children": [], "author": "kellyjosephprice", "id": "c6ajzri", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 2, "body": "Well written perl code.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well written perl code.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ajzri", "flair_text": null, "created": 1348087067.0, "created_utc": 1348083467.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 11, "link_id": "t3_1049t0", "children": [], "author": "JAPH", "id": "c6ab8k1", "parent_id": "t3_1049t0", "score": 0, "approved_by": null, "upvotes": 9, "body": "The paycheck.\n\nI find some aspects of CS to be fun, but \"beautiful\" would be a bit of a stretch.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The paycheck.&lt;/p&gt;\n\n&lt;p&gt;I find some aspects of CS to be fun, but &amp;quot;beautiful&amp;quot; would be a bit of a stretch.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6ab8k1", "flair_text": null, "created": 1348037061.0, "created_utc": 1348033461.0, "num_reports": null}], "score": 19, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 28, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/1049t0/what_in_computer_science_do_you_find_beautiful/", "has_more_comments": false, "name": "t3_1049t0", "created": 1348028827.0, "url": "http://www.reddit.com/r/compsci/comments/1049t0/what_in_computer_science_do_you_find_beautiful/", "author_flair_text": null, "author": "mindsystem", "created_utc": 1348025227.0, "link_flair_text": null, "media": null, "num_reports": null}, "405": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 11, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey everyone, I&amp;#39;ve come across &lt;a href=\"http://thomas.baudel.name/Visualisation/VisuTri/inplacestablesort.html\"&gt;this page&lt;/a&gt; which includes an implementation of a fast rotation algorithm (of an array in-place) somehow using a constant sized buffer and GCD...&lt;/p&gt;\n\n&lt;p&gt;I have no idea why or how it works. Can anyone try to explain it to me or link me to (good) resources? I found &lt;a href=\"http://berenger.eu/blog/public/Inplace-merge-algorithm.pdf\"&gt;this&lt;/a&gt; but found the typos and mistakes in the codes and explanation not easy to understand... and I&amp;#39;m not even sure if the explanation really makes sense.&lt;/p&gt;\n\n&lt;p&gt;P.S.\nSecondary, the same goes for the in-place merging in linear time... how does it work?\nI&amp;#39;ve read some papers (Huang, etc.) but they just go over the general outline/idea without addressing the implementation.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hey everyone, I've come across [this page](http://thomas.baudel.name/Visualisation/VisuTri/inplacestablesort.html) which includes an implementation of a fast rotation algorithm (of an array in-place) somehow using a constant sized buffer and GCD...\n\nI have no idea why or how it works. Can anyone try to explain it to me or link me to (good) resources? I found [this](http://berenger.eu/blog/public/Inplace-merge-algorithm.pdf) but found the typos and mistakes in the codes and explanation not easy to understand... and I'm not even sure if the explanation really makes sense.\n\n\nP.S.\nSecondary, the same goes for the in-place merging in linear time... how does it work?\nI've read some papers (Huang, etc.) but they just go over the general outline/idea without addressing the implementation.\n", "saved": false, "id": "104ok1", "clicked": false, "title": "Fast rotation of an array in-place ...", "num_comments": 2, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_104ok1", "children": [], "author": "gsg_", "id": "c6aekbv", "parent_id": "t3_104ok1", "score": 0, "approved_by": null, "upvotes": 10, "body": "It's not really that complicated, just a bit obscure. \n\nIn place rotation works by displacing elements by a step size n (modulo the length of the array, if necessary). Imagine that you begin the rotation process, moving the first element (`*`) n places forward in the array. What happens to the element that is already at the new location(`v`)? It can't just be written over. The obvious answer is that you must then displace *that* element in turn (stashing it in a temporary location), and so forth until you come to an element that doesn't need to be displaced(`#`):\n\n      *--------v--------v-------v---------#\n     [1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12][1...\n\nCall this operation a permutation cycle. If you think about the nature of a cycle and how it relates to the step size and length of the array, it's clear that to rotate the entire array the number of cycles must equal the gcd of step size and array length. Thus to rotate an array:\n\n    for i in range(0, gcd(step, length)):\n        run a permutation cycle at index i\n\nImplementing that scheme results in a reasonable in place array rotation algorithm that uses exactly one temporary, which is what I bet that code does (although I didn't read it in any depth).\n\nThe gcd rotate suffers one minor drawback in that contiguity is quite poor. If you have some temporary space there's actually a nice improvement that involves doing the copying in blocks of size gcd(step, length):\n\n            *--------v--------v-------v---------#\n         *--------v--------v-------v---------#\n      *--------v--------v-------v---------#\n     [1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12][1...\n\nThis trades memory use for improved contiguity of access, a good deal on most modern machines.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s not really that complicated, just a bit obscure. &lt;/p&gt;\n\n&lt;p&gt;In place rotation works by displacing elements by a step size n (modulo the length of the array, if necessary). Imagine that you begin the rotation process, moving the first element (&lt;code&gt;*&lt;/code&gt;) n places forward in the array. What happens to the element that is already at the new location(&lt;code&gt;v&lt;/code&gt;)? It can&amp;#39;t just be written over. The obvious answer is that you must then displace &lt;em&gt;that&lt;/em&gt; element in turn (stashing it in a temporary location), and so forth until you come to an element that doesn&amp;#39;t need to be displaced(&lt;code&gt;#&lt;/code&gt;):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;  *--------v--------v-------v---------#\n [1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12][1...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Call this operation a permutation cycle. If you think about the nature of a cycle and how it relates to the step size and length of the array, it&amp;#39;s clear that to rotate the entire array the number of cycles must equal the gcd of step size and array length. Thus to rotate an array:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for i in range(0, gcd(step, length)):\n    run a permutation cycle at index i\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Implementing that scheme results in a reasonable in place array rotation algorithm that uses exactly one temporary, which is what I bet that code does (although I didn&amp;#39;t read it in any depth).&lt;/p&gt;\n\n&lt;p&gt;The gcd rotate suffers one minor drawback in that contiguity is quite poor. If you have some temporary space there&amp;#39;s actually a nice improvement that involves doing the copying in blocks of size gcd(step, length):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;        *--------v--------v-------v---------#\n     *--------v--------v-------v---------#\n  *--------v--------v-------v---------#\n [1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12][1...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This trades memory use for improved contiguity of access, a good deal on most modern machines.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6aekbv", "flair_text": null, "created": 1348065249.0, "created_utc": 1348061649.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_104ok1", "children": [], "author": "grayvedigga", "id": "c6adi3k", "parent_id": "t3_104ok1", "score": 0, "approved_by": null, "upvotes": 4, "body": "Can you describe the problem you're trying to solve, and what you mean by \"fast\"?  Maybe link the paper on the secondary problem?  The code you linked is for an in-place stable sort, and while I can guess you linked it because it solves your problem as a step, I hate guessing almost as much as I hate reading multiple pages of C++/Java to infer an algorithm.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Can you describe the problem you&amp;#39;re trying to solve, and what you mean by &amp;quot;fast&amp;quot;?  Maybe link the paper on the secondary problem?  The code you linked is for an in-place stable sort, and while I can guess you linked it because it solves your problem as a step, I hate guessing almost as much as I hate reading multiple pages of C++/Java to infer an algorithm.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6adi3k", "flair_text": null, "created": 1348057117.0, "created_utc": 1348053517.0, "num_reports": null}], "score": 4, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 15, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/104ok1/fast_rotation_of_an_array_inplace/", "has_more_comments": false, "name": "t3_104ok1", "created": 1348053604.0, "url": "http://www.reddit.com/r/compsci/comments/104ok1/fast_rotation_of_an_array_inplace/", "author_flair_text": null, "author": "oinkoink12", "created_utc": 1348050004.0, "link_flair_text": null, "media": null, "num_reports": null}, "406": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 5, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Can anyone who keeps up with dynamic compilation research &amp;amp; projects suggest some reading? I&amp;#39;ve read about &lt;a href=\"http://labs.oracle.com/self/papers/papers.html\"&gt;Self&lt;/a&gt;, &lt;a href=\"http://www.ics.uci.edu/%7Efranz/Site/pubs-pdf/ICS-TR-06-16.pdf\"&gt;trace trees&lt;/a&gt;, and &lt;a href=\"https://bitbucket.org/pypy/extradoc/src/tip/talk/icooolps2009/bolz-tracing-jit-final.pdf\"&gt;PyPy&lt;/a&gt;&amp;#39;s meta-tracing JIT. What else is interesting or influential?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Can anyone who keeps up with dynamic compilation research &amp; projects suggest some reading? I've read about [Self](http://labs.oracle.com/self/papers/papers.html), [trace trees](http://www.ics.uci.edu/~franz/Site/pubs-pdf/ICS-TR-06-16.pdf), and [PyPy](https://bitbucket.org/pypy/extradoc/src/tip/talk/icooolps2009/bolz-tracing-jit-final.pdf)'s meta-tracing JIT. What else is interesting or influential?", "saved": false, "id": "1044oa", "clicked": false, "title": "What's new with just-in-time compilation?", "num_comments": 0, "comments": [], "score": 11, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 16, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/1044oa/whats_new_with_justintime_compilation/", "has_more_comments": false, "name": "t3_1044oa", "created": 1348023907.0, "url": "http://www.reddit.com/r/compsci/comments/1044oa/whats_new_with_justintime_compilation/", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1348020307.0, "link_flair_text": null, "media": null, "num_reports": null}, "407": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 5, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I recently finished Godel, Escher, Bach (finally!) and loved it. Now I have a problem however. This was one of the first compsci related books I&amp;#39;ve read, so I&amp;#39;ve nowhere to start on interesting reads. Any recommendations on good books in this field? Anything in the genre of &amp;quot;If you&amp;#39;re into compsci, this is a must read&amp;quot; type thing?&lt;/p&gt;\n\n&lt;p&gt;I hope this is an appropriate place to post this, thanks in advance. Until then, it&amp;#39;s back to Demon-Haunted World!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I recently finished Godel, Escher, Bach (finally!) and loved it. Now I have a problem however. This was one of the first compsci related books I've read, so I've nowhere to start on interesting reads. Any recommendations on good books in this field? Anything in the genre of \"If you're into compsci, this is a must read\" type thing?\n\nI hope this is an appropriate place to post this, thanks in advance. Until then, it's back to Demon-Haunted World!", "saved": false, "id": "10405o", "clicked": false, "title": "Book Recommendations?", "num_comments": 4, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_10405o", "children": [], "author": "moarthenfeeling", "id": "c6auevo", "parent_id": "t3_10405o", "score": 0, "approved_by": null, "upvotes": 9, "body": "Code: The Hidden Language of Computer Hardware and Software by C. Petzold. It's really awesome", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Code: The Hidden Language of Computer Hardware and Software by C. Petzold. It&amp;#39;s really awesome&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6auevo", "flair_text": null, "created": 1348138402.0, "created_utc": 1348134802.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10405o", "children": [], "author": "svsvsvs", "id": "c6b8aog", "parent_id": "t3_10405o", "score": 0, "approved_by": null, "upvotes": 5, "body": "With all of Hofstadter's pseudophilosophical ramblings, Godel Escher Bach has more to do with [Dianetics](http://en.wikipedia.org/wiki/Dianetics) than with the field of computer science.   \n  \nAnyway, why not actually get your feet wet? Good places to start are either algorithms or computability. [DPV](http://www.cs.berkeley.edu/~vazirani/algorithms.html) gives an easy introduction to the first topic, [Sipser](http://www.amazon.com/Introduction-Theory-Computation-Michael-Sipser/dp/053494728X) is the standard for the second (you don't need the latest version).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;With all of Hofstadter&amp;#39;s pseudophilosophical ramblings, Godel Escher Bach has more to do with &lt;a href=\"http://en.wikipedia.org/wiki/Dianetics\"&gt;Dianetics&lt;/a&gt; than with the field of computer science.   &lt;/p&gt;\n\n&lt;p&gt;Anyway, why not actually get your feet wet? Good places to start are either algorithms or computability. &lt;a href=\"http://www.cs.berkeley.edu/%7Evazirani/algorithms.html\"&gt;DPV&lt;/a&gt; gives an easy introduction to the first topic, &lt;a href=\"http://www.amazon.com/Introduction-Theory-Computation-Michael-Sipser/dp/053494728X\"&gt;Sipser&lt;/a&gt; is the standard for the second (you don&amp;#39;t need the latest version).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6b8aog", "flair_text": null, "created": 1348200575.0, "created_utc": 1348196975.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_10405o", "children": [], "author": "nakp88d", "id": "c6bon1h", "parent_id": "t3_10405o", "score": 0, "approved_by": null, "upvotes": 2, "body": "[The Code Book](http://www.amazon.com/The-Code-Book-Science-Cryptography/dp/0385495323/) by Simon Singh is a nice, informal introduction to cryptography including modern day cryptography.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.amazon.com/The-Code-Book-Science-Cryptography/dp/0385495323/\"&gt;The Code Book&lt;/a&gt; by Simon Singh is a nice, informal introduction to cryptography including modern day cryptography.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6bon1h", "flair_text": null, "created": 1348284947.0, "created_utc": 1348281347.0, "num_reports": null}], "score": 7, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 12, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/10405o/book_recommendations/", "has_more_comments": false, "name": "t3_10405o", "created": 1348019556.0, "url": "http://www.reddit.com/r/compsci/comments/10405o/book_recommendations/", "author_flair_text": null, "author": "IamFuzzles", "created_utc": 1348015956.0, "link_flair_text": null, "media": null, "num_reports": null}, "408": {"domain": "hackingoff.com", "link_flair_class": null, "banned_by": null, "downvotes": 3, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "103yed", "clicked": false, "title": "Convert NFAs to DFAs Online via Finite Automata Determinizer. Headache saver for Compiler &amp; Computational Complexity courses.", "num_comments": 3, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_103yed", "children": [], "author": "eigenheckler", "id": "c6a6bwh", "parent_id": "t3_103yed", "score": 0, "approved_by": null, "upvotes": 2, "body": "This tool should be pretty relevant early to midway into the semester, depending on the course you're taking.\n\nI put this together in response to seeing a lot of time wasted in building massive DFAs for driving lexers. I went with JSON input as it's pretty easy to dump/read from most languages. I'll probably write a custom input format if people find this useful, as JSON isn't likely the most terse  way to describe automata.\n\nI hope you find this useful. Feedback's appreciated.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This tool should be pretty relevant early to midway into the semester, depending on the course you&amp;#39;re taking.&lt;/p&gt;\n\n&lt;p&gt;I put this together in response to seeing a lot of time wasted in building massive DFAs for driving lexers. I went with JSON input as it&amp;#39;s pretty easy to dump/read from most languages. I&amp;#39;ll probably write a custom input format if people find this useful, as JSON isn&amp;#39;t likely the most terse  way to describe automata.&lt;/p&gt;\n\n&lt;p&gt;I hope you find this useful. Feedback&amp;#39;s appreciated.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6a6bwh", "flair_text": null, "created": 1348018194.0, "created_utc": 1348014594.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_103yed", "children": [], "author": "Asdayasman", "id": "c6c07ue", "parent_id": "t3_103yed", "score": 0, "approved_by": null, "upvotes": 1, "body": "Just read your comment in the CS beauty thread, and it made me happy in a quiet, indescribable sort of way.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Just read your comment in the CS beauty thread, and it made me happy in a quiet, indescribable sort of way.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6c07ue", "flair_text": null, "created": 1348360784.0, "created_utc": 1348357184.0, "num_reports": null}], "score": 2, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 5, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/103yed/convert_nfas_to_dfas_online_via_finite_automata/", "has_more_comments": false, "name": "t3_103yed", "created": 1348017919.0, "url": "http://hackingoff.com/compilers/nfa-to-dfa-conversion", "author_flair_text": null, "author": "eigenheckler", "created_utc": 1348014319.0, "link_flair_text": null, "media": null, "num_reports": null}, "409": {"domain": "tinytocs.org", "link_flair_class": null, "banned_by": null, "downvotes": 18, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "1012ki", "clicked": false, "title": "Tiny Transactions on Computer Science - The latest research in 140 characters or less", "num_comments": 6, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1012ki", "children": [], "author": "berlinbrown", "id": "c69l4d0", "parent_id": "t3_1012ki", "score": 0, "approved_by": null, "upvotes": 6, "body": "Yea... I don't know.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Yea... I don&amp;#39;t know.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c69l4d0", "flair_text": null, "created": 1347921528.0, "created_utc": 1347917928.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1012ki", "children": [], "author": "Blahkins", "id": "c69p37x", "parent_id": "t3_1012ki", "score": 0, "approved_by": null, "upvotes": 4, "body": "Umm, it is 140 characters, but then they just end up putting everything of relevance in the abstract.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Umm, it is 140 characters, but then they just end up putting everything of relevance in the abstract.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c69p37x", "flair_text": null, "created": 1347936660.0, "created_utc": 1347933060.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_1012ki", "children": [], "author": "CaptainCorey", "id": "c69mw08", "parent_id": "t3_1012ki", "score": 0, "approved_by": null, "upvotes": 4, "body": "These are interesting but are there not full papers for any of them?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;These are interesting but are there not full papers for any of them?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c69mw08", "flair_text": null, "created": 1347928280.0, "created_utc": 1347924680.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1012ki", "children": [], "author": "mkhry", "id": "c69napg", "parent_id": "t3_1012ki", "score": 0, "approved_by": null, "upvotes": 3, "body": "I feel like a one page version of this would be really useful.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I feel like a one page version of this would be really useful.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c69napg", "flair_text": null, "created": 1347929883.0, "created_utc": 1347926283.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1012ki", "children": [], "author": "jms87", "id": "c69y255", "parent_id": "t3_1012ki", "score": 0, "approved_by": null, "upvotes": 2, "body": "Do [tiny abstracts](http://www.improbable.com/2011/10/14/ig-nobel-winner-writes-best-abstract-ever/) count?\n\nP.S.: I know it's not CS.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Do &lt;a href=\"http://www.improbable.com/2011/10/14/ig-nobel-winner-writes-best-abstract-ever/\"&gt;tiny abstracts&lt;/a&gt; count?&lt;/p&gt;\n\n&lt;p&gt;P.S.: I know it&amp;#39;s not CS.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c69y255", "flair_text": null, "created": 1347986770.0, "created_utc": 1347983170.0, "num_reports": null}], "score": 42, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 60, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/1012ki/tiny_transactions_on_computer_science_the_latest/", "has_more_comments": false, "name": "t3_1012ki", "created": 1347904136.0, "url": "http://tinytocs.org/", "author_flair_text": null, "author": "chrisarchitect", "created_utc": 1347900536.0, "link_flair_text": null, "media": null, "num_reports": null}, "410": {"domain": "genius.cat-v.org", "link_flair_class": null, "banned_by": null, "downvotes": 11, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "100uc5", "clicked": false, "title": "An Interview with Ken Thompson (Unix and Beyond!) from 1999 in Computer", "num_comments": 1, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_100uc5", "children": [], "author": "GoatOfUnflappability", "id": "c69qtef", "parent_id": "t3_100uc5", "score": 0, "approved_by": null, "upvotes": 8, "body": "Cool interview all around, but I always love picking out the predictions from old interviews:\n\nken:\n&gt;I view Linux as something that's not Microsoft\u2014a backlash against Microsoft, no more and no less. I don't think it will be very successful in the long run. I've looked at the source and there are pieces that are good and pieces that are not. A whole bunch of random people have contributed to this source, and the quality varies drastically.\n\n&gt;My experience and some of my friends' experience is that Linux is quite unreliable. Microsoft is really unreliable but Linux is worse. In a non-PC environment, it just won't hold up. If you're using it on a single box, that's one thing. But if you want to use Linux in firewalls, gateways, embedded systems, and so on, it has a long way to go.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Cool interview all around, but I always love picking out the predictions from old interviews:&lt;/p&gt;\n\n&lt;p&gt;ken:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;I view Linux as something that&amp;#39;s not Microsoft\u2014a backlash against Microsoft, no more and no less. I don&amp;#39;t think it will be very successful in the long run. I&amp;#39;ve looked at the source and there are pieces that are good and pieces that are not. A whole bunch of random people have contributed to this source, and the quality varies drastically.&lt;/p&gt;\n\n&lt;p&gt;My experience and some of my friends&amp;#39; experience is that Linux is quite unreliable. Microsoft is really unreliable but Linux is worse. In a non-PC environment, it just won&amp;#39;t hold up. If you&amp;#39;re using it on a single box, that&amp;#39;s one thing. But if you want to use Linux in firewalls, gateways, embedded systems, and so on, it has a long way to go.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c69qtef", "flair_text": null, "created": 1347943021.0, "created_utc": 1347939421.0, "num_reports": null}], "score": 56, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 67, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/100uc5/an_interview_with_ken_thompson_unix_and_beyond/", "has_more_comments": false, "name": "t3_100uc5", "created": 1347895553.0, "url": "http://genius.cat-v.org/ken-thompson/interviews/unix-and-beyond", "author_flair_text": null, "author": "wordsmithie", "created_utc": 1347891953.0, "link_flair_text": null, "media": null, "num_reports": null}, "411": {"domain": "reddit.com", "link_flair_class": null, "banned_by": null, "downvotes": 2, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "101lvq", "clicked": false, "title": "Do you teach CS? New subreddit for CS education (r/CSEducation)", "num_comments": 1, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_101lvq", "children": [], "author": "AustinCorgiBart", "id": "c6bq7xp", "parent_id": "t3_101lvq", "score": 0, "approved_by": null, "upvotes": 1, "body": "This is fantastic! I hope others join :D", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is fantastic! I hope others join :D&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6bq7xp", "flair_text": null, "created": 1348293690.0, "created_utc": 1348290090.0, "num_reports": null}], "score": 4, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 6, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/101lvq/do_you_teach_cs_new_subreddit_for_cs_education/", "has_more_comments": false, "name": "t3_101lvq", "created": 1347922086.0, "url": "http://www.reddit.com/r/CSEducation/", "author_flair_text": null, "author": "costheta", "created_utc": 1347918486.0, "link_flair_text": null, "media": null, "num_reports": null}, "412": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 1, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Where do I start? Any active subs?  &lt;/p&gt;\n\n&lt;p&gt;Books? Elementary concepts? Tutorials? Anyone know where I can find a roadmap to studying Image processing(By image processing I mean the mathematical concepts and applications invovled with image processing)?  &lt;/p&gt;\n\n&lt;p&gt;Thanks in advance.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Where do I start? Any active subs?  \n  \nBooks? Elementary concepts? Tutorials? Anyone know where I can find a roadmap to studying Image processing(By image processing I mean the mathematical concepts and applications invovled with image processing)?  \n  \nThanks in advance.\n  \n", "saved": false, "id": "101tva", "clicked": false, "title": "Image Processing.", "num_comments": 3, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_101tva", "children": [], "author": "jungledelta", "id": "c6bk4e1", "parent_id": "t3_101tva", "score": 0, "approved_by": null, "upvotes": 2, "body": "Here's a very high up point to start from but bear in mind these are not for the freshman.\nYou can use them as base, by googling or checking wikipedia for any terms and theories you might be unfamiliar with - and from there on... \nThis method normally works for me.\n\nGoogle's research papers\nhttp://research.google.com/search.html#q=image%20processing\n\nEXAMPLE-BASED IMAGE COMPRESSION\nhttp://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en//pubs/archive/36415.pdf\n\nLarge Scale Online Learning of Image Similarity Through Ranking\nhttp://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en//pubs/archive/35114.pdf\n\nOther source\nhttp://stackoverflow.com/tags/image-processing/topusers\nUsers normally answer to question by point out to online sources where some sort of documentation lies", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s a very high up point to start from but bear in mind these are not for the freshman.\nYou can use them as base, by googling or checking wikipedia for any terms and theories you might be unfamiliar with - and from there on... \nThis method normally works for me.&lt;/p&gt;\n\n&lt;p&gt;Google&amp;#39;s research papers\n&lt;a href=\"http://research.google.com/search.html#q=image%20processing\"&gt;http://research.google.com/search.html#q=image%20processing&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;EXAMPLE-BASED IMAGE COMPRESSION\n&lt;a href=\"http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en//pubs/archive/36415.pdf\"&gt;http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en//pubs/archive/36415.pdf&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Large Scale Online Learning of Image Similarity Through Ranking\n&lt;a href=\"http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en//pubs/archive/35114.pdf\"&gt;http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en//pubs/archive/35114.pdf&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Other source\n&lt;a href=\"http://stackoverflow.com/tags/image-processing/topusers\"&gt;http://stackoverflow.com/tags/image-processing/topusers&lt;/a&gt;\nUsers normally answer to question by point out to online sources where some sort of documentation lies&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6bk4e1", "flair_text": null, "created": 1348263994.0, "created_utc": 1348260394.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_101tva", "children": [], "author": "shazb0t", "id": "c6d7gam", "parent_id": "t3_101tva", "score": 0, "approved_by": null, "upvotes": 1, "body": "I recommend this book:  [Algorithms for Image Processing and Computer Vision](http://www.amazon.com/Algorithms-Image-Processing-Computer-Vision/dp/0470643854).  It's a great place to begin.  It includes both explanation and implementation for many of the  mathematical concepts utilized in image processing and computer vision.  There's also a very good section on on linear classifiers and support vector machines which will give you an intuitive as well as a mathematical understanding of these concepts.\n\n", "edited": 1348606106.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I recommend this book:  &lt;a href=\"http://www.amazon.com/Algorithms-Image-Processing-Computer-Vision/dp/0470643854\"&gt;Algorithms for Image Processing and Computer Vision&lt;/a&gt;.  It&amp;#39;s a great place to begin.  It includes both explanation and implementation for many of the  mathematical concepts utilized in image processing and computer vision.  There&amp;#39;s also a very good section on on linear classifiers and support vector machines which will give you an intuitive as well as a mathematical understanding of these concepts.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6d7gam", "flair_text": null, "created": 1348589162.0, "created_utc": 1348585562.0, "num_reports": null}], "score": 2, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 3, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/101tva/image_processing/", "has_more_comments": false, "name": "t3_101tva", "created": 1347929598.0, "url": "http://www.reddit.com/r/compsci/comments/101tva/image_processing/", "author_flair_text": null, "author": "thinksthoughts", "created_utc": 1347925998.0, "link_flair_text": null, "media": null, "num_reports": null}, "413": {"domain": "stackoverflow.com", "link_flair_class": null, "banned_by": null, "downvotes": 12, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "1006z5", "clicked": false, "title": "Which parallel sorting algorithm has the best average case performance?", "num_comments": 11, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1006z5", "children": [], "author": "bo1024", "id": "c69c5nk", "parent_id": "t3_1006z5", "score": 0, "approved_by": null, "upvotes": 10, "body": "&gt; I'm looking to sort lists of 1 million to 100 million elements in a JVM language running on 8 to 32 cores.\n\nSo, parallelism isn't really the issue. Best best is probably to divide your list into 32 sub-lists, use the fastest single-core sorting algorithm you have on each, then mergesort them back.\n\nI would think, if you really did have a lot of processors, mergesort would give you really close to the best possible with the least work to implement (simplicity is a nice feature). Yes, it'll be O(n) to do the merge step, but all common sorting algorithms have an O(n) step (right?) -- it seems like better would require you to read and implement something out of a research paper.\n\nMaybe some big-data companies have solved this and found a preferred algorithm that works in practice?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;I&amp;#39;m looking to sort lists of 1 million to 100 million elements in a JVM language running on 8 to 32 cores.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;So, parallelism isn&amp;#39;t really the issue. Best best is probably to divide your list into 32 sub-lists, use the fastest single-core sorting algorithm you have on each, then mergesort them back.&lt;/p&gt;\n\n&lt;p&gt;I would think, if you really did have a lot of processors, mergesort would give you really close to the best possible with the least work to implement (simplicity is a nice feature). Yes, it&amp;#39;ll be O(n) to do the merge step, but all common sorting algorithms have an O(n) step (right?) -- it seems like better would require you to read and implement something out of a research paper.&lt;/p&gt;\n\n&lt;p&gt;Maybe some big-data companies have solved this and found a preferred algorithm that works in practice?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c69c5nk", "flair_text": null, "created": 1347877588.0, "created_utc": 1347873988.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_1006z5", "children": [], "author": "SuspiciousLamp", "id": "c69b70c", "parent_id": "t3_1006z5", "score": 0, "approved_by": null, "upvotes": 8, "body": "Sleepsort :p", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sleepsort :p&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c69b70c", "flair_text": null, "created": 1347868489.0, "created_utc": 1347864889.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_1006z5", "children": [], "author": "ckennington", "id": "c69s4l5", "parent_id": "t3_1006z5", "score": 0, "approved_by": null, "upvotes": 1, "body": "Bucketsort is uniquely optimized to be solved in parallel.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Bucketsort is uniquely optimized to be solved in parallel.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c69s4l5", "flair_text": null, "created": 1347948167.0, "created_utc": 1347944567.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_1006z5", "children": [], "author": "joeframbach", "id": "c69ftlg", "parent_id": "t3_1006z5", "score": 0, "approved_by": null, "upvotes": 2, "body": "Depends on your average case.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Depends on your average case.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c69ftlg", "flair_text": null, "created": 1347901739.0, "created_utc": 1347898139.0, "num_reports": null}], "score": 46, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 58, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/1006z5/which_parallel_sorting_algorithm_has_the_best/", "has_more_comments": false, "name": "t3_1006z5", "created": 1347855793.0, "url": "http://stackoverflow.com/questions/3969813/which-parallel-sorting-algorithm-has-the-best-average-case-performance", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1347852193.0, "link_flair_text": null, "media": null, "num_reports": null}, "414": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 4, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Does there exist an encryption algorithm such that given&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;y=f(k,x)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;where f is the algorithm, k is the key, x is the input data and y is the output, the following properties are true:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;p&gt;Knowing y and x does not mean you can easily know what k is&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;f(k1,g(k2,x))=g(k2,f(k1,x)) where g is the same algorithm&lt;/p&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Does there exist an encryption algorithm such that given\n\n    y=f(k,x)\n\nwhere f is the algorithm, k is the key, x is the input data and y is the output, the following properties are true:\n\n* Knowing y and x does not mean you can easily know what k is\n\n* f(k1,g(k2,x))=g(k2,f(k1,x)) where g is the same algorithm", "saved": false, "id": "100js0", "clicked": false, "title": "Question regarding encryption algorithms...", "num_comments": 14, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_100js0", "children": [], "author": "grayvedigga", "id": "c69c4ey", "parent_id": "t3_100js0", "score": 0, "approved_by": null, "upvotes": 6, "body": "Unless I'm missing something obvious, this sounds like the essential properties of any public key crypto system, so yes, RSA?", "edited": 1347873901.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Unless I&amp;#39;m missing something obvious, this sounds like the essential properties of any public key crypto system, so yes, RSA?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c69c4ey", "flair_text": null, "created": 1347877177.0, "created_utc": 1347873577.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_100js0", "children": [], "author": "taejo", "id": "c69ca97", "parent_id": "t3_100js0", "score": 0, "approved_by": null, "upvotes": 6, "body": "&gt; Knowing y and x does not mean you can easily know what k is\n\nThis is called resistance to a \"known-plaintext\" attack. Anything that can reasonably be called an encryption function is expected to have it.\n\n&gt; f(k1,g(k2,x))=g(k2,f(k1,x)) where g is the same algorithm\n\nThis is sometimes called \"commutative encryption\". (Your notation is a bit confusing: if f=g, why use different letters for them?)\n\nAny double encryption, even non-commutative, is vulnerable to a meet-in-the-middle attack which makes breaking it only slightly more difficult than breaking a single layer of encryption.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;Knowing y and x does not mean you can easily know what k is&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This is called resistance to a &amp;quot;known-plaintext&amp;quot; attack. Anything that can reasonably be called an encryption function is expected to have it.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;f(k1,g(k2,x))=g(k2,f(k1,x)) where g is the same algorithm&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This is sometimes called &amp;quot;commutative encryption&amp;quot;. (Your notation is a bit confusing: if f=g, why use different letters for them?)&lt;/p&gt;\n\n&lt;p&gt;Any double encryption, even non-commutative, is vulnerable to a meet-in-the-middle attack which makes breaking it only slightly more difficult than breaking a single layer of encryption.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c69ca97", "flair_text": null, "created": 1347879189.0, "created_utc": 1347875589.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_100js0", "children": [], "author": "rosulek", "id": "c69do5u", "parent_id": "t3_100js0", "score": 0, "approved_by": null, "upvotes": 2, "body": "It doesn't perfectly match your stated requirements, but threshold encryption is probably what you're after. (Strictly speaking, you seem to be asking for something deterministic.. perhaps what you really want, more generally, is Dec(k1,Dec(k2,c)) = Dec(k2, Dec(k1,c))?)\n\nAs an example (in the public key setting), suppose Alice has ElGamal public key g^a and Bob has ElGamal public key g^b. Then think of g^(a+b) as their threshold key. Someone can encrypt a message m as (g^(r), m * g^(r{a+b})). Alice can \"strip away\" her contribution g^(ra) from the 2nd component, leaving a normal ElGamal ciphertext under Bob's key. Or Bob can strip away g^(rb) first, leaving a normal ElGamal ciphertext under Alice's key. One party by itself cannot obtain the plaintext.", "edited": 1347888566.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It doesn&amp;#39;t perfectly match your stated requirements, but threshold encryption is probably what you&amp;#39;re after. (Strictly speaking, you seem to be asking for something deterministic.. perhaps what you really want, more generally, is Dec(k1,Dec(k2,c)) = Dec(k2, Dec(k1,c))?)&lt;/p&gt;\n\n&lt;p&gt;As an example (in the public key setting), suppose Alice has ElGamal public key g&lt;sup&gt;a&lt;/sup&gt; and Bob has ElGamal public key g&lt;sup&gt;b.&lt;/sup&gt; Then think of g&lt;sup&gt;a+b&lt;/sup&gt; as their threshold key. Someone can encrypt a message m as (g&lt;sup&gt;r&lt;/sup&gt;, m * g&lt;sup&gt;r{a+b}&lt;/sup&gt;). Alice can &amp;quot;strip away&amp;quot; her contribution g&lt;sup&gt;ra&lt;/sup&gt; from the 2nd component, leaving a normal ElGamal ciphertext under Bob&amp;#39;s key. Or Bob can strip away g&lt;sup&gt;rb&lt;/sup&gt; first, leaving a normal ElGamal ciphertext under Alice&amp;#39;s key. One party by itself cannot obtain the plaintext.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c69do5u", "flair_text": null, "created": 1347891881.0, "created_utc": 1347888281.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_100js0", "children": [], "author": "B-Con", "id": "c69fx3v", "parent_id": "t3_100js0", "score": 0, "approved_by": null, "upvotes": 2, "body": "Point 1 is standard for encryption algorithms.\n\nPoint 2 is only true for algorithms where the function f_k for all k is commutative. RSA is one example that has this property, but no modern block ciphers do.", "edited": 1348586729.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Point 1 is standard for encryption algorithms.&lt;/p&gt;\n\n&lt;p&gt;Point 2 is only true for algorithms where the function f_k for all k is commutative. RSA is one example that has this property, but no modern block ciphers do.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c69fx3v", "flair_text": null, "created": 1347902137.0, "created_utc": 1347898537.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_100js0", "children": [], "author": "tylerni7", "id": "c69m6i0", "parent_id": "t3_100js0", "score": 0, "approved_by": null, "upvotes": 2, "body": "You should be able to easily construct such an algorithm with those properties, given any standard encryption algorithm, if you double the length of the original block cipher key.\n\nExpress k as n||m\n\n     f(n||m,x) = AES(n (xor) m,x)\n\nIf AES has the properties we think it does, then knowing y and x does not get you a k, even with this scheme (or else we could use that to break AES).\n\nFurther, we can trivially construct other keys that work additionally well such as \n\n    k' = (n xor m)||0\n    k'' = m||n\n    k''' = 0||(n xor m)\n\netc.\n\nTherefore it has the properties desired. I don't know what you are trying to do, but this construction wouldn't be any better than just setting k1=k2, although it allows for them to be different.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You should be able to easily construct such an algorithm with those properties, given any standard encryption algorithm, if you double the length of the original block cipher key.&lt;/p&gt;\n\n&lt;p&gt;Express k as n||m&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; f(n||m,x) = AES(n (xor) m,x)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;If AES has the properties we think it does, then knowing y and x does not get you a k, even with this scheme (or else we could use that to break AES).&lt;/p&gt;\n\n&lt;p&gt;Further, we can trivially construct other keys that work additionally well such as &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;k&amp;#39; = (n xor m)||0\nk&amp;#39;&amp;#39; = m||n\nk&amp;#39;&amp;#39;&amp;#39; = 0||(n xor m)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;etc.&lt;/p&gt;\n\n&lt;p&gt;Therefore it has the properties desired. I don&amp;#39;t know what you are trying to do, but this construction wouldn&amp;#39;t be any better than just setting k1=k2, although it allows for them to be different.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c69m6i0", "flair_text": null, "created": 1347925508.0, "created_utc": 1347921908.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_100js0", "children": [], "author": "Hoogstens", "id": "c6bunl3", "parent_id": "t3_100js0", "score": 0, "approved_by": null, "upvotes": 1, "body": "f(x, k) where x is encrypted with key k is fairly usual, or h(f(x, k) with a hash function.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;f(x, k) where x is encrypted with key k is fairly usual, or h(f(x, k) with a hash function.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6bunl3", "flair_text": null, "created": 1348333124.0, "created_utc": 1348329524.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_100js0", "children": [], "author": "PubliusPontifex", "id": "c69dktd", "parent_id": "t3_100js0", "score": 0, "approved_by": null, "upvotes": 2, "body": "A true encryption algorithm, don't think so. XOR would keep this relationship, as might a few trivial shift or mathematical ciphers, but most modern stream ciphers are based on substitution, which is not commutative.\n\nThe Diffie-Hellman exchange in RSA, however, while not an actual cipher (it's only used to generate a key with contributions from both parties, and effectively encrypts no data), works specifically in this way, so both parties can perform different but complementary operations while still ending up with the same answer.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A true encryption algorithm, don&amp;#39;t think so. XOR would keep this relationship, as might a few trivial shift or mathematical ciphers, but most modern stream ciphers are based on substitution, which is not commutative.&lt;/p&gt;\n\n&lt;p&gt;The Diffie-Hellman exchange in RSA, however, while not an actual cipher (it&amp;#39;s only used to generate a key with contributions from both parties, and effectively encrypts no data), works specifically in this way, so both parties can perform different but complementary operations while still ending up with the same answer.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c69dktd", "flair_text": null, "created": 1347891318.0, "created_utc": 1347887718.0, "num_reports": null}], "score": 8, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 12, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/100js0/question_regarding_encryption_algorithms/", "has_more_comments": false, "name": "t3_100js0", "created": 1347875626.0, "url": "http://www.reddit.com/r/compsci/comments/100js0/question_regarding_encryption_algorithms/", "author_flair_text": null, "author": "MestR", "created_utc": 1347872026.0, "link_flair_text": null, "media": null, "num_reports": null}, "415": {"domain": "sbel.wisc.edu", "link_flair_class": null, "banned_by": null, "downvotes": 6, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "100764", "clicked": false, "title": "Prefix Sums and Their Applications [pdf]", "num_comments": 0, "comments": [], "score": 14, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 20, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/100764/prefix_sums_and_their_applications_pdf/", "has_more_comments": false, "name": "t3_100764", "created": 1347855990.0, "url": "http://sbel.wisc.edu/Courses/ME964/Literature/prefScanBlelloch1990.pdf", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1347852390.0, "link_flair_text": null, "media": null, "num_reports": null}, "416": {"domain": "cstheory.stackexchange.com", "link_flair_class": null, "banned_by": null, "downvotes": 10, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "1007xp", "clicked": false, "title": "Given a polynomial-time algorithm, can we bound its running time more precisely? ", "num_comments": 6, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1007xp", "children": [], "author": "mcandre", "id": "c69fy5m", "parent_id": "t3_1007xp", "score": 0, "approved_by": null, "upvotes": 3, "body": "If by \"more precisely\" you mean linear, that's one of the major challenges in computer science: finding either a tighter theoretical bound on a known algorithm, or finding a variant algorithm that's so much faster that it can be classified using, for example, `O(n log n)` or `O(log log n)`, rather than polynomial time.\n\nIf, on the other hand, \"more precisely\" is taken to mean, for example, `O(n^2)` rather than `O(n^3)`, this is still considered a major leap, but if the difference is `O(2.8 n^2)` vs `O(3 n^2)`, this difference is largely only relevant for engineers and programmers rather than computer scientists, because the big O notation already implies that differences of a constant are included in the same class of functions. For example, `O(n^2)` is included in the `O(n^2 + n)` class of functions, because the `lim_n-&gt;infinity of (n^2)/(n^2 + n) = 0`.\n\nAll of this is Algorithms 101 material; if you're at uni, ask a professor or TA.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If by &amp;quot;more precisely&amp;quot; you mean linear, that&amp;#39;s one of the major challenges in computer science: finding either a tighter theoretical bound on a known algorithm, or finding a variant algorithm that&amp;#39;s so much faster that it can be classified using, for example, &lt;code&gt;O(n log n)&lt;/code&gt; or &lt;code&gt;O(log log n)&lt;/code&gt;, rather than polynomial time.&lt;/p&gt;\n\n&lt;p&gt;If, on the other hand, &amp;quot;more precisely&amp;quot; is taken to mean, for example, &lt;code&gt;O(n^2)&lt;/code&gt; rather than &lt;code&gt;O(n^3)&lt;/code&gt;, this is still considered a major leap, but if the difference is &lt;code&gt;O(2.8 n^2)&lt;/code&gt; vs &lt;code&gt;O(3 n^2)&lt;/code&gt;, this difference is largely only relevant for engineers and programmers rather than computer scientists, because the big O notation already implies that differences of a constant are included in the same class of functions. For example, &lt;code&gt;O(n^2)&lt;/code&gt; is included in the &lt;code&gt;O(n^2 + n)&lt;/code&gt; class of functions, because the &lt;code&gt;lim_n-&amp;gt;infinity of (n^2)/(n^2 + n) = 0&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;All of this is Algorithms 101 material; if you&amp;#39;re at uni, ask a professor or TA.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c69fy5m", "flair_text": null, "created": 1347902255.0, "created_utc": 1347898655.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_1007xp", "children": [], "author": "cypherx", "id": "c69aemc", "parent_id": "t3_1007xp", "score": 0, "approved_by": null, "upvotes": 4, "body": "I'm curious about these downvotes, the topic is bread &amp; butter CS material. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m curious about these downvotes, the topic is bread &amp;amp; butter CS material. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c69aemc", "flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "created": 1347863591.0, "created_utc": 1347859991.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_1007xp", "children": [], "author": "njwatson32", "id": "c6b43i8", "parent_id": "t3_1007xp", "score": 0, "approved_by": null, "upvotes": 1, "body": "Doesn't [Rice's Theorem](http://en.wikipedia.org/wiki/Rice's_theorem) apply to this question? Just let S = DTIME( n^k ).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Doesn&amp;#39;t &lt;a href=\"http://en.wikipedia.org/wiki/Rice&amp;#x27;s_theorem\"&gt;Rice&amp;#39;s Theorem&lt;/a&gt; apply to this question? Just let S = DTIME( n&lt;sup&gt;k&lt;/sup&gt; ).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6b43i8", "flair_text": null, "created": 1348183194.0, "created_utc": 1348179594.0, "num_reports": null}], "score": 6, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 16, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/1007xp/given_a_polynomialtime_algorithm_can_we_bound_its/", "has_more_comments": false, "name": "t3_1007xp", "created": 1347856830.0, "url": "http://cstheory.stackexchange.com/questions/5004/are-runtime-bounds-in-p-decidable-answer-no", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1347853230.0, "link_flair_text": null, "media": null, "num_reports": null}, "417": {"domain": "alaska-kamtchatka.blogspot.ca", "link_flair_class": null, "banned_by": null, "downvotes": 5, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "10085h", "clicked": false, "title": "Merge Right: A generic template for set operations", "num_comments": 2, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_10085h", "children": [], "author": "cypherx", "id": "c698wa9", "parent_id": "t3_10085h", "score": 0, "approved_by": null, "upvotes": 3, "body": "Followup: http://gallium.inria.fr/~scherer/gagallium/comments-on-merge-right/\n\n(the original post overstates the degree to which parametricity limits the search space of functions)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Followup: &lt;a href=\"http://gallium.inria.fr/%7Escherer/gagallium/comments-on-merge-right/\"&gt;http://gallium.inria.fr/~scherer/gagallium/comments-on-merge-right/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;(the original post overstates the degree to which parametricity limits the search space of functions)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c698wa9", "flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "created": 1347857091.0, "created_utc": 1347853491.0, "num_reports": null}], "score": 4, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 9, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/10085h/merge_right_a_generic_template_for_set_operations/", "has_more_comments": false, "name": "t3_10085h", "created": 1347857053.0, "url": "http://alaska-kamtchatka.blogspot.ca/2012/08/merge-right.html", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1347853453.0, "link_flair_text": null, "media": null, "num_reports": null}, "418": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 12, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The truth is, this is homework related.  I am currently taking Data Structures, and have fallen a little behind.  I am looking for some kind of kick start into figuring this out.&lt;/p&gt;\n\n&lt;p&gt;So, I have to assume that the running time for an algorithm with input size of 256 is 1 millisecond. (Ignoring the effect of low-order terms.)  How much time will be required to process 512 items if the running time was 1. linear, 2. linearithmic, 3. quadratic, and 4. Cubic.  How large a problem can be solved in 240 milliseconds with the same running times?&lt;/p&gt;\n\n&lt;p&gt;Any insight?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "The truth is, this is homework related.  I am currently taking Data Structures, and have fallen a little behind.  I am looking for some kind of kick start into figuring this out.\n\nSo, I have to assume that the running time for an algorithm with input size of 256 is 1 millisecond. (Ignoring the effect of low-order terms.)  How much time will be required to process 512 items if the running time was 1. linear, 2. linearithmic, 3. quadratic, and 4. Cubic.  How large a problem can be solved in 240 milliseconds with the same running times?\n\nAny insight?", "saved": false, "id": "zzzq8", "clicked": false, "title": "Running Time Analysis:  How do I determine how long a process will take in multiple running times...", "num_comments": 17, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_zzzq8", "children": [], "author": "cypherx", "id": "c696ry2", "parent_id": "t3_zzzq8", "score": 0, "approved_by": null, "upvotes": 5, "body": "\"linearithmic\"? That's new to me. From its position in the list I'm guessing your teacher means O(n * log n) but I've never heard that name before. ", "edited": 1347856197.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&amp;quot;linearithmic&amp;quot;? That&amp;#39;s new to me. From its position in the list I&amp;#39;m guessing your teacher means O(n * log n) but I&amp;#39;ve never heard that name before. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c696ry2", "flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "created": 1347849425.0, "created_utc": 1347845825.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zzzq8", "children": [], "author": "cypherx", "id": "c696uqv", "parent_id": "t3_zzzq8", "score": 0, "approved_by": null, "upvotes": 3, "body": "Ignoring a lot of details you aren't yet ready for, the \"running time\" of an algorithm is a function which takes the number of inputs (n) and relates it to the time you'll wait for a result. \n\nLinear running time means that given *n* items you'll have to wait something proportional to *n* milliseconds. (well, it's usually measured in steps or operations, but whatever..)\n\nQuadratic running time maps *n* items to something proportional to *n^2* milliseconds. \n\nDoes that help? \n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ignoring a lot of details you aren&amp;#39;t yet ready for, the &amp;quot;running time&amp;quot; of an algorithm is a function which takes the number of inputs (n) and relates it to the time you&amp;#39;ll wait for a result. &lt;/p&gt;\n\n&lt;p&gt;Linear running time means that given &lt;em&gt;n&lt;/em&gt; items you&amp;#39;ll have to wait something proportional to &lt;em&gt;n&lt;/em&gt; milliseconds. (well, it&amp;#39;s usually measured in steps or operations, but whatever..)&lt;/p&gt;\n\n&lt;p&gt;Quadratic running time maps &lt;em&gt;n&lt;/em&gt; items to something proportional to &lt;em&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/em&gt; milliseconds. &lt;/p&gt;\n\n&lt;p&gt;Does that help? &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c696uqv", "flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "created": 1347849726.0, "created_utc": 1347846126.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zzzq8", "children": [], "author": "mechpencil", "id": "c696xfp", "parent_id": "t3_zzzq8", "score": 0, "approved_by": null, "upvotes": 4, "body": "So your four cases correspond to the following in big-Oh notation.\n\n1) O(n)\n\n2) O(n log n)\n\n3) O( n^2 )\n\n4) O( n^3 )\n\nLet's do the easiest case. If an algorithm is of linear complexity O(n), then if 256 = 1ms then 512 = 2ms. (doubling the size of your input doubles the processing time)\n\nFor the cubic case for example, if you were to double the size of your input, your algorithm would take 8 times as long ( 2^3 ), giving you 8ms.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;So your four cases correspond to the following in big-Oh notation.&lt;/p&gt;\n\n&lt;p&gt;1) O(n)&lt;/p&gt;\n\n&lt;p&gt;2) O(n log n)&lt;/p&gt;\n\n&lt;p&gt;3) O( n&lt;sup&gt;2&lt;/sup&gt; )&lt;/p&gt;\n\n&lt;p&gt;4) O( n&lt;sup&gt;3&lt;/sup&gt; )&lt;/p&gt;\n\n&lt;p&gt;Let&amp;#39;s do the easiest case. If an algorithm is of linear complexity O(n), then if 256 = 1ms then 512 = 2ms. (doubling the size of your input doubles the processing time)&lt;/p&gt;\n\n&lt;p&gt;For the cubic case for example, if you were to double the size of your input, your algorithm would take 8 times as long ( 2&lt;sup&gt;3&lt;/sup&gt; ), giving you 8ms.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c696xfp", "flair_text": null, "created": 1347850016.0, "created_utc": 1347846416.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zzzq8", "children": [], "author": "Workaphobia", "id": "c697nfc", "parent_id": "t3_zzzq8", "score": 0, "approved_by": null, "upvotes": 2, "body": "If the running time is linear, that means it is a proportional relationship (ignoring low-order terms). So the basic intuition of \"If you double the work, you double the time it will take\" applies. You can see this using simple algebra: If f(n) = c * n, then f(2n) = c * 2n. Dividing the second term by the first, we see that the time taken to solve a problem of size 2n is twice the time taken to solve one of size n.\n\nFor the other ones, write down a simple equation for f(n), plug in 2n to f, and see how much bigger it is than f(n). That's how many times bigger f(2n) is than 1 millisecond. For example, if f(n) = x * n^2 , how much bigger is x * (2n)^2 than x * n^2 ?\n\nAlternatively, just plot it out and check it out for yourself. The cool thing about asymptotic growth is that for sufficiently large n, it really doesn't depend on anything but the high order term, even neglecting the leading coefficient. So you can take its value numerically at N = some large value, and at 2N, and divide the results to see how many times bigger the second is without solving it algebraically.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If the running time is linear, that means it is a proportional relationship (ignoring low-order terms). So the basic intuition of &amp;quot;If you double the work, you double the time it will take&amp;quot; applies. You can see this using simple algebra: If f(n) = c * n, then f(2n) = c * 2n. Dividing the second term by the first, we see that the time taken to solve a problem of size 2n is twice the time taken to solve one of size n.&lt;/p&gt;\n\n&lt;p&gt;For the other ones, write down a simple equation for f(n), plug in 2n to f, and see how much bigger it is than f(n). That&amp;#39;s how many times bigger f(2n) is than 1 millisecond. For example, if f(n) = x * n&lt;sup&gt;2&lt;/sup&gt; , how much bigger is x * (2n)&lt;sup&gt;2&lt;/sup&gt; than x * n&lt;sup&gt;2&lt;/sup&gt; ?&lt;/p&gt;\n\n&lt;p&gt;Alternatively, just plot it out and check it out for yourself. The cool thing about asymptotic growth is that for sufficiently large n, it really doesn&amp;#39;t depend on anything but the high order term, even neglecting the leading coefficient. So you can take its value numerically at N = some large value, and at 2N, and divide the results to see how many times bigger the second is without solving it algebraically.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c697nfc", "flair_text": null, "created": 1347852817.0, "created_utc": 1347849217.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zzzq8", "children": [], "author": "dbcfd", "id": "c697snk", "parent_id": "t3_zzzq8", "score": 0, "approved_by": null, "upvotes": 1, "body": "The semester just started. Did you just not go after the first day?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The semester just started. Did you just not go after the first day?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c697snk", "flair_text": null, "created": 1347853353.0, "created_utc": 1347849753.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_zzzq8", "children": [], "author": "minno", "id": "c696svb", "parent_id": "t3_zzzq8", "score": 0, "approved_by": null, "upvotes": 2, "body": "You *really* should be able to figure this out just based on what the professor's taught in class.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You &lt;em&gt;really&lt;/em&gt; should be able to figure this out just based on what the professor&amp;#39;s taught in class.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c696svb", "flair_text": null, "created": 1347849524.0, "created_utc": 1347845924.0, "num_reports": null}], "score": 3, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 15, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/zzzq8/running_time_analysis_how_do_i_determine_how_long/", "has_more_comments": false, "name": "t3_zzzq8", "created": 1347848524.0, "url": "http://www.reddit.com/r/compsci/comments/zzzq8/running_time_analysis_how_do_i_determine_how_long/", "author_flair_text": null, "author": "Skoolz", "created_utc": 1347844924.0, "link_flair_text": null, "media": null, "num_reports": null}, "419": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 8, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I read a paper about the idea of a computer based on surface wave propagation. The waves activated outputs when multiple waves reached the output point at the same time. Unfortunately, the PDF was on my old computer, which was stolen, and now I can&amp;#39;t find it. Has anyone seen it?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I read a paper about the idea of a computer based on surface wave propagation. The waves activated outputs when multiple waves reached the output point at the same time. Unfortunately, the PDF was on my old computer, which was stolen, and now I can't find it. Has anyone seen it?", "saved": false, "id": "zyn7a", "clicked": false, "title": "A paper about a computer based on surface wave propagation", "num_comments": 13, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zyn7a", "children": [], "author": "lahwran_", "id": "c68vi6m", "parent_id": "t3_zyn7a", "score": 0, "approved_by": null, "upvotes": 6, "body": "that sounds really, really weird. I'd be interested to see the paper.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;that sounds really, really weird. I&amp;#39;d be interested to see the paper.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68vi6m", "flair_text": null, "created": 1347789335.0, "created_utc": 1347785735.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zyn7a", "children": [], "author": "inexhaling", "id": "c68vssi", "parent_id": "t3_zyn7a", "score": 0, "approved_by": null, "upvotes": 2, "body": "Do you mean something like [electronic analog computers?](http://en.wikipedia.org/wiki/Analog_computer#Electronic_analog_computers)\nOr what kind of waves do you refer to?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Do you mean something like &lt;a href=\"http://en.wikipedia.org/wiki/Analog_computer#Electronic_analog_computers\"&gt;electronic analog computers?&lt;/a&gt;\nOr what kind of waves do you refer to?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68vssi", "flair_text": null, "created": 1347792668.0, "created_utc": 1347789068.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zyn7a", "children": [], "author": "Nelgraf", "id": "c690tl8", "parent_id": "t3_zyn7a", "score": 0, "approved_by": null, "upvotes": 2, "body": "This is a very similar paper to what you are describing. \n\n[Multi-Frequency Magnonic Logic Circuits for Parallel Data Processing](http://arxiv.org/ftp/arxiv/papers/1105/1105.4671.pdf)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is a very similar paper to what you are describing. &lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://arxiv.org/ftp/arxiv/papers/1105/1105.4671.pdf\"&gt;Multi-Frequency Magnonic Logic Circuits for Parallel Data Processing&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c690tl8", "flair_text": null, "created": 1347824850.0, "created_utc": 1347821250.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zyn7a", "children": [], "author": "gsteinb88", "id": "c691238", "parent_id": "t3_zyn7a", "score": 0, "approved_by": null, "upvotes": 2, "body": "You may want to check out [John Bush's](http://www-math.mit.edu/~bush/) publications. \n\nEven if he wasn't involved in the particular work you're looking for (and I didn't go digging through all his papers), it sounds like you'll be interested in the work he does. For example, using bouncing water droplets to simulate (some aspects of) quantum mechanics: http://www-math.mit.edu/~bush/PNAS-2010-Bush.pdf", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You may want to check out &lt;a href=\"http://www-math.mit.edu/%7Ebush/\"&gt;John Bush&amp;#39;s&lt;/a&gt; publications. &lt;/p&gt;\n\n&lt;p&gt;Even if he wasn&amp;#39;t involved in the particular work you&amp;#39;re looking for (and I didn&amp;#39;t go digging through all his papers), it sounds like you&amp;#39;ll be interested in the work he does. For example, using bouncing water droplets to simulate (some aspects of) quantum mechanics: &lt;a href=\"http://www-math.mit.edu/%7Ebush/PNAS-2010-Bush.pdf\"&gt;http://www-math.mit.edu/~bush/PNAS-2010-Bush.pdf&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c691238", "flair_text": null, "created": 1347825857.0, "created_utc": 1347822257.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zyn7a", "children": [], "author": "many_bad_ideas", "id": "c6bqut2", "parent_id": "t3_zyn7a", "score": 0, "approved_by": null, "upvotes": 1, "body": "I think I know exactly what paper you are talking about, but unfortunately I can't find it.  They additionally had a wave-based method that they claimed would act as a memory cell as well.  It would resonate with a particular phase that could then be used to encode some analog value.  If I recall correctly, it was not published in a traditional comp sci venue, rather it was \"bio-inspired\" some how.  I am sorry I can't tell you more, but maybe that will help people with better google fu than me.\n\nIt was a neat idea, but they fell short of actually showing that it was a complete logic because they did no demonstrate that arbitrary logic constructions were possible.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think I know exactly what paper you are talking about, but unfortunately I can&amp;#39;t find it.  They additionally had a wave-based method that they claimed would act as a memory cell as well.  It would resonate with a particular phase that could then be used to encode some analog value.  If I recall correctly, it was not published in a traditional comp sci venue, rather it was &amp;quot;bio-inspired&amp;quot; some how.  I am sorry I can&amp;#39;t tell you more, but maybe that will help people with better google fu than me.&lt;/p&gt;\n\n&lt;p&gt;It was a neat idea, but they fell short of actually showing that it was a complete logic because they did no demonstrate that arbitrary logic constructions were possible.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6bqut2", "flair_text": null, "created": 1348297782.0, "created_utc": 1348294182.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zyn7a", "children": [], "author": "fabianhjr", "id": "c691k3g", "parent_id": "t3_zyn7a", "score": 0, "approved_by": null, "upvotes": 1, "body": "&gt; We present a new method for the real-time simulation of fluid surface\nwaves and their interactions with floating objects. The method\nis based on the new concept of wave particles, which offers a simple,\nfast, and unconditionally stable approach to wave simulation.\n\nThat one?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;We present a new method for the real-time simulation of fluid surface\nwaves and their interactions with floating objects. The method\nis based on the new concept of wave particles, which offers a simple,\nfast, and unconditionally stable approach to wave simulation.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;That one?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c691k3g", "flair_text": null, "created": 1347827921.0, "created_utc": 1347824321.0, "num_reports": null}], "score": 48, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 56, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/zyn7a/a_paper_about_a_computer_based_on_surface_wave/", "has_more_comments": false, "name": "t3_zyn7a", "created": 1347779812.0, "url": "http://www.reddit.com/r/compsci/comments/zyn7a/a_paper_about_a_computer_based_on_surface_wave/", "author_flair_text": null, "author": "martext", "created_utc": 1347776212.0, "link_flair_text": null, "media": null, "num_reports": null}, "420": {"domain": "intel.activeevents.com", "link_flair_class": null, "banned_by": null, "downvotes": 6, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "zz2xn", "clicked": false, "title": "Transactional Synchronization Extensions - fine-grained locking in hardware on x86 [pdf]", "num_comments": 0, "comments": [], "score": 6, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 12, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/zz2xn/transactional_synchronization_extensions/", "has_more_comments": false, "name": "t3_zz2xn", "created": 1347814182.0, "url": "https://intel.activeevents.com/sf12/scheduler/downloadFileCounting.do?sesfid=DF74BAFE8A519B34CE253792C24E3C3F&amp;abb=B54C1E29C5FB069696558337F9217640&amp;fn=2AA51E85CEB830E1D0A44648588B6247974EDFE7768607DCCBE61C8BED76E8D6", "author_flair_text": null, "author": "cabbagerat", "created_utc": 1347810582.0, "link_flair_text": null, "media": null, "num_reports": null}, "421": {"domain": "cogsci.stackexchange.com", "link_flair_class": null, "banned_by": null, "downvotes": 8, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "zxz0g", "clicked": false, "title": "Neural networks with biologically plausible accounts of neurogenesis", "num_comments": 2, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zxz0g", "children": [], "author": "plc123", "id": "c68r2ug", "parent_id": "t3_zxz0g", "score": 0, "approved_by": null, "upvotes": 1, "body": "I'm pretty sure that neurogenesis only happens in a couple of places in an adult brain (as far as is known). The hippocampus and and one other place I don't remember.\n\nI think what the person who asked this was looking for was something more along the lines of \"recruitment.\"", "edited": 1347761050.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m pretty sure that neurogenesis only happens in a couple of places in an adult brain (as far as is known). The hippocampus and and one other place I don&amp;#39;t remember.&lt;/p&gt;\n\n&lt;p&gt;I think what the person who asked this was looking for was something more along the lines of &amp;quot;recruitment.&amp;quot;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68r2ug", "flair_text": null, "created": 1347763538.0, "created_utc": 1347759938.0, "num_reports": null}], "score": 15, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 23, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/zxz0g/neural_networks_with_biologically_plausible/", "has_more_comments": false, "name": "t3_zxz0g", "created": 1347749065.0, "url": "http://cogsci.stackexchange.com/q/214/29", "author_flair_text": null, "author": "DevFRus", "created_utc": 1347745465.0, "link_flair_text": null, "media": null, "num_reports": null}, "422": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 21, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;This is the problem:&lt;/p&gt;\n\n&lt;p&gt;You are reading data records off a stream. You don&amp;#39;t know how long the stream is or when it will terminate. You should treat it as a stream of infinite length with elements in random order. Your job is to maintain a current list of maximum top k records as elements are read off the stream, processed, and discarded. How can you do this in O(n) time?&lt;/p&gt;\n\n&lt;p&gt;I remember the solution required a buffer where:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;buffer length = 2 * k\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I believe it was a variation of a divide and conquer algorithm but only goes 1 level deep, thus giving it O(n) complexity.  The result after reading 2 * k records is the right side (above k) will contain an unordered list of top k records.&lt;/p&gt;\n\n&lt;p&gt;You could also do this with a type of min/max heap but that would be O(n log &lt;strong&gt;k&lt;/strong&gt;). That&amp;#39;s not good enough. We want O(n).&lt;/p&gt;\n\n&lt;p&gt;Does anyone know the name of this algorithm and its details? I don&amp;#39;t remember the optimal solution and it&amp;#39;s been driving me nuts.&lt;/p&gt;\n\n&lt;p&gt;edit 1: Forgot, the heap method would be O(n log k). derp.&lt;br/&gt;\nedit 2: n is the number of elements read so far  &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "This is the problem:\n\nYou are reading data records off a stream. You don't know how long the stream is or when it will terminate. You should treat it as a stream of infinite length with elements in random order. Your job is to maintain a current list of maximum top k records as elements are read off the stream, processed, and discarded. How can you do this in O(n) time?\n\nI remember the solution required a buffer where:\n\n    buffer length = 2 * k\n\nI believe it was a variation of a divide and conquer algorithm but only goes 1 level deep, thus giving it O(n) complexity.  The result after reading 2 * k records is the right side (above k) will contain an unordered list of top k records.\n\nYou could also do this with a type of min/max heap but that would be O(n log **k**). That's not good enough. We want O(n).\n \nDoes anyone know the name of this algorithm and its details? I don't remember the optimal solution and it's been driving me nuts.\n\nedit 1: Forgot, the heap method would be O(n log k). derp.  \nedit 2: n is the number of elements read so far  \n", "saved": false, "id": "zwywo", "clicked": false, "title": "I'm trying to remember an O(n) solution for finding the top K elements of an arbitrarily long stream. Anyone know it?", "num_comments": 41, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_zwywo", "children": [], "author": "Workaphobia", "id": "c68fs7j", "parent_id": "t3_zwywo", "score": 0, "approved_by": null, "upvotes": 22, "body": "The heap approach would be O(n log k).\n\nThe standard best solution to the selection problem is the [median-of-medians](http://en.wikipedia.org/wiki/Selection_algorithm#Linear_general_selection_algorithm_-_Median_of_Medians_algorithm) approach. It uses two different kinds of recursive calls, and under analysis it ends up being O(n) rather than O(n log n) or worse.\n\nI haven't thought about how this would be done in the streaming case. But let's say that we only need to find the answer once for every b elements read off the input stream. Then it would take O(k + b) to find the new best k elements after accounting for this additional length-b input. If b is \u03a9(k), then that amortizes to O(n).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The heap approach would be O(n log k).&lt;/p&gt;\n\n&lt;p&gt;The standard best solution to the selection problem is the &lt;a href=\"http://en.wikipedia.org/wiki/Selection_algorithm#Linear_general_selection_algorithm_-_Median_of_Medians_algorithm\"&gt;median-of-medians&lt;/a&gt; approach. It uses two different kinds of recursive calls, and under analysis it ends up being O(n) rather than O(n log n) or worse.&lt;/p&gt;\n\n&lt;p&gt;I haven&amp;#39;t thought about how this would be done in the streaming case. But let&amp;#39;s say that we only need to find the answer once for every b elements read off the input stream. Then it would take O(k + b) to find the new best k elements after accounting for this additional length-b input. If b is \u03a9(k), then that amortizes to O(n).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68fs7j", "flair_text": null, "created": 1347692116.0, "created_utc": 1347688516.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zwywo", "children": [], "author": "admplaceholder", "id": "c68fo0v", "parent_id": "t3_zwywo", "score": 0, "approved_by": null, "upvotes": 8, "body": "What is *n* if this is a potentially unbounded stream? Do you want to keep the top k as you stream in, in time linear in the number of elements you've read in so far?\n\nIf you have the whole list you can do it in O(n) with a variation on quickselect, but that would not generalize to having a stream where you want to keep the top k you've seen so far. The heap solution is the only one I can think of in that case. Although that would be O(n log k), not O(n log n), you can keep a bounded max heap of size k.\n\nEDIT: I think you may be thinking of the quickselect variation, since you mentioned divide and conquer. It's not clear to me how this could be applied to the stream version of this problem.", "edited": 1347688291.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What is &lt;em&gt;n&lt;/em&gt; if this is a potentially unbounded stream? Do you want to keep the top k as you stream in, in time linear in the number of elements you&amp;#39;ve read in so far?&lt;/p&gt;\n\n&lt;p&gt;If you have the whole list you can do it in O(n) with a variation on quickselect, but that would not generalize to having a stream where you want to keep the top k you&amp;#39;ve seen so far. The heap solution is the only one I can think of in that case. Although that would be O(n log k), not O(n log n), you can keep a bounded max heap of size k.&lt;/p&gt;\n\n&lt;p&gt;EDIT: I think you may be thinking of the quickselect variation, since you mentioned divide and conquer. It&amp;#39;s not clear to me how this could be applied to the stream version of this problem.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68fo0v", "flair_text": null, "created": 1347691326.0, "created_utc": 1347687726.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zwywo", "children": [], "author": "Helios423", "id": "c68h68h", "parent_id": "t3_zwywo", "score": 0, "approved_by": null, "upvotes": 4, "body": "Are you really certain there even is a O(n) algorithm for this scenario?\n\nBesides, the heap approach is only O(n log k) if all items need to be added to the heap, i.e. if they're in sorted order and every new item you get is larger than the smallest in the heap. The best case is obviously if the first k elements also happen to be the top k. Than, it would become O(n + k log k).\n\nIf you expect the data to be (mostly) sorted, you can probably come up with a heap/storage-variant that will have O(1) properties for adding a new largest and removing the smallest element (maybe something with a ring-buffer of size k, replacing the smallest with a new largest would be just a single array-store and adjusting the offset).\nSomething like that may be possible for any ordering of the elements, which would allow you to make it O(n) with a bit more buffersize than 1*k, and what you're looking for.\n\nIf the data is mostly random, I wouldn't expect the overhead for that special behavior to be worth it though. Especially for small k, the amount of actual heap-insertions would be fairly low, since most data will be discarded by the initial check with the current kth value.\nSo the constants involved with any optimization, to make keeping track of the current top k come closer to O(1), could easily outweigh just using a basic minheap with O(log k)... At least for smallish k's.\n\nBtw, there is obviously a O(n) solution: just keep track of all elements in a random-access data structure and apply the median-of-medians to it ;) But that would require O(n) space, rather than O(k).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Are you really certain there even is a O(n) algorithm for this scenario?&lt;/p&gt;\n\n&lt;p&gt;Besides, the heap approach is only O(n log k) if all items need to be added to the heap, i.e. if they&amp;#39;re in sorted order and every new item you get is larger than the smallest in the heap. The best case is obviously if the first k elements also happen to be the top k. Than, it would become O(n + k log k).&lt;/p&gt;\n\n&lt;p&gt;If you expect the data to be (mostly) sorted, you can probably come up with a heap/storage-variant that will have O(1) properties for adding a new largest and removing the smallest element (maybe something with a ring-buffer of size k, replacing the smallest with a new largest would be just a single array-store and adjusting the offset).\nSomething like that may be possible for any ordering of the elements, which would allow you to make it O(n) with a bit more buffersize than 1*k, and what you&amp;#39;re looking for.&lt;/p&gt;\n\n&lt;p&gt;If the data is mostly random, I wouldn&amp;#39;t expect the overhead for that special behavior to be worth it though. Especially for small k, the amount of actual heap-insertions would be fairly low, since most data will be discarded by the initial check with the current kth value.\nSo the constants involved with any optimization, to make keeping track of the current top k come closer to O(1), could easily outweigh just using a basic minheap with O(log k)... At least for smallish k&amp;#39;s.&lt;/p&gt;\n\n&lt;p&gt;Btw, there is obviously a O(n) solution: just keep track of all elements in a random-access data structure and apply the median-of-medians to it ;) But that would require O(n) space, rather than O(k).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68h68h", "flair_text": null, "created": 1347705401.0, "created_utc": 1347701801.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zwywo", "children": [], "author": "zirtik", "id": "c68fq7u", "parent_id": "t3_zwywo", "score": 0, "approved_by": null, "upvotes": 2, "body": "The heap solution would have O(n log k) complexity assuming you keep a min/max heap of k elements and the unbounded stream has an upper bound of n elements. What do you mean by n here? Are you rather looking for an O(k) solution?\n\nEDIT: O(k) doesn't actually make sense since you have to at least read the input once, which would be O(n) so I guess I figured what you meant by it. Guess it is bed time for me, sorry.", "edited": 1347689674.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The heap solution would have O(n log k) complexity assuming you keep a min/max heap of k elements and the unbounded stream has an upper bound of n elements. What do you mean by n here? Are you rather looking for an O(k) solution?&lt;/p&gt;\n\n&lt;p&gt;EDIT: O(k) doesn&amp;#39;t actually make sense since you have to at least read the input once, which would be O(n) so I guess I figured what you meant by it. Guess it is bed time for me, sorry.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68fq7u", "flair_text": null, "created": 1347691728.0, "created_utc": 1347688128.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zwywo", "children": [], "author": "zeanoth", "id": "c68iuev", "parent_id": "t3_zwywo", "score": 0, "approved_by": null, "upvotes": 4, "body": "Quoted from the [Partial sorting](http://en.wikipedia.org/wiki/Partial_sorting) wikipedia page\n\n&gt; The linear-time selection algorithm described above can be used to find the k smallest or the k largest elements in worst-case linear time O(n). To find the k smallest elements, find the kth smallest element using the linear-time [median-of-medians selection algorithm](http://en.wikipedia.org/wiki/Selection_algorithm#Linear_general_selection_algorithm_-_Median_of_Medians_algorithm). After that, partition the array with the kth smallest element as pivot. The k smallest elements will be the first k elements.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Quoted from the &lt;a href=\"http://en.wikipedia.org/wiki/Partial_sorting\"&gt;Partial sorting&lt;/a&gt; wikipedia page&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;The linear-time selection algorithm described above can be used to find the k smallest or the k largest elements in worst-case linear time O(n). To find the k smallest elements, find the kth smallest element using the linear-time &lt;a href=\"http://en.wikipedia.org/wiki/Selection_algorithm#Linear_general_selection_algorithm_-_Median_of_Medians_algorithm\"&gt;median-of-medians selection algorithm&lt;/a&gt;. After that, partition the array with the kth smallest element as pivot. The k smallest elements will be the first k elements.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68iuev", "flair_text": null, "created": 1347723437.0, "created_utc": 1347719837.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zwywo", "children": [], "author": "[deleted]", "id": "c68jmym", "parent_id": "t3_zwywo", "score": 0, "approved_by": null, "upvotes": 3, "body": "[deleted]", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68jmym", "flair_text": null, "created": 1347727978.0, "created_utc": 1347724378.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 7, "link_id": "t3_zwywo", "children": [], "author": "flukshun", "id": "c68j6rc", "parent_id": "t3_zwywo", "score": 0, "approved_by": null, "upvotes": 11, "body": "i'm surprised at the complexity of most of the responses...\n\ncomputing the max is O(n). computing the top k maxes is just O(k)*O(n) = O(n) since k is constant. you just, instead of maintaining a max, maintain an array of k maxes. then for each new record you read from the stream, you compare it to each record in the array. if it larger than any of them (k operations), you search the list for the smallest record (k operations) and insert the new record in it's place.\n\nso it's 2 * k operations per record where k is constant. so O(n) for the whole shebang.\n\nor am i missing something?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;i&amp;#39;m surprised at the complexity of most of the responses...&lt;/p&gt;\n\n&lt;p&gt;computing the max is O(n). computing the top k maxes is just O(k)*O(n) = O(n) since k is constant. you just, instead of maintaining a max, maintain an array of k maxes. then for each new record you read from the stream, you compare it to each record in the array. if it larger than any of them (k operations), you search the list for the smallest record (k operations) and insert the new record in it&amp;#39;s place.&lt;/p&gt;\n\n&lt;p&gt;so it&amp;#39;s 2 * k operations per record where k is constant. so O(n) for the whole shebang.&lt;/p&gt;\n\n&lt;p&gt;or am i missing something?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68j6rc", "flair_text": null, "created": 1347725488.0, "created_utc": 1347721888.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zwywo", "children": [], "author": "breandan", "id": "c68h2f0", "parent_id": "t3_zwywo", "score": 0, "approved_by": null, "upvotes": 1, "body": "If record length (number of bits to represent a single record) is bounded, we can construct a monotonic minimal perfect hash function over the range of record values which will remain totally sorted in O(n). Equivalent entries are overwritten. Space is disregarded.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If record length (number of bits to represent a single record) is bounded, we can construct a monotonic minimal perfect hash function over the range of record values which will remain totally sorted in O(n). Equivalent entries are overwritten. Space is disregarded.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68h2f0", "flair_text": null, "created": 1347704034.0, "created_utc": 1347700434.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zwywo", "children": [], "author": "pacala", "id": "c68hlb2", "parent_id": "t3_zwywo", "score": 0, "approved_by": null, "upvotes": 1, "body": "As stated, the problem can be solved via a min/max heap. You may be thinking of the top-k aggregate query, where instead of the top-k elements by value, the query returns the top-k elements by number of occurrence in the stream. The latter problem has a nice probabilistic solution.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As stated, the problem can be solved via a min/max heap. You may be thinking of the top-k aggregate query, where instead of the top-k elements by value, the query returns the top-k elements by number of occurrence in the stream. The latter problem has a nice probabilistic solution.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68hlb2", "flair_text": null, "created": 1347712618.0, "created_utc": 1347709018.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_zwywo", "children": [], "author": "moor-GAYZ", "id": "c68hsz6", "parent_id": "t3_zwywo", "score": 0, "approved_by": null, "upvotes": 3, "body": "Hmmm....\n\nSo, suppose you have a buffer of k elements, then add k more from the input stream, then find the median in O(k) (using quickselect + median of medians) and drop the lower half of the buffer in O(k) again. So you shrink it back to k elements in O(k), and only need to do it once every k elements, so the amortized complexity is O(1) \\* O(n).\n\nEDIT: that's basically what [Workaphobia said](http://www.reddit.com/r/compsci/comments/zwywo/im_trying_to_remember_an_on_solution_for_finding/c68fs7j).", "edited": 1347712139.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hmmm....&lt;/p&gt;\n\n&lt;p&gt;So, suppose you have a buffer of k elements, then add k more from the input stream, then find the median in O(k) (using quickselect + median of medians) and drop the lower half of the buffer in O(k) again. So you shrink it back to k elements in O(k), and only need to do it once every k elements, so the amortized complexity is O(1) * O(n).&lt;/p&gt;\n\n&lt;p&gt;EDIT: that&amp;#39;s basically what &lt;a href=\"http://www.reddit.com/r/compsci/comments/zwywo/im_trying_to_remember_an_on_solution_for_finding/c68fs7j\"&gt;Workaphobia said&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68hsz6", "flair_text": null, "created": 1347715125.0, "created_utc": 1347711525.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zwywo", "children": [], "author": "hay_guise", "id": "c68jozk", "parent_id": "t3_zwywo", "score": 0, "approved_by": null, "upvotes": 2, "body": "here's a different solution than others have suggested, which may be faster for your case. if you try to use it every time a new element shows up, it'll be slower (O(k n)), but if you use it periodically, it'll take O(sk + sm), where s is number of snapshots, and m is the number of samples between snapshots, so, if m is about as large as k, or larger than k, that's O(sm) = O(n).\n\nevery time you take a snapshot:\n\nignore the part of the stream before the last snapshot\n\nappend the previous top k to the part since the last snapshot.\n\nuse quickselect (average case O(n)) or median-of-medians based select (worst case O(n), but typically slower) to find the kth largest element.\n\nfilter out everything smaller than k. (linear time)\n\nthis should take O(m+k) per snapshot.\n\nEDIT: you can do this in 2k space, if you take a snapshot every k samples.", "edited": 1347728386.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;here&amp;#39;s a different solution than others have suggested, which may be faster for your case. if you try to use it every time a new element shows up, it&amp;#39;ll be slower (O(k n)), but if you use it periodically, it&amp;#39;ll take O(sk + sm), where s is number of snapshots, and m is the number of samples between snapshots, so, if m is about as large as k, or larger than k, that&amp;#39;s O(sm) = O(n).&lt;/p&gt;\n\n&lt;p&gt;every time you take a snapshot:&lt;/p&gt;\n\n&lt;p&gt;ignore the part of the stream before the last snapshot&lt;/p&gt;\n\n&lt;p&gt;append the previous top k to the part since the last snapshot.&lt;/p&gt;\n\n&lt;p&gt;use quickselect (average case O(n)) or median-of-medians based select (worst case O(n), but typically slower) to find the kth largest element.&lt;/p&gt;\n\n&lt;p&gt;filter out everything smaller than k. (linear time)&lt;/p&gt;\n\n&lt;p&gt;this should take O(m+k) per snapshot.&lt;/p&gt;\n\n&lt;p&gt;EDIT: you can do this in 2k space, if you take a snapshot every k samples.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68jozk", "flair_text": null, "created": 1347728275.0, "created_utc": 1347724675.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zwywo", "children": [], "author": "55-68", "id": "c68kdkg", "parent_id": "t3_zwywo", "score": 0, "approved_by": null, "upvotes": 1, "body": "If you used a heap specialized to give you the lowest of the k elements in constant time, then you could rely on not needing to call the update function very often, and I don't know how fast that would be.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you used a heap specialized to give you the lowest of the k elements in constant time, then you could rely on not needing to call the update function very often, and I don&amp;#39;t know how fast that would be.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68kdkg", "flair_text": null, "created": 1347731726.0, "created_utc": 1347728126.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zwywo", "children": [], "author": "zhay", "id": "c68kly5", "parent_id": "t3_zwywo", "score": 0, "approved_by": null, "upvotes": 1, "body": "The problem is called [partial sorting](http://en.wikipedia.org/wiki/Partial_sorting).  Many popular solutions are on that page.", "edited": 1347729486.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The problem is called &lt;a href=\"http://en.wikipedia.org/wiki/Partial_sorting\"&gt;partial sorting&lt;/a&gt;.  Many popular solutions are on that page.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68kly5", "flair_text": null, "created": 1347732842.0, "created_utc": 1347729242.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zwywo", "children": [], "author": "pudquick", "id": "c68mdjq", "parent_id": "t3_zwywo", "score": 0, "approved_by": null, "upvotes": 1, "body": "Looked at one of these?\n\nhttp://en.wikipedia.org/wiki/Selection_algorithm\n\nhttp://en.wikipedia.org/wiki/Partial_sorting", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Looked at one of these?&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Selection_algorithm\"&gt;http://en.wikipedia.org/wiki/Selection_algorithm&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Partial_sorting\"&gt;http://en.wikipedia.org/wiki/Partial_sorting&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68mdjq", "flair_text": null, "created": 1347741233.0, "created_utc": 1347737633.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_zwywo", "children": [], "author": "chiisana", "id": "c68mm86", "parent_id": "t3_zwywo", "score": 0, "approved_by": null, "upvotes": 3, "body": "A related question that doesn't really deserve a new thread...\n\nIn terms of the Big-O notation, how fast are native min() and max() function considered for an array of arbitrary size?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A related question that doesn&amp;#39;t really deserve a new thread...&lt;/p&gt;\n\n&lt;p&gt;In terms of the Big-O notation, how fast are native min() and max() function considered for an array of arbitrary size?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68mm86", "flair_text": null, "created": 1347742355.0, "created_utc": 1347738755.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_zwywo", "children": [], "author": "Tagedieb", "id": "c68gque", "parent_id": "t3_zwywo", "score": 0, "approved_by": null, "upvotes": 4, "body": "Put each incoming item in a rb-tree (such as a set in c++) and remove the last item from it (if it has k+1 items). O(n log k).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Put each incoming item in a rb-tree (such as a set in c++) and remove the last item from it (if it has k+1 items). O(n log k).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68gque", "flair_text": null, "created": 1347700261.0, "created_utc": 1347696661.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_zwywo", "children": [], "author": "ThrustVectoring", "id": "c68grer", "parent_id": "t3_zwywo", "score": 0, "approved_by": null, "upvotes": 2, "body": "The really important part is how much time it takes to evaluate one additional element, given that you are looking for the top k elements. O(n) isn't the important part, but O(k), so that you can scale it to arbitrarily large lists of the top k elements without bogging down.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The really important part is how much time it takes to evaluate one additional element, given that you are looking for the top k elements. O(n) isn&amp;#39;t the important part, but O(k), so that you can scale it to arbitrarily large lists of the top k elements without bogging down.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68grer", "flair_text": null, "created": 1347700431.0, "created_utc": 1347696831.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zwywo", "children": [], "author": "punkmonk", "id": "c68i1px", "parent_id": "t3_zwywo", "score": 0, "approved_by": null, "upvotes": 2, "body": "Check this paper:\nhttp://cim.mcgill.ca/~yogesh/publications/crv2009.pdf\n\nto maximise the probability of picking the top k elements, you scan through the first n/(k e^(1/k) ) elements, find the max, and then pick the first k elements exceeds this threshold.", "edited": 1347717053.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Check this paper:\n&lt;a href=\"http://cim.mcgill.ca/%7Eyogesh/publications/crv2009.pdf\"&gt;http://cim.mcgill.ca/~yogesh/publications/crv2009.pdf&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;to maximise the probability of picking the top k elements, you scan through the first n/(k e&lt;sup&gt;1/k&lt;/sup&gt; ) elements, find the max, and then pick the first k elements exceeds this threshold.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68i1px", "flair_text": null, "created": 1347717552.0, "created_utc": 1347713952.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_zwywo", "children": [], "author": "shriphani", "id": "c68jxrr", "parent_id": "t3_zwywo", "score": 0, "approved_by": null, "upvotes": 3, "body": "Heap method is the correct approach.The algorithm has to be worse than linear since:\n\n-&gt; You have to look @ every element in the stream (so linear at least)\n-&gt; The result isn't 1 element, it is a bunch of them.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Heap method is the correct approach.The algorithm has to be worse than linear since:&lt;/p&gt;\n\n&lt;p&gt;-&amp;gt; You have to look @ every element in the stream (so linear at least)\n-&amp;gt; The result isn&amp;#39;t 1 element, it is a bunch of them.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68jxrr", "flair_text": null, "created": 1347729530.0, "created_utc": 1347725930.0, "num_reports": null}], "score": 39, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 60, "hidden": false, "thumbnail": "", "edited": 1347717112.0, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/zwywo/im_trying_to_remember_an_on_solution_for_finding/", "has_more_comments": false, "name": "t3_zwywo", "created": 1347690682.0, "url": "http://www.reddit.com/r/compsci/comments/zwywo/im_trying_to_remember_an_on_solution_for_finding/", "author_flair_text": null, "author": "unholyalliance", "created_utc": 1347687082.0, "link_flair_text": null, "media": null, "num_reports": null}, "423": {"domain": "hpl.hp.com", "link_flair_class": null, "banned_by": null, "downvotes": 0, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "zx0ov", "clicked": false, "title": "Threads Cannot be Implemented as a Library [PDF]", "num_comments": 0, "comments": [], "score": 5, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 5, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/zx0ov/threads_cannot_be_implemented_as_a_library_pdf/", "has_more_comments": false, "name": "t3_zx0ov", "created": 1347693775.0, "url": "http://www.hpl.hp.com/techreports/2004/HPL-2004-209.pdf", "author_flair_text": null, "author": "vridette", "created_utc": 1347690175.0, "link_flair_text": null, "media": null, "num_reports": null}, "424": {"domain": "techcrunch.com", "link_flair_class": null, "banned_by": null, "downvotes": 10, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "zwu3c", "clicked": false, "title": "Learn To Code, Get A Job: Treehouse Offers Free Courses To 2,500 College Students", "num_comments": 11, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_zwu3c", "children": [], "author": "N0_Context", "id": "c68guj0", "parent_id": "t3_zwu3c", "score": 0, "approved_by": null, "upvotes": 5, "body": "Thinks education is too expensive, requires college enrollment to participate in program.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Thinks education is too expensive, requires college enrollment to participate in program.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68guj0", "flair_text": null, "created": 1347701398.0, "created_utc": 1347697798.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_zwu3c", "children": [], "author": "furiousC0D3", "id": "c68v47z", "parent_id": "t3_zwu3c", "score": 0, "approved_by": null, "upvotes": 3, "body": "This is bullcrap. There are NO jobs for programmers and most of the junior programmer that apply, don't even know how to program a simple buzzfuzz program, even the ones who has a master in computer science. They are selling you a broken dream like kids hoping one day he'll be a rap star, pop star or a famous actor.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is bullcrap. There are NO jobs for programmers and most of the junior programmer that apply, don&amp;#39;t even know how to program a simple buzzfuzz program, even the ones who has a master in computer science. They are selling you a broken dream like kids hoping one day he&amp;#39;ll be a rap star, pop star or a famous actor.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68v47z", "flair_text": null, "created": 1347785595.0, "created_utc": 1347781995.0, "num_reports": null}], "score": 4, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 14, "hidden": false, "thumbnail": "", "edited": false, "modhash": "u48jcspzqp2c3003389d9a1d98fd7fffd02851d8bf370eb7ad", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/zwu3c/learn_to_code_get_a_job_treehouse_offers_free/", "has_more_comments": false, "name": "t3_zwu3c", "created": 1347683636.0, "url": "http://techcrunch.com/2012/09/14/learn-to-code-get-a-job-treehouse-offers-free-courses-to-2500-college-students/", "author_flair_text": null, "author": "ghanks3", "created_utc": 1347680036.0, "link_flair_text": null, "media": null, "num_reports": null}, "425": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 6, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Given two sorted arrays, one of size n, and the other of size m+n whose first m elements are sorted and it has n extra space, how to merge them inplace in the second array ? &lt;/p&gt;\n\n&lt;p&gt;Or, another variation could be (which the C++ STL provides as inplace_merge), given a single array with size n+m [which are given as well] (first n sorted elements of the first array, next m elements of the second array), how do I sort it in-place without using external temporary array ?&lt;/p&gt;\n\n&lt;p&gt;Could someone explain the basic idea behind a linear time inplace merging algorithm simply or provide some hints for it ?&lt;/p&gt;\n\n&lt;p&gt;Thanks;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Given two sorted arrays, one of size n, and the other of size m+n whose first m elements are sorted and it has n extra space, how to merge them inplace in the second array ? \n\nOr, another variation could be (which the C++ STL provides as inplace_merge), given a single array with size n+m [which are given as well] (first n sorted elements of the first array, next m elements of the second array), how do I sort it in-place without using external temporary array ?\n\nCould someone explain the basic idea behind a linear time inplace merging algorithm simply or provide some hints for it ?\n\nThanks;", "saved": false, "id": "zvozv", "clicked": false, "title": "How to inplace merge 2 arrays in linear time ?", "num_comments": 32, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_zvozv", "children": [], "author": "frankster", "id": "c684bm8", "parent_id": "t3_zvozv", "score": 0, "approved_by": null, "upvotes": 14, "body": "This sounds like a homework question the way you ask it.\n\nOff the top of my head you need have three pointers / index variables.\n\nOne starts at position m+n of array m+n.\n\nOne starts at position m of array m+n.\n\nOne starts at the end of array n.\n\nfor each iteration, you compare the item at the m and n pointers, see which one goes last, then put that at the m+n pointer and decrement the appropriate two pointers. and repeat until all pointers are at 0 (the last two will hit zero at the same time).\n\nthis is guaranteed to work because if all elements in n came after m, then there is room for all of n at the end of the array. And if all elements of m came before any elements of n, well you would have moved them all out of the way before you needed to put any from n in.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This sounds like a homework question the way you ask it.&lt;/p&gt;\n\n&lt;p&gt;Off the top of my head you need have three pointers / index variables.&lt;/p&gt;\n\n&lt;p&gt;One starts at position m+n of array m+n.&lt;/p&gt;\n\n&lt;p&gt;One starts at position m of array m+n.&lt;/p&gt;\n\n&lt;p&gt;One starts at the end of array n.&lt;/p&gt;\n\n&lt;p&gt;for each iteration, you compare the item at the m and n pointers, see which one goes last, then put that at the m+n pointer and decrement the appropriate two pointers. and repeat until all pointers are at 0 (the last two will hit zero at the same time).&lt;/p&gt;\n\n&lt;p&gt;this is guaranteed to work because if all elements in n came after m, then there is room for all of n at the end of the array. And if all elements of m came before any elements of n, well you would have moved them all out of the way before you needed to put any from n in.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c684bm8", "flair_text": null, "created": 1347641848.0, "created_utc": 1347638248.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zvozv", "children": [], "author": "chiisana", "id": "c684dlt", "parent_id": "t3_zvozv", "score": 0, "approved_by": null, "upvotes": 3, "body": "I'm not a compsci student; I work more on HCI rather than algorithms, so I may be wrong on some of these.\n\nFor both of them, I see some sort of swapping thing happening.  i.e.:\n\n    function swap(a, b)\n        var tmp;\n        temp = a;\n        a = b;\n        b = a;\n\nUse appropriate pointers/references as needed, pass array_a[i] and array_b[j] to swap them. \n\nWhat you'd then do is (for either one of them) probably something like iterate through each index of the bigger array, and check if swapping is  required against each index of the smaller array. When null is found, swap as well.\n\ni.e. (VERY poorly written and unoptimized code):\n\n    for (var i = 0; i &lt; larger.length; i++)\n    {\n          for (var j = 0; j &lt; smaller.length; j++)\n          {\n                if ((larger[i] &lt; smaller[j]) OR larger[i] == null) \n               { \n                   swap(larger[i], smaller[j]); \n                   // break out for loop if possible, since it is sorted smaller[j] will not be bigger than smaller[j+1] \n               }\n          }\n     }\n\nThere are probably ways to optimize it, but they're not popping to mind right away (9am is too early).  But I think that's how I'd approach this problem.  If you need it in linear time, then it will be more difficult...", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not a compsci student; I work more on HCI rather than algorithms, so I may be wrong on some of these.&lt;/p&gt;\n\n&lt;p&gt;For both of them, I see some sort of swapping thing happening.  i.e.:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;function swap(a, b)\n    var tmp;\n    temp = a;\n    a = b;\n    b = a;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Use appropriate pointers/references as needed, pass array_a[i] and array_b[j] to swap them. &lt;/p&gt;\n\n&lt;p&gt;What you&amp;#39;d then do is (for either one of them) probably something like iterate through each index of the bigger array, and check if swapping is  required against each index of the smaller array. When null is found, swap as well.&lt;/p&gt;\n\n&lt;p&gt;i.e. (VERY poorly written and unoptimized code):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;for (var i = 0; i &amp;lt; larger.length; i++)\n{\n      for (var j = 0; j &amp;lt; smaller.length; j++)\n      {\n            if ((larger[i] &amp;lt; smaller[j]) OR larger[i] == null) \n           { \n               swap(larger[i], smaller[j]); \n               // break out for loop if possible, since it is sorted smaller[j] will not be bigger than smaller[j+1] \n           }\n      }\n }\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;There are probably ways to optimize it, but they&amp;#39;re not popping to mind right away (9am is too early).  But I think that&amp;#39;s how I&amp;#39;d approach this problem.  If you need it in linear time, then it will be more difficult...&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c684dlt", "flair_text": null, "created": 1347642067.0, "created_utc": 1347638467.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zvozv", "children": [], "author": "grayvedigga", "id": "c684mre", "parent_id": "t3_zvozv", "score": 0, "approved_by": null, "upvotes": 1, "body": "start with merging two sorted arrays into a new array.  Can you see how to perform that in linear (`O(m+n)`) time?  This problem is just a slight twist on that.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;start with merging two sorted arrays into a new array.  Can you see how to perform that in linear (&lt;code&gt;O(m+n)&lt;/code&gt;) time?  This problem is just a slight twist on that.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c684mre", "flair_text": null, "created": 1347643076.0, "created_utc": 1347639476.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zvozv", "children": [], "author": "keten", "id": "c684mz2", "parent_id": "t3_zvozv", "score": 0, "approved_by": null, "upvotes": 1, "body": "frankster's solution works well for your first question, but I don't believe there is a linear time algorithm for merging in the variation you give.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;frankster&amp;#39;s solution works well for your first question, but I don&amp;#39;t believe there is a linear time algorithm for merging in the variation you give.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c684mz2", "flair_text": null, "created": 1347643098.0, "created_utc": 1347639498.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zvozv", "children": [], "author": "cyancynic", "id": "c684qjt", "parent_id": "t3_zvozv", "score": 0, "approved_by": null, "upvotes": 1, "body": "It is basically bubble sort but instead of comparing n and n+1 you compare a[i] and b[j]. Two cases are a first and b first for anything step. On a first bump I. On b first swap a[i], b[j] and bump I. Repeat until b exhausted (merging into a). Something like that. Off the top of my head and no paper to try it (on my phone)", "edited": 1347640232.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It is basically bubble sort but instead of comparing n and n+1 you compare a[i] and b[j]. Two cases are a first and b first for anything step. On a first bump I. On b first swap a[i], b[j] and bump I. Repeat until b exhausted (merging into a). Something like that. Off the top of my head and no paper to try it (on my phone)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c684qjt", "flair_text": null, "created": 1347643485.0, "created_utc": 1347639885.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zvozv", "children": [], "author": "bpross", "id": "c6853sh", "parent_id": "t3_zvozv", "score": 0, "approved_by": null, "upvotes": 2, "body": "Sounds like you are trying to do the merge, from merge sort http://en.wikipedia.org/wiki/Merge_sort", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Sounds like you are trying to do the merge, from merge sort &lt;a href=\"http://en.wikipedia.org/wiki/Merge_sort\"&gt;http://en.wikipedia.org/wiki/Merge_sort&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6853sh", "flair_text": null, "created": 1347644876.0, "created_utc": 1347641276.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zvozv", "children": [], "author": "jkff", "id": "c685hy6", "parent_id": "t3_zvozv", "score": 0, "approved_by": null, "upvotes": 2, "body": "By the way, a much more interesting problem is when you have an array where the first n elements are sorted and the next m elements are sorted, and you want to merge them in-place to give an n+m sorted array.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;By the way, a much more interesting problem is when you have an array where the first n elements are sorted and the next m elements are sorted, and you want to merge them in-place to give an n+m sorted array.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c685hy6", "flair_text": null, "created": 1347646343.0, "created_utc": 1347642743.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zvozv", "children": [], "author": "JAPH", "id": "c6875yi", "parent_id": "t3_zvozv", "score": 0, "approved_by": null, "upvotes": 1, "body": "In-place merge sort?  Smells like homework.\n\nAnyway, [this](http://www.diku.dk/hjemmesider/ansatte/jyrki/Paper/mergesort_NJC.ps) walks through how it's done, with some variations and analysis.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In-place merge sort?  Smells like homework.&lt;/p&gt;\n\n&lt;p&gt;Anyway, &lt;a href=\"http://www.diku.dk/hjemmesider/ansatte/jyrki/Paper/mergesort_NJC.ps\"&gt;this&lt;/a&gt; walks through how it&amp;#39;s done, with some variations and analysis.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6875yi", "flair_text": null, "created": 1347652492.0, "created_utc": 1347648892.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zvozv", "children": [], "author": "seanbow", "id": "c687dpn", "parent_id": "t3_zvozv", "score": 0, "approved_by": null, "upvotes": 1, "body": "Maybe not the most efficient solution but it would work... First, in the (m+n) size array, copy the first m elements to the final m places in the array. Then you can do a usual merge of the n-sized array and the final m places in the (n+m) sized array into the beginning of the (m+n) sized array and nothing will need to change. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Maybe not the most efficient solution but it would work... First, in the (m+n) size array, copy the first m elements to the final m places in the array. Then you can do a usual merge of the n-sized array and the final m places in the (n+m) sized array into the beginning of the (m+n) sized array and nothing will need to change. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c687dpn", "flair_text": null, "created": 1347653257.0, "created_utc": 1347649657.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zvozv", "children": [], "author": "pamplemouse", "id": "c6894fd", "parent_id": "t3_zvozv", "score": 0, "approved_by": null, "upvotes": 1, "body": "In your second variation, the STL's inplace_merge either uses temporary storage to sort in O(n), or it uses no extra storage to sort in O(n lg n). Your question implies you could do it in O(n) w/ no extra storage. I wasted several brain cycles trying to solve that before [looking it up.](www.cplusplus.com/reference/algorithm/inplace_merge/)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In your second variation, the STL&amp;#39;s inplace_merge either uses temporary storage to sort in O(n), or it uses no extra storage to sort in O(n lg n). Your question implies you could do it in O(n) w/ no extra storage. I wasted several brain cycles trying to solve that before [looking it up.](&lt;a href=\"http://www.cplusplus.com/reference/algorithm/inplace_merge/\"&gt;www.cplusplus.com/reference/algorithm/inplace_merge/&lt;/a&gt;)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6894fd", "flair_text": null, "created": 1347659713.0, "created_utc": 1347656113.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zvozv", "children": [], "author": "Wiremite", "id": "c689w3g", "parent_id": "t3_zvozv", "score": 0, "approved_by": null, "upvotes": 1, "body": "Heapsort but its O(nlog(n))", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Heapsort but its O(nlog(n))&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c689w3g", "flair_text": null, "created": 1347662710.0, "created_utc": 1347659110.0, "num_reports": null}], "score": 3, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 9, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/zvozv/how_to_inplace_merge_2_arrays_in_linear_time/", "has_more_comments": false, "name": "t3_zvozv", "created": 1347639918.0, "url": "http://www.reddit.com/r/compsci/comments/zvozv/how_to_inplace_merge_2_arrays_in_linear_time/", "author_flair_text": null, "author": "xander7b", "created_utc": 1347636318.0, "link_flair_text": null, "media": null, "num_reports": null}, "426": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 13, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;The problem is as follows:&lt;/p&gt;\n\n&lt;p&gt;Model a DFA such that it accepts all binary strings that begin with a 1, and are divisible by 5, reading right to left. &lt;/p&gt;\n\n&lt;p&gt;i.e. 101 is an acceptable answer but 0101 is not. &lt;/p&gt;\n\n&lt;p&gt;I spent an exorbitant amount of time on this problem until I reached what I thought was a good solution to it:&lt;/p&gt;\n\n&lt;p&gt;I constructed 5 machines (0%5, 1%5, 2%5, 3%5, 4%5) that when reached would step into another of the 5 machines depending on a &amp;#39;clock&amp;#39; built on each of these machines. This corresponded to the number being added since for every bit it can be said to add either 2,4,8, or 6 in that order - repeated.&lt;/p&gt;\n\n&lt;p&gt;Regardless, my approach &lt;em&gt;works&lt;/em&gt;. What I can&amp;#39;t get my head around is how this could be done in DFA with only 5 states - which is apparently what the answer is. I&amp;#39;m awaiting my professor to post his solution to it but at the moment all I can think of is that his solution is wrong or he actually composed one that examines the data left to right which is an entirely more simplistic problem. &lt;/p&gt;\n\n&lt;p&gt;If anyone has any insight into this, I would love to hear how this is solved in 5 states.&lt;/p&gt;\n\n&lt;p&gt;11001000 (200) is a good number to test if your DFA works as it is not a number divisible by 5 if read the other way and goes into the case where a simple method of solving the problem starts to unravel.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "The problem is as follows:\n\nModel a DFA such that it accepts all binary strings that begin with a 1, and are divisible by 5, reading right to left. \n\ni.e. 101 is an acceptable answer but 0101 is not. \n\nI spent an exorbitant amount of time on this problem until I reached what I thought was a good solution to it:\n\nI constructed 5 machines (0%5, 1%5, 2%5, 3%5, 4%5) that when reached would step into another of the 5 machines depending on a 'clock' built on each of these machines. This corresponded to the number being added since for every bit it can be said to add either 2,4,8, or 6 in that order - repeated.\n\nRegardless, my approach *works*. What I can't get my head around is how this could be done in DFA with only 5 states - which is apparently what the answer is. I'm awaiting my professor to post his solution to it but at the moment all I can think of is that his solution is wrong or he actually composed one that examines the data left to right which is an entirely more simplistic problem. \n\nIf anyone has any insight into this, I would love to hear how this is solved in 5 states.\n\n11001000 (200) is a good number to test if your DFA works as it is not a number divisible by 5 if read the other way and goes into the case where a simple method of solving the problem starts to unravel.\n\n", "saved": false, "id": "zv6sg", "clicked": false, "title": "DFA that accepts all binary strings divisible by 5.", "num_comments": 52, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_zv6sg", "children": [], "author": "Gro-Tsen", "id": "c6819hc", "parent_id": "t3_zv6sg", "score": 0, "approved_by": null, "upvotes": 13, "body": "**Edit**: I had misread OP's problem as reading from left-to-right instead of right-to-left.  I answer the right-to-left problem in a grandchild of this post.\n\nLet's start by leaving aside this bizarre constraint that the number should start with a 1.  Then you can test divisibility by 5 using a 5-state DFA as follows: the 5 states are labeled by the 5 possible congruence classes of the number (as read so far) mod 5, i.e., 0, 1, 2, 3, 4, with 0 being both the initial and the only accepting (final) state, and state k has a transition to state 2k that is labeled 0 and to 2k+1 that is labeled 1 (here 2k and 2k+1 are computed mod 5): e.g., state 3 has a transition to state 1 that is labeled 0 and to state 2 that is labeled 1 because 2\u00d73\u22611 mod 5 and 2\u00d73+1\u22612 mod 5.\n\nThis DFA computes the congruence mod 5 of the number as you read it from left to right: adding a binary digit on the right (i.e., reading a new digit) multiplies the number by 2 and adds 0 or 1 according to that digit, so the DFA computes the congruence as it goes along.\n\nNow you have this bizarre constraint that the number should start with a 1.  For this you need to alter the previous machine a bit: create a new state, let's call it V (for \"void\"), which is the initial state instead of 0, and V only has a transition to state 1 labeled 1, no transition labeled 0 (well, depending on your definition of a DFA, it may or may not be permitted to have no outgoing transition: if it is not, add yet another state F, for \"fail\", with a transition from V to F labeled 0, and transitions from F to F labeled 0 and 1; the state F is non-accepting, of course).  This uses 6 (or 7) states.  It is not hard to show that you can't do better, because there are indeed 7 different classes of prefixes (witnessed by the empy string (for V), \"0\" (for F), \"1\" (for 1), \"10\" (for 2), \"11\" (for 3), \"100\" (for 4) and \"101\" (for 5)) which lead to different behaviors on future strings, so they *must* correspond to different states: so 6/7 states are required and the automaton I described is minimal.\n\nPS: Just for fun, [this regexp](http://www.madore.org/~david/weblog/2011-04.html#d.2011-04-25.1871) matches the multiples of 7 written in base 10.", "edited": 1347647801.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;strong&gt;Edit&lt;/strong&gt;: I had misread OP&amp;#39;s problem as reading from left-to-right instead of right-to-left.  I answer the right-to-left problem in a grandchild of this post.&lt;/p&gt;\n\n&lt;p&gt;Let&amp;#39;s start by leaving aside this bizarre constraint that the number should start with a 1.  Then you can test divisibility by 5 using a 5-state DFA as follows: the 5 states are labeled by the 5 possible congruence classes of the number (as read so far) mod 5, i.e., 0, 1, 2, 3, 4, with 0 being both the initial and the only accepting (final) state, and state k has a transition to state 2k that is labeled 0 and to 2k+1 that is labeled 1 (here 2k and 2k+1 are computed mod 5): e.g., state 3 has a transition to state 1 that is labeled 0 and to state 2 that is labeled 1 because 2\u00d73\u22611 mod 5 and 2\u00d73+1\u22612 mod 5.&lt;/p&gt;\n\n&lt;p&gt;This DFA computes the congruence mod 5 of the number as you read it from left to right: adding a binary digit on the right (i.e., reading a new digit) multiplies the number by 2 and adds 0 or 1 according to that digit, so the DFA computes the congruence as it goes along.&lt;/p&gt;\n\n&lt;p&gt;Now you have this bizarre constraint that the number should start with a 1.  For this you need to alter the previous machine a bit: create a new state, let&amp;#39;s call it V (for &amp;quot;void&amp;quot;), which is the initial state instead of 0, and V only has a transition to state 1 labeled 1, no transition labeled 0 (well, depending on your definition of a DFA, it may or may not be permitted to have no outgoing transition: if it is not, add yet another state F, for &amp;quot;fail&amp;quot;, with a transition from V to F labeled 0, and transitions from F to F labeled 0 and 1; the state F is non-accepting, of course).  This uses 6 (or 7) states.  It is not hard to show that you can&amp;#39;t do better, because there are indeed 7 different classes of prefixes (witnessed by the empy string (for V), &amp;quot;0&amp;quot; (for F), &amp;quot;1&amp;quot; (for 1), &amp;quot;10&amp;quot; (for 2), &amp;quot;11&amp;quot; (for 3), &amp;quot;100&amp;quot; (for 4) and &amp;quot;101&amp;quot; (for 5)) which lead to different behaviors on future strings, so they &lt;em&gt;must&lt;/em&gt; correspond to different states: so 6/7 states are required and the automaton I described is minimal.&lt;/p&gt;\n\n&lt;p&gt;PS: Just for fun, &lt;a href=\"http://www.madore.org/%7Edavid/weblog/2011-04.html#d.2011-04-25.1871\"&gt;this regexp&lt;/a&gt; matches the multiples of 7 written in base 10.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6819hc", "flair_text": null, "created": 1347625450.0, "created_utc": 1347621850.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zv6sg", "children": [], "author": "zBard", "id": "c689892", "parent_id": "t3_zv6sg", "score": 0, "approved_by": null, "upvotes": 4, "body": "A six state automata which does the trick : http://i.imgur.com/ay6lR.png .\n\nNote: It accepts an empty string.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A six state automata which does the trick : &lt;a href=\"http://i.imgur.com/ay6lR.png\"&gt;http://i.imgur.com/ay6lR.png&lt;/a&gt; .&lt;/p&gt;\n\n&lt;p&gt;Note: It accepts an empty string.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c689892", "flair_text": null, "created": 1347660127.0, "created_utc": 1347656527.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_zv6sg", "children": [], "author": "kops", "id": "c67zv2p", "parent_id": "t3_zv6sg", "score": 0, "approved_by": null, "upvotes": 4, "body": "I can confirm that he (or maybe you?) is mixing up rights and lefts. Left to right can be done in 5 states pretty easily; right to left takes a minimum of 20 (which it sounds like your approach manages).\n\nThere should be a more succinct reason why, but at the very least you could apply a [DFA minimization algorithm](http://en.wikipedia.org/wiki/DFA_minimization) to your DFA and find that it is, in fact, the smallest DFA which accepts that language.\n\nEDIT: Just realized that the restriction that the first digit can't be a 0 probably puts you in at more than 20 states... probably 24?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I can confirm that he (or maybe you?) is mixing up rights and lefts. Left to right can be done in 5 states pretty easily; right to left takes a minimum of 20 (which it sounds like your approach manages).&lt;/p&gt;\n\n&lt;p&gt;There should be a more succinct reason why, but at the very least you could apply a &lt;a href=\"http://en.wikipedia.org/wiki/DFA_minimization\"&gt;DFA minimization algorithm&lt;/a&gt; to your DFA and find that it is, in fact, the smallest DFA which accepts that language.&lt;/p&gt;\n\n&lt;p&gt;EDIT: Just realized that the restriction that the first digit can&amp;#39;t be a 0 probably puts you in at more than 20 states... probably 24?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67zv2p", "flair_text": null, "created": 1347610267.0, "created_utc": 1347606667.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 10, "link_id": "t3_zv6sg", "children": [], "author": "HansWurst121", "id": "c67zuau", "parent_id": "t3_zv6sg", "score": 0, "approved_by": null, "upvotes": 9, "body": "~~When you can't do your homework on your own then at least learn to google...~~\n\nOK sorry I was an ass.", "edited": 1347610580.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;del&gt;When you can&amp;#39;t do your homework on your own then at least learn to google...&lt;/del&gt;&lt;/p&gt;\n\n&lt;p&gt;OK sorry I was an ass.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67zuau", "flair_text": null, "created": 1347610108.0, "created_utc": 1347606508.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zv6sg", "children": [], "author": "kachilous", "id": "c681tx5", "parent_id": "t3_zv6sg", "score": 0, "approved_by": null, "upvotes": 1, "body": "Do you go to ucf?\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Do you go to ucf?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c681tx5", "flair_text": null, "created": 1347630244.0, "created_utc": 1347626644.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zv6sg", "children": [], "author": "dpitch40", "id": "c685q56", "parent_id": "t3_zv6sg", "score": 0, "approved_by": null, "upvotes": 1, "body": "I think you need 20 states for basic right-to-left. You are scanning the digits from right to left (least significant to most significant); you need to keep track of the current modulus of the number as it is scanned so far, and the modulus of the power of 2 corresponding to the next binary place to be scanned. The basic equation to use here as you scan the digits is:\n\nnext modulus = (inputDigit * modulusOfNextPowerOf2 + currentModulus) % 5.\n\nSo, for instance, in reading 19 (10011 in binary), I'll represent the current scanning position with an underscore.\n10011_: Current modulus=0, Next power of 2 modulus=1\n1001_1: Current modulus=1, Next power of 2 modulus=2\n100_11: Current modulus=3, Next power of 2 modulus=4\n10_011: Current modulus=3, Next power of 2 modulus=3\n1_0011: Current modulus=3, Next power of 2 modulus=1\n_10011: Current modulus=4, Next power of 2 modulus=2\n\nSo 19 % 5 = 4. It's easy to see that the moduli of the successive powers of 2 repeat in the pattern 1,2,4,3 (never 0), and there are five possible current moduli. If you could have two different sets of states you could thus represent the DFA with 4 + 5 = 9 states; as it is, you need 20 for each possible combination. If the number has to end (start from left-to-right) with a 1, I think you could need four more states to distinguish between modulo 0 when a 0 or a 1 has just been read, so the estimates of 24 would be correct.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think you need 20 states for basic right-to-left. You are scanning the digits from right to left (least significant to most significant); you need to keep track of the current modulus of the number as it is scanned so far, and the modulus of the power of 2 corresponding to the next binary place to be scanned. The basic equation to use here as you scan the digits is:&lt;/p&gt;\n\n&lt;p&gt;next modulus = (inputDigit * modulusOfNextPowerOf2 + currentModulus) % 5.&lt;/p&gt;\n\n&lt;p&gt;So, for instance, in reading 19 (10011 in binary), I&amp;#39;ll represent the current scanning position with an underscore.\n10011_: Current modulus=0, Next power of 2 modulus=1\n1001_1: Current modulus=1, Next power of 2 modulus=2\n100_11: Current modulus=3, Next power of 2 modulus=4\n10_011: Current modulus=3, Next power of 2 modulus=3\n1_0011: Current modulus=3, Next power of 2 modulus=1\n_10011: Current modulus=4, Next power of 2 modulus=2&lt;/p&gt;\n\n&lt;p&gt;So 19 % 5 = 4. It&amp;#39;s easy to see that the moduli of the successive powers of 2 repeat in the pattern 1,2,4,3 (never 0), and there are five possible current moduli. If you could have two different sets of states you could thus represent the DFA with 4 + 5 = 9 states; as it is, you need 20 for each possible combination. If the number has to end (start from left-to-right) with a 1, I think you could need four more states to distinguish between modulo 0 when a 0 or a 1 has just been read, so the estimates of 24 would be correct.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c685q56", "flair_text": null, "created": 1347647183.0, "created_utc": 1347643583.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zv6sg", "children": [], "author": "hires", "id": "c68c5lx", "parent_id": "t3_zv6sg", "score": 0, "approved_by": null, "upvotes": 2, "body": "Remember your closure properties. Forward will be the same thing as backward. Just reverse the arrows. You can do it with six states.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Remember your closure properties. Forward will be the same thing as backward. Just reverse the arrows. You can do it with six states.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68c5lx", "flair_text": null, "created": 1347672941.0, "created_utc": 1347669341.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zv6sg", "children": [], "author": "frenris", "id": "c6cze67", "parent_id": "t3_zv6sg", "score": 0, "approved_by": null, "upvotes": 1, "body": "I'm an comp eng student and have not gone that much in depth to this sort of stuff. What resources would you guys suggest for further research?\n\nLike I know what a DFA is, and the difference between a mealy and moore  machine, and I could try to tackle this problem, but I wouldn't have much faith in my ability to get the answer. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m an comp eng student and have not gone that much in depth to this sort of stuff. What resources would you guys suggest for further research?&lt;/p&gt;\n\n&lt;p&gt;Like I know what a DFA is, and the difference between a mealy and moore  machine, and I could try to tackle this problem, but I wouldn&amp;#39;t have much faith in my ability to get the answer. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6cze67", "flair_text": null, "created": 1348542357.0, "created_utc": 1348538757.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zv6sg", "children": [], "author": "astrolabe", "id": "c6802wn", "parent_id": "t3_zv6sg", "score": 0, "approved_by": null, "upvotes": 2, "body": "I don't understand a lot about your problem, but it seems to me that working right to left should be just a simple as working left to right (except how do you know that you've reached the left hand end of the number).  Basically in both cases, each digit's contribution to the remainder is determined by its position (mod 5).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t understand a lot about your problem, but it seems to me that working right to left should be just a simple as working left to right (except how do you know that you&amp;#39;ve reached the left hand end of the number).  Basically in both cases, each digit&amp;#39;s contribution to the remainder is determined by its position (mod 5).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6802wn", "flair_text": null, "created": 1347612089.0, "created_utc": 1347608489.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 22, "link_id": "t3_zv6sg", "children": [], "author": "ima_coder", "id": "c681b1g", "parent_id": "t3_zv6sg", "score": 0, "approved_by": null, "upvotes": 5, "body": "What is a dfa?", "edited": 1350053133.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What is a dfa?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c681b1g", "flair_text": null, "created": 1347625865.0, "created_utc": 1347622265.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 8, "link_id": "t3_zv6sg", "children": [], "author": "Geohump", "id": "c685h77", "parent_id": "t3_zv6sg", "score": 0, "approved_by": null, "upvotes": 1, "body": "I just asked two people who have masters degrees in CS what a dfa is and neither one knew. Both knew what an Automaton\nis and both knew what a Finite  Automaton is and both knew what a Deterministic Finite Automaton is. \n\nSo the apparent problem is the use of a too obscure TLA. (Three Letter Acronym) with the requisite expansion of same to establish clarity in the posting. \n\nMost writing style manuals and guidelines specify that all acronyms be expanded next to the acronym once, near the beginning of the article, the first time the acronym is used. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I just asked two people who have masters degrees in CS what a dfa is and neither one knew. Both knew what an Automaton\nis and both knew what a Finite  Automaton is and both knew what a Deterministic Finite Automaton is. &lt;/p&gt;\n\n&lt;p&gt;So the apparent problem is the use of a too obscure TLA. (Three Letter Acronym) with the requisite expansion of same to establish clarity in the posting. &lt;/p&gt;\n\n&lt;p&gt;Most writing style manuals and guidelines specify that all acronyms be expanded next to the acronym once, near the beginning of the article, the first time the acronym is used. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c685h77", "flair_text": null, "created": 1347646265.0, "created_utc": 1347642665.0, "num_reports": null}], "score": 18, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 31, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/zv6sg/dfa_that_accepts_all_binary_strings_divisible_by_5/", "has_more_comments": false, "name": "t3_zv6sg", "created": 1347608491.0, "url": "http://www.reddit.com/r/compsci/comments/zv6sg/dfa_that_accepts_all_binary_strings_divisible_by_5/", "author_flair_text": null, "author": "sivlin", "created_utc": 1347604891.0, "link_flair_text": null, "media": null, "num_reports": null}, "427": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 9, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m looking into learning OS design, do you guys have any books that would be practical to learn with? Preferably with ideas explaining different kernel types and having you compile your own kernel, etc from the beginning(So I&amp;#39;m looking for one with exercises if possible)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm looking into learning OS design, do you guys have any books that would be practical to learn with? Preferably with ideas explaining different kernel types and having you compile your own kernel, etc from the beginning(So I'm looking for one with exercises if possible)", "saved": false, "id": "zu7rl", "clicked": false, "title": "Best book to learn operating system design?", "num_comments": 24, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_zu7rl", "children": [], "author": "BrainInAJar", "id": "c67sj5p", "parent_id": "t3_zu7rl", "score": 0, "approved_by": null, "upvotes": 32, "body": "Start with Tannenbaum's \"Modern Operating System\"\n\nThen move on to here: http://www.osdever.net", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Start with Tannenbaum&amp;#39;s &amp;quot;Modern Operating System&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;Then move on to here: &lt;a href=\"http://www.osdever.net\"&gt;http://www.osdever.net&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67sj5p", "flair_text": null, "created": 1347577407.0, "created_utc": 1347573807.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zu7rl", "children": [], "author": "r4mtha", "id": "c67z2be", "parent_id": "t3_zu7rl", "score": 0, "approved_by": null, "upvotes": 9, "body": "The dinosaur book! http://www.amazon.com/Operating-System-Concepts-Abraham-Silberschatz/dp/1118112733", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The dinosaur book! &lt;a href=\"http://www.amazon.com/Operating-System-Concepts-Abraham-Silberschatz/dp/1118112733\"&gt;http://www.amazon.com/Operating-System-Concepts-Abraham-Silberschatz/dp/1118112733&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67z2be", "flair_text": null, "created": 1347604831.0, "created_utc": 1347601231.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zu7rl", "children": [], "author": "treerex", "id": "c6822k2", "parent_id": "t3_zu7rl", "score": 0, "approved_by": null, "upvotes": 5, "body": "Any version of the *Design and Implementation of the [Free]BSD [Version] Operating System* is a pretty interesting read.\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Any version of the &lt;em&gt;Design and Implementation of the [Free]BSD [Version] Operating System&lt;/em&gt; is a pretty interesting read.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6822k2", "flair_text": null, "created": 1347631809.0, "created_utc": 1347628209.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zu7rl", "children": [], "author": "mercurycc", "id": "c67wd43", "parent_id": "t3_zu7rl", "score": 0, "approved_by": null, "upvotes": 4, "body": "I learned it in college. It is a little bit difficult for me to imagine how most people without huge dedication could learn OS design and write an OS by himself. So I would suggest to take an university course. An online course might also work.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I learned it in college. It is a little bit difficult for me to imagine how most people without huge dedication could learn OS design and write an OS by himself. So I would suggest to take an university course. An online course might also work.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67wd43", "flair_text": null, "created": 1347592963.0, "created_utc": 1347589363.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zu7rl", "children": [], "author": "zhay", "id": "c67xrxo", "parent_id": "t3_zu7rl", "score": 0, "approved_by": null, "upvotes": 1, "body": "[Computer Systems](http://www.amazon.com/Computer-Systems-Programmers-Perspective-Edition/dp/0136108040/ref=sr_1_1?ie=UTF8&amp;qid=1347595011&amp;sr=8-1&amp;keywords=computer+systems)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.amazon.com/Computer-Systems-Programmers-Perspective-Edition/dp/0136108040/ref=sr_1_1?ie=UTF8&amp;amp;qid=1347595011&amp;amp;sr=8-1&amp;amp;keywords=computer+systems\"&gt;Computer Systems&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67xrxo", "flair_text": null, "created": 1347598626.0, "created_utc": 1347595026.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zu7rl", "children": [], "author": "TheSoundAurora", "id": "c67xym2", "parent_id": "t3_zu7rl", "score": 0, "approved_by": null, "upvotes": 1, "body": "We use an interactive lab (Labsim A+ 220-701) from testout.com for school.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;We use an interactive lab (Labsim A+ 220-701) from testout.com for school.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67xym2", "flair_text": null, "created": 1347599414.0, "created_utc": 1347595814.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zu7rl", "children": [], "author": "f00sp4m", "id": "c680s2m", "parent_id": "t3_zu7rl", "score": 0, "approved_by": null, "upvotes": 1, "body": "This is an old classic:\n\nhttp://www.amazon.com/Design-Operating-System-Prentice-Hall-Software/dp/0132017997\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is an old classic:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://www.amazon.com/Design-Operating-System-Prentice-Hall-Software/dp/0132017997\"&gt;http://www.amazon.com/Design-Operating-System-Prentice-Hall-Software/dp/0132017997&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c680s2m", "flair_text": null, "created": 1347619832.0, "created_utc": 1347616232.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zu7rl", "children": [], "author": "mumux", "id": "c681am6", "parent_id": "t3_zu7rl", "score": 0, "approved_by": null, "upvotes": 1, "body": "http://www.amazon.com/UNIX-Internals-The-New-Frontiers/dp/0131019082\n\nI'm surprised this one hasn't been mentioned yet; it's arguably one of the best book on UNIX operating systems design. It gives a lot of valuable information on how to efficiently implement SMP kernels which is something missing from a lot of other books. Maybe not adequate if you're a complete beginner though.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.amazon.com/UNIX-Internals-The-New-Frontiers/dp/0131019082\"&gt;http://www.amazon.com/UNIX-Internals-The-New-Frontiers/dp/0131019082&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m surprised this one hasn&amp;#39;t been mentioned yet; it&amp;#39;s arguably one of the best book on UNIX operating systems design. It gives a lot of valuable information on how to efficiently implement SMP kernels which is something missing from a lot of other books. Maybe not adequate if you&amp;#39;re a complete beginner though.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c681am6", "flair_text": null, "created": 1347625756.0, "created_utc": 1347622156.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zu7rl", "children": [], "author": "anwarruff", "id": "c687of6", "parent_id": "t3_zu7rl", "score": 0, "approved_by": null, "upvotes": 2, "body": "I think learning OS development using a Raspberry Pi is a wonderful approach. I highly suggest The University of Cambridge tutorial computer lab's tutorial, \"Baking Pi - Operating Systems Development\" http://www.cl.cam.ac.uk/freshers/raspberrypi/tutorials/os/ ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think learning OS development using a Raspberry Pi is a wonderful approach. I highly suggest The University of Cambridge tutorial computer lab&amp;#39;s tutorial, &amp;quot;Baking Pi - Operating Systems Development&amp;quot; &lt;a href=\"http://www.cl.cam.ac.uk/freshers/raspberrypi/tutorials/os/\"&gt;http://www.cl.cam.ac.uk/freshers/raspberrypi/tutorials/os/&lt;/a&gt; &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c687of6", "flair_text": null, "created": 1347654323.0, "created_utc": 1347650723.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_zu7rl", "children": [], "author": "Happy_Face_Geek", "id": "c6837tf", "parent_id": "t3_zu7rl", "score": 0, "approved_by": null, "upvotes": 3, "body": "http://www.eecs.harvard.edu/syrah/os161/\n\nBest fucking way to learn.\n\nFucking awesome.\n\nI loved it.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.eecs.harvard.edu/syrah/os161/\"&gt;http://www.eecs.harvard.edu/syrah/os161/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Best fucking way to learn.&lt;/p&gt;\n\n&lt;p&gt;Fucking awesome.&lt;/p&gt;\n\n&lt;p&gt;I loved it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6837tf", "flair_text": null, "created": 1347637498.0, "created_utc": 1347633898.0, "num_reports": null}], "score": 40, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 49, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/zu7rl/best_book_to_learn_operating_system_design/", "has_more_comments": false, "name": "t3_zu7rl", "created": 1347570455.0, "url": "http://www.reddit.com/r/compsci/comments/zu7rl/best_book_to_learn_operating_system_design/", "author_flair_text": null, "author": "F1A", "created_utc": 1347566855.0, "link_flair_text": null, "media": null, "num_reports": null}, "428": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 17, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Here is the problem. I have a large database of first and last names (in the order of millions of entries). When a new name comes in, I want to check to see if this name is &amp;quot;valid&amp;quot; and not a bunch of spam, such as someone typing in non-sense (mashing the keyword) or stringing together a bunch of curse words.&lt;/p&gt;\n\n&lt;p&gt;I am thinking the best way to do this is to analyze the database and build a distribution of n-grams. When a new name comes in, I can compute the n-grams of the new name and compare it to the distribution of the database. If the distribution deviates, perhaps the name is invalid.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m just thinking aloud right now. Any help in pointing me in the right direction or past experience would be awesome.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Here is the problem. I have a large database of first and last names (in the order of millions of entries). When a new name comes in, I want to check to see if this name is \"valid\" and not a bunch of spam, such as someone typing in non-sense (mashing the keyword) or stringing together a bunch of curse words.\n\nI am thinking the best way to do this is to analyze the database and build a distribution of n-grams. When a new name comes in, I can compute the n-grams of the new name and compare it to the distribution of the database. If the distribution deviates, perhaps the name is invalid.\n\nI'm just thinking aloud right now. Any help in pointing me in the right direction or past experience would be awesome.\n\n", "saved": false, "id": "ztx7g", "clicked": false, "title": "Checking that the name of a person is valid based on n-gram distributions?", "num_comments": 28, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 6, "link_id": "t3_ztx7g", "children": [], "author": "damakable", "id": "c67p6q8", "parent_id": "t3_ztx7g", "score": 0, "approved_by": null, "upvotes": 26, "body": "I can't weigh in on the technical discussion, but do have a question.  When you detect an invalid name, how do you plan on responding?  Google got into a fair bit of hot water when it decided it was only going to allow \"real names\" on Google+... people who had renamed themselves (legally) to \"3ric\" or \"Dead\" or \"Scud\", or people from other cultures who only had a 'first' name to begin with, or shared a name with a celebrity, or otherwise had strange names, found themselves banned from the network without warning.  Of course you want to detect spammers, just keep in mind that there are many edge cases and acting too quickly on false positives risks angering your users.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I can&amp;#39;t weigh in on the technical discussion, but do have a question.  When you detect an invalid name, how do you plan on responding?  Google got into a fair bit of hot water when it decided it was only going to allow &amp;quot;real names&amp;quot; on Google+... people who had renamed themselves (legally) to &amp;quot;3ric&amp;quot; or &amp;quot;Dead&amp;quot; or &amp;quot;Scud&amp;quot;, or people from other cultures who only had a &amp;#39;first&amp;#39; name to begin with, or shared a name with a celebrity, or otherwise had strange names, found themselves banned from the network without warning.  Of course you want to detect spammers, just keep in mind that there are many edge cases and acting too quickly on false positives risks angering your users.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67p6q8", "flair_text": null, "created": 1347564053.0, "created_utc": 1347560453.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_ztx7g", "children": [], "author": "cyancynic", "id": "c67qvxa", "parent_id": "t3_ztx7g", "score": 0, "approved_by": null, "upvotes": 22, "body": "This should be [required reading](http://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names/).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This should be &lt;a href=\"http://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names/\"&gt;required reading&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67qvxa", "flair_text": null, "created": 1347570499.0, "created_utc": 1347566899.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_ztx7g", "children": [], "author": "urish", "id": "c67ohn3", "parent_id": "t3_ztx7g", "score": 0, "approved_by": null, "upvotes": 10, "body": "Using n-grams seems like a decent approach, but once you have them what do you plan to do with them? How are you thinking of distinguishing the \"valid\" and \"invalid\" names?\n\nDo you have a set of names you are confident of their validity? Are we talking real given and surnames, or internet handles and such?\nIf you don't have a high-confidence ground-truth set, then the problem you are looking at is known alternately as \"outlier detection\", \"[anomaly detection](http://en.wikipedia.org/wiki/Anomaly_detection),\" or \"one-class classification\". You can use any standard approach to this problem (I'm most familiar with one-class SVM, but there are many others).\n\n\nbtw, you might want to try asking at /r/MachineLearning.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Using n-grams seems like a decent approach, but once you have them what do you plan to do with them? How are you thinking of distinguishing the &amp;quot;valid&amp;quot; and &amp;quot;invalid&amp;quot; names?&lt;/p&gt;\n\n&lt;p&gt;Do you have a set of names you are confident of their validity? Are we talking real given and surnames, or internet handles and such?\nIf you don&amp;#39;t have a high-confidence ground-truth set, then the problem you are looking at is known alternately as &amp;quot;outlier detection&amp;quot;, &amp;quot;&lt;a href=\"http://en.wikipedia.org/wiki/Anomaly_detection\"&gt;anomaly detection&lt;/a&gt;,&amp;quot; or &amp;quot;one-class classification&amp;quot;. You can use any standard approach to this problem (I&amp;#39;m most familiar with one-class SVM, but there are many others).&lt;/p&gt;\n\n&lt;p&gt;btw, you might want to try asking at &lt;a href=\"/r/MachineLearning\"&gt;/r/MachineLearning&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67ohn3", "flair_text": null, "created": 1347561518.0, "created_utc": 1347557918.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_ztx7g", "children": [], "author": "[deleted]", "id": "c67pkmj", "parent_id": "t3_ztx7g", "score": 0, "approved_by": null, "upvotes": 4, "body": "check them against a list of [names from the US census bureau](http://www.census.gov/genealogy/www/data/2000surnames/index.html). (also do things like break apart hyphenated names and check the pieces against the list.)\n\ni wouldn't accept or reject entirely based on name, regardless of your scheme. just increment a spaminess value based on the result, like spamassassin.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;check them against a list of &lt;a href=\"http://www.census.gov/genealogy/www/data/2000surnames/index.html\"&gt;names from the US census bureau&lt;/a&gt;. (also do things like break apart hyphenated names and check the pieces against the list.)&lt;/p&gt;\n\n&lt;p&gt;i wouldn&amp;#39;t accept or reject entirely based on name, regardless of your scheme. just increment a spaminess value based on the result, like spamassassin.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67pkmj", "flair_text": null, "created": 1347565420.0, "created_utc": 1347561820.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_ztx7g", "children": [], "author": "achillesLS", "id": "c67opb8", "parent_id": "t3_ztx7g", "score": 0, "approved_by": null, "upvotes": 2, "body": "I have two fairly large lists of male and female names (mostly common American names) which I compiled for a data mining project.  If you'd like to add those to your list let me know.  \n\nWhat techniques were you thinking of using to do the analysis?  For quickly prototyping data mining techniques, I would suggest the [rapidminer software](http://rapid-i.com/).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I have two fairly large lists of male and female names (mostly common American names) which I compiled for a data mining project.  If you&amp;#39;d like to add those to your list let me know.  &lt;/p&gt;\n\n&lt;p&gt;What techniques were you thinking of using to do the analysis?  For quickly prototyping data mining techniques, I would suggest the &lt;a href=\"http://rapid-i.com/\"&gt;rapidminer software&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67opb8", "flair_text": null, "created": 1347562294.0, "created_utc": 1347558694.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_ztx7g", "children": [], "author": "da__", "id": "c67pl3o", "parent_id": "t3_ztx7g", "score": 0, "approved_by": null, "upvotes": 3, "body": "You might be in trouble unless you're 100% sure all your names come from the same language and culture.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You might be in trouble unless you&amp;#39;re 100% sure all your names come from the same language and culture.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67pl3o", "flair_text": null, "created": 1347565468.0, "created_utc": 1347561868.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_ztx7g", "children": [], "author": "qaruxj", "id": "c67tvou", "parent_id": "t3_ztx7g", "score": 0, "approved_by": null, "upvotes": 4, "body": "A lot of people have mentioned problems with people with unusual or foreign names, but what about someone just making names up from real names? Between [this site](http://www.fakenamegenerator.com/) and my brain I've used quite a few pseudonyms in the past, none of which your database would detect. Names like John Smith and Homer Simpson are frequently used as fake names and also are the names of real people. I feel like this would be a pretty lame approach overall and you would get a lot of false positives and false negatives from people with unusual names or using random \"real\" names. I could maybe see it being potentially useful if it were part of a holistic attempt to gauge the likelihood of someone being a spammer, if you also took into account the user's activity, word selection, etc. or somehow figured out a way to \"fingerprint\" spam accounts and use heuristics to compare them to other accounts, but just analyzing names would never work.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A lot of people have mentioned problems with people with unusual or foreign names, but what about someone just making names up from real names? Between &lt;a href=\"http://www.fakenamegenerator.com/\"&gt;this site&lt;/a&gt; and my brain I&amp;#39;ve used quite a few pseudonyms in the past, none of which your database would detect. Names like John Smith and Homer Simpson are frequently used as fake names and also are the names of real people. I feel like this would be a pretty lame approach overall and you would get a lot of false positives and false negatives from people with unusual names or using random &amp;quot;real&amp;quot; names. I could maybe see it being potentially useful if it were part of a holistic attempt to gauge the likelihood of someone being a spammer, if you also took into account the user&amp;#39;s activity, word selection, etc. or somehow figured out a way to &amp;quot;fingerprint&amp;quot; spam accounts and use heuristics to compare them to other accounts, but just analyzing names would never work.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67tvou", "flair_text": null, "created": 1347582824.0, "created_utc": 1347579224.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_ztx7g", "children": [], "author": "uhoreg", "id": "c67q148", "parent_id": "t3_ztx7g", "score": 0, "approved_by": null, "upvotes": 7, "body": "Does your name database include [Brfxxccxxmnpcccclllmmnprxvclmnckssqlbb11116](https://en.wikipedia.org/wiki/Naming_law_in_Sweden#Brfxxccxxmnpcccclllmmnprxvclmnckssqlbb11116)?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Does your name database include &lt;a href=\"https://en.wikipedia.org/wiki/Naming_law_in_Sweden#Brfxxccxxmnpcccclllmmnprxvclmnckssqlbb11116\"&gt;Brfxxccxxmnpcccclllmmnprxvclmnckssqlbb11116&lt;/a&gt;?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67q148", "flair_text": null, "created": 1347567106.0, "created_utc": 1347563506.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_ztx7g", "children": [], "author": "[deleted]", "id": "c67p93b", "parent_id": "t3_ztx7g", "score": 0, "approved_by": null, "upvotes": 3, "body": "Unfortunately, n-grams only apply to a specific language (English in your case) and names can be foreign and not follow English rules. Not saying this is better, but if I was doing something along these lines, I would fuzzy-compare the name to a list (Fuzzy because names tend to have slight variations that can't always be caught by your list.) I think that with several thousand names, you should be able to isolate the invalid entries reasonably well. And I guess while we're talking about fuzzy comparisons, you could make exception rules like accept all last names ending with \"wski\", \"son\", etc. But if you end up using n-grams, I'd like to know how it turned out!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Unfortunately, n-grams only apply to a specific language (English in your case) and names can be foreign and not follow English rules. Not saying this is better, but if I was doing something along these lines, I would fuzzy-compare the name to a list (Fuzzy because names tend to have slight variations that can&amp;#39;t always be caught by your list.) I think that with several thousand names, you should be able to isolate the invalid entries reasonably well. And I guess while we&amp;#39;re talking about fuzzy comparisons, you could make exception rules like accept all last names ending with &amp;quot;wski&amp;quot;, &amp;quot;son&amp;quot;, etc. But if you end up using n-grams, I&amp;#39;d like to know how it turned out!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67p93b", "flair_text": null, "created": 1347564290.0, "created_utc": 1347560690.0, "num_reports": null}], "score": 26, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 43, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/ztx7g/checking_that_the_name_of_a_person_is_valid_based/", "has_more_comments": false, "name": "t3_ztx7g", "created": 1347560171.0, "url": "http://www.reddit.com/r/compsci/comments/ztx7g/checking_that_the_name_of_a_person_is_valid_based/", "author_flair_text": null, "author": "zionsrogue", "created_utc": 1347556571.0, "link_flair_text": null, "media": null, "num_reports": null}, "429": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 3, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi,&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m currently taking a grad course on distributed databases. I know I&amp;#39;ll probably get flamed for being dumb, but I have yet to have a database class before, so all this is new to me (although I have had some sql experience)&lt;/p&gt;\n\n&lt;p&gt;Our professor asked us to use protege and I just can&amp;#39;t wrap my head around it.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m not even sure 100% what it does.  &lt;/p&gt;\n\n&lt;p&gt;Is it a DBMS? Whats all this noise about ontologies?&lt;/p&gt;\n\n&lt;p&gt;If someone could explain this to me like the idiot I am, I would greatly appreciate it.&lt;/p&gt;\n\n&lt;p&gt;(link: &lt;a href=\"http://protege.stanford.edu/\"&gt;http://protege.stanford.edu/&lt;/a&gt;)&lt;/p&gt;\n\n&lt;p&gt;Thanks in advanced.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi,\n\nI'm currently taking a grad course on distributed databases. I know I'll probably get flamed for being dumb, but I have yet to have a database class before, so all this is new to me (although I have had some sql experience)\n\nOur professor asked us to use protege and I just can't wrap my head around it.\n\nI'm not even sure 100% what it does.  \n\nIs it a DBMS? Whats all this noise about ontologies?\n\nIf someone could explain this to me like the idiot I am, I would greatly appreciate it.\n\n(link: http://protege.stanford.edu/)\n\nThanks in advanced.", "saved": false, "id": "zuc4t", "clicked": false, "title": "Can someone help explain to me what protege is?", "num_comments": 1, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zuc4t", "children": [], "author": "Tairnyn", "id": "c67ukwl", "parent_id": "t3_zuc4t", "score": 0, "approved_by": null, "upvotes": 5, "body": "Protege is a tool for creating ontologies, which are data structures that are used to declare relationships between concepts. These relationships are terms that link two concepts and, while there are some dialects where there are clear definitions on what relationships can exist (like OWL), the terms are ultimately arbitrary string labels. In general, ontologies are a useful way to organize instances and reason over their properties and relations among each other, but an example might make some more sense.\n\n**Tree subclassOf Plant**   -- This statement says that anything that is a Tree must also be a Plant. These terms don't mean anything to the computer, they are just labels we made up.\n\n**OakTree subclassOf Tree** -- Any OakTree is a Tree\n\n**MyOakTreeOutBack isA OakTree** -- This declares an instance of a specific object, the oak tree in my back yard, and says that it is of type OakTree\n\nGiven these rules I can infer automatically that the oak tree in my back yard is of type OakTree, Tree, and Plant. This may seem trivial, but it now allows me to assign properties to the Plant type, properties that all plants share, to just the Plant class without having to explicitly attach those properties to every single instance of a plant I add to my data. If I have millions of different types of trees in a huge type hierarchy they'll all share the Plant properties. To make things more fun properties can also be arranged as a taxonomy with inheritance in the same manner.\n\nI hope this help to motivate and make a little clearer what ontologies (and Protege) are for. I've made quite a few generalizations to make explanation easier, so learning the exact syntax and the resulting inferences is important. You'll most likely learn using small toy problems that don't seem to necessitate such a heavyweight representation, but when you scale up the data these structures can save a lot of time and allow for some really powerful queries based on properties and relations.\n\n\n\n\n", "edited": 1347582591.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Protege is a tool for creating ontologies, which are data structures that are used to declare relationships between concepts. These relationships are terms that link two concepts and, while there are some dialects where there are clear definitions on what relationships can exist (like OWL), the terms are ultimately arbitrary string labels. In general, ontologies are a useful way to organize instances and reason over their properties and relations among each other, but an example might make some more sense.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Tree subclassOf Plant&lt;/strong&gt;   -- This statement says that anything that is a Tree must also be a Plant. These terms don&amp;#39;t mean anything to the computer, they are just labels we made up.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;OakTree subclassOf Tree&lt;/strong&gt; -- Any OakTree is a Tree&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;MyOakTreeOutBack isA OakTree&lt;/strong&gt; -- This declares an instance of a specific object, the oak tree in my back yard, and says that it is of type OakTree&lt;/p&gt;\n\n&lt;p&gt;Given these rules I can infer automatically that the oak tree in my back yard is of type OakTree, Tree, and Plant. This may seem trivial, but it now allows me to assign properties to the Plant type, properties that all plants share, to just the Plant class without having to explicitly attach those properties to every single instance of a plant I add to my data. If I have millions of different types of trees in a huge type hierarchy they&amp;#39;ll all share the Plant properties. To make things more fun properties can also be arranged as a taxonomy with inheritance in the same manner.&lt;/p&gt;\n\n&lt;p&gt;I hope this help to motivate and make a little clearer what ontologies (and Protege) are for. I&amp;#39;ve made quite a few generalizations to make explanation easier, so learning the exact syntax and the resulting inferences is important. You&amp;#39;ll most likely learn using small toy problems that don&amp;#39;t seem to necessitate such a heavyweight representation, but when you scale up the data these structures can save a lot of time and allow for some really powerful queries based on properties and relations.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67ukwl", "flair_text": null, "created": 1347585900.0, "created_utc": 1347582300.0, "num_reports": null}], "score": 6, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 9, "hidden": false, "thumbnail": "", "edited": 1347574282.0, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/zuc4t/can_someone_help_explain_to_me_what_protege_is/", "has_more_comments": false, "name": "t3_zuc4t", "created": 1347574882.0, "url": "http://www.reddit.com/r/compsci/comments/zuc4t/can_someone_help_explain_to_me_what_protege_is/", "author_flair_text": null, "author": "robbhimself", "created_utc": 1347571282.0, "link_flair_text": null, "media": null, "num_reports": null}, "430": {"domain": "blog.computationalcomplexity.org", "link_flair_class": null, "banned_by": null, "downvotes": 9, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "zt298", "clicked": false, "title": "Computational Complexity: What happened to the Parallel Random Access Machine?", "num_comments": 10, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_zt298", "children": [], "author": "cypherx", "id": "c67gm6k", "parent_id": "t3_zt298", "score": 0, "approved_by": null, "upvotes": 5, "body": "It's an older and amusingly written right before the explosion of massively parallel general purpose computing we're seeing today. Still, I wanted to open up some discussion about formal models of parallel algorithmic complexity. Have CUDA/OpenCL brought PRAM back to everyone's good graces? Or is some more \"realistic\"/restrictive model more popular? Are there many people even doing analysis of parallel algorithms these days?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s an older and amusingly written right before the explosion of massively parallel general purpose computing we&amp;#39;re seeing today. Still, I wanted to open up some discussion about formal models of parallel algorithmic complexity. Have CUDA/OpenCL brought PRAM back to everyone&amp;#39;s good graces? Or is some more &amp;quot;realistic&amp;quot;/restrictive model more popular? Are there many people even doing analysis of parallel algorithms these days?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67gm6k", "flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "created": 1347514342.0, "created_utc": 1347510742.0, "num_reports": null}], "score": 33, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 42, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/zt298/computational_complexity_what_happened_to_the/", "has_more_comments": false, "name": "t3_zt298", "created": 1347514059.0, "url": "http://blog.computationalcomplexity.org/2005/04/what-happened-to-pram.html", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1347510459.0, "link_flair_text": null, "media": null, "num_reports": null}, "431": {"domain": "cstheory.blogoverflow.com", "link_flair_class": null, "banned_by": null, "downvotes": 12, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "zslaf", "clicked": false, "title": "Technical introduction to quantum query complexity", "num_comments": 0, "comments": [], "score": 11, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 23, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/zslaf/technical_introduction_to_quantum_query_complexity/", "has_more_comments": false, "name": "t3_zslaf", "created": 1347497424.0, "url": "http://cstheory.blogoverflow.com/2011/07/quantum-query-complexity/", "author_flair_text": null, "author": "DevFRus", "created_utc": 1347493824.0, "link_flair_text": null, "media": null, "num_reports": null}, "432": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 58, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://www.toothycat.net/%7Ehologram/Turing/\"&gt;Magic: the Gathering is Turing Complete&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;A little while ago, someone asked &lt;a href=\"http://draw3cards.com/questions/2851/is-magic-turing-complete\"&gt;&amp;quot;Is Magic Turing-complete?&amp;quot;&lt;/a&gt; over on Draw3Cards. I decided to answer the question by actually assembling a universal Turing machine out of Magic cards such that the sequence of triggered abilities cause all the reads, writes, state changes etc. (That is, the players of the game don&amp;#39;t need to make any decisions to be part of the Turing machine - it&amp;#39;s all encoded in the game state.)&lt;/p&gt;\n\n&lt;p&gt;I kept meaning to do a bit more with the site before posting it to Reddit and places, but never got around to it. Eventually someone by the name of fjdkslan posted it over on the &lt;a href=\"http://www.reddit.com/r/magicTCG/comments/zoojk/magic_is_apparently_turing_complete/\"&gt;Magic the Gathering subreddit&lt;/a&gt;. JayneIsAGirlsName suggested we repost it over here on /compsci, so... &lt;a href=\"http://www.toothycat.net/%7Ehologram/Turing/\"&gt;here you go&lt;/a&gt; :) &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "[Magic: the Gathering is Turing Complete](http://www.toothycat.net/~hologram/Turing/)\n\nA little while ago, someone asked [\"Is Magic Turing-complete?\"](http://draw3cards.com/questions/2851/is-magic-turing-complete) over on Draw3Cards. I decided to answer the question by actually assembling a universal Turing machine out of Magic cards such that the sequence of triggered abilities cause all the reads, writes, state changes etc. (That is, the players of the game don't need to make any decisions to be part of the Turing machine - it's all encoded in the game state.)\n\nI kept meaning to do a bit more with the site before posting it to Reddit and places, but never got around to it. Eventually someone by the name of fjdkslan posted it over on the [Magic the Gathering subreddit](http://www.reddit.com/r/magicTCG/comments/zoojk/magic_is_apparently_turing_complete/). JayneIsAGirlsName suggested we repost it over here on /compsci, so... [here you go](http://www.toothycat.net/~hologram/Turing/) :) ", "saved": false, "id": "zp7c1", "clicked": false, "title": "Magic: the Gathering is Turing Complete", "num_comments": 74, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_zp7c1", "children": [], "author": "alextfish", "id": "c66j0q8", "parent_id": "t3_zp7c1", "score": 0, "approved_by": null, "upvotes": 30, "body": "One note, which I also posted on the /r/magicTCG thread: I understand that there are some issues with the Turing machine I'm using, Alex Smith's 2,3 machine: basically it's controversial whether it counts as a truly universal Turing machine or not.\n\nI do have a more complicated version of the Magic Turing Machine which uses the smallest uncontroversial universal Turing machine, which has 18 colours rather than 3. You have to use a heck of a lot more Rotlung Reanimators to make that work, and it's a lot harder to understand, so I've never got around to making a website explaining that one. (Basically, you switch the roles played by Teysa and colours with the roles played by Rotlung Reanimator and creature types, and have loads more hacked Dralnu's Crusades so everything has about five creature types.) The Teysa version is just about simple enough to be comprehensible, which is why that's the version still on the site.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;One note, which I also posted on the &lt;a href=\"/r/magicTCG\"&gt;/r/magicTCG&lt;/a&gt; thread: I understand that there are some issues with the Turing machine I&amp;#39;m using, Alex Smith&amp;#39;s 2,3 machine: basically it&amp;#39;s controversial whether it counts as a truly universal Turing machine or not.&lt;/p&gt;\n\n&lt;p&gt;I do have a more complicated version of the Magic Turing Machine which uses the smallest uncontroversial universal Turing machine, which has 18 colours rather than 3. You have to use a heck of a lot more Rotlung Reanimators to make that work, and it&amp;#39;s a lot harder to understand, so I&amp;#39;ve never got around to making a website explaining that one. (Basically, you switch the roles played by Teysa and colours with the roles played by Rotlung Reanimator and creature types, and have loads more hacked Dralnu&amp;#39;s Crusades so everything has about five creature types.) The Teysa version is just about simple enough to be comprehensible, which is why that&amp;#39;s the version still on the site.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66j0q8", "flair_text": null, "created": 1347354995.0, "created_utc": 1347351395.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_zp7c1", "children": [], "author": "DevFRus", "id": "c66jvvj", "parent_id": "t3_zp7c1", "score": 0, "approved_by": null, "upvotes": 24, "body": "There is [another proof of completeness](http://cstheory.stackexchange.com/a/2057/1037) (requiring the cooperation of the players) over on the theoretical computer science research Q&amp;A.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There is &lt;a href=\"http://cstheory.stackexchange.com/a/2057/1037\"&gt;another proof of completeness&lt;/a&gt; (requiring the cooperation of the players) over on the theoretical computer science research Q&amp;amp;A.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66jvvj", "flair_text": null, "created": 1347366480.0, "created_utc": 1347362880.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_zp7c1", "children": [], "author": "mcandre", "id": "c66n9cz", "parent_id": "t3_zp7c1", "score": 0, "approved_by": null, "upvotes": 11, "body": "That's! Freaking! Awesome!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;That&amp;#39;s! Freaking! Awesome!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66n9cz", "flair_text": null, "created": 1347383481.0, "created_utc": 1347379881.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zp7c1", "children": [], "author": "Spherius", "id": "c66ks5l", "parent_id": "t3_zp7c1", "score": 0, "approved_by": null, "upvotes": 6, "body": "I'm curious more about what class of problem the game itself falls into, and where it fits into the continuum of games in terms of their computational difficulty (for example, chess is an easier game, computationally, than is go, which is essentially impossible to play well on a computer because for each move, there are typically between 100 and 200 options). Of course, it would be necessary to decide whether \"the game\" includes deck-building or not. Ultimately, what I want to know is, will there ever be a computer better at magic than the best human players?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m curious more about what class of problem the game itself falls into, and where it fits into the continuum of games in terms of their computational difficulty (for example, chess is an easier game, computationally, than is go, which is essentially impossible to play well on a computer because for each move, there are typically between 100 and 200 options). Of course, it would be necessary to decide whether &amp;quot;the game&amp;quot; includes deck-building or not. Ultimately, what I want to know is, will there ever be a computer better at magic than the best human players?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66ks5l", "flair_text": null, "created": 1347372976.0, "created_utc": 1347369376.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zp7c1", "children": [], "author": "dpitch40", "id": "c66ky24", "parent_id": "t3_zp7c1", "score": 0, "approved_by": null, "upvotes": 3, "body": "This is amazing. My only question is, how is it a Turing Machine when the switching of states (activating Skirk Drill Sergeant to drop Chancellor of the Spires and play Time and Tide) is done according to Denzil's choice? Is this to simulate the arbitrary tape input?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is amazing. My only question is, how is it a Turing Machine when the switching of states (activating Skirk Drill Sergeant to drop Chancellor of the Spires and play Time and Tide) is done according to Denzil&amp;#39;s choice? Is this to simulate the arbitrary tape input?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66ky24", "flair_text": null, "created": 1347373895.0, "created_utc": 1347370295.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zp7c1", "children": [], "author": "arnar", "id": "c670obv", "parent_id": "t3_zp7c1", "score": 0, "approved_by": null, "upvotes": 3, "body": "So, who's going to write the gcc backend?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;So, who&amp;#39;s going to write the gcc backend?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c670obv", "flair_text": null, "created": 1347439821.0, "created_utc": 1347436221.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zp7c1", "children": [], "author": "VorpalAuroch", "id": "c670u0c", "parent_id": "t3_zp7c1", "score": 0, "approved_by": null, "upvotes": 4, "body": "I enjoy playing the shiniest Turing tarpit in history. Yes I do.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I enjoy playing the shiniest Turing tarpit in history. Yes I do.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c670u0c", "flair_text": null, "created": 1347441349.0, "created_utc": 1347437749.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zp7c1", "children": [], "author": "OurKarass", "id": "c67tsbi", "parent_id": "t3_zp7c1", "score": 0, "approved_by": null, "upvotes": 3, "body": "Not even exaggerating, this is, by far, the geekiest thing I've ever seen in my life.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not even exaggerating, this is, by far, the geekiest thing I&amp;#39;ve ever seen in my life.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67tsbi", "flair_text": null, "created": 1347582451.0, "created_utc": 1347578851.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_zp7c1", "children": [], "author": "Fuco1337", "id": "c66k1i4", "parent_id": "t3_zp7c1", "score": 0, "approved_by": null, "upvotes": 10, "body": "Haha, this is amazing. Can't wait for next week to meet with my buddies and study the shit out of this :D Things like this always amazed me... \"Let's take whatever and make a turing machine out of it\" is possibly the coolest idea ever. Just shows how little it really takes to be an universal computer.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haha, this is amazing. Can&amp;#39;t wait for next week to meet with my buddies and study the shit out of this :D Things like this always amazed me... &amp;quot;Let&amp;#39;s take whatever and make a turing machine out of it&amp;quot; is possibly the coolest idea ever. Just shows how little it really takes to be an universal computer.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66k1i4", "flair_text": null, "created": 1347367851.0, "created_utc": 1347364251.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zp7c1", "children": [], "author": "[deleted]", "id": "c66tylu", "parent_id": "t3_zp7c1", "score": 0, "approved_by": null, "upvotes": 3, "body": "And the 'key' cards in hand are blue, no surprise :)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;And the &amp;#39;key&amp;#39; cards in hand are blue, no surprise :)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66tylu", "flair_text": null, "created": 1347408599.0, "created_utc": 1347404999.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zp7c1", "children": [], "author": "[deleted]", "id": "c66k83b", "parent_id": "t3_zp7c1", "score": 0, "approved_by": null, "upvotes": 1, "body": "[deleted]", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;[deleted]&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66k83b", "flair_text": null, "created": 1347369334.0, "created_utc": 1347365734.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zp7c1", "children": [], "author": "jldugger", "id": "c66prjk", "parent_id": "t3_zp7c1", "score": 0, "approved_by": null, "upvotes": 2, "body": "This is hardly a surprising result. Check out [misdirection](http://gatherer.wizards.com/Pages/Card/Details.aspx?multiverseid=19681). Can you misdirect someone's misdirection to itself?\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is hardly a surprising result. Check out &lt;a href=\"http://gatherer.wizards.com/Pages/Card/Details.aspx?multiverseid=19681\"&gt;misdirection&lt;/a&gt;. Can you misdirect someone&amp;#39;s misdirection to itself?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66prjk", "flair_text": null, "created": 1347392799.0, "created_utc": 1347389199.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zp7c1", "children": [], "author": "jldugger", "id": "c66pud4", "parent_id": "t3_zp7c1", "score": 0, "approved_by": null, "upvotes": 1, "body": "I've been pondering something similar regarding the Netrunner relaunch. My basic thought though was to model the game as a petri net. This allows for player's choice and still allows you the option of evaluating termination properties. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been pondering something similar regarding the Netrunner relaunch. My basic thought though was to model the game as a petri net. This allows for player&amp;#39;s choice and still allows you the option of evaluating termination properties. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66pud4", "flair_text": null, "created": 1347393082.0, "created_utc": 1347389482.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zp7c1", "children": [], "author": "UncleMeat", "id": "c66qvcr", "parent_id": "t3_zp7c1", "score": 0, "approved_by": null, "upvotes": 1, "body": "How does Denzil get WWW in order to pay for Skirk Drill Sergeant? It looks like only two creatures came into play under his control, the Dragon/Dryad/Drake and the zombie token. An extra Carnival of Souls solves this problem.\n\nAlso, congrats on this! Its actually a pretty elegant system once you get past the mess of creature type changes and P/T altering effects. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;How does Denzil get WWW in order to pay for Skirk Drill Sergeant? It looks like only two creatures came into play under his control, the Dragon/Dryad/Drake and the zombie token. An extra Carnival of Souls solves this problem.&lt;/p&gt;\n\n&lt;p&gt;Also, congrats on this! Its actually a pretty elegant system once you get past the mess of creature type changes and P/T altering effects. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66qvcr", "flair_text": null, "created": 1347396685.0, "created_utc": 1347393085.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zp7c1", "children": [], "author": "pemungkah", "id": "c66w82e", "parent_id": "t3_zp7c1", "score": 0, "approved_by": null, "upvotes": 2, "body": "You are a bloody genius. This wraps the awesome needle around the pin.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You are a bloody genius. This wraps the awesome needle around the pin.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66w82e", "flair_text": null, "created": 1347417634.0, "created_utc": 1347414034.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zp7c1", "children": [], "author": "ReinH", "id": "c670ox7", "parent_id": "t3_zp7c1", "score": 0, "approved_by": null, "upvotes": 1, "body": "Well I guess I can stop using C now.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well I guess I can stop using C now.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c670ox7", "flair_text": null, "created": 1347439977.0, "created_utc": 1347436377.0, "num_reports": null}], "score": 261, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 319, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/zp7c1/magic_the_gathering_is_turing_complete/", "has_more_comments": false, "name": "t3_zp7c1", "created": 1347354558.0, "url": "http://www.reddit.com/r/compsci/comments/zp7c1/magic_the_gathering_is_turing_complete/", "author_flair_text": null, "author": "alextfish", "created_utc": 1347350958.0, "link_flair_text": null, "media": null, "num_reports": null}, "433": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 5, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Stack machines are an abstract computing paradigm that are interesting in their own right. They are particularly useful to me because they can programmed with a FORTH-like language , and those programs are easily encoded as a genotype for genetic algorithms. (They are a linear block of instructions, basically).&lt;/p&gt;\n\n&lt;p&gt;However, recently I need an alternative to this paradigm I need an equally simplistic model of programming that does not operate on stacks -- but instead operates on &amp;quot;sets&amp;quot;. The elements of the &amp;quot;set&amp;quot; are unordered and all unique. I need list-like functionality that is capable of &amp;quot;chunking&amp;quot; elements of a set to make a new set. Ideally I would like a paradigm that is also straightforward to evolve in a genetic algorithm.&lt;/p&gt;\n\n&lt;p&gt;( &amp;quot;Chunking&amp;quot; here means handling data types that are themselves built up out of set elements. So let I=&amp;lt;3,11,18&amp;gt; and another set A=&amp;lt;&amp;quot;fox&amp;quot;,&amp;quot;boar&amp;quot;,&amp;quot;hedgehog&amp;quot;&amp;gt;. A chunking operator could produce, for example this set N=&amp;lt;&amp;quot;boar&amp;quot;,11&amp;gt;. ) Other primitive operations should be in the manner of &amp;quot;find all the sets in this list which contain a string&amp;quot;, &amp;quot;create the intersection of these two sets&amp;quot;, and so on.&lt;/p&gt;\n\n&lt;p&gt;Does anyone know what this kind of computing paradigm is called? Is it called List Processing (LISP?), or something similar? What other literature could help me find something like this? Thanks.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Stack machines are an abstract computing paradigm that are interesting in their own right. They are particularly useful to me because they can programmed with a FORTH-like language , and those programs are easily encoded as a genotype for genetic algorithms. (They are a linear block of instructions, basically).\n\nHowever, recently I need an alternative to this paradigm I need an equally simplistic model of programming that does not operate on stacks -- but instead operates on \"sets\". The elements of the \"set\" are unordered and all unique. I need list-like functionality that is capable of \"chunking\" elements of a set to make a new set. Ideally I would like a paradigm that is also straightforward to evolve in a genetic algorithm.\n\n( \"Chunking\" here means handling data types that are themselves built up out of set elements. So let I=&lt;3,11,18&gt; and another set A=&lt;\"fox\",\"boar\",\"hedgehog\"&gt;. A chunking operator could produce, for example this set N=&lt;\"boar\",11&gt;. ) Other primitive operations should be in the manner of \"find all the sets in this list which contain a string\", \"create the intersection of these two sets\", and so on.\n\nDoes anyone know what this kind of computing paradigm is called? Is it called List Processing (LISP?), or something similar? What other literature could help me find something like this? Thanks.\n", "saved": false, "id": "zpln9", "clicked": false, "title": "Alternatives to Stack Machines?", "num_comments": 15, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zpln9", "children": [], "author": "grayvedigga", "id": "c66mqkd", "parent_id": "t3_zpln9", "score": 0, "approved_by": null, "upvotes": 10, "body": "You sound confused.  I don't mean to be insulting, so please don't be upset if I've read you badly.\n\nIt sounds like you want a concatenative language that specialises in operations on sets.  That's just the core of Forth with instructions added for each of the set operations you need --- like you could say Postscript is a Forth specialising in vector graphics.\n\nThis is much simpler than an abstract machine / model of computation based entirely on sets -- that's something I've never heard of, sounds tricky, and needs deep consideration on its own before you think of using it for GP :-).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You sound confused.  I don&amp;#39;t mean to be insulting, so please don&amp;#39;t be upset if I&amp;#39;ve read you badly.&lt;/p&gt;\n\n&lt;p&gt;It sounds like you want a concatenative language that specialises in operations on sets.  That&amp;#39;s just the core of Forth with instructions added for each of the set operations you need --- like you could say Postscript is a Forth specialising in vector graphics.&lt;/p&gt;\n\n&lt;p&gt;This is much simpler than an abstract machine / model of computation based entirely on sets -- that&amp;#39;s something I&amp;#39;ve never heard of, sounds tricky, and needs deep consideration on its own before you think of using it for GP :-).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66mqkd", "flair_text": null, "created": 1347381510.0, "created_utc": 1347377910.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zpln9", "children": [], "author": "geezusfreeek", "id": "c66t0ct", "parent_id": "t3_zpln9", "score": 0, "approved_by": null, "upvotes": 2, "body": "I don't think you need a whole new paradigm, but some of the things you are saying *very vaguely* resemble Prolog.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t think you need a whole new paradigm, but some of the things you are saying &lt;em&gt;very vaguely&lt;/em&gt; resemble Prolog.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66t0ct", "flair_text": null, "created": 1347404657.0, "created_utc": 1347401057.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_zpln9", "children": [], "author": "mcandre", "id": "c66t44y", "parent_id": "t3_zpln9", "score": 0, "approved_by": null, "upvotes": 4, "body": "Computational models include:\n\n * Stack machines\n * Neural networks\n * Finite state automata\n * Wolfram automata\n * Lambda calculus", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Computational models include:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Stack machines&lt;/li&gt;\n&lt;li&gt;Neural networks&lt;/li&gt;\n&lt;li&gt;Finite state automata&lt;/li&gt;\n&lt;li&gt;Wolfram automata&lt;/li&gt;\n&lt;li&gt;Lambda calculus&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66t44y", "flair_text": null, "created": 1347405087.0, "created_utc": 1347401487.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zpln9", "children": [], "author": "pamplemouse", "id": "c66q4ky", "parent_id": "t3_zpln9", "score": 0, "approved_by": null, "upvotes": 2, "body": "See SETL. However, you just need a set library. You don't need some \"new paradigm\" abstract machine. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;See SETL. However, you just need a set library. You don&amp;#39;t need some &amp;quot;new paradigm&amp;quot; abstract machine. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66q4ky", "flair_text": null, "created": 1347394101.0, "created_utc": 1347390501.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zpln9", "children": [], "author": "aabs", "id": "c66to4v", "parent_id": "t3_zpln9", "score": 0, "approved_by": null, "upvotes": 3, "body": "The problem with sets is that, being unordered and unique, you can not work out which operation to perform in which order, and you can only have each operation present once. \n\nSince the order of the operations passed to a computation is critical - unless you can guarantee that every operation is commutative - you would need to control the order of the operations somehow, thereby sacrificing one of the primary characteristics of set-hood. I don't see how you can get away with the single instance per operation either (short of nasty contrived lookup table encodings that would undermine your evolutionary computing model).\n\nAs far as I can see, once you relax those constraints, you're back at lists, stacks or trees. ;-)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The problem with sets is that, being unordered and unique, you can not work out which operation to perform in which order, and you can only have each operation present once. &lt;/p&gt;\n\n&lt;p&gt;Since the order of the operations passed to a computation is critical - unless you can guarantee that every operation is commutative - you would need to control the order of the operations somehow, thereby sacrificing one of the primary characteristics of set-hood. I don&amp;#39;t see how you can get away with the single instance per operation either (short of nasty contrived lookup table encodings that would undermine your evolutionary computing model).&lt;/p&gt;\n\n&lt;p&gt;As far as I can see, once you relax those constraints, you&amp;#39;re back at lists, stacks or trees. ;-)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66to4v", "flair_text": null, "created": 1347407375.0, "created_utc": 1347403775.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zpln9", "children": [], "author": "cypherx", "id": "c67lecs", "parent_id": "t3_zpln9", "score": 0, "approved_by": null, "upvotes": 2, "body": "If a stack language consists of functions with signatures Stack -&gt; Stack, then your (totally unexplored) family of set languages would consist of functions with signature Set -&gt; Set. \n\nWhat can you do with these functions? Well, off the top of my head, I imagine we can pick an arbitrary element out, filter the set on some predictate, apply a function to the whole set, and maybe even perform a combinatorial \"all-pairs of elements\" applied to a given operator. \n\n    SINGLETON {a,b,c} = {a} or {b} or {c}\n    MAP f {a,b,c,} = {f a, f b, f c} \n    FILTER f {a,b,c} = {elt in {a,b,c} s.t. f(elt) = True} \n    ALLPAIRS f {a,b,c} {d, e, f} = {f(a,d), f(a, e), ... } \n\nBut, importantly, can programs in such a languages themselves be sets? I suspect not, since some of these operators are obviously noncommutative. For example: \n  \n    FILTER (even?, MAP(double, {1})) == {2} \n    MAP(double, FILTER (even? {1})) == {}\n\nSo you couldn't just treat either program as {FILTER even?, MAP double}. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If a stack language consists of functions with signatures Stack -&amp;gt; Stack, then your (totally unexplored) family of set languages would consist of functions with signature Set -&amp;gt; Set. &lt;/p&gt;\n\n&lt;p&gt;What can you do with these functions? Well, off the top of my head, I imagine we can pick an arbitrary element out, filter the set on some predictate, apply a function to the whole set, and maybe even perform a combinatorial &amp;quot;all-pairs of elements&amp;quot; applied to a given operator. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;SINGLETON {a,b,c} = {a} or {b} or {c}\nMAP f {a,b,c,} = {f a, f b, f c} \nFILTER f {a,b,c} = {elt in {a,b,c} s.t. f(elt) = True} \nALLPAIRS f {a,b,c} {d, e, f} = {f(a,d), f(a, e), ... } \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But, importantly, can programs in such a languages themselves be sets? I suspect not, since some of these operators are obviously noncommutative. For example: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;FILTER (even?, MAP(double, {1})) == {2} \nMAP(double, FILTER (even? {1})) == {}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;So you couldn&amp;#39;t just treat either program as {FILTER even?, MAP double}. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67lecs", "flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "created": 1347549678.0, "created_utc": 1347546078.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zpln9", "children": [], "author": "cypherx", "id": "c67lg1a", "parent_id": "t3_zpln9", "score": 0, "approved_by": null, "upvotes": 2, "body": "Related question: Which operations do we know of that are guaranteed to commute? For example, mapping and indexing commute since only mapping actually affects the values of a collection. \n   \n    x = [25, 100]\n    (map sqrt x)[0] == (map sqrt x[0])\n\nAre there any more interesting combinations of operations which commute? ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Related question: Which operations do we know of that are guaranteed to commute? For example, mapping and indexing commute since only mapping actually affects the values of a collection. &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;x = [25, 100]\n(map sqrt x)[0] == (map sqrt x[0])\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Are there any more interesting combinations of operations which commute? &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67lg1a", "flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "created": 1347549888.0, "created_utc": 1347546288.0, "num_reports": null}], "score": 7, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 12, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/zpln9/alternatives_to_stack_machines/", "has_more_comments": false, "name": "t3_zpln9", "created": 1347379338.0, "url": "http://www.reddit.com/r/compsci/comments/zpln9/alternatives_to_stack_machines/", "author_flair_text": null, "author": "moscheles", "created_utc": 1347375738.0, "link_flair_text": null, "media": null, "num_reports": null}, "434": {"domain": "biology.stackexchange.com", "link_flair_class": null, "banned_by": null, "downvotes": 3, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "zps36", "clicked": false, "title": "Evolutionary Game Theory: How is it approached computationally?", "num_comments": 0, "comments": [], "score": 6, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 9, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/zps36/evolutionary_game_theory_how_is_it_approached/", "has_more_comments": false, "name": "t3_zps36", "created": 1347385535.0, "url": "http://biology.stackexchange.com/q/3487/500", "author_flair_text": null, "author": "DevFRus", "created_utc": 1347381935.0, "link_flair_text": null, "media": null, "num_reports": null}, "435": {"domain": "aims.muohio.edu", "link_flair_class": null, "banned_by": null, "downvotes": 32, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "znzkp", "clicked": false, "title": "CS Professor says \"Learn by copying\"", "num_comments": 45, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 16, "link_id": "t3_znzkp", "children": [], "author": "anchoa", "id": "c669huw", "parent_id": "t3_znzkp", "score": 0, "approved_by": null, "upvotes": 57, "body": "I'm not so sure this is a good idea.\n\nI took my data structures course relatively early, I believe it was my second real programming course. I'm glad we had straightforward narrow parameters to meet and did mundane things like implementing linked lists.\n\nI learned a lot from that course, it helped build the fundamental knowledge I needed to learn to program effectively. There was plenty of time to be creative later in my degree program, and I did so using the mental tools I developed in the earlier, more boring courses.\n\nWho knows, there's certainly more than one way to learn. Maybe teaching first graders how to spell by making them write poetry would be effective, too.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m not so sure this is a good idea.&lt;/p&gt;\n\n&lt;p&gt;I took my data structures course relatively early, I believe it was my second real programming course. I&amp;#39;m glad we had straightforward narrow parameters to meet and did mundane things like implementing linked lists.&lt;/p&gt;\n\n&lt;p&gt;I learned a lot from that course, it helped build the fundamental knowledge I needed to learn to program effectively. There was plenty of time to be creative later in my degree program, and I did so using the mental tools I developed in the earlier, more boring courses.&lt;/p&gt;\n\n&lt;p&gt;Who knows, there&amp;#39;s certainly more than one way to learn. Maybe teaching first graders how to spell by making them write poetry would be effective, too.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c669huw", "flair_text": null, "created": 1347310966.0, "created_utc": 1347307366.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_znzkp", "children": [], "author": "ixampl", "id": "c66a33s", "parent_id": "t3_znzkp", "score": 0, "approved_by": null, "upvotes": 7, "body": "Not a bad idea... but \"pleasant grading\"? It might be pleasant but it will be a lot harder to be fair, to set grading criteria etc.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Not a bad idea... but &amp;quot;pleasant grading&amp;quot;? It might be pleasant but it will be a lot harder to be fair, to set grading criteria etc.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66a33s", "flair_text": null, "created": 1347313142.0, "created_utc": 1347309542.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_znzkp", "children": [], "author": "bboe", "id": "c66corj", "parent_id": "t3_znzkp", "score": 0, "approved_by": null, "upvotes": 16, "body": "In principle I think this is a great idea to encourage students who are motivated and have new ideas they want to try. However, I predict this approach won't work well with less motivated students who simply want to do the work that is asked of them. Designing a project is a completely different skill set than being able to implement something according to a design document. It requires a much higher level of understanding that may not be suitable for some first-year students.\n\nIt seems Bo Brinkman has discovered a great way of teaching to students that are similar to himself. However I question the impact this will have on the other, non-overachieving, students.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;In principle I think this is a great idea to encourage students who are motivated and have new ideas they want to try. However, I predict this approach won&amp;#39;t work well with less motivated students who simply want to do the work that is asked of them. Designing a project is a completely different skill set than being able to implement something according to a design document. It requires a much higher level of understanding that may not be suitable for some first-year students.&lt;/p&gt;\n\n&lt;p&gt;It seems Bo Brinkman has discovered a great way of teaching to students that are similar to himself. However I question the impact this will have on the other, non-overachieving, students.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66corj", "flair_text": null, "created": 1347323781.0, "created_utc": 1347320181.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_znzkp", "children": [], "author": "mvaganov", "id": "c66p6y3", "parent_id": "t3_znzkp", "score": 0, "approved_by": null, "upvotes": 4, "body": "When I teach my courses, especially my data structures course, I program examples from scratch in class, as a tutorial, for just about every concept. My students follow along, and write compiling code, imitating what I'm doing on the projector. After I'm done, I post the code written in class in a common drop-box area for future reference.\n\nHaving students copy code being written in front of them is so effective that it doesn't make any sense to me to do it any other way.\n\nI equate it to a martial-arts master showing his pupils the punches, kicks, and flips (how to write code) in addition to describing the flow of qi and assessing the environment (concept and design). I also teach \"Hello World\" as something to memorize, to be able to replicate *reflexively*, in the same way a martial artist first learns their stance.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;When I teach my courses, especially my data structures course, I program examples from scratch in class, as a tutorial, for just about every concept. My students follow along, and write compiling code, imitating what I&amp;#39;m doing on the projector. After I&amp;#39;m done, I post the code written in class in a common drop-box area for future reference.&lt;/p&gt;\n\n&lt;p&gt;Having students copy code being written in front of them is so effective that it doesn&amp;#39;t make any sense to me to do it any other way.&lt;/p&gt;\n\n&lt;p&gt;I equate it to a martial-arts master showing his pupils the punches, kicks, and flips (how to write code) in addition to describing the flow of qi and assessing the environment (concept and design). I also teach &amp;quot;Hello World&amp;quot; as something to memorize, to be able to replicate &lt;em&gt;reflexively&lt;/em&gt;, in the same way a martial artist first learns their stance.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66p6y3", "flair_text": null, "created": 1347390679.0, "created_utc": 1347387079.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_znzkp", "children": [], "author": "okawei", "id": "c669big", "parent_id": "t3_znzkp", "score": 0, "approved_by": null, "upvotes": 15, "body": "I wish my data structures course was taught by this guy ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I wish my data structures course was taught by this guy &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c669big", "flair_text": null, "created": 1347310306.0, "created_utc": 1347306706.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_znzkp", "children": [], "author": "lahwran_", "id": "c66afn8", "parent_id": "t3_znzkp", "score": 0, "approved_by": null, "upvotes": 7, "body": "I think both kinds of learning have their place. Learning algorithms is much more engineering-ish than making a game, which is much more art-ish.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think both kinds of learning have their place. Learning algorithms is much more engineering-ish than making a game, which is much more art-ish.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66afn8", "flair_text": null, "created": 1347314430.0, "created_utc": 1347310830.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_znzkp", "children": [], "author": "kozman7", "id": "c66bdk6", "parent_id": "t3_znzkp", "score": 0, "approved_by": null, "upvotes": 8, "body": "IAMA Student currently taking Dr. Brinkmans Data Structures class, AMA.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;IAMA Student currently taking Dr. Brinkmans Data Structures class, AMA.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66bdk6", "flair_text": null, "created": 1347318179.0, "created_utc": 1347314579.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 9, "link_id": "t3_znzkp", "children": [], "author": "weswalker125", "id": "c668xih", "parent_id": "t3_znzkp", "score": 0, "approved_by": null, "upvotes": 12, "body": "Couldn't agree more.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Couldn&amp;#39;t agree more.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c668xih", "flair_text": null, "created": 1347308827.0, "created_utc": 1347305227.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 22, "link_id": "t3_znzkp", "children": [], "author": "My-Work-Reddit", "id": "c668vng", "parent_id": "t3_znzkp", "score": 0, "approved_by": null, "upvotes": 22, "body": "I like this.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I like this.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c668vng", "flair_text": null, "created": 1347308633.0, "created_utc": 1347305033.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_znzkp", "children": [], "author": "HazzyPls", "id": "c66b0qy", "parent_id": "t3_znzkp", "score": 0, "approved_by": null, "upvotes": 2, "body": "His GitHub link just redirects me to my homepage. Anyone else having that issue?\n\nGot around it [here](https://github.com/MiamiOH-CSE274).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;His GitHub link just redirects me to my homepage. Anyone else having that issue?&lt;/p&gt;\n\n&lt;p&gt;Got around it &lt;a href=\"https://github.com/MiamiOH-CSE274\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66b0qy", "flair_text": null, "created": 1347316705.0, "created_utc": 1347313105.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_znzkp", "children": [], "author": "evanl", "id": "c66bmea", "parent_id": "t3_znzkp", "score": 0, "approved_by": null, "upvotes": 1, "body": "This is an excellent Idea, I wish my professors in school had that approach", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This is an excellent Idea, I wish my professors in school had that approach&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66bmea", "flair_text": null, "created": 1347319236.0, "created_utc": 1347315636.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_znzkp", "children": [], "author": "qihqi", "id": "c66g7ed", "parent_id": "t3_znzkp", "score": 0, "approved_by": null, "upvotes": 2, "body": "well those courses are usually autograded due to large student body... i wonder how can you automate grading without rigorous spec. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;well those courses are usually autograded due to large student body... i wonder how can you automate grading without rigorous spec. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66g7ed", "flair_text": null, "created": 1347338382.0, "created_utc": 1347334782.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_znzkp", "children": [], "author": "shaurz", "id": "c66jmhe", "parent_id": "t3_znzkp", "score": 0, "approved_by": null, "upvotes": 2, "body": "It takes time and experience to develop aesthetics, something most students don't have.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It takes time and experience to develop aesthetics, something most students don&amp;#39;t have.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66jmhe", "flair_text": null, "created": 1347363654.0, "created_utc": 1347360054.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 8, "link_id": "t3_znzkp", "children": [], "author": "letor", "id": "c66c8l2", "parent_id": "t3_znzkp", "score": 0, "approved_by": null, "upvotes": 2, "body": "Doesn't every compSci/programming professor recommend this? \"Look/copy/rewrite the example code for this weeks assignment\" sort of thing. Maybe last millenium people didn't learn coding by copying, but there sure as hell do now.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Doesn&amp;#39;t every compSci/programming professor recommend this? &amp;quot;Look/copy/rewrite the example code for this weeks assignment&amp;quot; sort of thing. Maybe last millenium people didn&amp;#39;t learn coding by copying, but there sure as hell do now.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66c8l2", "flair_text": null, "created": 1347321849.0, "created_utc": 1347318249.0, "num_reports": null}], "score": 164, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 196, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/znzkp/cs_professor_says_learn_by_copying/", "has_more_comments": false, "name": "t3_znzkp", "created": 1347307341.0, "url": "http://aims.muohio.edu/2012/09/10/data-structures-all-the-way-open/", "author_flair_text": null, "author": "hodgesmr", "created_utc": 1347303741.0, "link_flair_text": null, "media": null, "num_reports": null}, "436": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 4, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have a set of data where each point consists of a unique identifier and a time stamp.  Each point represents a point in time where the user represented by the identifier loads some user specific data.  The data is sorted by timestamp in ascending order.  E.g.,&lt;/p&gt;\n\n&lt;p&gt;(1234, 01:30), (1234, 01:31), (2345, 02:22), (3456, 02:30), (4567, 03:00), (3456, 03:20), (4567, 04:00)&lt;/p&gt;\n\n&lt;p&gt;Loading the user data can take a while so I\u2019ve implemented a LRU cache to improve performance.   I\u2019m looking for a way to size the cache to guarantee a certain hit rate given a large set of historical data.  &lt;/p&gt;\n\n&lt;p&gt;In the above data, there are 4 users, 1 of which (2345) loads the resource once so it\u2019s obvious to me that a cache size of 3 will guarantee the highest possible hit rate for that data (miss/add, hit, miss/add, miss/add, miss/remove/add, hit, hit, yielding hit rate of 43%).  What\u2019s not obvious to me is how to find out the size of the cache required for, say, a 25% hit rate without running multiple simulations on the data.  Thoughts anybody?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I have a set of data where each point consists of a unique identifier and a time stamp.  Each point represents a point in time where the user represented by the identifier loads some user specific data.  The data is sorted by timestamp in ascending order.  E.g.,\n\n(1234, 01:30), (1234, 01:31), (2345, 02:22), (3456, 02:30), (4567, 03:00), (3456, 03:20), (4567, 04:00)\n\nLoading the user data can take a while so I\u2019ve implemented a LRU cache to improve performance.   I\u2019m looking for a way to size the cache to guarantee a certain hit rate given a large set of historical data.  \n\nIn the above data, there are 4 users, 1 of which (2345) loads the resource once so it\u2019s obvious to me that a cache size of 3 will guarantee the highest possible hit rate for that data (miss/add, hit, miss/add, miss/add, miss/remove/add, hit, hit, yielding hit rate of 43%).  What\u2019s not obvious to me is how to find out the size of the cache required for, say, a 25% hit rate without running multiple simulations on the data.  Thoughts anybody?\n", "saved": false, "id": "zpl5v", "clicked": false, "title": "Sizing a LRU cache", "num_comments": 3, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zpl5v", "children": [], "author": "hazel-breeze", "id": "c66speo", "parent_id": "t3_zpl5v", "score": 0, "approved_by": null, "upvotes": 1, "body": "it depends how your data is being accessed, but a simulation isn't a bad idea to get an idea of what sort of hit rates you're getting. [this](http://www.ics.forth.gr/dcs/Activities/papers/2000.WCW.caching_search.pdf) paper talks about cache hit rates based on cache size in terms of search queries (see 3.2 locality of reference); maybe you'll get some inspiration there.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;it depends how your data is being accessed, but a simulation isn&amp;#39;t a bad idea to get an idea of what sort of hit rates you&amp;#39;re getting. &lt;a href=\"http://www.ics.forth.gr/dcs/Activities/papers/2000.WCW.caching_search.pdf\"&gt;this&lt;/a&gt; paper talks about cache hit rates based on cache size in terms of search queries (see 3.2 locality of reference); maybe you&amp;#39;ll get some inspiration there.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66speo", "flair_text": null, "created": 1347403458.0, "created_utc": 1347399858.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zpl5v", "children": [], "author": "IcebergLattice", "id": "c66ysfx", "parent_id": "t3_zpl5v", "score": 0, "approved_by": null, "upvotes": 1, "body": "&gt; What\u2019s not obvious to me is how to find out the size of the cache required for, say, a 25% hit rate without running multiple simulations on the data.\n\nYou do one simulation with sort of an \"infinitely large\" LRU cache: use a stack-like structure, and on each access, see how far down the stack the accessed item is (\"reuse distance\"), then pull it to the top. A reuse distance greater than actual cache size corresponds to a cache miss. A histogram of reuse distances from your simulation will show you how large a cache is needed for a given miss rate.\n\nIf you're dealing with a large amount of data, you may need a [more clever data structure](http://www.cs.rochester.edu/~cding/Documents/Publications/pldi03.pdf) to make the simulation run fast enough.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;What\u2019s not obvious to me is how to find out the size of the cache required for, say, a 25% hit rate without running multiple simulations on the data.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;You do one simulation with sort of an &amp;quot;infinitely large&amp;quot; LRU cache: use a stack-like structure, and on each access, see how far down the stack the accessed item is (&amp;quot;reuse distance&amp;quot;), then pull it to the top. A reuse distance greater than actual cache size corresponds to a cache miss. A histogram of reuse distances from your simulation will show you how large a cache is needed for a given miss rate.&lt;/p&gt;\n\n&lt;p&gt;If you&amp;#39;re dealing with a large amount of data, you may need a &lt;a href=\"http://www.cs.rochester.edu/%7Ecding/Documents/Publications/pldi03.pdf\"&gt;more clever data structure&lt;/a&gt; to make the simulation run fast enough.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66ysfx", "flair_text": null, "created": 1347427987.0, "created_utc": 1347424387.0, "num_reports": null}], "score": 4, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 8, "hidden": false, "thumbnail": "", "edited": 1347376880.0, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/zpl5v/sizing_a_lru_cache/", "has_more_comments": false, "name": "t3_zpl5v", "created": 1347378797.0, "url": "http://www.reddit.com/r/compsci/comments/zpl5v/sizing_a_lru_cache/", "author_flair_text": null, "author": "zookeeper_zeke", "created_utc": 1347375197.0, "link_flair_text": null, "media": null, "num_reports": null}, "437": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 5, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I think this is common beginner problem. Is there a methodical way to this? My profs always show me some stuff from software engineering like stepwise programming, but I&amp;#39;m still boggled when I have to use even simplest algorithms since I have a hard time turning them into code.&lt;/p&gt;\n\n&lt;p&gt;For example, a selection sort is totally easy to imagine and draw out. Unfortunately, I have to spend &lt;em&gt;at least&lt;/em&gt; an hour just to get it work right on an array in actual code. This feels unacceptable. When I go work in a production environment, how would I be able to get anything done if it takes an hour to get such a simple algorithm done?&lt;/p&gt;\n\n&lt;p&gt;I finish all assignments and generally enjoy CS, but I absolutely hate getting a simple sounding problem and then having to spend 12 hours of my time finishing it, 9 of which are spent feeling hopeless and incompetent and constantly swapping bad code for new bad code :(&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I think this is common beginner problem. Is there a methodical way to this? My profs always show me some stuff from software engineering like stepwise programming, but I'm still boggled when I have to use even simplest algorithms since I have a hard time turning them into code.\n\nFor example, a selection sort is totally easy to imagine and draw out. Unfortunately, I have to spend *at least* an hour just to get it work right on an array in actual code. This feels unacceptable. When I go work in a production environment, how would I be able to get anything done if it takes an hour to get such a simple algorithm done?\n\nI finish all assignments and generally enjoy CS, but I absolutely hate getting a simple sounding problem and then having to spend 12 hours of my time finishing it, 9 of which are spent feeling hopeless and incompetent and constantly swapping bad code for new bad code :(", "saved": false, "id": "zoad6", "clicked": false, "title": "Undergrad question: how do I get an algorithm that's in my head into actual code?", "num_comments": 19, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_zoad6", "children": [], "author": "Ninwa", "id": "c66bfm1", "parent_id": "t3_zoad6", "score": 0, "approved_by": null, "upvotes": 24, "body": "&gt;When I go work in a production environment, how would I be able to get anything done if it takes an hour to get such a simple algorithm done?\n\nOn the bright-side, you probably wont be re-implementing sort algorithms in production code (you'll use std::sort, or whatever.) A lot of production programming isn't inventing new things, but just 'making computers do things.'\n\nHowever, as with anything else, it's just a matter of practice.  \n\nDo you know what this is?\n&gt;I absolutely hate getting a simple sounding problem and then having to spend 12 hours of my time finishing it, 9 of which are spent feeling hopeless and incompetent and constantly swapping bad code for new bad code \n\nThis is what working hard feels like. Nothing is 'simple,' everything is relatively hard. You scratch your way to the top of the mountain of understanding. Only once you've put the hard work into understanding something is it simple. \n\nIt may sound obvious, but quit worrying about whether or not the problem you're stuck on is simple. It's only simple to those who have learned it before.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;When I go work in a production environment, how would I be able to get anything done if it takes an hour to get such a simple algorithm done?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;On the bright-side, you probably wont be re-implementing sort algorithms in production code (you&amp;#39;ll use std::sort, or whatever.) A lot of production programming isn&amp;#39;t inventing new things, but just &amp;#39;making computers do things.&amp;#39;&lt;/p&gt;\n\n&lt;p&gt;However, as with anything else, it&amp;#39;s just a matter of practice.  &lt;/p&gt;\n\n&lt;p&gt;Do you know what this is?&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;I absolutely hate getting a simple sounding problem and then having to spend 12 hours of my time finishing it, 9 of which are spent feeling hopeless and incompetent and constantly swapping bad code for new bad code &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;This is what working hard feels like. Nothing is &amp;#39;simple,&amp;#39; everything is relatively hard. You scratch your way to the top of the mountain of understanding. Only once you&amp;#39;ve put the hard work into understanding something is it simple. &lt;/p&gt;\n\n&lt;p&gt;It may sound obvious, but quit worrying about whether or not the problem you&amp;#39;re stuck on is simple. It&amp;#39;s only simple to those who have learned it before.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66bfm1", "flair_text": null, "created": 1347318431.0, "created_utc": 1347314831.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zoad6", "children": [], "author": "selfdestructive_AI", "id": "c66bwqz", "parent_id": "t3_zoad6", "score": 0, "approved_by": null, "upvotes": 3, "body": "Some things that may help, especially from an algorithmic perspective:\n\nTesting: Test the invariants, write code that checks your assertions.  Fail early, and you can see where your code assumption didn't match your logical/algorithmic assumption.  IMO, A lot of trouble with implementing can just come down to syntax and a misunderstanding of the language constructs; you're doing translation from algorithm to code too.  \n\nIt can save you time, or it can waste you time.  I'm on the fence about this.  Testing requires practice too.  If you can find a good testing framework, you will either understand where your knowledge failed or where your code failed, but maybe not both.  You can't implement an algorithm if one of the sub-routines you're counting on being correct, is not.\n\nThen there's always the case where maybe your algorithm is not provably correct.  If you start from a flawed beginning then you can't hope to end up anywhere you want to go.\n\n\"a production environment\":  A lot of people don't attempt to re-invent the wheel.  They use OSS and crank out whatever is needed of them.  If you're trying to get business done, use someone else's implementation.  Or, create a bank of useful algorithms that you can port to other languages.  If you understand the algorithm, reading their source can help.\n\n\n&gt;swapping bad code for new bad code \n\nI'm guilty of this too.  Sometimes you just have a feeling - the stars align.  It's not a good strategy because you're banking on faith.  The colloquial term is \"shotgun coding\".  Perhaps research ways to remedy it.  Testing seems pretty important in shotgun coding.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Some things that may help, especially from an algorithmic perspective:&lt;/p&gt;\n\n&lt;p&gt;Testing: Test the invariants, write code that checks your assertions.  Fail early, and you can see where your code assumption didn&amp;#39;t match your logical/algorithmic assumption.  IMO, A lot of trouble with implementing can just come down to syntax and a misunderstanding of the language constructs; you&amp;#39;re doing translation from algorithm to code too.  &lt;/p&gt;\n\n&lt;p&gt;It can save you time, or it can waste you time.  I&amp;#39;m on the fence about this.  Testing requires practice too.  If you can find a good testing framework, you will either understand where your knowledge failed or where your code failed, but maybe not both.  You can&amp;#39;t implement an algorithm if one of the sub-routines you&amp;#39;re counting on being correct, is not.&lt;/p&gt;\n\n&lt;p&gt;Then there&amp;#39;s always the case where maybe your algorithm is not provably correct.  If you start from a flawed beginning then you can&amp;#39;t hope to end up anywhere you want to go.&lt;/p&gt;\n\n&lt;p&gt;&amp;quot;a production environment&amp;quot;:  A lot of people don&amp;#39;t attempt to re-invent the wheel.  They use OSS and crank out whatever is needed of them.  If you&amp;#39;re trying to get business done, use someone else&amp;#39;s implementation.  Or, create a bank of useful algorithms that you can port to other languages.  If you understand the algorithm, reading their source can help.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;swapping bad code for new bad code &lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;I&amp;#39;m guilty of this too.  Sometimes you just have a feeling - the stars align.  It&amp;#39;s not a good strategy because you&amp;#39;re banking on faith.  The colloquial term is &amp;quot;shotgun coding&amp;quot;.  Perhaps research ways to remedy it.  Testing seems pretty important in shotgun coding.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66bwqz", "flair_text": null, "created": 1347320471.0, "created_utc": 1347316871.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zoad6", "children": [], "author": "LordBiff", "id": "c66j9gc", "parent_id": "t3_zoad6", "score": 0, "approved_by": null, "upvotes": 3, "body": "This probably isn't what you want to hear, but a) it requires practice, and b) some people just pick it up quicker than others.\n\nDon't get discouraged, just keep plugging, and eventually you'll find that you can almost see the code in your head before you even start typing.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;This probably isn&amp;#39;t what you want to hear, but a) it requires practice, and b) some people just pick it up quicker than others.&lt;/p&gt;\n\n&lt;p&gt;Don&amp;#39;t get discouraged, just keep plugging, and eventually you&amp;#39;ll find that you can almost see the code in your head before you even start typing.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66j9gc", "flair_text": null, "created": 1347357522.0, "created_utc": 1347353922.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_zoad6", "children": [], "author": "nawitus", "id": "c66thcd", "parent_id": "t3_zoad6", "score": 0, "approved_by": null, "upvotes": 5, "body": "Try top-down design. You start out with a broad idea of the algorithm. Then you turn that into pseudo-code (in practise you can write out the pseudo-code in comments). Then you can start changing the general structure of the pseudo-code into real code (e.g. start with loops). At this point finishing the code is not far away. When you get practise you can start writing code directly when you have a rough sketch of the algorithm in your head.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Try top-down design. You start out with a broad idea of the algorithm. Then you turn that into pseudo-code (in practise you can write out the pseudo-code in comments). Then you can start changing the general structure of the pseudo-code into real code (e.g. start with loops). At this point finishing the code is not far away. When you get practise you can start writing code directly when you have a rough sketch of the algorithm in your head.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66thcd", "flair_text": null, "created": 1347406591.0, "created_utc": 1347402991.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_zoad6", "children": [], "author": "hackingdreams", "id": "c66jx6h", "parent_id": "t3_zoad6", "score": 0, "approved_by": null, "upvotes": 5, "body": "An hour is probably acceptable for this kind of problem as a freshman in computer science, particularly if you don't have a background in programming. I've mentored students who were sophomores who still struggle with it, and I've also seen people pick it up in five minutes.\n\nIt's going to sound strange, but there's an algorithm your brain does to convert something like an idea into code. It's a step-by-step process that's usually unique to the individual, that takes the idea in whatever format that's stored in their head and turns it into concepts that then map to a computer language. It's something that has to be learned: it's not instantaneously grasped, you won't wake up saying \"Eureka\", it's incremental, it grows. Even people who have been in the field for decades are still making tweaks to the way they do things, always learning and picking up tricks they may have missed.\n\nLow-level programming courses (the ones that EVERYONE hate, including the professors, the class of \"here's an if-statement, let's go over hundreds of different ones\") try to get you to find your process on your own. These classes are tedious because you are learning a completely new vocabulary. What makes it worse is that it is based off existing vocabulary that you've learned, but have often been very lax in the usage of. \"if\" is something we take as trivial in English, but has a similar, but stricter meaning in a computer language, that maps down to an exactly defined and specified meaning to the computer's hardware.\n\nLogic and elementary set theory is a wonderful place to start. If you can see in your mind how things logically connect and how things belong to other things, you can start to get a feel for how to deal with collections of things, how to differentiate things. Lots of times an early class in logic is used as a prerequisite for introduction to programming just to be sure you can understand the processes behind it.\n\nThe last piece of advice is that \"practice makes perfect\". Go out and code lots of little things. Get an idea for how your brain formats problems from English and work out how these ideas map to their mathematical or programmatical counterparts. Start small. Try to see how your brain turns something like \"write a program that calculates the sum of the first ten numbers\" into \"sum = 0; for (i = 1; i &lt;= 10; i++) { sum = sum + i; }\" (or even \"sum = (10 * (10 + 1))/2;\", which you can arrive at if you map the algorithm's description to a mathematical description before resorting to code, which is the process I try to get people to look at when I'm mentoring them).\n\n(As an aside, sorting is typically one of the first tasks we give to beginning computer scientists because a large number of more sophisticated computer algorithms are based around some kind of ordering. It's important that you truly grasp these very simple algorithms because it will go on to show you why these algorithms are not as useful as other, more sophisticated sorting algorithms. It's very easy for students to get extremely upset with having to write these kinds of algorithms because they know they're obsolete, even without understanding *why* they are obsolete. Similar issues often arise with getting students to do recursive Fibonacci sequence implementations).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;An hour is probably acceptable for this kind of problem as a freshman in computer science, particularly if you don&amp;#39;t have a background in programming. I&amp;#39;ve mentored students who were sophomores who still struggle with it, and I&amp;#39;ve also seen people pick it up in five minutes.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s going to sound strange, but there&amp;#39;s an algorithm your brain does to convert something like an idea into code. It&amp;#39;s a step-by-step process that&amp;#39;s usually unique to the individual, that takes the idea in whatever format that&amp;#39;s stored in their head and turns it into concepts that then map to a computer language. It&amp;#39;s something that has to be learned: it&amp;#39;s not instantaneously grasped, you won&amp;#39;t wake up saying &amp;quot;Eureka&amp;quot;, it&amp;#39;s incremental, it grows. Even people who have been in the field for decades are still making tweaks to the way they do things, always learning and picking up tricks they may have missed.&lt;/p&gt;\n\n&lt;p&gt;Low-level programming courses (the ones that EVERYONE hate, including the professors, the class of &amp;quot;here&amp;#39;s an if-statement, let&amp;#39;s go over hundreds of different ones&amp;quot;) try to get you to find your process on your own. These classes are tedious because you are learning a completely new vocabulary. What makes it worse is that it is based off existing vocabulary that you&amp;#39;ve learned, but have often been very lax in the usage of. &amp;quot;if&amp;quot; is something we take as trivial in English, but has a similar, but stricter meaning in a computer language, that maps down to an exactly defined and specified meaning to the computer&amp;#39;s hardware.&lt;/p&gt;\n\n&lt;p&gt;Logic and elementary set theory is a wonderful place to start. If you can see in your mind how things logically connect and how things belong to other things, you can start to get a feel for how to deal with collections of things, how to differentiate things. Lots of times an early class in logic is used as a prerequisite for introduction to programming just to be sure you can understand the processes behind it.&lt;/p&gt;\n\n&lt;p&gt;The last piece of advice is that &amp;quot;practice makes perfect&amp;quot;. Go out and code lots of little things. Get an idea for how your brain formats problems from English and work out how these ideas map to their mathematical or programmatical counterparts. Start small. Try to see how your brain turns something like &amp;quot;write a program that calculates the sum of the first ten numbers&amp;quot; into &amp;quot;sum = 0; for (i = 1; i &amp;lt;= 10; i++) { sum = sum + i; }&amp;quot; (or even &amp;quot;sum = (10 * (10 + 1))/2;&amp;quot;, which you can arrive at if you map the algorithm&amp;#39;s description to a mathematical description before resorting to code, which is the process I try to get people to look at when I&amp;#39;m mentoring them).&lt;/p&gt;\n\n&lt;p&gt;(As an aside, sorting is typically one of the first tasks we give to beginning computer scientists because a large number of more sophisticated computer algorithms are based around some kind of ordering. It&amp;#39;s important that you truly grasp these very simple algorithms because it will go on to show you why these algorithms are not as useful as other, more sophisticated sorting algorithms. It&amp;#39;s very easy for students to get extremely upset with having to write these kinds of algorithms because they know they&amp;#39;re obsolete, even without understanding &lt;em&gt;why&lt;/em&gt; they are obsolete. Similar issues often arise with getting students to do recursive Fibonacci sequence implementations).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66jx6h", "flair_text": null, "created": 1347366808.0, "created_utc": 1347363208.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zoad6", "children": [], "author": "st4rx0r", "id": "c66i6fl", "parent_id": "t3_zoad6", "score": 0, "approved_by": null, "upvotes": 2, "body": "Breaking the problem down into manageable chunks is very important. Most simple problems are simple only because they are made up of other simple problems. Object Oriented programming in C++/Java is actually really helpful to new programmers because it encourages you to break the problem down into bite sized chunks to work on.\n\nWriting a complex function as a set of smaller, simpler functions changes the mindset from focusing on one big problem to 3 or 4 smaller simpler problems. Figuring out how to split the function up comes with practice. Even if your not going to re-use a piece of code (which is always the aim in efficient programming) its sometimes helpful to put it in its own function and give it a name so that your mind can process it easier.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Breaking the problem down into manageable chunks is very important. Most simple problems are simple only because they are made up of other simple problems. Object Oriented programming in C++/Java is actually really helpful to new programmers because it encourages you to break the problem down into bite sized chunks to work on.&lt;/p&gt;\n\n&lt;p&gt;Writing a complex function as a set of smaller, simpler functions changes the mindset from focusing on one big problem to 3 or 4 smaller simpler problems. Figuring out how to split the function up comes with practice. Even if your not going to re-use a piece of code (which is always the aim in efficient programming) its sometimes helpful to put it in its own function and give it a name so that your mind can process it easier.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66i6fl", "flair_text": null, "created": 1347348280.0, "created_utc": 1347344680.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zoad6", "children": [], "author": "De_Lille_D", "id": "c66ngqv", "parent_id": "t3_zoad6", "score": 0, "approved_by": null, "upvotes": 2, "body": "Well, you could imagine what it looks like from the computer point of view. You have to be aware what actions a computer can and can't do and how to perform a task using these limitations.\nA computer can only look at one thing at a time. It can remember numbers, characters, words, boolean values, etc.. It can move only one thing at a time (swapping is done by copying item A, putting item B on the spot of item A and placing the copy of A on the spot of item B).\n\nIf someone gave you 2 playing cards with different values, you can determine at a glance which one has the smaller value. A computer has to look at the first card, save it's value, then look at the second card, save that value and compare the 2 saved values. Although high level programming language can give shortcuts for these kinds of things (like directly comparing 2 entries in an array), on the processor level, it's still done in the different steps listed above.\n\nUnderstand what a computer can and can't do and then imagine yourself acting out the algorithm using only the things a computer can do.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well, you could imagine what it looks like from the computer point of view. You have to be aware what actions a computer can and can&amp;#39;t do and how to perform a task using these limitations.\nA computer can only look at one thing at a time. It can remember numbers, characters, words, boolean values, etc.. It can move only one thing at a time (swapping is done by copying item A, putting item B on the spot of item A and placing the copy of A on the spot of item B).&lt;/p&gt;\n\n&lt;p&gt;If someone gave you 2 playing cards with different values, you can determine at a glance which one has the smaller value. A computer has to look at the first card, save it&amp;#39;s value, then look at the second card, save that value and compare the 2 saved values. Although high level programming language can give shortcuts for these kinds of things (like directly comparing 2 entries in an array), on the processor level, it&amp;#39;s still done in the different steps listed above.&lt;/p&gt;\n\n&lt;p&gt;Understand what a computer can and can&amp;#39;t do and then imagine yourself acting out the algorithm using only the things a computer can do.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66ngqv", "flair_text": null, "created": 1347384241.0, "created_utc": 1347380641.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zoad6", "children": [], "author": "CydeWeys", "id": "c66nll0", "parent_id": "t3_zoad6", "score": 0, "approved_by": null, "upvotes": 2, "body": "&gt; When I go work in a production environment, how would I be able to get anything done if it takes an hour to get such a simple algorithm done?\n\nActually, implementing a selection sort by scratch is not really that simple (granted, you'd never need to actually do that in production code, but it's the ability to do it that counts).  The vast majority of professional programming is much easier stuff than that: implementing simple business logic, hooking up data from a database to certain fields on a form, etc.  So if you can tackle converting an algorithm into code in only an hour, you'll be in good shape for the professional world.  Remember, there are 40 hours in a work week, and decent-sized deliverables are typically expected on the order of weeks.  That is a lot of time in which to get even a lot of complicated stuff done, and the more you do it, the better you'll get.\n\n&gt; I finish all assignments and generally enjoy CS, but I absolutely hate getting a simple sounding problem and then having to spend 12 hours of my time finishing it, 9 of which are spent feeling hopeless and incompetent and constantly swapping bad code for new bad code :(\n\nThat's how earning a CS degree is supposed to feel -- they're supposed to push you.  Once you get into the real world of programming, most of the problems you're dealing with will be substantially easier.  I had the same fears as you coming out of my CS degree, and they all ended up being entirely unfounded.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;When I go work in a production environment, how would I be able to get anything done if it takes an hour to get such a simple algorithm done?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Actually, implementing a selection sort by scratch is not really that simple (granted, you&amp;#39;d never need to actually do that in production code, but it&amp;#39;s the ability to do it that counts).  The vast majority of professional programming is much easier stuff than that: implementing simple business logic, hooking up data from a database to certain fields on a form, etc.  So if you can tackle converting an algorithm into code in only an hour, you&amp;#39;ll be in good shape for the professional world.  Remember, there are 40 hours in a work week, and decent-sized deliverables are typically expected on the order of weeks.  That is a lot of time in which to get even a lot of complicated stuff done, and the more you do it, the better you&amp;#39;ll get.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;I finish all assignments and generally enjoy CS, but I absolutely hate getting a simple sounding problem and then having to spend 12 hours of my time finishing it, 9 of which are spent feeling hopeless and incompetent and constantly swapping bad code for new bad code :(&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;That&amp;#39;s how earning a CS degree is supposed to feel -- they&amp;#39;re supposed to push you.  Once you get into the real world of programming, most of the problems you&amp;#39;re dealing with will be substantially easier.  I had the same fears as you coming out of my CS degree, and they all ended up being entirely unfounded.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66nll0", "flair_text": null, "created": 1347384745.0, "created_utc": 1347381145.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zoad6", "children": [], "author": "hobbified", "id": "c67dvjz", "parent_id": "t3_zoad6", "score": 0, "approved_by": null, "upvotes": 1, "body": "Get better at the tools of the language you're using through practice, or try another language with tools that better match your mindset. You're not going to hit the ball out of the park if you're still learning how to hold the bat, and you're not going to write beautiful implementations of beautiful algorithms if you're still learning basic patterns. The work that frustrates you so much right now is giving you the experience you need to code fluently in the future, eventually you'll be spending less time thinking about the little details, so you'll have more time to think about the higher-level organization.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Get better at the tools of the language you&amp;#39;re using through practice, or try another language with tools that better match your mindset. You&amp;#39;re not going to hit the ball out of the park if you&amp;#39;re still learning how to hold the bat, and you&amp;#39;re not going to write beautiful implementations of beautiful algorithms if you&amp;#39;re still learning basic patterns. The work that frustrates you so much right now is giving you the experience you need to code fluently in the future, eventually you&amp;#39;ll be spending less time thinking about the little details, so you&amp;#39;ll have more time to think about the higher-level organization.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67dvjz", "flair_text": null, "created": 1347502752.0, "created_utc": 1347499152.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zoad6", "children": [], "author": "BroseidonGodofTheSea", "id": "c67wm17", "parent_id": "t3_zoad6", "score": 0, "approved_by": null, "upvotes": 1, "body": "When designing or implementing/learning algorithms you realistically shouldn't write anything in any ide/text editor until you have written out a lot of pseudo code and ran a lot of tests. Try learning how to map out algorithms in pseudo code, developing test cases, defining and inductively proving a loop invariant and or finding recurrence relations (depending on the type of algorithm) then finally try coding it out. Algorithms is primarily mathematics and finding efficient ways to solve complex problems, it requires a lot of thought and testing before implementation. \n\nYou'll find that as you practice these techniques, turning ideas into code becomes much simpilar because you will know the algorithm inside and out.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;When designing or implementing/learning algorithms you realistically shouldn&amp;#39;t write anything in any ide/text editor until you have written out a lot of pseudo code and ran a lot of tests. Try learning how to map out algorithms in pseudo code, developing test cases, defining and inductively proving a loop invariant and or finding recurrence relations (depending on the type of algorithm) then finally try coding it out. Algorithms is primarily mathematics and finding efficient ways to solve complex problems, it requires a lot of thought and testing before implementation. &lt;/p&gt;\n\n&lt;p&gt;You&amp;#39;ll find that as you practice these techniques, turning ideas into code becomes much simpilar because you will know the algorithm inside and out.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67wm17", "flair_text": null, "created": 1347593946.0, "created_utc": 1347590346.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zoad6", "children": [], "author": "shundog", "id": "c682902", "parent_id": "t3_zoad6", "score": 0, "approved_by": null, "upvotes": 1, "body": "The best way I can describe it is that you have to \"think in code\".  It's not something that comes easily, it's a skill that you obtain once you have a fundemental understanding of how computers work, along with a ton of practice.  \n\nTry looking up some stuff on assembly language and binary arithmetic; it may seem complicated at first, but I think it will help you gain a better understanding.  Also, try drawing out your algorithms on paper before you implement them.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The best way I can describe it is that you have to &amp;quot;think in code&amp;quot;.  It&amp;#39;s not something that comes easily, it&amp;#39;s a skill that you obtain once you have a fundemental understanding of how computers work, along with a ton of practice.  &lt;/p&gt;\n\n&lt;p&gt;Try looking up some stuff on assembly language and binary arithmetic; it may seem complicated at first, but I think it will help you gain a better understanding.  Also, try drawing out your algorithms on paper before you implement them.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c682902", "flair_text": null, "created": 1347632858.0, "created_utc": 1347629258.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zoad6", "children": [], "author": "furiousC0D3", "id": "c68h7ap", "parent_id": "t3_zoad6", "score": 0, "approved_by": null, "upvotes": 2, "body": "I must say I am working with trees an it's not so pretty having to translate the algorithm to code.What I do is draw it out, try to think of like a computer, write out vars and write out the steps. \n\nFunny how people are using the meme \"reinventing the wheel\". I don't think you are \"reinventing the wheel\" but learning and going though a learning process. These exercises is way to make yourself a better programmer. It helps to think and exercise your mind.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I must say I am working with trees an it&amp;#39;s not so pretty having to translate the algorithm to code.What I do is draw it out, try to think of like a computer, write out vars and write out the steps. &lt;/p&gt;\n\n&lt;p&gt;Funny how people are using the meme &amp;quot;reinventing the wheel&amp;quot;. I don&amp;#39;t think you are &amp;quot;reinventing the wheel&amp;quot; but learning and going though a learning process. These exercises is way to make yourself a better programmer. It helps to think and exercise your mind.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68h7ap", "flair_text": null, "created": 1347705802.0, "created_utc": 1347702202.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_zoad6", "children": [], "author": "crwcomposer", "id": "c66bq0z", "parent_id": "t3_zoad6", "score": 0, "approved_by": null, "upvotes": 4, "body": "&gt;For example, a selection sort is totally easy to imagine and draw out. Unfortunately, I have to spend at least an hour just to get it work right on an array in actual code.\n\nThere's your problem. It's not an algorithm that's in your head, it's just a visualization.\n\nIf you truly had the algorithm in your head, it would be trivial to translate it to code.\n\nMy advice is to brush up on your actual algorithms instead of just being able to visualize the process.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;blockquote&gt;\n&lt;p&gt;For example, a selection sort is totally easy to imagine and draw out. Unfortunately, I have to spend at least an hour just to get it work right on an array in actual code.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;There&amp;#39;s your problem. It&amp;#39;s not an algorithm that&amp;#39;s in your head, it&amp;#39;s just a visualization.&lt;/p&gt;\n\n&lt;p&gt;If you truly had the algorithm in your head, it would be trivial to translate it to code.&lt;/p&gt;\n\n&lt;p&gt;My advice is to brush up on your actual algorithms instead of just being able to visualize the process.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66bq0z", "flair_text": null, "created": 1347319666.0, "created_utc": 1347316066.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 6, "link_id": "t3_zoad6", "children": [], "author": "[deleted]", "id": "c66elnm", "parent_id": "t3_zoad6", "score": 0, "approved_by": null, "upvotes": 4, "body": "making correct software is hard. you've got, what, not even 4 years of barely part time experience writing software?\n\neven after an hour, i doubt your sort is correct.\n\nhttp://googleresearch.blogspot.com/2006/06/extra-extra-read-all-about-it-nearly.html\n\nkeep practicing. you'll get better.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;making correct software is hard. you&amp;#39;ve got, what, not even 4 years of barely part time experience writing software?&lt;/p&gt;\n\n&lt;p&gt;even after an hour, i doubt your sort is correct.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://googleresearch.blogspot.com/2006/06/extra-extra-read-all-about-it-nearly.html\"&gt;http://googleresearch.blogspot.com/2006/06/extra-extra-read-all-about-it-nearly.html&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;keep practicing. you&amp;#39;ll get better.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66elnm", "flair_text": null, "created": 1347332005.0, "created_utc": 1347328405.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zoad6", "children": [], "author": "De_Lille_D", "id": "c66nc49", "parent_id": "t3_zoad6", "score": 0, "approved_by": null, "upvotes": 1, "body": "Well, you could imagine what it looks like from the computer point of view. You have to be aware what actions a computer can and can't do and how to perform a task using these limitations.\nA computer can only look at one thing at a time. It can remember numbers, characters, words, boolean values, etc.. It can move only one thing at a time (swapping is done by copying item A, putting item B on the spot of item A and placing the copy of A on the spot of item B).\n\nIf someone gave you 2 playing cards with different values, you c\n\nLet's take sorting a deck of cards with selection sort for example (ignoring suit). You can simulate this by working out the algorithm by hand, with cards facing down. You can look at 1 card at a time, but you have to put it back face down. You can write numbers on a page, but only 1 of these numbers can be visible at once.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well, you could imagine what it looks like from the computer point of view. You have to be aware what actions a computer can and can&amp;#39;t do and how to perform a task using these limitations.\nA computer can only look at one thing at a time. It can remember numbers, characters, words, boolean values, etc.. It can move only one thing at a time (swapping is done by copying item A, putting item B on the spot of item A and placing the copy of A on the spot of item B).&lt;/p&gt;\n\n&lt;p&gt;If someone gave you 2 playing cards with different values, you c&lt;/p&gt;\n\n&lt;p&gt;Let&amp;#39;s take sorting a deck of cards with selection sort for example (ignoring suit). You can simulate this by working out the algorithm by hand, with cards facing down. You can look at 1 card at a time, but you have to put it back face down. You can write numbers on a page, but only 1 of these numbers can be visible at once.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66nc49", "flair_text": null, "created": 1347383763.0, "created_utc": 1347380163.0, "num_reports": null}], "score": 10, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 15, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/zoad6/undergrad_question_how_do_i_get_an_algorithm/", "has_more_comments": false, "name": "t3_zoad6", "created": 1347317306.0, "url": "http://www.reddit.com/r/compsci/comments/zoad6/undergrad_question_how_do_i_get_an_algorithm/", "author_flair_text": null, "author": "feartrich", "created_utc": 1347313706.0, "link_flair_text": null, "media": null, "num_reports": null}, "438": {"domain": "jeremymanson.blogspot.com", "link_flair_class": null, "banned_by": null, "downvotes": 11, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "zmgfq", "clicked": false, "title": "Transactional Hardware on x86", "num_comments": 2, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zmgfq", "children": [], "author": "maceface101", "id": "c65x3q9", "parent_id": "t3_zmgfq", "score": 0, "approved_by": null, "upvotes": 1, "body": "We use x86 at work for our EEG data. Cool post!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;We use x86 at work for our EEG data. Cool post!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c65x3q9", "flair_text": null, "created": 1347243398.0, "created_utc": 1347239798.0, "num_reports": null}], "score": 32, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 43, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/zmgfq/transactional_hardware_on_x86/", "has_more_comments": false, "name": "t3_zmgfq", "created": 1347235000.0, "url": "http://jeremymanson.blogspot.com/2012/02/transactional-hardware-on-x86.html", "author_flair_text": null, "author": "cabbagerat", "created_utc": 1347231400.0, "link_flair_text": null, "media": null, "num_reports": null}, "439": {"domain": "youtu.be", "link_flair_class": null, "banned_by": null, "downvotes": 2, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "zlknd", "clicked": false, "title": "\"Richard Feynman Computer Heuristics Lecture\"", "num_comments": 3, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zlknd", "children": [], "author": "lister-of-smeg", "id": "c662a99", "parent_id": "t3_zlknd", "score": 0, "approved_by": null, "upvotes": 1, "body": "Well there was some stuff about heuristics at near the end...", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Well there was some stuff about heuristics at near the end...&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c662a99", "flair_text": null, "created": 1347271905.0, "created_utc": 1347268305.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zlknd", "children": [], "author": "Snootwaller", "id": "c67oa6a", "parent_id": "t3_zlknd", "score": 0, "approved_by": null, "upvotes": 1, "body": "Excellent video with material taken straight from his classic \"Feynman Lectures on Computation.\" I wish there was more of his 1980s lectures recorded. (I've seen the Vega Science series from the same era.)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Excellent video with material taken straight from his classic &amp;quot;Feynman Lectures on Computation.&amp;quot; I wish there was more of his 1980s lectures recorded. (I&amp;#39;ve seen the Vega Science series from the same era.)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c67oa6a", "flair_text": null, "created": 1347560787.0, "created_utc": 1347557187.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zlknd", "children": [], "author": "whoMEvernot", "id": "c68ll6a", "parent_id": "t3_zlknd", "score": 0, "approved_by": null, "upvotes": 1, "body": "A hero of mine, always good to see his approach to working out problems.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;A hero of mine, always good to see his approach to working out problems.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c68ll6a", "flair_text": null, "created": 1347737448.0, "created_utc": 1347733848.0, "num_reports": null}], "score": 11, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 13, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {"content": "&lt;iframe width=\"600\" height=\"338\" src=\"http://www.youtube.com/embed/EKWGGDXe5MA?fs=1&amp;feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "width": 600, "scrolling": false, "height": 338}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/zlknd/richard_feynman_computer_heuristics_lecture/", "has_more_comments": false, "name": "t3_zlknd", "created": 1347195853.0, "url": "http://youtu.be/EKWGGDXe5MA", "author_flair_text": null, "author": "er45", "created_utc": 1347192253.0, "link_flair_text": null, "media": {"type": "youtu.be", "oembed": {"provider_url": "http://www.youtube.com/", "description": "Richard Feynman, Winner of the 1965 Nobel Prize in Physics, gives us an insightful lecture about computer heuristics: how computers work, how they file information, how they handle data, how they use their information in allocated processing in a finite amount of time to solve problems and how they actually compute values of interest to human beings.", "title": "Richard Feynman Computer Heuristics Lecture", "url": "http://www.youtube.com/watch?v=EKWGGDXe5MA", "author_name": "MuonRay", "height": 338, "width": 600, "html": "&lt;iframe width=\"600\" height=\"338\" src=\"http://www.youtube.com/embed/EKWGGDXe5MA?fs=1&amp;feature=oembed\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;", "thumbnail_width": 480, "version": "1.0", "provider_name": "YouTube", "thumbnail_url": "http://i2.ytimg.com/vi/EKWGGDXe5MA/hqdefault.jpg", "type": "video", "thumbnail_height": 360, "author_url": "http://www.youtube.com/user/MuonRay"}}, "num_reports": null}, "440": {"domain": "usenix.org", "link_flair_class": null, "banned_by": null, "downvotes": 12, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "zlh6b", "clicked": false, "title": "On the Feasibility of Side-Channel Attacks with Brain-Computer Interfaces", "num_comments": 2, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_zlh6b", "children": [], "author": "prophetjohn", "id": "c65pejk", "parent_id": "t3_zlh6b", "score": 0, "approved_by": null, "upvotes": 18, "body": "Please indicate in the title that clicking on your link is going to initiate a download and not navigate me to a website like every other link on Reddit.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Please indicate in the title that clicking on your link is going to initiate a download and not navigate me to a website like every other link on Reddit.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c65pejk", "flair_text": null, "created": 1347211151.0, "created_utc": 1347207551.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zlh6b", "children": [], "author": "sprunth", "id": "c65uica", "parent_id": "t3_zlh6b", "score": 0, "approved_by": null, "upvotes": 7, "body": "Here's the Google Docs Viewer version:\n\n[link](https://docs.google.com/viewer?url=https%3A%2F%2Fwww.usenix.org%2Fsystem%2Ffiles%2Fconference%2Fusenixsecurity12%2Fsec12-final56.pdf)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s the Google Docs Viewer version:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://docs.google.com/viewer?url=https%3A%2F%2Fwww.usenix.org%2Fsystem%2Ffiles%2Fconference%2Fusenixsecurity12%2Fsec12-final56.pdf\"&gt;link&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c65uica", "flair_text": null, "created": 1347232359.0, "created_utc": 1347228759.0, "num_reports": null}], "score": 14, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 26, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/zlh6b/on_the_feasibility_of_sidechannel_attacks_with/", "has_more_comments": false, "name": "t3_zlh6b", "created": 1347185677.0, "url": "https://www.usenix.org/system/files/conference/usenixsecurity12/sec12-final56.pdf", "author_flair_text": null, "author": "DavidSJ", "created_utc": 1347182077.0, "link_flair_text": null, "media": null, "num_reports": null}, "441": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 26, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;This semester I&amp;#39;ll be taking a data structures class which is taught using Java as the primary language. I don&amp;#39;t have a whole lot of exposure to the language (I &lt;a href=\"http://forums.bukkit.org/threads/inactive-fun-youreit-v0-4-a-game-of-tag-670-677.12634/\"&gt;wrote a Minecraft plugin once&lt;/a&gt;) but that&amp;#39;s about it (I have a lot of experience in other languages). I&amp;#39;m wondering if anybody has opinions on whether or not there are any significant benefits to learning data structures in say Java, versus learning them in C.&lt;/p&gt;\n\n&lt;p&gt;My gut feeling is &amp;#39;no.&amp;#39; On a conceptual level I do think that any language would suffice, but I am interested in other and differing opinions.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "This semester I'll be taking a data structures class which is taught using Java as the primary language. I don't have a whole lot of exposure to the language (I [wrote a Minecraft plugin once](http://forums.bukkit.org/threads/inactive-fun-youreit-v0-4-a-game-of-tag-670-677.12634/)) but that's about it (I have a lot of experience in other languages). I'm wondering if anybody has opinions on whether or not there are any significant benefits to learning data structures in say Java, versus learning them in C.\n\nMy gut feeling is 'no.' On a conceptual level I do think that any language would suffice, but I am interested in other and differing opinions.", "saved": false, "id": "zj1dr", "clicked": false, "title": "Are there any significant benefits to learning data structures in one language or another?", "num_comments": 59, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 6, "link_id": "t3_zj1dr", "children": [], "author": "teb311", "id": "c6510or", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 68, "body": "I would go one step further and argue that *learning* data structures ought to be language agnostic. Data structures are abstractions that shouldn't be tied to the language you first implement them in. \n\nI would also argue that being able to implement any given data structure in both C (because it has very little sugar) and a functional language like Haskell or Scheme could be useful in deepening your understanding of any one data-structure. \n\nThe paradigm shift from C-&gt;OOP(Java, C++) is pretty small; 'make a pointer to a struct and call it an object'. But the shift from OOP-&gt;functional is not small. Being able to do both would be an excellent learning exercise. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I would go one step further and argue that &lt;em&gt;learning&lt;/em&gt; data structures ought to be language agnostic. Data structures are abstractions that shouldn&amp;#39;t be tied to the language you first implement them in. &lt;/p&gt;\n\n&lt;p&gt;I would also argue that being able to implement any given data structure in both C (because it has very little sugar) and a functional language like Haskell or Scheme could be useful in deepening your understanding of any one data-structure. &lt;/p&gt;\n\n&lt;p&gt;The paradigm shift from C-&amp;gt;OOP(Java, C++) is pretty small; &amp;#39;make a pointer to a struct and call it an object&amp;#39;. But the shift from OOP-&amp;gt;functional is not small. Being able to do both would be an excellent learning exercise. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6510or", "flair_text": null, "created": 1347062286.0, "created_utc": 1347058686.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_zj1dr", "children": [], "author": "Okaram", "id": "c650wlb", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 15, "body": "As far as *data structures* are concerned, not that much; however, a ds class is used also to make you a better programmer; I think it is a good idea to learn how to deal with pointers and explicit allocation/deallocation of memory, so C (or even better, C++) would be a better language, IMHO.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;As far as &lt;em&gt;data structures&lt;/em&gt; are concerned, not that much; however, a ds class is used also to make you a better programmer; I think it is a good idea to learn how to deal with pointers and explicit allocation/deallocation of memory, so C (or even better, C++) would be a better language, IMHO.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c650wlb", "flair_text": null, "created": 1347061799.0, "created_utc": 1347058199.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_zj1dr", "children": [], "author": "com2kid", "id": "c652ofs", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 12, "body": "With Java, you have to deal with the fact that everything is wrapped up in a class. Data structures are not inherently OO related. They *can* be represented in an OO paradigm of course, but there is nothing that says it must be so.\n\nSo for new programmers I have seen Java's \"everything is a class\" syntax confuse the heck out of some people. It requires performing some mental abstractions (ignore the \"class\" keyword sprinkled around everywhere!) by students who are just starting to train their brains to think in terms of abstractions.\n\nIMHO a language like C or Ada is far better for getting an understanding of data structures. If you compare all the surrounding code a data structure implementation has in C or Ada with the same data structure in Java or C#, you'll find Java/C# have a lot more \"language specific\" junk in them.\n\nOn top of that, thinking in terms of objects can be dangerous. More advanced data structures, such as Graphs, have multiple underlying representations, but students raised in a pure OO environment will immediately jump to an (often less efficient) OO based implementation without even realizing other possibilities exist.\n\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;With Java, you have to deal with the fact that everything is wrapped up in a class. Data structures are not inherently OO related. They &lt;em&gt;can&lt;/em&gt; be represented in an OO paradigm of course, but there is nothing that says it must be so.&lt;/p&gt;\n\n&lt;p&gt;So for new programmers I have seen Java&amp;#39;s &amp;quot;everything is a class&amp;quot; syntax confuse the heck out of some people. It requires performing some mental abstractions (ignore the &amp;quot;class&amp;quot; keyword sprinkled around everywhere!) by students who are just starting to train their brains to think in terms of abstractions.&lt;/p&gt;\n\n&lt;p&gt;IMHO a language like C or Ada is far better for getting an understanding of data structures. If you compare all the surrounding code a data structure implementation has in C or Ada with the same data structure in Java or C#, you&amp;#39;ll find Java/C# have a lot more &amp;quot;language specific&amp;quot; junk in them.&lt;/p&gt;\n\n&lt;p&gt;On top of that, thinking in terms of objects can be dangerous. More advanced data structures, such as Graphs, have multiple underlying representations, but students raised in a pure OO environment will immediately jump to an (often less efficient) OO based implementation without even realizing other possibilities exist.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c652ofs", "flair_text": null, "created": 1347069848.0, "created_utc": 1347066248.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_zj1dr", "children": [], "author": "NoMoreNicksLeft", "id": "c653um4", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 11, "body": "It is important to learn how pointers behave both in assembly and in C. You need both, and arguably you need this even if you never touch either again. You may never even truly understand the computer if you don't do this.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It is important to learn how pointers behave both in assembly and in C. You need both, and arguably you need this even if you never touch either again. You may never even truly understand the computer if you don&amp;#39;t do this.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c653um4", "flair_text": null, "created": 1347075490.0, "created_utc": 1347071890.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zj1dr", "children": [], "author": "Mgccl", "id": "c653785", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 5, "body": "I would say learning data structure doesn't depend on the language.\nHowever, the best way to learn a data structures is to actually implement it.\nIf you don't care if you implementation actually achieve the theoretical time/space complexity, then fine, language still doesn't matter. (Except some language will make your life easier, say Go)\n\nBut there is a difference if you really care about your code matches the theory. In some languages, it is impossible. For example what happens with languages where you don't get to manipulate pointers? There are of course ways to simulate pointers, but how do we know this simulation isn't way slower than the real data structure?\n\nAn extreme example would be a imaginary language that specify a variation of Turing machine with dynamic input output.\n\nOf course one will argue that is not a \"reasonable\" language. Are there real life general purpose language that are really different for learning data structure? Yes, if you use the purely functional subset of Haskell.\n\nFirst I will sidetrack and consider persistent data structures. A persistent data structure is one where you can \"go back in time\" and query the data structure at a previous state. There are a few different level of persistent, each one contains the previous one. Partial persistent is where you can just query the history. Fully persistent allow you to modify the history(which changes the future). Confluent Persistence allow you to merge different history efficiently. And the crown jewel of persistence is functional persistent, which means we cannot alter anything, we can only make a \"smart\" new copy of the data structure to reflect certain queries. To learn more see the first two lecture of [Advanced Data Structures](http://courses.csail.mit.edu/6.851/spring12/).\n\nHow to make data structure X into a persistent one with reasonable additional time/space complexity? It is a recent research field where there are papers published once in a while. \n\nHere is the punchline.\n\nAny data structure implemented in a purely functional language is automatically a functional persistent data structure!(if you still keep some way for accessing the old version)\n\nSo if one can implement certain data structure X in a purely functional language(without using the imperative part of the language) AND keep the time/space complexity reasonable, then I smell a nice paper and a conference talk.\n\nIn fact, you have to read almost 200 pages of Purely Functional Data Structures by Chris Okasaki, to see how to implement a efficient purely functional deque, which is a pretty trivial project if you are using C, Java or almost any imperative language. ", "edited": 1347068987.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I would say learning data structure doesn&amp;#39;t depend on the language.\nHowever, the best way to learn a data structures is to actually implement it.\nIf you don&amp;#39;t care if you implementation actually achieve the theoretical time/space complexity, then fine, language still doesn&amp;#39;t matter. (Except some language will make your life easier, say Go)&lt;/p&gt;\n\n&lt;p&gt;But there is a difference if you really care about your code matches the theory. In some languages, it is impossible. For example what happens with languages where you don&amp;#39;t get to manipulate pointers? There are of course ways to simulate pointers, but how do we know this simulation isn&amp;#39;t way slower than the real data structure?&lt;/p&gt;\n\n&lt;p&gt;An extreme example would be a imaginary language that specify a variation of Turing machine with dynamic input output.&lt;/p&gt;\n\n&lt;p&gt;Of course one will argue that is not a &amp;quot;reasonable&amp;quot; language. Are there real life general purpose language that are really different for learning data structure? Yes, if you use the purely functional subset of Haskell.&lt;/p&gt;\n\n&lt;p&gt;First I will sidetrack and consider persistent data structures. A persistent data structure is one where you can &amp;quot;go back in time&amp;quot; and query the data structure at a previous state. There are a few different level of persistent, each one contains the previous one. Partial persistent is where you can just query the history. Fully persistent allow you to modify the history(which changes the future). Confluent Persistence allow you to merge different history efficiently. And the crown jewel of persistence is functional persistent, which means we cannot alter anything, we can only make a &amp;quot;smart&amp;quot; new copy of the data structure to reflect certain queries. To learn more see the first two lecture of &lt;a href=\"http://courses.csail.mit.edu/6.851/spring12/\"&gt;Advanced Data Structures&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;How to make data structure X into a persistent one with reasonable additional time/space complexity? It is a recent research field where there are papers published once in a while. &lt;/p&gt;\n\n&lt;p&gt;Here is the punchline.&lt;/p&gt;\n\n&lt;p&gt;Any data structure implemented in a purely functional language is automatically a functional persistent data structure!(if you still keep some way for accessing the old version)&lt;/p&gt;\n\n&lt;p&gt;So if one can implement certain data structure X in a purely functional language(without using the imperative part of the language) AND keep the time/space complexity reasonable, then I smell a nice paper and a conference talk.&lt;/p&gt;\n\n&lt;p&gt;In fact, you have to read almost 200 pages of Purely Functional Data Structures by Chris Okasaki, to see how to implement a efficient purely functional deque, which is a pretty trivial project if you are using C, Java or almost any imperative language. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c653785", "flair_text": null, "created": 1347072347.0, "created_utc": 1347068747.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_zj1dr", "children": [], "author": "stevely", "id": "c650r6f", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 7, "body": "Pretty much no. Java and C aren't really different enough to make a difference. For learning C helps in making explicit the difference between references and values, but Java has a type system that's more expressive. Personally I'd say stick with Java just because it's less of a pain in the ass to deal with.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Pretty much no. Java and C aren&amp;#39;t really different enough to make a difference. For learning C helps in making explicit the difference between references and values, but Java has a type system that&amp;#39;s more expressive. Personally I&amp;#39;d say stick with Java just because it&amp;#39;s less of a pain in the ass to deal with.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c650r6f", "flair_text": null, "created": 1347061165.0, "created_utc": 1347057565.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zj1dr", "children": [], "author": "grlira", "id": "c653dxd", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 2, "body": "There are significant benefits to learning a data structure (and more importantly an algorithm, which is the next logical step) in no specific language. The best thing is pseudo code (C-like, Haskell-like or \"Natural language like\", whatever) associated with drawings (these help a lot visualizing things, at least for me).\n\nHowever, if the choice is between Java and C, go with C. It's better to learn the low level way and then work your way up adding abstraction layers than the other way around, IMO.\n\nEdit: That said, Java is a perfectly fine language to use to learn data structures. The really important part is not the language itself but the theory: time/space complexity, usage cases, etc etc.\nAnd btw, you will find some data structures which just can't be implemented unless you use something with lets you manipulate pointers (Fibonacci heaps and XOR linked lists come to mind)", "edited": 1347069920.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;There are significant benefits to learning a data structure (and more importantly an algorithm, which is the next logical step) in no specific language. The best thing is pseudo code (C-like, Haskell-like or &amp;quot;Natural language like&amp;quot;, whatever) associated with drawings (these help a lot visualizing things, at least for me).&lt;/p&gt;\n\n&lt;p&gt;However, if the choice is between Java and C, go with C. It&amp;#39;s better to learn the low level way and then work your way up adding abstraction layers than the other way around, IMO.&lt;/p&gt;\n\n&lt;p&gt;Edit: That said, Java is a perfectly fine language to use to learn data structures. The really important part is not the language itself but the theory: time/space complexity, usage cases, etc etc.\nAnd btw, you will find some data structures which just can&amp;#39;t be implemented unless you use something with lets you manipulate pointers (Fibonacci heaps and XOR linked lists come to mind)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c653dxd", "flair_text": null, "created": 1347073260.0, "created_utc": 1347069660.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zj1dr", "children": [], "author": "organic", "id": "c653ml2", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 2, "body": "C over C++ or Java.   \n\nProbably the best language right now to learn pure data structures is one that presents them without coupling them to an object system; so probably a lisp of some sort. \n\nClojure is rather nice and will play in the Java system your class is operating within.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;C over C++ or Java.   &lt;/p&gt;\n\n&lt;p&gt;Probably the best language right now to learn pure data structures is one that presents them without coupling them to an object system; so probably a lisp of some sort. &lt;/p&gt;\n\n&lt;p&gt;Clojure is rather nice and will play in the Java system your class is operating within.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c653ml2", "flair_text": null, "created": 1347074428.0, "created_utc": 1347070828.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zj1dr", "children": [], "author": "jsantos17", "id": "c654cs4", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 1, "body": "If you already proficient programming learn it using pseudo-code or in a new language you don't know yet (say, Objective-C). Otherwise, learn it any language you like, it will help you get more practice.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If you already proficient programming learn it using pseudo-code or in a new language you don&amp;#39;t know yet (say, Objective-C). Otherwise, learn it any language you like, it will help you get more practice.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c654cs4", "flair_text": null, "created": 1347077880.0, "created_utc": 1347074280.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zj1dr", "children": [], "author": "taejo", "id": "c657chx", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 2, "body": "One point that I haven't seen here is that it's probably easier to learn about functional (AKA persistent) data structures in a functional language. Not that it can't be done in an imperative language, but a) you can't accidentally write a non-functional data structure (I know that when I've implemented functional data structures in C++, I've often made accidental mutations and the like which would be impossible in Haskell) and b) there are fewer examples, tutorials, etc. just because it's not the usual thing in the language.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;One point that I haven&amp;#39;t seen here is that it&amp;#39;s probably easier to learn about functional (AKA persistent) data structures in a functional language. Not that it can&amp;#39;t be done in an imperative language, but a) you can&amp;#39;t accidentally write a non-functional data structure (I know that when I&amp;#39;ve implemented functional data structures in C++, I&amp;#39;ve often made accidental mutations and the like which would be impossible in Haskell) and b) there are fewer examples, tutorials, etc. just because it&amp;#39;s not the usual thing in the language.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c657chx", "flair_text": null, "created": 1347097385.0, "created_utc": 1347093785.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zj1dr", "children": [], "author": "leeto_of_troy", "id": "c657i4x", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 1, "body": "Personally my data structures class was taught using C++, but if your professor's any good the actual teaching of data structures will be more or less language-independent with the Java part being mostly for practical implementation (which in that case i do think Java is a good choice considering you don't have to worry about a lot of other things and can focus more on getting to see it in motion).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Personally my data structures class was taught using C++, but if your professor&amp;#39;s any good the actual teaching of data structures will be more or less language-independent with the Java part being mostly for practical implementation (which in that case i do think Java is a good choice considering you don&amp;#39;t have to worry about a lot of other things and can focus more on getting to see it in motion).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c657i4x", "flair_text": null, "created": 1347099273.0, "created_utc": 1347095673.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zj1dr", "children": [], "author": "Froskoy", "id": "c659gts", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 2, "body": "Data structures should be studied independently of language and then practiced in multiple languages.\n\nSome languages are more amenable to use of different data structures. For example if you use a functional language, you will more likely want to implement things using lists, whereas in C, say, you'd probably use arrays more.\n\nIf you want to properly understand data structures you MUST implement them. Using a low-level language will give you an understanding of the deep-down internal workings of them, and a high-level language will allow you to integrate them into your algorithms to practice using them. Ideally do both.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Data structures should be studied independently of language and then practiced in multiple languages.&lt;/p&gt;\n\n&lt;p&gt;Some languages are more amenable to use of different data structures. For example if you use a functional language, you will more likely want to implement things using lists, whereas in C, say, you&amp;#39;d probably use arrays more.&lt;/p&gt;\n\n&lt;p&gt;If you want to properly understand data structures you MUST implement them. Using a low-level language will give you an understanding of the deep-down internal workings of them, and a high-level language will allow you to integrate them into your algorithms to practice using them. Ideally do both.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c659gts", "flair_text": null, "created": 1347119360.0, "created_utc": 1347115760.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zj1dr", "children": [], "author": "mcandre", "id": "c65atgf", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 1, "body": "Data structures should carry over to all languages (UTM), but...\n\nSome languages emphasize certain data structures more than others. Such systems really showcase the power of their favorite data structures.\n\n * LISP and ML for linked lists, trees, graphs\n * MATLAB and SAC for vectors\n * Ruby and JavaScript for hashmaps\n * Perl for strings\n * Erlang for bitstreams\n * UNIX for text files\n * PHP for RDBMSs\n * C and Java for structs, arrays\n\nIf you're willing to wade deeper into C.S., you might like Haskell. Its terse, descriptive notation allows you to generalize types so that for any typeclass you define, you instantly are able to treat that typeclass as a List of (typeclass), Graph of (typeclass), List of List of List of (typeclass), etc., without writing any further code. Haskell's mathematical foundations forms an ideal environment for researchers to experiment with altogether new data structures.", "edited": 1347123276.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Data structures should carry over to all languages (UTM), but...&lt;/p&gt;\n\n&lt;p&gt;Some languages emphasize certain data structures more than others. Such systems really showcase the power of their favorite data structures.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;LISP and ML for linked lists, trees, graphs&lt;/li&gt;\n&lt;li&gt;MATLAB and SAC for vectors&lt;/li&gt;\n&lt;li&gt;Ruby and JavaScript for hashmaps&lt;/li&gt;\n&lt;li&gt;Perl for strings&lt;/li&gt;\n&lt;li&gt;Erlang for bitstreams&lt;/li&gt;\n&lt;li&gt;UNIX for text files&lt;/li&gt;\n&lt;li&gt;PHP for RDBMSs&lt;/li&gt;\n&lt;li&gt;C and Java for structs, arrays&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;If you&amp;#39;re willing to wade deeper into C.S., you might like Haskell. Its terse, descriptive notation allows you to generalize types so that for any typeclass you define, you instantly are able to treat that typeclass as a List of (typeclass), Graph of (typeclass), List of List of List of (typeclass), etc., without writing any further code. Haskell&amp;#39;s mathematical foundations forms an ideal environment for researchers to experiment with altogether new data structures.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c65atgf", "flair_text": null, "created": 1347126498.0, "created_utc": 1347122898.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zj1dr", "children": [], "author": "peterquest", "id": "c65b8i5", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 2, "body": "The best language to learn Data Structures in is pseudocode.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The best language to learn Data Structures in is pseudocode.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c65b8i5", "flair_text": null, "created": 1347128391.0, "created_utc": 1347124791.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zj1dr", "children": [], "author": "LittlemanTAMU", "id": "c65eq2d", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 1, "body": "I think learning the concepts should be language-independent. Learning the implementation should be done at the lowest level you can stand so you also learn the pitfalls and advantages of each structure as they relate to the processor architecture (e.g. alignment, cache size, etc). So I recommend assembly if you can stand it, C otherwise.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I think learning the concepts should be language-independent. Learning the implementation should be done at the lowest level you can stand so you also learn the pitfalls and advantages of each structure as they relate to the processor architecture (e.g. alignment, cache size, etc). So I recommend assembly if you can stand it, C otherwise.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c65eq2d", "flair_text": null, "created": 1347144628.0, "created_utc": 1347141028.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zj1dr", "children": [], "author": "markgraydk", "id": "c65njjn", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 1, "body": "I'd turn the question around and say that I find implementing data structures a good way to learn a new language. If you don't know how to pick a small problem to work on then just go ahead an create some ADTs and some sorting algorithms.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d turn the question around and say that I find implementing data structures a good way to learn a new language. If you don&amp;#39;t know how to pick a small problem to work on then just go ahead an create some ADTs and some sorting algorithms.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c65njjn", "flair_text": null, "created": 1347200490.0, "created_utc": 1347196890.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zj1dr", "children": [], "author": "Cubesoup", "id": "c666om2", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 1, "body": "Hakell makes data easy.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Hakell makes data easy.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c666om2", "flair_text": null, "created": 1347300077.0, "created_utc": 1347296477.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zj1dr", "children": [], "author": "djn", "id": "c655yt4", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 3, "body": "I'd argue for Python. Other languages like C and Java require more overhead in lines of code to express even very simple things,", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d argue for Python. Other languages like C and Java require more overhead in lines of code to express even very simple things,&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c655yt4", "flair_text": null, "created": 1347086182.0, "created_utc": 1347082582.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 7, "link_id": "t3_zj1dr", "children": [], "author": "JD557", "id": "c650pe0", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 7, "body": "I would say that the best language would be C++, since it's Object-Oriented (which is quite nice to understand some structures) and it's pretty easy to know when you are using pointers (Java kind of hides that).\n\nNevertheless, it doesn't really matter, since you only need to grasp the concept behind the structure, and the theory stays (almost) the same for all languages.\n\nAlso, if you already know the difference between a linked list and an array, you won't need explicit pointers in your language to understand what's going on.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I would say that the best language would be C++, since it&amp;#39;s Object-Oriented (which is quite nice to understand some structures) and it&amp;#39;s pretty easy to know when you are using pointers (Java kind of hides that).&lt;/p&gt;\n\n&lt;p&gt;Nevertheless, it doesn&amp;#39;t really matter, since you only need to grasp the concept behind the structure, and the theory stays (almost) the same for all languages.&lt;/p&gt;\n\n&lt;p&gt;Also, if you already know the difference between a linked list and an array, you won&amp;#39;t need explicit pointers in your language to understand what&amp;#39;s going on.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c650pe0", "flair_text": null, "created": 1347060945.0, "created_utc": 1347057345.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 6, "link_id": "t3_zj1dr", "children": [], "author": "puddingpimp", "id": "c658c1v", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 3, "body": "You can't learn data structures in languages without pointer arithmetic. This should be self-evident since you can't create data structures without pointer arithmetic.", "edited": 1347107077.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;You can&amp;#39;t learn data structures in languages without pointer arithmetic. This should be self-evident since you can&amp;#39;t create data structures without pointer arithmetic.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c658c1v", "flair_text": null, "created": 1347110287.0, "created_utc": 1347106687.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_zj1dr", "children": [], "author": "honestduane", "id": "c6597dt", "parent_id": "t3_zj1dr", "score": 0, "approved_by": null, "upvotes": 1, "body": "Learning Data Structures is a strict requirement for CS, and ever Developer I hire has to have a good background in them to get a job or we don not hire them.\n\nThe people who downvoted this probably work at burger king.", "edited": 1347687284.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Learning Data Structures is a strict requirement for CS, and ever Developer I hire has to have a good background in them to get a job or we don not hire them.&lt;/p&gt;\n\n&lt;p&gt;The people who downvoted this probably work at burger king.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6597dt", "flair_text": null, "created": 1347117664.0, "created_utc": 1347114064.0, "num_reports": null}], "score": 28, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 54, "hidden": false, "thumbnail": "", "edited": 1347057218.0, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/zj1dr/are_there_any_significant_benefits_to_learning/", "has_more_comments": false, "name": "t3_zj1dr", "created": 1347060261.0, "url": "http://www.reddit.com/r/compsci/comments/zj1dr/are_there_any_significant_benefits_to_learning/", "author_flair_text": null, "author": "Ninwa", "created_utc": 1347056661.0, "link_flair_text": null, "media": null, "num_reports": null}, "442": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 9, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So, i have tried to read a decent number of cs papers, but about half way through, most of them start throwing around horizontal lines(implication? bijection?), sideways Ts(adjoint functors in category theory, i have no idea what in type theory), and other symbols that i can&amp;#39;t search for with google.&lt;/p&gt;\n\n&lt;p&gt;Are there any good resources on what these symbols mean? I&amp;#39;m guessing a general resource doesn&amp;#39;t exist, but are there good notation reference books/websites for specific subjects? like, can i find a book with 10 pages that just has a list of symbols and the various meanings people use them for in type theory?&lt;/p&gt;\n\n&lt;p&gt;or does everyone just pick this up the hard way?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "So, i have tried to read a decent number of cs papers, but about half way through, most of them start throwing around horizontal lines(implication? bijection?), sideways Ts(adjoint functors in category theory, i have no idea what in type theory), and other symbols that i can't search for with google.\n\nAre there any good resources on what these symbols mean? I'm guessing a general resource doesn't exist, but are there good notation reference books/websites for specific subjects? like, can i find a book with 10 pages that just has a list of symbols and the various meanings people use them for in type theory?\n\nor does everyone just pick this up the hard way?", "saved": false, "id": "zid8j", "clicked": false, "title": "notation in papers (specifically, type and category theory)", "num_comments": 10, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_zid8j", "children": [], "author": "deadguys", "id": "c64uguq", "parent_id": "t3_zid8j", "score": 0, "approved_by": null, "upvotes": 16, "body": "Phil Wadler's paper \"Proofs are Programs:\n19th Century Logic and 21st Century Computing\" gives a good introduction:\n\nhttp://homepages.inf.ed.ac.uk/wadler/papers/frege/frege.pdf", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Phil Wadler&amp;#39;s paper &amp;quot;Proofs are Programs:\n19th Century Logic and 21st Century Computing&amp;quot; gives a good introduction:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://homepages.inf.ed.ac.uk/wadler/papers/frege/frege.pdf\"&gt;http://homepages.inf.ed.ac.uk/wadler/papers/frege/frege.pdf&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64uguq", "flair_text": null, "created": 1347037964.0, "created_utc": 1347034364.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_zid8j", "children": [], "author": "twanvl", "id": "c64yclt", "parent_id": "t3_zid8j", "score": 0, "approved_by": null, "upvotes": 11, "body": "Here is an example:\n\n      \u0393, x : A \u22a2 y : B\n     -------------------\n      \u0393, (\u03bbx.y) : A \u2192 B\n\nThis can be translated as:\n\n    if (the horizontal line)\n      given the environment \u0393, combined with the fact that variable \"x\" has type \"A\"\n      there is a proof that (the \u22a2)\n      expression \"y\" has type \"B\"\n    then\n      given the environment \u0393\n      there is a proof that\n      the expression \"\u03bbx.y\" has type \"A \u2192 B\"\n\nThere are some conventions that are commonly used in type theory papers, such as using greek capital letters (usually \u0393 ans \u03a3) for environments (usually sets of \"expression : type\" statements). Usually \"x\" denotes a variable, \"e\" an expression and \"t\" a type. There might be a legend in the paper, often as part of the grammar. But there is a lot of variation between papers. I can't help more without knowing what papers you were looking at.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here is an example:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;  \u0393, x : A \u22a2 y : B\n -------------------\n  \u0393, (\u03bbx.y) : A \u2192 B\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This can be translated as:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;if (the horizontal line)\n  given the environment \u0393, combined with the fact that variable &amp;quot;x&amp;quot; has type &amp;quot;A&amp;quot;\n  there is a proof that (the \u22a2)\n  expression &amp;quot;y&amp;quot; has type &amp;quot;B&amp;quot;\nthen\n  given the environment \u0393\n  there is a proof that\n  the expression &amp;quot;\u03bbx.y&amp;quot; has type &amp;quot;A \u2192 B&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;There are some conventions that are commonly used in type theory papers, such as using greek capital letters (usually \u0393 ans \u03a3) for environments (usually sets of &amp;quot;expression : type&amp;quot; statements). Usually &amp;quot;x&amp;quot; denotes a variable, &amp;quot;e&amp;quot; an expression and &amp;quot;t&amp;quot; a type. There might be a legend in the paper, often as part of the grammar. But there is a lot of variation between papers. I can&amp;#39;t help more without knowing what papers you were looking at.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64yclt", "flair_text": null, "created": 1347051893.0, "created_utc": 1347048293.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_zid8j", "children": [], "author": "taejo", "id": "c64udrj", "parent_id": "t3_zid8j", "score": 0, "approved_by": null, "upvotes": 10, "body": "The horizontal lines are implication: http://en.wikipedia.org/wiki/Natural_deduction\n\nThe tack (\u22a2) is entailment: http://en.wikipedia.org/wiki/Turnstile_%28symbol%29", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The horizontal lines are implication: &lt;a href=\"http://en.wikipedia.org/wiki/Natural_deduction\"&gt;http://en.wikipedia.org/wiki/Natural_deduction&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The tack (\u22a2) is entailment: &lt;a href=\"http://en.wikipedia.org/wiki/Turnstile_%28symbol%29\"&gt;http://en.wikipedia.org/wiki/Turnstile_%28symbol%29&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64udrj", "flair_text": null, "created": 1347037643.0, "created_utc": 1347034043.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_zid8j", "children": [], "author": "kbeer", "id": "c64wmjm", "parent_id": "t3_zid8j", "score": 0, "approved_by": null, "upvotes": 9, "body": "The answer is \"Begriffsschrift,\" the book that introduced this notation. The Wikipedia page for the book has a simple succinct explanation of the symbols.\n\nhttp://en.wikipedia.org/wiki/Begriffsschrift", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The answer is &amp;quot;Begriffsschrift,&amp;quot; the book that introduced this notation. The Wikipedia page for the book has a simple succinct explanation of the symbols.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Begriffsschrift\"&gt;http://en.wikipedia.org/wiki/Begriffsschrift&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64wmjm", "flair_text": null, "created": 1347045783.0, "created_utc": 1347042183.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_zid8j", "children": [], "author": "rosulek", "id": "c64vev5", "parent_id": "t3_zid8j", "score": 0, "approved_by": null, "upvotes": 8, "body": "It's hard to google for a symbol, but you can use [this site](http://detexify.kirelabs.org/classify.html) to figure out the LaTeX names of the symbols, and that might give you some search-engine leverage.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It&amp;#39;s hard to google for a symbol, but you can use &lt;a href=\"http://detexify.kirelabs.org/classify.html\"&gt;this site&lt;/a&gt; to figure out the LaTeX names of the symbols, and that might give you some search-engine leverage.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64vev5", "flair_text": null, "created": 1347041429.0, "created_utc": 1347037829.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_zid8j", "children": [], "author": "inaneInTheMembrane", "id": "c64vyb2", "parent_id": "t3_zid8j", "score": 0, "approved_by": null, "upvotes": 6, "body": "Most people pick this up the easy way: by having it explained to them, preferably in a class :). There happens to be a general construct for the horizontal line, it was described by Peter Aczel (a great logician, as he happened to be well versed in category theory and computer science!). The reference is:\n\nP. Aczel. An introduction to inductive definitions. In *Handbook of Mathematical Logic\" chapter C.7, pages 739-782.\n\nIn general though, the only thing to understand about the horizontal line is this: if what is above the line is true/provable/an element of the set/a morphism then what is below the line is true/provable/an element of that set/a morphism.\n\nThe turnstyle (\u22a2) is a bit more complex. In logic: G \u22a2 P usually means: under the assumption G, P can be shown to hold. In category theory it usually means there is a morphism between objects G and P.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Most people pick this up the easy way: by having it explained to them, preferably in a class :). There happens to be a general construct for the horizontal line, it was described by Peter Aczel (a great logician, as he happened to be well versed in category theory and computer science!). The reference is:&lt;/p&gt;\n\n&lt;p&gt;P. Aczel. An introduction to inductive definitions. In *Handbook of Mathematical Logic&amp;quot; chapter C.7, pages 739-782.&lt;/p&gt;\n\n&lt;p&gt;In general though, the only thing to understand about the horizontal line is this: if what is above the line is true/provable/an element of the set/a morphism then what is below the line is true/provable/an element of that set/a morphism.&lt;/p&gt;\n\n&lt;p&gt;The turnstyle (\u22a2) is a bit more complex. In logic: G \u22a2 P usually means: under the assumption G, P can be shown to hold. In category theory it usually means there is a morphism between objects G and P.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64vyb2", "flair_text": null, "created": 1347043374.0, "created_utc": 1347039774.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zid8j", "children": [], "author": "beroal", "id": "c6d9nuy", "parent_id": "t3_zid8j", "score": 0, "approved_by": null, "upvotes": 1, "body": "&lt;a href=\"http://en.wikipedia.org/wiki/List_of_mathematical_symbols\"&gt;List of mathematical symbols&lt;/a&gt;", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&amp;lt;a href=&amp;quot;http://en.wikipedia.org/wiki/List_of_mathematical_symbols&amp;quot;&amp;gt;List of mathematical symbols&amp;lt;/a&amp;gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6d9nuy", "flair_text": null, "created": 1348597186.0, "created_utc": 1348593586.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_zid8j", "children": [], "author": "Sirupsen", "id": "c64wi0x", "parent_id": "t3_zid8j", "score": 0, "approved_by": null, "upvotes": 6, "body": "I realize this is not exactly what you're asking for, but I think you, and visitors of this thread, will find it interesting anyhow.\n\n[Cheatsheet for Theoretical Computer Science](http://ge.tt/2DwoFLN/v/0?c)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I realize this is not exactly what you&amp;#39;re asking for, but I think you, and visitors of this thread, will find it interesting anyhow.&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"http://ge.tt/2DwoFLN/v/0?c\"&gt;Cheatsheet for Theoretical Computer Science&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64wi0x", "flair_text": null, "created": 1347045339.0, "created_utc": 1347041739.0, "num_reports": null}], "score": 22, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 31, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/zid8j/notation_in_papers_specifically_type_and_category/", "has_more_comments": false, "name": "t3_zid8j", "created": 1347035832.0, "url": "http://www.reddit.com/r/compsci/comments/zid8j/notation_in_papers_specifically_type_and_category/", "author_flair_text": null, "author": "hay_guise", "created_utc": 1347032232.0, "link_flair_text": null, "media": null, "num_reports": null}, "443": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 21, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ll be interviewing for the Software Development Engineer In Test position as an Intern at Microsoft. I&amp;#39;m mostly nervous for the tricky coding questions. Are there any problems you have faced that you think would be good to practice? Thanks guys!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'll be interviewing for the Software Development Engineer In Test position as an Intern at Microsoft. I'm mostly nervous for the tricky coding questions. Are there any problems you have faced that you think would be good to practice? Thanks guys!", "saved": false, "id": "zhalr", "clicked": false, "title": "I Have a Microsoft Internship Interview in Redmond Coming Up In Two Weeks -- Any Good Practice Problems To Work On?", "num_comments": 35, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 7, "link_id": "t3_zhalr", "children": [], "author": "solyanik", "id": "c64m4j5", "parent_id": "t3_zhalr", "score": 0, "approved_by": null, "upvotes": 59, "body": "Microsoft interviewer here :-).\n\n(1) We want to know how you think, not what the solution is (that we already know). If you get stuck, don't panic. Talk about what your brain is going through as you are approaching the problem. The interviewer will help you.\n\n(2) If you blow one interview, do not panic and do NOT let this define your day. Brain freezes happen. This is the reason we have multiple interviewers.\n\n(3) Do not touch the glass!\n\n(4) You will need basic familiarity with computer science: algorithms (trees, heaps, sorting, graph algorithms, time complexity, space complexity, linear programming), and operating systems concepts.\n\n(5) You will not generally need to know \"knowledge\" stuff - what API X does, or what language feature Y does.\n\n(6) You will need to be able to code on the whiteboard. Extra points for C and ability to use pointers (but only when it actually makes sense).\n\n(7) Humility! Try to appear super amazing, and interviewer will take it as a challenge. Then you are screwed. Instead, lower the expectations, then beat them.\n\n(8) Math: be handy with combinatorics and probabilities. Geometry for extra credit. Math illiteracy has no place in computer science.\n\n(9) Do not forget to not touch the glass.\n\n(10) Have genuine interest in a computer science topic, and know a lot about the area of interest. Be able to intelligently discuss it, with pros, contras, and interesting challenges.\n\n(11) Know why you want to be a programmer or tester. \n\n(12) Be specific: generic answers anger interviewers. Try to forget everything that your college advisor (humanities major) taught you about communicating during the interview. General statements - bad. Specific answers, backed up by stories from your experience - good.\n\n(13) Keep to the left. Do not litter. Do not loiter. Do not touch the glass.\n\n\nGood luck with your interview and hopefully see you on campus :-)!", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Microsoft interviewer here :-).&lt;/p&gt;\n\n&lt;p&gt;(1) We want to know how you think, not what the solution is (that we already know). If you get stuck, don&amp;#39;t panic. Talk about what your brain is going through as you are approaching the problem. The interviewer will help you.&lt;/p&gt;\n\n&lt;p&gt;(2) If you blow one interview, do not panic and do NOT let this define your day. Brain freezes happen. This is the reason we have multiple interviewers.&lt;/p&gt;\n\n&lt;p&gt;(3) Do not touch the glass!&lt;/p&gt;\n\n&lt;p&gt;(4) You will need basic familiarity with computer science: algorithms (trees, heaps, sorting, graph algorithms, time complexity, space complexity, linear programming), and operating systems concepts.&lt;/p&gt;\n\n&lt;p&gt;(5) You will not generally need to know &amp;quot;knowledge&amp;quot; stuff - what API X does, or what language feature Y does.&lt;/p&gt;\n\n&lt;p&gt;(6) You will need to be able to code on the whiteboard. Extra points for C and ability to use pointers (but only when it actually makes sense).&lt;/p&gt;\n\n&lt;p&gt;(7) Humility! Try to appear super amazing, and interviewer will take it as a challenge. Then you are screwed. Instead, lower the expectations, then beat them.&lt;/p&gt;\n\n&lt;p&gt;(8) Math: be handy with combinatorics and probabilities. Geometry for extra credit. Math illiteracy has no place in computer science.&lt;/p&gt;\n\n&lt;p&gt;(9) Do not forget to not touch the glass.&lt;/p&gt;\n\n&lt;p&gt;(10) Have genuine interest in a computer science topic, and know a lot about the area of interest. Be able to intelligently discuss it, with pros, contras, and interesting challenges.&lt;/p&gt;\n\n&lt;p&gt;(11) Know why you want to be a programmer or tester. &lt;/p&gt;\n\n&lt;p&gt;(12) Be specific: generic answers anger interviewers. Try to forget everything that your college advisor (humanities major) taught you about communicating during the interview. General statements - bad. Specific answers, backed up by stories from your experience - good.&lt;/p&gt;\n\n&lt;p&gt;(13) Keep to the left. Do not litter. Do not loiter. Do not touch the glass.&lt;/p&gt;\n\n&lt;p&gt;Good luck with your interview and hopefully see you on campus :-)!&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64m4j5", "flair_text": null, "created": 1346989894.0, "created_utc": 1346986294.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zhalr", "children": [], "author": "cjt09", "id": "c64lzpw", "parent_id": "t3_zhalr", "score": 0, "approved_by": null, "upvotes": 10, "body": "I'd recommend buying one (or both) of these books and reading through them:\n\n- [Cracking the Coding Interview](http://www.amazon.com/Cracking-Coding-Interview-Programming-Questions/dp/098478280X/)\n- [Programming Interviews Exposed](http://www.amazon.com/Programming-Interviews-Exposed-Secrets-Programmer/dp/047012167X/)\n\nEach of those books has a wide range of programming problems that are commonly asked during an interview. I highly recommend going one question at a time and actually trying to solve them yourself before looking at the solution. This way you won't simply have a dictionary of interview questions--you'll also be able to develop the skills to figure your way through similar problems.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;d recommend buying one (or both) of these books and reading through them:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"http://www.amazon.com/Cracking-Coding-Interview-Programming-Questions/dp/098478280X/\"&gt;Cracking the Coding Interview&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;a href=\"http://www.amazon.com/Programming-Interviews-Exposed-Secrets-Programmer/dp/047012167X/\"&gt;Programming Interviews Exposed&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;Each of those books has a wide range of programming problems that are commonly asked during an interview. I highly recommend going one question at a time and actually trying to solve them yourself before looking at the solution. This way you won&amp;#39;t simply have a dictionary of interview questions--you&amp;#39;ll also be able to develop the skills to figure your way through similar problems.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64lzpw", "flair_text": null, "created": 1346989379.0, "created_utc": 1346985779.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zhalr", "children": [], "author": "KidDaedalus", "id": "c64ljv1", "parent_id": "t3_zhalr", "score": 0, "approved_by": null, "upvotes": 9, "body": "Here are some that I got asked when I interviewed for an SDET internship. Even years later I remember them pretty clearly because I was so wired.\n\nWrite a function taking two strings (s1, s2) which determines if s2 is a substring of s1. If it is then return the index where s2 begins within s1.\n\nHow would you test that function?\n\nHow would you test a file copy program?\n\nHow would you test Windows's handling of power state transitions in the processor? This was more of a discussion than a get it right-or-wrong sort of thing. It required a decent amount of explanation before I even understood what he meant by the question.\n\nHow would you implement a linked list?\n\nHow would you test your linked list implementation?\n\nHow would you determine if two rectangles on a coordinate plane overlapped each other?\n\nHow would you test your rectangle-overlap checking function?\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here are some that I got asked when I interviewed for an SDET internship. Even years later I remember them pretty clearly because I was so wired.&lt;/p&gt;\n\n&lt;p&gt;Write a function taking two strings (s1, s2) which determines if s2 is a substring of s1. If it is then return the index where s2 begins within s1.&lt;/p&gt;\n\n&lt;p&gt;How would you test that function?&lt;/p&gt;\n\n&lt;p&gt;How would you test a file copy program?&lt;/p&gt;\n\n&lt;p&gt;How would you test Windows&amp;#39;s handling of power state transitions in the processor? This was more of a discussion than a get it right-or-wrong sort of thing. It required a decent amount of explanation before I even understood what he meant by the question.&lt;/p&gt;\n\n&lt;p&gt;How would you implement a linked list?&lt;/p&gt;\n\n&lt;p&gt;How would you test your linked list implementation?&lt;/p&gt;\n\n&lt;p&gt;How would you determine if two rectangles on a coordinate plane overlapped each other?&lt;/p&gt;\n\n&lt;p&gt;How would you test your rectangle-overlap checking function?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64ljv1", "flair_text": null, "created": 1346987698.0, "created_utc": 1346984098.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zhalr", "children": [], "author": "NullSoulException", "id": "c64kr5s", "parent_id": "t3_zhalr", "score": 0, "approved_by": null, "upvotes": 6, "body": "Here is an [AMAA](http://www.reddit.com/r/cscareerquestions/comments/z94la/iama_microsoft_engineer_who_interviews_candidates/) from a Microsoft Engineer over in /r/cscareerquestions. You may find it useful.\n\nI interviewed with Microsoft as a high school student and had two interviews. In the first, I was asked puzzle-y questions (ie. 9 identical balls, find the one that weighs more) and a coding problem (palindromes). In my second interview, I was asked about implementing Dijkstra's Algorithm. I can't say much about undergraduate/masters/phd interviews and also for SDET (instead of SDE) intern positions though....\n\nEDIT: Also, check out [Glassdoor](http://www.glassdoor.com/Interview/sdet-intern-microsoft-interview-questions-SRCH_KO0,11_KE12,21.htm). I'm sure there are also other questions posted online you can find through Google (or Bing!).", "edited": 1346981269.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Here is an &lt;a href=\"http://www.reddit.com/r/cscareerquestions/comments/z94la/iama_microsoft_engineer_who_interviews_candidates/\"&gt;AMAA&lt;/a&gt; from a Microsoft Engineer over in &lt;a href=\"/r/cscareerquestions\"&gt;/r/cscareerquestions&lt;/a&gt;. You may find it useful.&lt;/p&gt;\n\n&lt;p&gt;I interviewed with Microsoft as a high school student and had two interviews. In the first, I was asked puzzle-y questions (ie. 9 identical balls, find the one that weighs more) and a coding problem (palindromes). In my second interview, I was asked about implementing Dijkstra&amp;#39;s Algorithm. I can&amp;#39;t say much about undergraduate/masters/phd interviews and also for SDET (instead of SDE) intern positions though....&lt;/p&gt;\n\n&lt;p&gt;EDIT: Also, check out &lt;a href=\"http://www.glassdoor.com/Interview/sdet-intern-microsoft-interview-questions-SRCH_KO0,11_KE12,21.htm\"&gt;Glassdoor&lt;/a&gt;. I&amp;#39;m sure there are also other questions posted online you can find through Google (or Bing!).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64kr5s", "flair_text": null, "created": 1346984643.0, "created_utc": 1346981043.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zhalr", "children": [], "author": "Wootens", "id": "c64kavh", "parent_id": "t3_zhalr", "score": 0, "approved_by": null, "upvotes": 5, "body": "Keep in mind they aren't exactly looking for the right answer (of course it's good to get it right), but to see how you go through the problem and walk them through to the solution.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Keep in mind they aren&amp;#39;t exactly looking for the right answer (of course it&amp;#39;s good to get it right), but to see how you go through the problem and walk them through to the solution.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64kavh", "flair_text": null, "created": 1346982835.0, "created_utc": 1346979235.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zhalr", "children": [], "author": "screwthat4u", "id": "c64kftb", "parent_id": "t3_zhalr", "score": 0, "approved_by": null, "upvotes": 5, "body": "I had a real interview (college grad not intern) with them, didn't get it, but they asked me to completely make a red black tree from memory. Started with insert, delete, and I didn't know how to rotate off the top of my head. Another interviewer asked me to compress a bitmap, I did Huffman encoding, but he really wanted run length encoding. The other questions were more theoretical. Not sure if I have this one right, but it was find three different ways to rotate a globe in two moves and have the north pole remain in the same place. Oh yeah another was to create a class definition for a library that does not give out handles due to the requirement of being thread safe. I'd recommend reviewing basic algorithms from CLRS and reading code complete (more like skimming) cause they really like that book. ( I actually bought it before they emailed it out in PDF format to me for free)\n\nEdit: I was doing regular software dev, test may be more tester related. From what I could tell they follow a very strict lifecycle. Software engineer makes a spec, developer implements, and tester tests. Someone from MS may want to clarify, my friend got a job there, but I'm too lazy to ask him for ya", "edited": 1346980151.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I had a real interview (college grad not intern) with them, didn&amp;#39;t get it, but they asked me to completely make a red black tree from memory. Started with insert, delete, and I didn&amp;#39;t know how to rotate off the top of my head. Another interviewer asked me to compress a bitmap, I did Huffman encoding, but he really wanted run length encoding. The other questions were more theoretical. Not sure if I have this one right, but it was find three different ways to rotate a globe in two moves and have the north pole remain in the same place. Oh yeah another was to create a class definition for a library that does not give out handles due to the requirement of being thread safe. I&amp;#39;d recommend reviewing basic algorithms from CLRS and reading code complete (more like skimming) cause they really like that book. ( I actually bought it before they emailed it out in PDF format to me for free)&lt;/p&gt;\n\n&lt;p&gt;Edit: I was doing regular software dev, test may be more tester related. From what I could tell they follow a very strict lifecycle. Software engineer makes a spec, developer implements, and tester tests. Someone from MS may want to clarify, my friend got a job there, but I&amp;#39;m too lazy to ask him for ya&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64kftb", "flair_text": null, "created": 1346983393.0, "created_utc": 1346979793.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zhalr", "children": [], "author": "draqza", "id": "c64lc8p", "parent_id": "t3_zhalr", "score": 0, "approved_by": null, "upvotes": 3, "body": "Based on my experience interviewing as well as what I've heard my coworkers talking about when they give interviews, you should brush up on linked lists and basic trees.  You may get some graph problems; I know one guy has a graph problem he likes to ask but he mentioned that he always tells candidates up front he does not expect them to get it right but just wants to see where they go with it.\n\nSDET interviews will also involve how you test it -- I've heard of questions like \"How would you test an M&amp;M,\" or they will have you solve a simple coding question and then ask how you would test it -- what are the simple cases, what are the corner cases, what other bizarre things can you think of that might blow it up.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Based on my experience interviewing as well as what I&amp;#39;ve heard my coworkers talking about when they give interviews, you should brush up on linked lists and basic trees.  You may get some graph problems; I know one guy has a graph problem he likes to ask but he mentioned that he always tells candidates up front he does not expect them to get it right but just wants to see where they go with it.&lt;/p&gt;\n\n&lt;p&gt;SDET interviews will also involve how you test it -- I&amp;#39;ve heard of questions like &amp;quot;How would you test an M&amp;amp;M,&amp;quot; or they will have you solve a simple coding question and then ask how you would test it -- what are the simple cases, what are the corner cases, what other bizarre things can you think of that might blow it up.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64lc8p", "flair_text": null, "created": 1346986874.0, "created_utc": 1346983274.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zhalr", "children": [], "author": "MoneyWorthington", "id": "c64z8iq", "parent_id": "t3_zhalr", "score": 0, "approved_by": null, "upvotes": 3, "body": "I interned at Microsoft a little over a year ago, and to be honest, the interview was easier than I expected it to be. I was mostly asked basic algorithm questions that would only take ~10-15 lines of Java (they let you write in any language, pseudo-code might even be okay) and asked about why I wanted to work there. As long as you know your basic CS stuff and have a sincere desire to be there, then you shouldn't have a problem.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I interned at Microsoft a little over a year ago, and to be honest, the interview was easier than I expected it to be. I was mostly asked basic algorithm questions that would only take ~10-15 lines of Java (they let you write in any language, pseudo-code might even be okay) and asked about why I wanted to work there. As long as you know your basic CS stuff and have a sincere desire to be there, then you shouldn&amp;#39;t have a problem.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64z8iq", "flair_text": null, "created": 1347055067.0, "created_utc": 1347051467.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 10, "link_id": "t3_zhalr", "children": [], "author": "hoyfkd", "id": "c64o2z8", "parent_id": "t3_zhalr", "score": 0, "approved_by": null, "upvotes": 15, "body": "Right as they are beginning to explain how the interview will go, stand up, look at your phone and say\n\n&gt;I have important updates ready to be read!!\n\nSoon, the look of confusion and shock will give way to a trepidatious continuation of the interview.  When it does, jump up and turn off the lights.  Explain that the interview had to be reset to allow the updates to be fully integrated into your consciousness.  Explain that you *would* have given them the opportunity to prevent it, but they seemed busy.  \n\nAlso, bring a blue paint bomb and set it off at some point.\n\nYou might think it's crazy behavior, but they spend entire careers making this type of thing a reality for millions of people across the world.  They will appreciate the return gesture. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Right as they are beginning to explain how the interview will go, stand up, look at your phone and say&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;I have important updates ready to be read!!&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;Soon, the look of confusion and shock will give way to a trepidatious continuation of the interview.  When it does, jump up and turn off the lights.  Explain that the interview had to be reset to allow the updates to be fully integrated into your consciousness.  Explain that you &lt;em&gt;would&lt;/em&gt; have given them the opportunity to prevent it, but they seemed busy.  &lt;/p&gt;\n\n&lt;p&gt;Also, bring a blue paint bomb and set it off at some point.&lt;/p&gt;\n\n&lt;p&gt;You might think it&amp;#39;s crazy behavior, but they spend entire careers making this type of thing a reality for millions of people across the world.  They will appreciate the return gesture. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64o2z8", "flair_text": null, "created": 1346997821.0, "created_utc": 1346994221.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 7, "link_id": "t3_zhalr", "children": [], "author": "blackyoda", "id": "c64kxua", "parent_id": "t3_zhalr", "score": 0, "approved_by": null, "upvotes": 10, "body": "The biggest problem will be fining a life in the murky black hole that is Redmond.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The biggest problem will be fining a life in the murky black hole that is Redmond.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64kxua", "flair_text": null, "created": 1346985360.0, "created_utc": 1346981760.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zhalr", "children": [], "author": "b0b0b0b", "id": "c64mjxe", "parent_id": "t3_zhalr", "score": 0, "approved_by": null, "upvotes": 2, "body": "1) leave yourself extra space on the whiteboard\n\n2) talk through what you're thinking: (a) summarize the question (b) outline naive solution and offer some dimensions to improve (c) pause from time to time/don't go off into the weeds\n\n3) if you've heard a question before, be up front.  Don't be all like, \"hmm, this is the first time I'm hearing this,\" and then invent bloom filters / tortoise &amp; hare / ....\n\n4) don't preemptively code a bunch of error checking, talk about obvious edge case inputs and figure out if the interviewer cares (probably not).  If there are interesting edge cases, then talk about them before coding for them.\n\nedit: gl, hf", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;1) leave yourself extra space on the whiteboard&lt;/p&gt;\n\n&lt;p&gt;2) talk through what you&amp;#39;re thinking: (a) summarize the question (b) outline naive solution and offer some dimensions to improve (c) pause from time to time/don&amp;#39;t go off into the weeds&lt;/p&gt;\n\n&lt;p&gt;3) if you&amp;#39;ve heard a question before, be up front.  Don&amp;#39;t be all like, &amp;quot;hmm, this is the first time I&amp;#39;m hearing this,&amp;quot; and then invent bloom filters / tortoise &amp;amp; hare / ....&lt;/p&gt;\n\n&lt;p&gt;4) don&amp;#39;t preemptively code a bunch of error checking, talk about obvious edge case inputs and figure out if the interviewer cares (probably not).  If there are interesting edge cases, then talk about them before coding for them.&lt;/p&gt;\n\n&lt;p&gt;edit: gl, hf&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64mjxe", "flair_text": null, "created": 1346991538.0, "created_utc": 1346987938.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zhalr", "children": [], "author": "Emrim", "id": "c66dyhb", "parent_id": "t3_zhalr", "score": 0, "approved_by": null, "upvotes": 1, "body": "Ask questions before coding. They will oftentimes give you a pretty vague question. What are they expecting your code to do? Get specifics out of the interviewer. \n\nNot sure if interns would need to worry about this, but have good answers ready for the normal \"where do you see yourself in 5 years\" kind of questions.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Ask questions before coding. They will oftentimes give you a pretty vague question. What are they expecting your code to do? Get specifics out of the interviewer. &lt;/p&gt;\n\n&lt;p&gt;Not sure if interns would need to worry about this, but have good answers ready for the normal &amp;quot;where do you see yourself in 5 years&amp;quot; kind of questions.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c66dyhb", "flair_text": null, "created": 1347329283.0, "created_utc": 1347325683.0, "num_reports": null}], "score": 30, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 51, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/zhalr/i_have_a_microsoft_internship_interview_in/", "has_more_comments": false, "name": "t3_zhalr", "created": 1346982387.0, "url": "http://www.reddit.com/r/compsci/comments/zhalr/i_have_a_microsoft_internship_interview_in/", "author_flair_text": null, "author": "overflowin", "created_utc": 1346978787.0, "link_flair_text": null, "media": null, "num_reports": null}, "444": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 27, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I saw this &lt;a href=\"http://www.quora.com/What-are-the-most-important-algorithms-developed-in-2000%E2%80%932010\"&gt;quora question&lt;/a&gt; but I think the answers are incomplete. What else is &amp;quot;interesting&amp;quot; in recent computer science research? Which new algorithms will have a long-lasting impact? &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I saw this [quora question](http://www.quora.com/What-are-the-most-important-algorithms-developed-in-2000%E2%80%932010) but I think the answers are incomplete. What else is \"interesting\" in recent computer science research? Which new algorithms will have a long-lasting impact? \n", "saved": false, "id": "zfpj4", "clicked": false, "title": "Which recently developed algorithms do you think are interesting/noteworthy?", "num_comments": 34, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_zfpj4", "children": [], "author": "rosulek", "id": "c64cgge", "parent_id": "t3_zfpj4", "score": 0, "approved_by": null, "upvotes": 25, "body": "I'm a cryptographer so I'm heavily biased here. But as far as I'm concerned, the most important development in computer science in 2000-2010 is Gentry's [fully homomorphic encryption](http://crypto.stanford.edu/craig/).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m a cryptographer so I&amp;#39;m heavily biased here. But as far as I&amp;#39;m concerned, the most important development in computer science in 2000-2010 is Gentry&amp;#39;s &lt;a href=\"http://crypto.stanford.edu/craig/\"&gt;fully homomorphic encryption&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64cgge", "flair_text": null, "created": 1346952808.0, "created_utc": 1346949208.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 6, "link_id": "t3_zfpj4", "children": [], "author": "clarle", "id": "c649cvu", "parent_id": "t3_zfpj4", "score": 0, "approved_by": null, "upvotes": 32, "body": "I don't know about any new recently developed general algorithms (from what I've seen, most new algorithms nowadays tend to be fairly domain-specific, like for machine learning or crypto), but there have been some new data structures developed recently that are very interesting:\n\n* [Distributed hash tables](http://en.wikipedia.org/wiki/Distributed_hash_table) (2001)\n\nIt's basically a hash table with key/value pairs distributed over several nodes.  It's used for services like torrenting and distributed file systems, and the first few ones came out in 2001, but there's still on-going research in this field.  There's a [neat visualization of the BitTorrent protocol here](http://mg8.org/processing/bt.html), which uses a DHT called [Kademlia](http://en.wikipedia.org/wiki/Kademlia).\n\n* [Tango tree](http://en.wikipedia.org/wiki/Tango_tree) (2004)\n\nA tree data-structure that is search-only, but is able to do searches in O*(log log n)* time.\n\n* [Quotient filter](http://en.wikipedia.org/wiki/Quotient_filter) (2007)\n\nA data structure that's similar to a bloom filter (tests whether an element is in a set or not, with a small probabilistic chance of a false positive).  It uses up more space, but only requires evaluating one hash function, so it can be significantly faster.", "edited": 1346935700.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t know about any new recently developed general algorithms (from what I&amp;#39;ve seen, most new algorithms nowadays tend to be fairly domain-specific, like for machine learning or crypto), but there have been some new data structures developed recently that are very interesting:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Distributed_hash_table\"&gt;Distributed hash tables&lt;/a&gt; (2001)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;It&amp;#39;s basically a hash table with key/value pairs distributed over several nodes.  It&amp;#39;s used for services like torrenting and distributed file systems, and the first few ones came out in 2001, but there&amp;#39;s still on-going research in this field.  There&amp;#39;s a &lt;a href=\"http://mg8.org/processing/bt.html\"&gt;neat visualization of the BitTorrent protocol here&lt;/a&gt;, which uses a DHT called &lt;a href=\"http://en.wikipedia.org/wiki/Kademlia\"&gt;Kademlia&lt;/a&gt;.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Tango_tree\"&gt;Tango tree&lt;/a&gt; (2004)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;A tree data-structure that is search-only, but is able to do searches in O&lt;em&gt;(log log n)&lt;/em&gt; time.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Quotient_filter\"&gt;Quotient filter&lt;/a&gt; (2007)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;A data structure that&amp;#39;s similar to a bloom filter (tests whether an element is in a set or not, with a small probabilistic chance of a false positive).  It uses up more space, but only requires evaluating one hash function, so it can be significantly faster.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c649cvu", "flair_text": null, "created": 1346938753.0, "created_utc": 1346935153.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_zfpj4", "children": [], "author": "snappywan", "id": "c64aqzx", "parent_id": "t3_zfpj4", "score": 0, "approved_by": null, "upvotes": 11, "body": "[Cuckoo Hashing](http://en.wikipedia.org/wiki/Cuckoo_hashing).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Cuckoo_hashing\"&gt;Cuckoo Hashing&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64aqzx", "flair_text": null, "created": 1346946009.0, "created_utc": 1346942409.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_zfpj4", "children": [], "author": "uxcn", "id": "c64at0m", "parent_id": "t3_zfpj4", "score": 0, "approved_by": null, "upvotes": 17, "body": "[timsort](http://en.wikipedia.org/wiki/Timsort) - it's rare there's an advancement in general comparison based sorting algorithms", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://en.wikipedia.org/wiki/Timsort\"&gt;timsort&lt;/a&gt; - it&amp;#39;s rare there&amp;#39;s an advancement in general comparison based sorting algorithms&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64at0m", "flair_text": null, "created": 1346946242.0, "created_utc": 1346942642.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 4, "link_id": "t3_zfpj4", "children": [], "author": "dybber", "id": "c649vx6", "parent_id": "t3_zfpj4", "score": 0, "approved_by": null, "upvotes": 8, "body": "Haven't really looked into this yet, so I'm not sure if this is efficient in practice, but seems like they got something. Max-flow algorithm in O(|V| * |E|): http://jorlin.scripts.mit.edu/Max_flows_in_O(nm)_time.html", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Haven&amp;#39;t really looked into this yet, so I&amp;#39;m not sure if this is efficient in practice, but seems like they got something. Max-flow algorithm in O(|V| * |E|): &lt;a href=\"http://jorlin.scripts.mit.edu/Max_flows_in_O(nm)_time.html\"&gt;http://jorlin.scripts.mit.edu/Max_flows_in_O(nm)_time.html&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c649vx6", "flair_text": null, "created": 1346941965.0, "created_utc": 1346938365.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zfpj4", "children": [], "author": "pablo78", "id": "c64bgm5", "parent_id": "t3_zfpj4", "score": 0, "approved_by": null, "upvotes": 5, "body": "Jim Orlin has just solved max-flow in O(m*n) time and O(n^ 2/log n) time when m = O(n).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Jim Orlin has just solved max-flow in O(m*n) time and O(n^ 2/log n) time when m = O(n).&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64bgm5", "flair_text": null, "created": 1346948939.0, "created_utc": 1346945339.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_zfpj4", "children": [], "author": "chneukirchen", "id": "c64bduz", "parent_id": "t3_zfpj4", "score": 0, "approved_by": null, "upvotes": 5, "body": "[Efficient Subgraph Matching on Billion Node Graphs](http://arxiv.org/pdf/1205.6691.pdf)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://arxiv.org/pdf/1205.6691.pdf\"&gt;Efficient Subgraph Matching on Billion Node Graphs&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64bduz", "flair_text": null, "created": 1346948638.0, "created_utc": 1346945038.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zfpj4", "children": [], "author": "gabgoh", "id": "c64hpmu", "parent_id": "t3_zfpj4", "score": 0, "approved_by": null, "upvotes": 3, "body": "Surprised noone's mentioned http://en.wikipedia.org/wiki/Compressed_sensing", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Surprised noone&amp;#39;s mentioned &lt;a href=\"http://en.wikipedia.org/wiki/Compressed_sensing\"&gt;http://en.wikipedia.org/wiki/Compressed_sensing&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64hpmu", "flair_text": null, "created": 1346972372.0, "created_utc": 1346968772.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zfpj4", "children": [], "author": "FST", "id": "c64msjp", "parent_id": "t3_zfpj4", "score": 0, "approved_by": null, "upvotes": 3, "body": "IMO, the most interesting one without a doubt is Reingold's logspace algorithm for [undirected STCON](http://en.wikipedia.org/wiki/USTCON#Important_results).  Next I'd perhaps put either the [AKS primality test](http://en.wikipedia.org/wiki/AKS_primality_test). Some of this recent [approximate sparsest cut](http://en.wikipedia.org/wiki/Cut_%28graph_theory%29#Sparsest_cut) and [approximating the permanent](http://en.wikipedia.org/wiki/Computing_the_permanent#Approximate_computation) work should be up there as well.", "edited": 1346989308.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;IMO, the most interesting one without a doubt is Reingold&amp;#39;s logspace algorithm for &lt;a href=\"http://en.wikipedia.org/wiki/USTCON#Important_results\"&gt;undirected STCON&lt;/a&gt;.  Next I&amp;#39;d perhaps put either the &lt;a href=\"http://en.wikipedia.org/wiki/AKS_primality_test\"&gt;AKS primality test&lt;/a&gt;. Some of this recent &lt;a href=\"http://en.wikipedia.org/wiki/Cut_%28graph_theory%29#Sparsest_cut\"&gt;approximate sparsest cut&lt;/a&gt; and &lt;a href=\"http://en.wikipedia.org/wiki/Computing_the_permanent#Approximate_computation\"&gt;approximating the permanent&lt;/a&gt; work should be up there as well.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64msjp", "flair_text": null, "created": 1346992457.0, "created_utc": 1346988857.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zfpj4", "children": [], "author": "otakucode", "id": "c64ja3e", "parent_id": "t3_zfpj4", "score": 0, "approved_by": null, "upvotes": 3, "body": "I don't know the name of the person who developed it, or the name of the technique (hopefully someone here does?) but a year or so ago I came across a paper on arXiv outlining a strategy by which data could be made reliably anonymizable.  I am amazed every time I see a dataset released which is 'anonymized' and then later someone de-anonymizes it.  The technique was fairly simple in concept, if I understood it correctly.  Basically, you remove any records from the data set if they change the statistical distribution.  If you can leave the record out and still get the same statistical distribution of all the various fields, leave it in.  If it is enough of an outlier that it shifts the distribution, leave it out.  It preserves all significant results and only removes records which are substantially identifiable.\n\nOf course, it was on arXiv so there's a chance that it's just flat out not an effective algorithm, but I found the nature of the problem and the ideas behind the method interesting.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I don&amp;#39;t know the name of the person who developed it, or the name of the technique (hopefully someone here does?) but a year or so ago I came across a paper on arXiv outlining a strategy by which data could be made reliably anonymizable.  I am amazed every time I see a dataset released which is &amp;#39;anonymized&amp;#39; and then later someone de-anonymizes it.  The technique was fairly simple in concept, if I understood it correctly.  Basically, you remove any records from the data set if they change the statistical distribution.  If you can leave the record out and still get the same statistical distribution of all the various fields, leave it in.  If it is enough of an outlier that it shifts the distribution, leave it out.  It preserves all significant results and only removes records which are substantially identifiable.&lt;/p&gt;\n\n&lt;p&gt;Of course, it was on arXiv so there&amp;#39;s a chance that it&amp;#39;s just flat out not an effective algorithm, but I found the nature of the problem and the ideas behind the method interesting.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64ja3e", "flair_text": null, "created": 1346978627.0, "created_utc": 1346975027.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zfpj4", "children": [], "author": "lightcatcher", "id": "c64naai", "parent_id": "t3_zfpj4", "score": 0, "approved_by": null, "upvotes": 3, "body": "[Locality sensitive hashing](https://secure.wikimedia.org/wikipedia/en/wiki/Locality_sensitive_hashing) is very interesting in my opinion. It solves the approximate nearest neighbors problem very quickly for many different kinds of metric spaces. It is also a significant speedup (lookups are constant time with respect to dataset size) over linear scans and most multi-dimensional tree structures (such as k-d trees, with logarithmic lookup). LSH is particularly useful for high dimensional spaces, because space filling trees are subject to the curse of dimensionality (and degrade to a linear scan for nearest neighbors), but LSH is tunable enough to still get reasonable performance in very high dimensional spaces.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://secure.wikimedia.org/wikipedia/en/wiki/Locality_sensitive_hashing\"&gt;Locality sensitive hashing&lt;/a&gt; is very interesting in my opinion. It solves the approximate nearest neighbors problem very quickly for many different kinds of metric spaces. It is also a significant speedup (lookups are constant time with respect to dataset size) over linear scans and most multi-dimensional tree structures (such as k-d trees, with logarithmic lookup). LSH is particularly useful for high dimensional spaces, because space filling trees are subject to the curse of dimensionality (and degrade to a linear scan for nearest neighbors), but LSH is tunable enough to still get reasonable performance in very high dimensional spaces.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64naai", "flair_text": null, "created": 1346994418.0, "created_utc": 1346990818.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_zfpj4", "children": [], "author": "alanpost", "id": "c649b1d", "parent_id": "t3_zfpj4", "score": 0, "approved_by": null, "upvotes": 4, "body": "I haven't read the quora question, but to me the most, uh, recent interesting thing was sha-1.  It was created based on an unknown (to the civilian community) weakness in sha, and even with the fix published, it was still years before the civilian community understood what made sha weak.\n\nI don't really know why even seeing what the fix was it took so long to discover the cause, but it gave an indication of where military crypto technology was vs. civilian crypto technology.", "edited": 1346937201.0, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I haven&amp;#39;t read the quora question, but to me the most, uh, recent interesting thing was sha-1.  It was created based on an unknown (to the civilian community) weakness in sha, and even with the fix published, it was still years before the civilian community understood what made sha weak.&lt;/p&gt;\n\n&lt;p&gt;I don&amp;#39;t really know why even seeing what the fix was it took so long to discover the cause, but it gave an indication of where military crypto technology was vs. civilian crypto technology.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c649b1d", "flair_text": null, "created": 1346938383.0, "created_utc": 1346934783.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zfpj4", "children": [], "author": "[deleted]", "id": "c64afwb", "parent_id": "t3_zfpj4", "score": 0, "approved_by": null, "upvotes": 5, "body": "Equality saturation in compiler implementation.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Equality saturation in compiler implementation.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64afwb", "flair_text": null, "created": 1346944654.0, "created_utc": 1346941054.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zfpj4", "children": [], "author": "Snootwaller", "id": "c64ctcl", "parent_id": "t3_zfpj4", "score": 0, "approved_by": null, "upvotes": 4, "body": "PCP seems to me so counterintuitive that it's mind blowing. I don't pretend to understand it but I'd like to.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;PCP seems to me so counterintuitive that it&amp;#39;s mind blowing. I don&amp;#39;t pretend to understand it but I&amp;#39;d like to.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64ctcl", "flair_text": null, "created": 1346954156.0, "created_utc": 1346950556.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zfpj4", "children": [], "author": "kahirsch", "id": "c64go13", "parent_id": "t3_zfpj4", "score": 0, "approved_by": null, "upvotes": 1, "body": "[Serialize snapshot isolation](http://wiki.postgresql.org/wiki/SSI). More info in [this PDF](http://cahill.net.au/wp-content/uploads/2009/01/real-serializable.pdf).", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"http://wiki.postgresql.org/wiki/SSI\"&gt;Serialize snapshot isolation&lt;/a&gt;. More info in &lt;a href=\"http://cahill.net.au/wp-content/uploads/2009/01/real-serializable.pdf\"&gt;this PDF&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64go13", "flair_text": null, "created": 1346968496.0, "created_utc": 1346964896.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_zfpj4", "children": [], "author": "philly_fan_in_chi", "id": "c6497ay", "parent_id": "t3_zfpj4", "score": 0, "approved_by": null, "upvotes": 3, "body": "What do you define as \"recent\"? ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;What do you define as &amp;quot;recent&amp;quot;? &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6497ay", "flair_text": null, "created": 1346937645.0, "created_utc": 1346934045.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 3, "link_id": "t3_zfpj4", "children": [], "author": "icefox", "id": "c64aymo", "parent_id": "t3_zfpj4", "score": 0, "approved_by": null, "upvotes": 1, "body": "Cellular evolutionary algorithm (2006)", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Cellular evolutionary algorithm (2006)&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64aymo", "flair_text": null, "created": 1346946890.0, "created_utc": 1346943290.0, "num_reports": null}], "score": 95, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 122, "hidden": false, "thumbnail": "", "edited": 1346908945.0, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/zfpj4/which_recently_developed_algorithms_do_you_think/", "has_more_comments": false, "name": "t3_zfpj4", "created": 1346912150.0, "url": "http://www.reddit.com/r/compsci/comments/zfpj4/which_recently_developed_algorithms_do_you_think/", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1346908550.0, "link_flair_text": null, "media": null, "num_reports": null}, "445": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 7, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello r/compsci&lt;/p&gt;\n\n&lt;p&gt;I am a 3rd year undergraduate Math/CompSci major and am looking into applying for a research grant for the coming summer.  I know it&amp;#39;s early but I want to get a start on it.  The problem is I have no idea what I want to do my research in!  If you were me what areas would you be interested in, keeping in mind that the grant is only for 4 months.  Also, kind of important, I love algorithms and optimization and would like to have something in that area.  I know that is a HUGE area and I&amp;#39;m not being specific at all but a push in a direction would be greatly appreciated.&lt;/p&gt;\n\n&lt;p&gt;Thanks for your help! &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hello r/compsci\n\nI am a 3rd year undergraduate Math/CompSci major and am looking into applying for a research grant for the coming summer.  I know it's early but I want to get a start on it.  The problem is I have no idea what I want to do my research in!  If you were me what areas would you be interested in, keeping in mind that the grant is only for 4 months.  Also, kind of important, I love algorithms and optimization and would like to have something in that area.  I know that is a HUGE area and I'm not being specific at all but a push in a direction would be greatly appreciated.\n\nThanks for your help! ", "saved": false, "id": "zh4p3", "clicked": false, "title": "Help with Undergrad Research", "num_comments": 5, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 5, "link_id": "t3_zh4p3", "children": [], "author": "DarkAnt", "id": "c64jabf", "parent_id": "t3_zh4p3", "score": 0, "approved_by": null, "upvotes": 10, "body": "I'll let you in on a little secret about grad school. The research you do is what your professor is interested in. So go find a professor who's doing work that interests you and go ask him/her.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ll let you in on a little secret about grad school. The research you do is what your professor is interested in. So go find a professor who&amp;#39;s doing work that interests you and go ask him/her.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64jabf", "flair_text": null, "created": 1346978655.0, "created_utc": 1346975055.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zh4p3", "children": [], "author": "pippen_the_monk", "id": "c64ksa0", "parent_id": "t3_zh4p3", "score": 0, "approved_by": null, "upvotes": 2, "body": "Applying to an REU (Research Experience for Undergrads) program is also a valid option. You work with professors and grad students at other schools on research projects. You get paid and are given a stipend for housing and food. Would highly recommend. Big list of sites here: http://www.nsf.gov/crssprgm/reu/list_result.cfm?unitid=5049", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Applying to an REU (Research Experience for Undergrads) program is also a valid option. You work with professors and grad students at other schools on research projects. You get paid and are given a stipend for housing and food. Would highly recommend. Big list of sites here: &lt;a href=\"http://www.nsf.gov/crssprgm/reu/list_result.cfm?unitid=5049\"&gt;http://www.nsf.gov/crssprgm/reu/list_result.cfm?unitid=5049&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64ksa0", "flair_text": null, "created": 1346984765.0, "created_utc": 1346981165.0, "num_reports": null}], "score": 0, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 7, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/zh4p3/help_with_undergrad_research/", "has_more_comments": false, "name": "t3_zh4p3", "created": 1346976749.0, "url": "http://www.reddit.com/r/compsci/comments/zh4p3/help_with_undergrad_research/", "author_flair_text": null, "author": "mbojey", "created_utc": 1346973149.0, "link_flair_text": null, "media": null, "num_reports": null}, "446": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 6, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I work at a very large company that deals with a huge volume of data.  However, the company as a whole avoids using virtually any indexes on the data(backend- Services provide speedy access for frontend).  We have the data partitioned on the date and the region that the data is tied to, but that is it.&lt;/p&gt;\n\n&lt;p&gt;This makes querying the data from the databases extremely, extremely slow, like 40 minutes to 2 hours.&lt;/p&gt;\n\n&lt;p&gt;The reasoning given by the DBA&amp;#39;s is that for our case, we don&amp;#39;t maintain indexes because it slows down the data insertion, and it is &amp;quot;faster&amp;quot; to just do a full table scan.&lt;/p&gt;\n\n&lt;p&gt;Is there any truth to this?  It seems very wrong to me that properly created indexes wouldn&amp;#39;t at least speed up enough queries to be worth their insertion costs.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I work at a very large company that deals with a huge volume of data.  However, the company as a whole avoids using virtually any indexes on the data(backend- Services provide speedy access for frontend).  We have the data partitioned on the date and the region that the data is tied to, but that is it.\n\nThis makes querying the data from the databases extremely, extremely slow, like 40 minutes to 2 hours.\n\nThe reasoning given by the DBA's is that for our case, we don't maintain indexes because it slows down the data insertion, and it is \"faster\" to just do a full table scan.\n\nIs there any truth to this?  It seems very wrong to me that properly created indexes wouldn't at least speed up enough queries to be worth their insertion costs.", "saved": false, "id": "zfrqo", "clicked": false, "title": "Large scale databases without indexes?", "num_comments": 26, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zfrqo", "children": [], "author": "pack170", "id": "c64735s", "parent_id": "t3_zfrqo", "score": 0, "approved_by": null, "upvotes": 9, "body": "No indexing at all would only seem useful if you're constantly adding data to the db but almost never retrieving it or doing lookups, basically just hoarding data to hoard data. Is your company building a db to datamine later? You are right that in general indexing to speed up lookups is worth the minor insertion hit, but from what you've told us it seems like your db wasn't designed with lookups being a priority. With the right data structures you can get insertions to be very fast and still have fast lookups. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;No indexing at all would only seem useful if you&amp;#39;re constantly adding data to the db but almost never retrieving it or doing lookups, basically just hoarding data to hoard data. Is your company building a db to datamine later? You are right that in general indexing to speed up lookups is worth the minor insertion hit, but from what you&amp;#39;ve told us it seems like your db wasn&amp;#39;t designed with lookups being a priority. With the right data structures you can get insertions to be very fast and still have fast lookups. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64735s", "flair_text": null, "created": 1346917609.0, "created_utc": 1346914009.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_zfrqo", "children": [], "author": "lazyshot", "id": "c64hi2g", "parent_id": "t3_zfrqo", "score": 0, "approved_by": null, "upvotes": 7, "body": "It makes sense to do a full table scan if you need to aggregate tons of data and never just one row.  As the number of rows required for the query approaches the total number of rows in the table, indexes become more and more worthless.\n\nThis is a large premise to using Hadoop HDFS + MapReduce for things like logs and tweet streams.  Writing sequentially to large files then processing all the files in bulk, across a cluster of computers.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It makes sense to do a full table scan if you need to aggregate tons of data and never just one row.  As the number of rows required for the query approaches the total number of rows in the table, indexes become more and more worthless.&lt;/p&gt;\n\n&lt;p&gt;This is a large premise to using Hadoop HDFS + MapReduce for things like logs and tweet streams.  Writing sequentially to large files then processing all the files in bulk, across a cluster of computers.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64hi2g", "flair_text": null, "created": 1346971594.0, "created_utc": 1346967994.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zfrqo", "children": [], "author": "robthablob", "id": "c648b21", "parent_id": "t3_zfrqo", "score": 0, "approved_by": null, "upvotes": 4, "body": "Have you considered an indexed view?\n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Have you considered an indexed view?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c648b21", "flair_text": null, "created": 1346929053.0, "created_utc": 1346925453.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zfrqo", "children": [], "author": "rehevkor5", "id": "c64dj01", "parent_id": "t3_zfrqo", "score": 0, "approved_by": null, "upvotes": 3, "body": "Unfortunately, if you are using a classical relational database, it may be difficult to implement an indexing system that is truly adapted to your needs. What DBMS are you using?\n\nYou could, on the other hand, asynchronously queue the insertions/updates to an external system. If I were you, I'd model this system after Datomic's indexing: have an in-memory index that is periodically flushed to disk to keep the in-memory index small. When querying, merge the indexes (or the index results) to get a result that encompasses all results. The annoying part about this is that your query would have to be filtered through this system first before going to the database.\n\nThen, there are also papers like this that have some interesting ideas: https://docs.google.com/viewer?a=v&amp;q=cache:U3xNAjyiBssJ:www.mit.edu/~eugenewu/files/papers/shinobi-icde11.pdf+&amp;hl=en&amp;gl=us&amp;pid=bl&amp;srcid=ADGEESjb-payNdYo0AQQidG7hiJyooFzGLYtR657Armu7SHBTNeoOthKL_Mw2CQkmUpgltmXQZbTB8-GDbkQ3kjRf2_-9Ww6OBW559zClY3e-uaO36NyWoLjE8-gs5gsh7egzcISnQTg&amp;sig=AHIEtbT5RcqVNssm53eKHwYQwtOYTQ1YDQ\n\nIn general, numbers are your friends. If you can prove that a technique improves the numbers for querying with an acceptable impact on the insert/update performance, you will have something concrete to talk about with the DBAs. Plus, it will allow you to answer your own question: \"is there any truth to this?\"", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Unfortunately, if you are using a classical relational database, it may be difficult to implement an indexing system that is truly adapted to your needs. What DBMS are you using?&lt;/p&gt;\n\n&lt;p&gt;You could, on the other hand, asynchronously queue the insertions/updates to an external system. If I were you, I&amp;#39;d model this system after Datomic&amp;#39;s indexing: have an in-memory index that is periodically flushed to disk to keep the in-memory index small. When querying, merge the indexes (or the index results) to get a result that encompasses all results. The annoying part about this is that your query would have to be filtered through this system first before going to the database.&lt;/p&gt;\n\n&lt;p&gt;Then, there are also papers like this that have some interesting ideas: &lt;a href=\"https://docs.google.com/viewer?a=v&amp;amp;q=cache:U3xNAjyiBssJ:www.mit.edu/%7Eeugenewu/files/papers/shinobi-icde11.pdf+&amp;amp;hl=en&amp;amp;gl=us&amp;amp;pid=bl&amp;amp;srcid=ADGEESjb-payNdYo0AQQidG7hiJyooFzGLYtR657Armu7SHBTNeoOthKL_Mw2CQkmUpgltmXQZbTB8-GDbkQ3kjRf2_-9Ww6OBW559zClY3e-uaO36NyWoLjE8-gs5gsh7egzcISnQTg&amp;amp;sig=AHIEtbT5RcqVNssm53eKHwYQwtOYTQ1YDQ\"&gt;https://docs.google.com/viewer?a=v&amp;amp;q=cache:U3xNAjyiBssJ:www.mit.edu/~eugenewu/files/papers/shinobi-icde11.pdf+&amp;amp;hl=en&amp;amp;gl=us&amp;amp;pid=bl&amp;amp;srcid=ADGEESjb-payNdYo0AQQidG7hiJyooFzGLYtR657Armu7SHBTNeoOthKL_Mw2CQkmUpgltmXQZbTB8-GDbkQ3kjRf2_-9Ww6OBW559zClY3e-uaO36NyWoLjE8-gs5gsh7egzcISnQTg&amp;amp;sig=AHIEtbT5RcqVNssm53eKHwYQwtOYTQ1YDQ&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;In general, numbers are your friends. If you can prove that a technique improves the numbers for querying with an acceptable impact on the insert/update performance, you will have something concrete to talk about with the DBAs. Plus, it will allow you to answer your own question: &amp;quot;is there any truth to this?&amp;quot;&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64dj01", "flair_text": null, "created": 1346956883.0, "created_utc": 1346953283.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zfrqo", "children": [], "author": "grayvedigga", "id": "c647sj3", "parent_id": "t3_zfrqo", "score": 0, "approved_by": null, "upvotes": 2, "body": "It Depends.\n\nAs pack170 said, if there is a huge rate of insertions *(or if the DBMS is partiularly sucky and/or poorly administered)* then having no indexes makes some sense.  Although in that case you probably also have no relations and the fact that you're using an RDBMS is questionable in any case.\n\nBut you can't argue with what's there.  I'd suggest having a think about the sort of queries that are being done, and asking (yourself) questions like:  Are there any intermediate data structures (\"summary tables\" or \"digest tables\" some might call them) that could be created from the raw data to speed up queries?  Can such pseudo-indexing be done on a batched basis (eg daily - no realtime up-to-the-minute data will be available but that may not be neccessary if fast analytics emerge)?  Can the size of the query dataset be reduced - perhaps only the last 24 hours?  How can such operations be moved offline, so the main (insert-heavy) server(s) isn't impacted by queries/analytics being run on another machine?\n\nIf you want to attack this, you need to be extremely mindful of the criticality of the database server and that *nobody* is going to want to risk overloading or crashing it.  If you can confidently suggest a scenario to shift some data onto another server for better-performing analytics *without risk to the current server*, you might have a shot at making a difference.  One example might be to parse events from a textual log to shoot them off to another server rather than querying the (already heavily loaded) RDBMS tables.  Be aware that you will need to carefully consider worst-case performance and code defensively so that if anything goes wrong, your process doesn't bring the server down.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;It Depends.&lt;/p&gt;\n\n&lt;p&gt;As pack170 said, if there is a huge rate of insertions &lt;em&gt;(or if the DBMS is partiularly sucky and/or poorly administered)&lt;/em&gt; then having no indexes makes some sense.  Although in that case you probably also have no relations and the fact that you&amp;#39;re using an RDBMS is questionable in any case.&lt;/p&gt;\n\n&lt;p&gt;But you can&amp;#39;t argue with what&amp;#39;s there.  I&amp;#39;d suggest having a think about the sort of queries that are being done, and asking (yourself) questions like:  Are there any intermediate data structures (&amp;quot;summary tables&amp;quot; or &amp;quot;digest tables&amp;quot; some might call them) that could be created from the raw data to speed up queries?  Can such pseudo-indexing be done on a batched basis (eg daily - no realtime up-to-the-minute data will be available but that may not be neccessary if fast analytics emerge)?  Can the size of the query dataset be reduced - perhaps only the last 24 hours?  How can such operations be moved offline, so the main (insert-heavy) server(s) isn&amp;#39;t impacted by queries/analytics being run on another machine?&lt;/p&gt;\n\n&lt;p&gt;If you want to attack this, you need to be extremely mindful of the criticality of the database server and that &lt;em&gt;nobody&lt;/em&gt; is going to want to risk overloading or crashing it.  If you can confidently suggest a scenario to shift some data onto another server for better-performing analytics &lt;em&gt;without risk to the current server&lt;/em&gt;, you might have a shot at making a difference.  One example might be to parse events from a textual log to shoot them off to another server rather than querying the (already heavily loaded) RDBMS tables.  Be aware that you will need to carefully consider worst-case performance and code defensively so that if anything goes wrong, your process doesn&amp;#39;t bring the server down.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c647sj3", "flair_text": null, "created": 1346923393.0, "created_utc": 1346919793.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zfrqo", "children": [], "author": "Slowhand09", "id": "c64bcxn", "parent_id": "t3_zfrqo", "score": 0, "approved_by": null, "upvotes": 2, "body": "So many questions...    \nWhat database management system are they using?    \nCan you characterize the usage?  Strictly insert and read? Is it ever updated?  Does old data get archived?    \nIs it used for a data warehouse or data mart?    \n", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;So many questions...&lt;br/&gt;\nWhat database management system are they using?&lt;br/&gt;\nCan you characterize the usage?  Strictly insert and read? Is it ever updated?  Does old data get archived?&lt;br/&gt;\nIs it used for a data warehouse or data mart?    &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64bcxn", "flair_text": null, "created": 1346948533.0, "created_utc": 1346944933.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zfrqo", "children": [], "author": "wretcheddawn", "id": "c64cnna", "parent_id": "t3_zfrqo", "score": 0, "approved_by": null, "upvotes": 1, "body": "The only reason I can think of for this is if it's for data warehousing.  If you're doing any transaction processing from it, it'll be a nightmare.  If you only do occasional queries for reporting it's probably okay.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The only reason I can think of for this is if it&amp;#39;s for data warehousing.  If you&amp;#39;re doing any transaction processing from it, it&amp;#39;ll be a nightmare.  If you only do occasional queries for reporting it&amp;#39;s probably okay.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64cnna", "flair_text": null, "created": 1346953557.0, "created_utc": 1346949957.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zfrqo", "children": [], "author": "Okaram", "id": "c6510ki", "parent_id": "t3_zfrqo", "score": 0, "approved_by": null, "upvotes": 2, "body": "The *right* indexes usually help with queries; as I see it, there are two possibilities:\n  1. the DBAs are idiots.\n  2. There's something very special about your environment.\n\nEither way :), have you considered suggesting copying the data to another db, and indexing that one so you can do queries ?", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;The &lt;em&gt;right&lt;/em&gt; indexes usually help with queries; as I see it, there are two possibilities:\n  1. the DBAs are idiots.\n  2. There&amp;#39;s something very special about your environment.&lt;/p&gt;\n\n&lt;p&gt;Either way :), have you considered suggesting copying the data to another db, and indexing that one so you can do queries ?&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c6510ki", "flair_text": null, "created": 1347062270.0, "created_utc": 1347058670.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zfrqo", "children": [], "author": "dhruvbird", "id": "c65c289", "parent_id": "t3_zfrqo", "score": 0, "approved_by": null, "upvotes": 1, "body": "If the only thing you need to do with the data is a full table scan, then you don't need indexes.\n\nOTOH, the COLA structure uses an optimal number [O(1/B)] disk transfers per insertion v/s O(1) disk transfers per insertion for a B-Tree, so you might want to consider using it.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;If the only thing you need to do with the data is a full table scan, then you don&amp;#39;t need indexes.&lt;/p&gt;\n\n&lt;p&gt;OTOH, the COLA structure uses an optimal number [O(1/B)] disk transfers per insertion v/s O(1) disk transfers per insertion for a B-Tree, so you might want to consider using it.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c65c289", "flair_text": null, "created": 1347132079.0, "created_utc": 1347128479.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zfrqo", "children": [], "author": "Snootwaller", "id": "c65dnk1", "parent_id": "t3_zfrqo", "score": 0, "approved_by": null, "upvotes": 1, "body": "\"Don't index the tables, it's faster that way!\" Just some bad advice. \n\nSeriously, I've seen it before: somebody who is incompetant makes irrelevant indices and concludes that indexing just slows things down. It could be that the data itself is not well structured (it violates second normal form etc) and normal indexing is a headache. ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;&amp;quot;Don&amp;#39;t index the tables, it&amp;#39;s faster that way!&amp;quot; Just some bad advice. &lt;/p&gt;\n\n&lt;p&gt;Seriously, I&amp;#39;ve seen it before: somebody who is incompetant makes irrelevant indices and concludes that indexing just slows things down. It could be that the data itself is not well structured (it violates second normal form etc) and normal indexing is a headache. &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c65dnk1", "flair_text": null, "created": 1347139427.0, "created_utc": 1347135827.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zfrqo", "children": [], "author": "morth", "id": "c65re36", "parent_id": "t3_zfrqo", "score": 0, "approved_by": null, "upvotes": 1, "body": "Skipping indexes speeds up insertion (and updates and removes) if and only if:\n\n* there's no foreign keys\n* there's no unique constraints\n* there's no primary key (primary key being an unique constraint)\n* there's no checks/triggers involving selects.\n\nIn all other cases it's likely to be faster with indexes. Basically it's only faster if you're using your DB as a log file and nothing else.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Skipping indexes speeds up insertion (and updates and removes) if and only if:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;there&amp;#39;s no foreign keys&lt;/li&gt;\n&lt;li&gt;there&amp;#39;s no unique constraints&lt;/li&gt;\n&lt;li&gt;there&amp;#39;s no primary key (primary key being an unique constraint)&lt;/li&gt;\n&lt;li&gt;there&amp;#39;s no checks/triggers involving selects.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;In all other cases it&amp;#39;s likely to be faster with indexes. Basically it&amp;#39;s only faster if you&amp;#39;re using your DB as a log file and nothing else.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c65re36", "flair_text": null, "created": 1347219502.0, "created_utc": 1347215902.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zfrqo", "children": [], "author": "rektide", "id": "c65z2p1", "parent_id": "t3_zfrqo", "score": 0, "approved_by": null, "upvotes": 1, "body": "Your company is full of idiots. You clearly have no real-time performance needs, if your queries take &gt;5 minutes. If you don't have real time performance needs, there's no reason not to asynchronously maintain indexes. Indexes are a performance suck if they need be done synchronously on insert, but if you have time-stamped batches of records without brutal real-time constraints there's no reason (except space constraints) not to denormalize out some indexes via some batch processing.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your company is full of idiots. You clearly have no real-time performance needs, if your queries take &amp;gt;5 minutes. If you don&amp;#39;t have real time performance needs, there&amp;#39;s no reason not to asynchronously maintain indexes. Indexes are a performance suck if they need be done synchronously on insert, but if you have time-stamped batches of records without brutal real-time constraints there&amp;#39;s no reason (except space constraints) not to denormalize out some indexes via some batch processing.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c65z2p1", "flair_text": null, "created": 1347251584.0, "created_utc": 1347247984.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 2, "link_id": "t3_zfrqo", "children": [], "author": "uberalles2", "id": "c64he6d", "parent_id": "t3_zfrqo", "score": 0, "approved_by": null, "upvotes": 1, "body": "Your DBAs are idiots. Unless you have 100,000 inserts a day and only a few queries a day, it makes sense to add the indexes.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Your DBAs are idiots. Unless you have 100,000 inserts a day and only a few queries a day, it makes sense to add the indexes.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64he6d", "flair_text": null, "created": 1346971185.0, "created_utc": 1346967585.0, "num_reports": null}], "score": 13, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 19, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/zfrqo/large_scale_databases_without_indexes/", "has_more_comments": false, "name": "t3_zfrqo", "created": 1346915071.0, "url": "http://www.reddit.com/r/compsci/comments/zfrqo/large_scale_databases_without_indexes/", "author_flair_text": null, "author": "JustSomeBadAdvice", "created_utc": 1346911471.0, "link_flair_text": null, "media": null, "num_reports": null}, "447": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 7, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey guys,&lt;/p&gt;\n\n&lt;p&gt;I have to, as part of this semester&amp;#39;s computer science, make a decision on a class I will go to (I cannot attend both, just one of them). I have been talking to professors, reading wiki and talking to other students. Ultimately, I think I grasp the fundamental difference between the two classes, where Machine Learning is about constructing agents that can automatize a given task - like seeing a pattern in huge data sheets, and RTS involving programming that revolves around the wall-clock. My brother has given me some examples on what this could be.&lt;/p&gt;\n\n&lt;p&gt;However, what I want to talk to you about, is the more theoretical aspect of things. When I think about AI&amp;#39;s and machine intelligence, I think about trees, I think about Dijkstra&amp;#39;s pathfinding algorithms (for robots on wheels!).. I also think about DFA&amp;#39;s or NFA&amp;#39;s - anything involving states and transitioning between them in that way... But that is pretty much it. Basically, I have no clue what &amp;quot;theoretical&amp;quot; aspects of Computer Science would be touched on if I chose MI or RTS. I find mutual exclusion incredibly interesting (threads and parallelism - throughput is hot!!!) - but I cannot make a choice yet until I know more about what theoretical topics would be probably gone over in either of the courses.&lt;/p&gt;\n\n&lt;p&gt;So if you have any ideas on a good ol&amp;#39; guess what my professors would want me to learn - can you give me a head&amp;#39;s up? It would make it tentimes easier for me, I think, to get a better idea of what interest me the most.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hey guys,\n\n\nI have to, as part of this semester's computer science, make a decision on a class I will go to (I cannot attend both, just one of them). I have been talking to professors, reading wiki and talking to other students. Ultimately, I think I grasp the fundamental difference between the two classes, where Machine Learning is about constructing agents that can automatize a given task - like seeing a pattern in huge data sheets, and RTS involving programming that revolves around the wall-clock. My brother has given me some examples on what this could be.\n\n\nHowever, what I want to talk to you about, is the more theoretical aspect of things. When I think about AI's and machine intelligence, I think about trees, I think about Dijkstra's pathfinding algorithms (for robots on wheels!).. I also think about DFA's or NFA's - anything involving states and transitioning between them in that way... But that is pretty much it. Basically, I have no clue what \"theoretical\" aspects of Computer Science would be touched on if I chose MI or RTS. I find mutual exclusion incredibly interesting (threads and parallelism - throughput is hot!!!) - but I cannot make a choice yet until I know more about what theoretical topics would be probably gone over in either of the courses.\n\n\nSo if you have any ideas on a good ol' guess what my professors would want me to learn - can you give me a head's up? It would make it tentimes easier for me, I think, to get a better idea of what interest me the most.", "saved": false, "id": "zgezj", "clicked": false, "title": "I have to make an uneducated decision - can you help me? (Machine Intelligence or Real Time Software)", "num_comments": 7, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 1, "link_id": "t3_zgezj", "children": [], "author": "ibgeek", "id": "c64fnew", "parent_id": "t3_zgezj", "score": 0, "approved_by": null, "upvotes": 4, "body": "ML is going to cover a lot of statistics.  In terms of theory, you'll see algorithms and maybe some graph theory, but it probably won't cover any sort of \"core\" CS theory.\n\nRTS will probably discuss issues with scheduling, locking, I/O, etc.  It will definitely require a deeper knowledge of systems theory.  If you like threads and parallelism, then RTS might be more interesting to you since you'll have to think about how you design programs and how the OS schedules your programs.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;ML is going to cover a lot of statistics.  In terms of theory, you&amp;#39;ll see algorithms and maybe some graph theory, but it probably won&amp;#39;t cover any sort of &amp;quot;core&amp;quot; CS theory.&lt;/p&gt;\n\n&lt;p&gt;RTS will probably discuss issues with scheduling, locking, I/O, etc.  It will definitely require a deeper knowledge of systems theory.  If you like threads and parallelism, then RTS might be more interesting to you since you&amp;#39;ll have to think about how you design programs and how the OS schedules your programs.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64fnew", "flair_text": null, "created": 1346964819.0, "created_utc": 1346961219.0, "num_reports": null}, {"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zgezj", "children": [], "author": "UnoriginalGuy", "id": "c64ee6g", "parent_id": "t3_zgezj", "score": 0, "approved_by": null, "upvotes": 2, "body": "Does your school not provide a detailed syllabus?     \n\nIn ours you could see exactly what a subject was about, how it was graded, and what the required reading material was long before you signed up to it (before you even attended the program).    \n\nThis would include a list of exactly what points it would hit with a brief description.  ", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Does your school not provide a detailed syllabus?     &lt;/p&gt;\n\n&lt;p&gt;In ours you could see exactly what a subject was about, how it was graded, and what the required reading material was long before you signed up to it (before you even attended the program).    &lt;/p&gt;\n\n&lt;p&gt;This would include a list of exactly what points it would hit with a brief description.  &lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c64ee6g", "flair_text": null, "created": 1346960188.0, "created_utc": 1346956588.0, "num_reports": null}], "score": 0, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 7, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/zgezj/i_have_to_make_an_uneducated_decision_can_you/", "has_more_comments": false, "name": "t3_zgezj", "created": 1346952660.0, "url": "http://www.reddit.com/r/compsci/comments/zgezj/i_have_to_make_an_uneducated_decision_can_you/", "author_flair_text": null, "author": "SuspiciousLamp", "created_utc": 1346949060.0, "link_flair_text": null, "media": null, "num_reports": null}, "448": {"domain": "arxiv.org", "link_flair_class": null, "banned_by": null, "downvotes": 17, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": null, "selftext": "", "saved": false, "id": "zevhu", "clicked": false, "title": "Winning isn't everything: Evolutionary stability of Zero Determinant\n  strategies", "num_comments": 1, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zevhu", "children": [], "author": "vmonaco", "id": "c646xux", "parent_id": "t3_zevhu", "score": 0, "approved_by": null, "upvotes": 3, "body": "Only skimmed the paper, some key points:\n- in a ZD strategy, the opponent's payoff depends only on the ZD player's probabilities while the ZD player's payoff depends on both her and the opponent's strategy\n- one reason the ZD is not evolutionary stable is because the payoff when playing against itself is smaller than the payoff when playing against any other strategy\n- ZD could be stable if it had a scheme for recognizing opponent strategies\n- ZD should be applicable to other scenarios besides the prison dilemma", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Only skimmed the paper, some key points:\n- in a ZD strategy, the opponent&amp;#39;s payoff depends only on the ZD player&amp;#39;s probabilities while the ZD player&amp;#39;s payoff depends on both her and the opponent&amp;#39;s strategy\n- one reason the ZD is not evolutionary stable is because the payoff when playing against itself is smaller than the payoff when playing against any other strategy\n- ZD could be stable if it had a scheme for recognizing opponent strategies\n- ZD should be applicable to other scenarios besides the prison dilemma&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c646xux", "flair_text": null, "created": 1346916567.0, "created_utc": 1346912967.0, "num_reports": null}], "score": 31, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 48, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": false, "permalink": "/r/compsci/comments/zevhu/winning_isnt_everything_evolutionary_stability_of/", "has_more_comments": false, "name": "t3_zevhu", "created": 1346882952.0, "url": "http://arxiv.org/abs/1208.2666", "author_flair_text": "(\u03bbx.x x) (\u03bbx.x x)", "author": "cypherx", "created_utc": 1346879352.0, "link_flair_text": null, "media": null, "num_reports": null}, "449": {"domain": "self.compsci", "link_flair_class": null, "banned_by": null, "downvotes": 14, "subreddit_id": "t5_2qhmr", "subreddit": "compsci", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Purely with relation to von Neumann based architectures.&lt;/p&gt;\n\n&lt;p&gt;For example why would there be differences in how friendly accumulator, stack and architectures based on register files were to caching. They&amp;#39;re all retrieving instructions and data from memory, so I don&amp;#39;t see the specifics have any bearing on how friendly each individual architecture is to caching?&lt;/p&gt;\n\n&lt;p&gt;Thank you!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Purely with relation to von Neumann based architectures.\n\nFor example why would there be differences in how friendly accumulator, stack and architectures based on register files were to caching. They're all retrieving instructions and data from memory, so I don't see the specifics have any bearing on how friendly each individual architecture is to caching?\n\nThank you!", "saved": false, "id": "zdy6e", "clicked": false, "title": "What makes a particular architecture friendly to caching?", "num_comments": 5, "comments": [{"subreddit_id": "t5_2qhmr", "banned_by": null, "downvotes": 0, "link_id": "t3_zdy6e", "children": [], "author": "craiig", "id": "c63uzor", "parent_id": "t3_zdy6e", "score": 0, "approved_by": null, "upvotes": 2, "body": "Do you have a source for this? I agree with you, I can't see a reason. The memory hierarchy is relatively detached, and it essentially just puts data in your registers.", "edited": false, "modhash": "", "body_html": "&lt;div class=\"md\"&gt;&lt;p&gt;Do you have a source for this? I agree with you, I can&amp;#39;t see a reason. The memory hierarchy is relatively detached, and it essentially just puts data in your registers.&lt;/p&gt;\n&lt;/div&gt;", "more_comments": "", "subreddit": "compsci", "flair_class": null, "has_more_comments": false, "name": "t1_c63uzor", "flair_text": null, "created": 1346869603.0, "created_utc": 1346866003.0, "num_reports": null}], "score": 9, "approved_by": null, "over_18": false, "author_flair_class": null, "upvotes": 23, "hidden": false, "thumbnail": "", "edited": false, "modhash": "ax8ulbihn043b71c427d2d22c0d31b5cf1bc0d205925f9df5f", "media_embed": {}, "more_comments": "", "is_self": true, "permalink": "/r/compsci/comments/zdy6e/what_makes_a_particular_architecture_friendly_to/", "has_more_comments": false, "name": "t3_zdy6e", "created": 1346844991.0, "url": "http://www.reddit.com/r/compsci/comments/zdy6e/what_makes_a_particular_architecture_friendly_to/", "author_flair_text": null, "author": "Froskoy", "created_utc": 1346841391.0, "link_flair_text": null, "media": null, "num_reports": null}}